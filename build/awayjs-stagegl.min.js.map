{
  "version": 3,
  "sources": [
    "node_modules/browserify/node_modules/browser-pack/_prelude.js",
    "awayjs-stagegl.js",
    "../index.ts",
    "lib/lib/aglsl/AGALTokenizer.ts",
    "lib/lib/aglsl/AGLSLParser.ts",
    "lib/lib/aglsl/Description.ts",
    "lib/lib/aglsl/Destination.ts",
    "lib/lib/aglsl/Header.ts",
    "lib/lib/aglsl/Mapping.ts",
    "lib/lib/aglsl/OpLUT.ts",
    "lib/lib/aglsl/Token.ts",
    "lib/aglsl/lib/aglsl/assembler/AGALMiniAssembler.ts",
    "lib/aglsl/lib/aglsl/assembler/FS.ts",
    "lib/aglsl/lib/aglsl/assembler/Flags.ts",
    "lib/aglsl/lib/aglsl/assembler/OpcodeMap.ts",
    "lib/aglsl/lib/aglsl/assembler/Opcode.ts",
    "lib/aglsl/lib/aglsl/assembler/Part.ts",
    "lib/aglsl/lib/aglsl/assembler/RegMap.ts",
    "lib/aglsl/lib/aglsl/assembler/SamplerMap.ts",
    "lib/aglsl/lib/aglsl/assembler/Sampler.ts",
    "lib/aglsl.ts",
    "lib/lib/attributes/GL_AttributesBuffer.ts",
    "lib/attributes.ts",
    "lib/lib/base/ContextGLBlendFactor.ts",
    "lib/lib/base/ContextGLClearMask.ts",
    "lib/lib/base/ContextGLCompareMode.ts",
    "lib/lib/base/ContextGLDrawMode.ts",
    "lib/lib/base/ContextGLMipFilter.ts",
    "lib/lib/base/ContextGLProfile.ts",
    "lib/lib/base/ContextGLProgramType.ts",
    "lib/lib/base/ContextGLStencilAction.ts",
    "lib/lib/base/ContextGLTextureFilter.ts",
    "lib/lib/base/ContextGLTextureFormat.ts",
    "lib/lib/base/ContextGLTriangleFace.ts",
    "lib/lib/base/ContextGLVertexBufferFormat.ts",
    "lib/lib/base/ContextGLWrapMode.ts",
    "lib/lib/base/ContextMode.ts",
    "lib/lib/base/ContextSoftware.ts",
    "lib/lib/base/ContextStage3D.ts",
    "lib/lib/base/ContextWebGL.ts",
    "lib/lib/base/CubeTextureFlash.ts",
    "lib/lib/base/CubeTextureWebGL.ts",
    "lib/lib/base/IndexBufferFlash.ts",
    "lib/lib/base/IndexBufferSoftware.ts",
    "lib/lib/base/IndexBufferWebGL.ts",
    "lib/lib/base/OpCodes.ts",
    "lib/lib/base/ProgramFlash.ts",
    "lib/lib/base/ProgramSoftware.ts",
    "lib/lib/base/ProgramVOSoftware.ts",
    "lib/lib/base/ProgramWebGL.ts",
    "lib/lib/base/ResourceBaseFlash.ts",
    "lib/lib/base/SamplerState.ts",
    "lib/lib/base/SoftwareSamplerState.ts",
    "lib/lib/base/Stage.ts",
    "lib/lib/base/TextureBaseWebGL.ts",
    "lib/lib/base/TextureFlash.ts",
    "lib/lib/base/TextureSoftware.ts",
    "lib/lib/base/TextureWebGL.ts",
    "lib/lib/base/VertexBufferFlash.ts",
    "lib/lib/base/VertexBufferSoftware.ts",
    "lib/lib/base/VertexBufferWebGL.ts",
    "lib/base.ts",
    "lib/lib/events/StageEvent.ts",
    "lib/events.ts",
    "lib/lib/image/GL_BitmapImage2D.ts",
    "lib/lib/image/GL_BitmapImageCube.ts",
    "lib/lib/image/GL_Image2D.ts",
    "lib/lib/image/GL_ImageBase.ts",
    "lib/lib/image/GL_ImageCube.ts",
    "lib/lib/image/GL_RenderImage2D.ts",
    "lib/lib/image/GL_RenderImageCube.ts",
    "lib/lib/image/GL_Sampler2D.ts",
    "lib/lib/image/GL_SamplerBase.ts",
    "lib/lib/image/GL_SamplerCube.ts",
    "lib/lib/image/ProgramDataPool.ts",
    "lib/lib/image/ProgramData.ts",
    "lib/image.ts",
    "lib/lib/managers/StageManager.ts",
    "lib/managers.ts"
  ],
  "names": [
    "require",
    "e",
    "t",
    "n",
    "r",
    "s",
    "o",
    "u",
    "a",
    "i",
    "f",
    "Error",
    "code",
    "l",
    "exports",
    "call",
    "length",
    1,
    "module",
    "aglsl",
    "attributes",
    "base",
    "events",
    "image",
    "library",
    "managers",
    "AttributesBuffer_1",
    "BitmapImage2D_1",
    "BitmapImageCube_1",
    "Image2D_1",
    "ImageCube_1",
    "SpecularImage2D_1",
    "Sampler2D_1",
    "SamplerCube_1",
    "Stage",
    "registerAbstraction",
    "GL_AttributesBuffer",
    "default",
    "GL_RenderImage2D",
    "GL_RenderImageCube",
    "GL_BitmapImage2D",
    "GL_BitmapImageCube",
    "GL_Sampler2D",
    "GL_SamplerCube",
    "./lib/aglsl",
    "./lib/attributes",
    "./lib/base",
    "./lib/events",
    "./lib/image",
    "./lib/library",
    "./lib/managers",
    "awayjs-core/lib/attributes/AttributesBuffer",
    "undefined",
    "awayjs-core/lib/image/BitmapImage2D",
    "awayjs-core/lib/image/BitmapImageCube",
    "awayjs-core/lib/image/Image2D",
    "awayjs-core/lib/image/ImageCube",
    "awayjs-core/lib/image/Sampler2D",
    "awayjs-core/lib/image/SamplerCube",
    "awayjs-core/lib/image/SpecularImage2D",
    "awayjs-stagegl/lib/aglsl/AGALTokenizer",
    "Description_1",
    "Header_1",
    "Mapping_1",
    "Token_1",
    "AGALTokenizer",
    "prototype",
    "decribeAGALByteArray",
    "bytes",
    "header",
    "readUnsignedByte",
    "version",
    "readUnsignedInt",
    "progid",
    "type",
    "desc",
    "tokens",
    "position",
    "token",
    "opcode",
    "lutentry",
    "agal2glsllut",
    "matrixheight",
    "hasmatrix",
    "dest",
    "regnum",
    "readUnsignedShort",
    "mask",
    "regtype",
    "regwrite",
    "this",
    "readReg",
    "b",
    "push",
    "mh",
    "indexoffset",
    "readByte",
    "swizzle",
    "regread",
    "lodbiad",
    "readmode",
    "dim",
    "special",
    "wrap",
    "mipmap",
    "filter",
    "samplers",
    "indexregtype",
    "indexselect",
    "indirectflag",
    "hasindirect",
    "mhi",
    "Object",
    "defineProperty",
    "value",
    "../aglsl/Description",
    "../aglsl/Header",
    "../aglsl/Mapping",
    "../aglsl/Token",
    "awayjs-stagegl/lib/aglsl/AGLSLParser",
    "AGLSLParser",
    "parse",
    "body",
    "tag",
    "maxvertexconstants",
    "samptype",
    "writedepth",
    "derivatives",
    "indexOf",
    "sublines",
    "sl",
    "line",
    "destregstring",
    "regtostring",
    "destcaststring",
    "destmaskstring",
    "ndest",
    "replace",
    "dwm",
    "ndwm",
    "sourcetostring",
    "scalar",
    "texdim",
    "texsize",
    "texlod",
    "subline",
    "isscalar",
    "swiz",
    "realofs",
    "toString",
    "maxfragconstants",
    "maxtemp",
    "maxstreams",
    "maxtextures",
    "awayjs-stagegl/lib/aglsl/Description",
    "Description",
    "awayjs-stagegl/lib/aglsl/Destination",
    "Destination",
    "awayjs-stagegl/lib/aglsl/Header",
    "Header",
    "awayjs-stagegl/lib/aglsl/Mapping",
    "OpLUT_1",
    "Mapping",
    "include",
    "../aglsl/OpLUT",
    "awayjs-stagegl/lib/aglsl/OpLUT",
    "OpLUT",
    "flags",
    "matrixwidth",
    "scaler",
    "dm",
    "lod",
    "awayjs-stagegl/lib/aglsl/Token",
    "Destination_1",
    "Token",
    "../aglsl/Destination",
    "awayjs-stagegl/lib/aglsl/assembler/AGALMiniAssembler",
    "OpcodeMap_1",
    "Part_1",
    "RegMap_1",
    "SamplerMap_1",
    "AGALMiniAssembler",
    "cur",
    "assemble",
    "source",
    "ext_part",
    "ext_version",
    "addHeader",
    "lines",
    "split",
    "processLine",
    "linenr",
    "startcomment",
    "search",
    "slice",
    "optsi",
    "opts",
    "match",
    "console",
    "log",
    "Number",
    "data",
    "name",
    "op",
    "map",
    "emitOpcode",
    "ti",
    "emitDest",
    "emitZeroDword",
    "format",
    "emitSource",
    "emitZeroQword",
    "emitSampler",
    "emitHeader",
    "pr",
    "writeUnsignedByte",
    "writeUnsignedInt",
    "opdest",
    "reg",
    "em",
    "num",
    "stringToMask",
    "writeUnsignedShort",
    "stringToSwizzle",
    "chartoindex",
    "x",
    "y",
    "z",
    "w",
    "sw",
    "charAt",
    "opsrc",
    "parseInt",
    "samplerbits",
    "sampleroptset",
    "toLowerCase",
    "shift",
    "indexed",
    "selindex",
    "select",
    "offset",
    "writeByte",
    "partname",
    "../../aglsl/assembler/OpcodeMap",
    "../../aglsl/assembler/Part",
    "../../aglsl/assembler/RegMap",
    "../../aglsl/assembler/SamplerMap",
    "awayjs-stagegl/lib/aglsl/assembler/FS",
    "FS",
    "awayjs-stagegl/lib/aglsl/assembler/Flags",
    "Flags",
    "awayjs-stagegl/lib/aglsl/assembler/OpcodeMap",
    "Opcode_1",
    "OpcodeMap",
    "get",
    "_map",
    "Array",
    "enumerable",
    "configurable",
    "../../aglsl/assembler/Opcode",
    "awayjs-stagegl/lib/aglsl/assembler/Opcode",
    "Flags_1",
    "FS_1",
    "Opcode",
    "aformat",
    "asize",
    "bformat",
    "bsize",
    "simple",
    "horizontal",
    "fragonly",
    "matrix",
    "size",
    "../../aglsl/assembler/FS",
    "../../aglsl/assembler/Flags",
    "awayjs-stagegl/lib/aglsl/assembler/Part",
    "ByteArray_1",
    "Part",
    "awayjs-core/lib/utils/ByteArray",
    "awayjs-stagegl/lib/aglsl/assembler/RegMap",
    "Reg",
    "RegMap",
    "awayjs-stagegl/lib/aglsl/assembler/SamplerMap",
    "Sampler_1",
    "SamplerMap",
    "../../aglsl/assembler/Sampler",
    "awayjs-stagegl/lib/aglsl/assembler/Sampler",
    "Sampler",
    "awayjs-stagegl/lib/aglsl",
    "AGALMiniAssembler_1",
    "AGALTokenizer_1",
    "AGLSLParser_1",
    "./aglsl/AGALTokenizer",
    "./aglsl/AGLSLParser",
    "./aglsl/Description",
    "./aglsl/Destination",
    "./aglsl/Header",
    "./aglsl/Mapping",
    "./aglsl/OpLUT",
    "./aglsl/Token",
    "./aglsl/assembler/AGALMiniAssembler",
    "./aglsl/assembler/FS",
    "./aglsl/assembler/Flags",
    "./aglsl/assembler/Opcode",
    "./aglsl/assembler/OpcodeMap",
    "./aglsl/assembler/Part",
    "./aglsl/assembler/RegMap",
    "./aglsl/assembler/Sampler",
    "./aglsl/assembler/SamplerMap",
    "awayjs-stagegl/lib/attributes/GL_AttributesBuffer",
    "__extends",
    "d",
    "p",
    "hasOwnProperty",
    "__",
    "constructor",
    "create",
    "AbstractionBase_1",
    "_super",
    "attributesBuffer",
    "stage",
    "_stage",
    "_attributesBuffer",
    "onClear",
    "event",
    "_indexBuffer",
    "dispose",
    "_vertexBuffer",
    "activate",
    "index",
    "dimensions",
    "unsigned",
    "setVertexBuffer",
    "_getVertexBuffer",
    "draw",
    "mode",
    "firstIndex",
    "numIndices",
    "context",
    "drawIndices",
    "_getIndexBuffer",
    "_invalid",
    "createIndexBuffer",
    "count",
    "stride",
    "uploadFromByteArray",
    "buffer",
    "createVertexBuffer",
    "awayjs-core/lib/library/AbstractionBase",
    "awayjs-stagegl/lib/attributes",
    "GL_AttributesBuffer_1",
    "./attributes/GL_AttributesBuffer",
    "awayjs-stagegl/lib/base/ContextGLBlendFactor",
    "ContextGLBlendFactor",
    "DESTINATION_ALPHA",
    "DESTINATION_COLOR",
    "ONE",
    "ONE_MINUS_DESTINATION_ALPHA",
    "ONE_MINUS_DESTINATION_COLOR",
    "ONE_MINUS_SOURCE_ALPHA",
    "ONE_MINUS_SOURCE_COLOR",
    "SOURCE_ALPHA",
    "SOURCE_COLOR",
    "ZERO",
    "awayjs-stagegl/lib/base/ContextGLClearMask",
    "ContextGLClearMask",
    "COLOR",
    "DEPTH",
    "STENCIL",
    "ALL",
    "awayjs-stagegl/lib/base/ContextGLCompareMode",
    "ContextGLCompareMode",
    "ALWAYS",
    "EQUAL",
    "GREATER",
    "GREATER_EQUAL",
    "LESS",
    "LESS_EQUAL",
    "NEVER",
    "NOT_EQUAL",
    "awayjs-stagegl/lib/base/ContextGLDrawMode",
    "ContextGLDrawMode",
    "TRIANGLES",
    "LINES",
    "awayjs-stagegl/lib/base/ContextGLMipFilter",
    "ContextGLMipFilter",
    "MIPLINEAR",
    "MIPNEAREST",
    "MIPNONE",
    "awayjs-stagegl/lib/base/ContextGLProfile",
    "ContextGLProfile",
    "BASELINE",
    "BASELINE_CONSTRAINED",
    "BASELINE_EXTENDED",
    "awayjs-stagegl/lib/base/ContextGLProgramType",
    "ContextGLProgramType",
    "FRAGMENT",
    "SAMPLER",
    "VERTEX",
    "awayjs-stagegl/lib/base/ContextGLStencilAction",
    "ContextGLStencilAction",
    "DECREMENT_SATURATE",
    "DECREMENT_WRAP",
    "INCREMENT_SATURATE",
    "INCREMENT_WRAP",
    "INVERT",
    "KEEP",
    "SET",
    "awayjs-stagegl/lib/base/ContextGLTextureFilter",
    "ContextGLTextureFilter",
    "LINEAR",
    "NEAREST",
    "awayjs-stagegl/lib/base/ContextGLTextureFormat",
    "ContextGLTextureFormat",
    "BGRA",
    "BGRA_PACKED",
    "BGR_PACKED",
    "COMPRESSED",
    "COMPRESSED_ALPHA",
    "awayjs-stagegl/lib/base/ContextGLTriangleFace",
    "ContextGLTriangleFace",
    "BACK",
    "FRONT",
    "FRONT_AND_BACK",
    "NONE",
    "awayjs-stagegl/lib/base/ContextGLVertexBufferFormat",
    "ContextGLVertexBufferFormat",
    "FLOAT_1",
    "FLOAT_2",
    "FLOAT_3",
    "FLOAT_4",
    "BYTE_1",
    "BYTE_2",
    "BYTE_3",
    "BYTE_4",
    "UNSIGNED_BYTE_1",
    "UNSIGNED_BYTE_2",
    "UNSIGNED_BYTE_3",
    "UNSIGNED_BYTE_4",
    "SHORT_1",
    "SHORT_2",
    "SHORT_3",
    "SHORT_4",
    "UNSIGNED_SHORT_1",
    "UNSIGNED_SHORT_2",
    "UNSIGNED_SHORT_3",
    "UNSIGNED_SHORT_4",
    "awayjs-stagegl/lib/base/ContextGLWrapMode",
    "ContextGLWrapMode",
    "CLAMP",
    "REPEAT",
    "awayjs-stagegl/lib/base/ContextMode",
    "ContextMode",
    "AUTO",
    "WEBGL",
    "FLASH",
    "NATIVE",
    "SOFTWARE",
    "awayjs-stagegl/lib/base/ContextSoftware",
    "Matrix3D_1",
    "Matrix_1",
    "Point_1",
    "Vector3D_1",
    "Rectangle_1",
    "ColorUtils_1",
    "Matrix3DUtils_1",
    "ContextGLBlendFactor_1",
    "ContextGLClearMask_1",
    "ContextGLCompareMode_1",
    "ContextGLProgramType_1",
    "ContextGLTriangleFace_1",
    "IndexBufferSoftware_1",
    "VertexBufferSoftware_1",
    "TextureSoftware_1",
    "ProgramSoftware_1",
    "SoftwareSamplerState_1",
    "ContextSoftware",
    "canvas",
    "_backBufferRect",
    "_backBufferWidth",
    "_backBufferHeight",
    "_zbuffer",
    "_cullingMode",
    "_blendSource",
    "_blendDestination",
    "_colorMaskR",
    "_colorMaskG",
    "_colorMaskB",
    "_colorMaskA",
    "_writeDepth",
    "_depthCompareMode",
    "_screenMatrix",
    "_frontBufferMatrix",
    "_bboxMin",
    "_bboxMax",
    "_clamp",
    "_samplerStates",
    "_textures",
    "_vertexBuffers",
    "_vertexBufferOffsets",
    "_vertexBufferFormats",
    "_fragmentConstants",
    "_vertexConstants",
    "_antialias",
    "_canvas",
    "_backBufferColor",
    "_frontBuffer",
    "document",
    "appendChild",
    "getCanvas",
    "clear",
    "red",
    "green",
    "blue",
    "alpha",
    "depth",
    "stencil",
    "fillRect",
    "ARGBtoFloat32",
    "len",
    "configureBackBuffer",
    "width",
    "height",
    "antiAlias",
    "enableDepthAndStencil",
    "Math",
    "floor",
    "_setSize",
    "raw",
    "rawData",
    "transpose",
    "scale",
    "createCubeTexture",
    "optimizeForRenderToTexture",
    "streamingLevels",
    "createProgram",
    "createTexture",
    "numVertices",
    "dataPerVertex",
    "setBlendFactors",
    "sourceFactor",
    "destinationFactor",
    "setColorMask",
    "setStencilActions",
    "triangleFace",
    "compareMode",
    "actionOnBothPass",
    "actionOnDepthFail",
    "actionOnDepthPassStencilFail",
    "coordinateSystem",
    "setStencilReferenceValue",
    "referenceValue",
    "readMask",
    "writeMask",
    "setCulling",
    "triangleFaceToCull",
    "setDepthTest",
    "depthMask",
    "passCompareMode",
    "setProgram",
    "program",
    "_program",
    "setProgramConstantsFromMatrix",
    "programType",
    "firstRegister",
    "transposedMatrix",
    "RAW_DATA_CONTAINER",
    "setProgramConstantsFromArray",
    "numRegisters",
    "target",
    "k",
    "setTextureAt",
    "sampler",
    "texture",
    "setVertexBufferAt",
    "bufferOffset",
    "present",
    "rect",
    "drawToBitmapImage2D",
    "destination",
    "indexBuffer",
    "lock",
    "index0",
    "index1",
    "index2",
    "vo0",
    "vo1",
    "vo2",
    "startOffset",
    "vertex",
    "triangle",
    "unlock",
    "drawVertices",
    "firstVertex",
    "setScissorRectangle",
    "rectangle",
    "setSamplerStateAt",
    "mipfilter",
    "state",
    "setRenderToTexture",
    "surfaceSelector",
    "setRenderToBackBuffer",
    "putPixel",
    "color",
    "float32ColorToARGB",
    "getPixel32",
    "destModified",
    "applyBlendMode",
    "sourceModified",
    "g",
    "max",
    "min",
    "setPixel32",
    "argb",
    "blend",
    "result",
    "clamp",
    "interpolate",
    "gradient",
    "p0",
    "outputPosition",
    "isNaN",
    "error",
    "p1",
    "p2",
    "scaleBy",
    "project",
    "transformVector",
    "calcPixel",
    "screen",
    "barycentric",
    "screenRight",
    "screenBottom",
    "clip",
    "clipRight",
    "clipBottom",
    "fragDepth",
    "currentDepth",
    "passDepthTest",
    "fragmentVO",
    "fragment",
    "discard",
    "outputColor",
    "c",
    "sx",
    "sy",
    "crossProduct",
    "MAX_SAMPLERS",
    "VertexBufferProperties",
    "normalized",
    "../base/ContextGLBlendFactor",
    "../base/ContextGLClearMask",
    "../base/ContextGLCompareMode",
    "../base/ContextGLProgramType",
    "../base/ContextGLTriangleFace",
    "../base/IndexBufferSoftware",
    "../base/ProgramSoftware",
    "../base/SoftwareSamplerState",
    "../base/TextureSoftware",
    "../base/VertexBufferSoftware",
    "awayjs-core/lib/geom/Matrix",
    "awayjs-core/lib/geom/Matrix3D",
    "awayjs-core/lib/geom/Matrix3DUtils",
    "awayjs-core/lib/geom/Point",
    "awayjs-core/lib/geom/Rectangle",
    "awayjs-core/lib/geom/Vector3D",
    "awayjs-core/lib/utils/ColorUtils",
    "awayjs-stagegl/lib/base/ContextStage3D",
    "CubeTextureFlash_1",
    "IndexBufferFlash_1",
    "OpCodes_1",
    "ProgramFlash_1",
    "TextureFlash_1",
    "VertexBufferFlash_1",
    "ContextStage3D",
    "container",
    "callback",
    "_cmdStream",
    "_resources",
    "swfVersionStr",
    "flashvars",
    "id",
    "params",
    "quality",
    "bgcolor",
    "allowscriptaccess",
    "allowfullscreen",
    "wmode",
    "_errorCheckingEnabled",
    "_iDriverInfo",
    "salign",
    "_oldCanvas",
    "cloneNode",
    "_oldParent",
    "parentNode",
    "context3dObj",
    "contexts",
    "callbackSWFObject",
    "callbackInfo",
    "success",
    "_container",
    "ref",
    "_iCallback",
    "set",
    "addStream",
    "String",
    "fromCharCode",
    "enableErrorChecking",
    "trueValue",
    "falseValue",
    "execute",
    "_iAddResource",
    "resource",
    "_iRemoveResource",
    "splice",
    "clearTextureAt",
    "debug",
    "intMask",
    "drawTriangles",
    "startIndex",
    "setProgramConstant",
    "data32PerVertex",
    "_width",
    "_height",
    "clearVertexBufferAt",
    "clearRenderToTexture",
    "setScissorRect",
    "clearScissorRect",
    "disposeContext",
    "stream",
    "logStream",
    "mountain_js_context_available",
    "driverInfo",
    "ctx",
    "timeOutId",
    "window",
    "setTimeout",
    "clearTimeout",
    "../base/CubeTextureFlash",
    "../base/IndexBufferFlash",
    "../base/OpCodes",
    "../base/ProgramFlash",
    "../base/TextureFlash",
    "../base/VertexBufferFlash",
    "awayjs-stagegl/lib/base/ContextWebGL",
    "ContextGLDrawMode_1",
    "ContextGLMipFilter_1",
    "ContextGLStencilAction_1",
    "ContextGLTextureFilter_1",
    "ContextGLVertexBufferFormat_1",
    "ContextGLWrapMode_1",
    "CubeTextureWebGL_1",
    "IndexBufferWebGL_1",
    "ProgramWebGL_1",
    "TextureWebGL_1",
    "SamplerState_1",
    "VertexBufferWebGL_1",
    "ContextWebGL",
    "_blendFactorDictionary",
    "_drawModeDictionary",
    "_compareModeDictionary",
    "_stencilActionDictionary",
    "_textureIndexDictionary",
    "_textureTypeDictionary",
    "_wrapDictionary",
    "_filterDictionary",
    "_mipmapFilterDictionary",
    "_vertexBufferPropertiesDictionary",
    "_stencilReferenceValue",
    "_stencilReadMask",
    "_separateStencil",
    "_gl",
    "getContext",
    "premultipliedAlpha",
    "getExtension",
    "_standardDerivatives",
    "DST_ALPHA",
    "DST_COLOR",
    "ONE_MINUS_DST_ALPHA",
    "ONE_MINUS_DST_COLOR",
    "ONE_MINUS_SRC_ALPHA",
    "ONE_MINUS_SRC_COLOR",
    "SRC_ALPHA",
    "SRC_COLOR",
    "GEQUAL",
    "LEQUAL",
    "NOTEQUAL",
    "DECR",
    "DECR_WRAP",
    "INCR",
    "INCR_WRAP",
    "REPLACE",
    "TEXTURE0",
    "TEXTURE1",
    "TEXTURE2",
    "TEXTURE3",
    "TEXTURE4",
    "TEXTURE5",
    "TEXTURE6",
    "TEXTURE7",
    "TEXTURE_2D",
    "TEXTURE_CUBE_MAP",
    "CLAMP_TO_EDGE",
    "LINEAR_MIPMAP_NEAREST",
    "LINEAR_MIPMAP_LINEAR",
    "NEAREST_MIPMAP_NEAREST",
    "NEAREST_MIPMAP_LINEAR",
    "FLOAT",
    "BYTE",
    "UNSIGNED_BYTE",
    "SHORT",
    "UNSIGNED_SHORT",
    "_stencilCompareMode",
    "_stencilCompareModeBack",
    "_stencilCompareModeFront",
    "alert",
    "gl",
    "_drawing",
    "updateBlendStatus",
    "glmask",
    "COLOR_BUFFER_BIT",
    "STENCIL_BUFFER_BIT",
    "DEPTH_BUFFER_BIT",
    "clearColor",
    "clearDepth",
    "clearStencil",
    "enable",
    "STENCIL_TEST",
    "DEPTH_TEST",
    "viewport",
    "arrayBuffer",
    "ArrayBuffer",
    "readPixels",
    "RGBA",
    "Uint8Array",
    "byteArray",
    "setArrayBuffer",
    "setPixels",
    "bindBuffer",
    "ELEMENT_ARRAY_BUFFER",
    "glBuffer",
    "drawElements",
    "drawArrays",
    "_blendEnabled",
    "_blendSourceFactor",
    "_blendDestinationFactor",
    "colorMask",
    "disable",
    "CULL_FACE",
    "cullFace",
    "translateTriangleFace",
    "depthFunc",
    "compareModeGL",
    "fail",
    "zFail",
    "pass",
    "stencilFunc",
    "stencilOp",
    "stencilFuncSeparate",
    "stencilOpSeparate",
    "stencilMask",
    "_currentProgram",
    "focusProgram",
    "uniform4f",
    "getUniformLocation",
    "SCISSOR_TEST",
    "scissor",
    "samplerState",
    "_activeTexture",
    "activeTexture",
    "bindTexture",
    "textureType",
    "glTexture",
    "uniform1i",
    "texParameteri",
    "TEXTURE_WRAP_S",
    "TEXTURE_WRAP_T",
    "TEXTURE_MAG_FILTER",
    "TEXTURE_MIN_FILTER",
    "location",
    "getAttribLocation",
    "disableVertexAttribArray",
    "_currentArrayBuffer",
    "ARRAY_BUFFER",
    "properties",
    "enableVertexAttribArray",
    "vertexAttribPointer",
    "frameBuffer",
    "bindFramebuffer",
    "FRAMEBUFFER",
    "BLEND",
    "blendEquation",
    "FUNC_ADD",
    "blendFunc",
    "_float4",
    "Float32Array",
    "modulo",
    "../base/ContextGLDrawMode",
    "../base/ContextGLMipFilter",
    "../base/ContextGLStencilAction",
    "../base/ContextGLTextureFilter",
    "../base/ContextGLVertexBufferFormat",
    "../base/ContextGLWrapMode",
    "../base/CubeTextureWebGL",
    "../base/IndexBufferWebGL",
    "../base/ProgramWebGL",
    "../base/SamplerState",
    "../base/TextureWebGL",
    "../base/VertexBufferWebGL",
    "awayjs-stagegl/lib/base/CubeTextureFlash",
    "ByteArrayBase_1",
    "ResourceBaseFlash_1",
    "CubeTextureFlash",
    "forRTT",
    "streaming",
    "_context",
    "_size",
    "initCubeTexture",
    "_pId",
    "disposeCubeTexture",
    "uploadFromData",
    "side",
    "miplevel",
    "HTMLImageElement",
    "can",
    "createElement",
    "h",
    "drawImage",
    "getImageData",
    "pos",
    "internalGetBase64String",
    "uploadBytesCubeTexture",
    "uploadCompressedTextureFromByteArray",
    "byteArrayOffset",
    "async",
    "../base/ResourceBaseFlash",
    "awayjs-core/lib/utils/ByteArrayBase",
    "awayjs-stagegl/lib/base/CubeTextureWebGL",
    "TextureBaseWebGL_1",
    "CubeTextureWebGL",
    "_textureSelectorDictionary",
    "_texture",
    "TEXTURE_CUBE_MAP_POSITIVE_X",
    "TEXTURE_CUBE_MAP_NEGATIVE_X",
    "TEXTURE_CUBE_MAP_POSITIVE_Y",
    "TEXTURE_CUBE_MAP_NEGATIVE_Y",
    "TEXTURE_CUBE_MAP_POSITIVE_Z",
    "TEXTURE_CUBE_MAP_NEGATIVE_Z",
    "deleteTexture",
    "texImage2D",
    "../base/TextureBaseWebGL",
    "awayjs-stagegl/lib/base/IContextGL",
    "awayjs-stagegl/lib/base/ICubeTexture",
    "awayjs-stagegl/lib/base/IIndexBuffer",
    "awayjs-stagegl/lib/base/IProgram",
    "awayjs-stagegl/lib/base/ITextureBase",
    "awayjs-stagegl/lib/base/ITexture",
    "awayjs-stagegl/lib/base/IVertexBuffer",
    "awayjs-stagegl/lib/base/IndexBufferFlash",
    "IndexBufferFlash",
    "_numIndices",
    "initIndexBuffer",
    "uploadFromArray",
    "uploadArrayIndexBuffer",
    "join",
    "disposeIndexBuffer",
    "awayjs-stagegl/lib/base/IndexBufferSoftware",
    "IndexBufferSoftware",
    "_startOffset",
    "_data",
    "Uint16Array",
    "awayjs-stagegl/lib/base/IndexBufferWebGL",
    "IndexBufferWebGL",
    "_buffer",
    "createBuffer",
    "bufferSubData",
    "bufferData",
    "STATIC_DRAW",
    "deleteBuffer",
    "awayjs-stagegl/lib/base/OpCodes",
    "OpCodes",
    "initProgram",
    "initVertexBuffer",
    "uploadArrayVertexBuffer",
    "uploadAGALBytesProgram",
    "uploadBytesIndexBuffer",
    "uploadBytesVertexBuffer",
    "disposeProgram",
    "disposeVertexBuffer",
    "initTexture",
    "uploadBytesTexture",
    "disposeTexture",
    "awayjs-stagegl/lib/base/ProgramFlash",
    "ContextStage3D_1",
    "ProgramFlash",
    "upload",
    "vertexProgram",
    "fragmentProgram",
    "readBase64String",
    "../base/ContextStage3D",
    "awayjs-stagegl/lib/base/ProgramSoftware",
    "ProgramVOSoftware_1",
    "ProgramSoftware",
    "_vertexDescr",
    "_tokenizer",
    "_fragmentDescr",
    "contextSoftware",
    "vertexIndex",
    "vo",
    "attribute",
    "attributesPerVertex",
    "uintData",
    "_opCodeFunc",
    "outputDepth",
    "varying",
    "varying0",
    "varying1",
    "varying2",
    "derivativeX",
    "derivativeY",
    "getDestTarget",
    "targetType",
    "temp",
    "targetIndex",
    "getSourceTargetType",
    "getSourceTargetByIndex",
    "getSourceTarget",
    "mov",
    "source1",
    "source2",
    "source1Target",
    "m44",
    "source2Type",
    "source2Target0",
    "source2Target1",
    "source2Target2",
    "source2Target3",
    "sample",
    "v",
    "textureIndex",
    "dux",
    "dvx",
    "duy",
    "dvy",
    "_defaultSamplerState",
    "repeat",
    "getMipLevelsCount",
    "abs",
    "lambda",
    "sqrt",
    "LN2",
    "miplevelLow",
    "miplevelHigh",
    "ceil",
    "maxmiplevel",
    "mipblend",
    "resultLow",
    "resultHigh",
    "dataLow",
    "getData",
    "dataLowWidth",
    "pow",
    "dataLowHeight",
    "dataHigh",
    "dataHighWidth",
    "dataHighHeight",
    "sampleBilinear",
    "sampleNearest",
    "interpolateColor",
    "textureData",
    "textureWidth",
    "textureHeight",
    "texelSizeX",
    "texelSizeY",
    "color00",
    "color10",
    "color01",
    "color11",
    "interColor0",
    "interColor1",
    "tex",
    "add",
    "source2Target",
    "sub",
    "mul",
    "div",
    "rcp",
    "frc",
    "sqt",
    "rsq",
    "exp",
    "nrm",
    "sin",
    "cos",
    "crs",
    "source1TargetX",
    "source1TargetY",
    "source1TargetZ",
    "source2TargetX",
    "source2TargetY",
    "source2TargetZ",
    "dp3",
    "dp4",
    "source1TargetW",
    "source2TargetW",
    "neg",
    "sat",
    "m33",
    "m34",
    "ddx",
    "ddy",
    "sge",
    "slt",
    "seq",
    "sne",
    "sgn",
    "kil",
    "../aglsl/AGALTokenizer",
    "../base/ProgramVOSoftware",
    "awayjs-stagegl/lib/base/ProgramVOSoftware",
    "ProgramVOSoftware",
    "awayjs-stagegl/lib/base/ProgramWebGL",
    "ProgramWebGL",
    "_uniforms",
    "_attribs",
    "vertexString",
    "_aglslParser",
    "fragmentString",
    "_vertexShader",
    "createShader",
    "VERTEX_SHADER",
    "_fragmentShader",
    "FRAGMENT_SHADER",
    "shaderSource",
    "compileShader",
    "getShaderParameter",
    "COMPILE_STATUS",
    "getShaderInfoLog",
    "attachShader",
    "linkProgram",
    "getProgramParameter",
    "LINK_STATUS",
    "getProgramInfoLog",
    "_uniformLocationNameDictionary",
    "deleteProgram",
    "useProgram",
    "../aglsl/AGLSLParser",
    "awayjs-stagegl/lib/base/ResourceBaseFlash",
    "ResourceBaseFlash",
    "awayjs-stagegl/lib/base/SamplerState",
    "SamplerState",
    "awayjs-stagegl/lib/base/SoftwareSamplerState",
    "SoftwareSamplerState",
    "awayjs-stagegl/lib/base/Stage",
    "EventDispatcher_1",
    "CSS_1",
    "ContextMode_1",
    "ContextWebGL_1",
    "ContextSoftware_1",
    "StageEvent_1",
    "ProgramDataPool_1",
    "stageIndex",
    "stageManager",
    "forceSoftware",
    "profile",
    "_this",
    "_abstractionPool",
    "_programData",
    "_x",
    "_y",
    "_stageIndex",
    "_antiAlias",
    "_renderTarget",
    "_renderSurfaceSelector",
    "_initialised",
    "_bufferFormatDictionary",
    "_programDataPool",
    "addEventListener",
    "onContextLost",
    "onContextRestored",
    "_stageManager",
    "_viewPort",
    "_enableDepthAndStencil",
    "setElementX",
    "setElementY",
    "visible",
    "getProgramData",
    "getItem",
    "setRenderTarget",
    "getAbstraction",
    "asset",
    "_abstractionClassPool",
    "assetType",
    "clearAbstraction",
    "gl_assetClass",
    "assetClass",
    "requestContext",
    "_usesSoftwareRendering",
    "_profile",
    "_callback",
    "dispatchEvent",
    "STAGE_ERROR",
    "val",
    "setElementWidth",
    "_backBufferDirty",
    "notifyViewportUpdated",
    "setElementHeight",
    "getElementVisibility",
    "setElementVisibility",
    "_viewportDirty",
    "VIEWPORT_UPDATED",
    "iRemoveStage",
    "freeContext",
    "backBufferWidth",
    "backBufferHeight",
    "_color",
    "_bufferClear",
    "_scissorRect",
    "newBufferClear",
    "registerProgram",
    "programData",
    "unRegisterProgram",
    "CONTEXT_DISPOSED",
    "recoverFromDisposal",
    "CONTEXT_RECREATED",
    "CONTEXT_CREATED",
    "setSamplerState",
    "smooth",
    "../base/ContextMode",
    "../base/ContextSoftware",
    "../base/ContextWebGL",
    "../events/StageEvent",
    "../image/ProgramDataPool",
    "awayjs-core/lib/events/EventDispatcher",
    "awayjs-core/lib/utils/CSS",
    "awayjs-stagegl/lib/base/TextureBaseWebGL",
    "AbstractMethodError_1",
    "TextureBaseWebGL",
    "awayjs-core/lib/errors/AbstractMethodError",
    "awayjs-stagegl/lib/base/TextureFlash",
    "TextureFlash",
    "awayjs-stagegl/lib/base/TextureSoftware",
    "TextureSoftware",
    "_mipLevels",
    "awayjs-stagegl/lib/base/TextureWebGL",
    "TextureWebGL",
    "_glTexture",
    "_frameBuffer",
    "createFramebuffer",
    "renderBuffer",
    "createRenderbuffer",
    "bindRenderbuffer",
    "RENDERBUFFER",
    "renderbufferStorage",
    "DEPTH_STENCIL",
    "framebufferTexture2D",
    "COLOR_ATTACHMENT0",
    "framebufferRenderbuffer",
    "DEPTH_STENCIL_ATTACHMENT",
    "ext",
    "generateMipmaps",
    "awayjs-stagegl/lib/base/VertexBufferFlash",
    "VertexBufferFlash",
    "_numVertices",
    "_dataPerVertex",
    "startVertex",
    "awayjs-stagegl/lib/base/VertexBufferSoftware",
    "VertexBufferSoftware",
    "vertices",
    "_floatData",
    "_uintData",
    "awayjs-stagegl/lib/base/VertexBufferWebGL",
    "VertexBufferWebGL",
    "awayjs-stagegl/lib/base",
    "ContextGLProfile_1",
    "ContextGLTextureFormat_1",
    "Stage_1",
    "./base/ContextGLBlendFactor",
    "./base/ContextGLClearMask",
    "./base/ContextGLCompareMode",
    "./base/ContextGLDrawMode",
    "./base/ContextGLMipFilter",
    "./base/ContextGLProfile",
    "./base/ContextGLProgramType",
    "./base/ContextGLStencilAction",
    "./base/ContextGLTextureFilter",
    "./base/ContextGLTextureFormat",
    "./base/ContextGLTriangleFace",
    "./base/ContextGLVertexBufferFormat",
    "./base/ContextGLWrapMode",
    "./base/ContextMode",
    "./base/ContextSoftware",
    "./base/ContextStage3D",
    "./base/ContextWebGL",
    "./base/CubeTextureFlash",
    "./base/CubeTextureWebGL",
    "./base/IndexBufferFlash",
    "./base/IndexBufferSoftware",
    "./base/IndexBufferWebGL",
    "./base/OpCodes",
    "./base/ProgramFlash",
    "./base/ProgramSoftware",
    "./base/ProgramVOSoftware",
    "./base/ProgramWebGL",
    "./base/ResourceBaseFlash",
    "./base/SamplerState",
    "./base/SoftwareSamplerState",
    "./base/Stage",
    "./base/TextureBaseWebGL",
    "./base/TextureFlash",
    "./base/TextureSoftware",
    "./base/TextureWebGL",
    "./base/VertexBufferFlash",
    "./base/VertexBufferSoftware",
    "./base/VertexBufferWebGL",
    "awayjs-stagegl/lib/events/StageEvent",
    "EventBase_1",
    "StageEvent",
    "clone",
    "awayjs-core/lib/events/EventBase",
    "awayjs-stagegl/lib/events",
    "./events/StageEvent",
    "awayjs-stagegl/lib/image/GL_BitmapImage2D",
    "MipmapGenerator_1",
    "GL_Image2D_1",
    "apply",
    "arguments",
    "_createTexture",
    "_mipmap",
    "mipmapData",
    "_mipmapData",
    "_generateMipMaps",
    "_asset",
    "_freeMipMapHolder",
    "../image/GL_Image2D",
    "awayjs-core/lib/utils/MipmapGenerator",
    "awayjs-stagegl/lib/image/GL_BitmapImageCube",
    "GL_ImageCube_1",
    "_mipmapDataArray",
    "j",
    "../image/GL_ImageCube",
    "awayjs-stagegl/lib/image/GL_Image2D",
    "GL_ImageBase_1",
    "GL_Image2D",
    "../base/ContextGLTextureFormat",
    "../image/GL_ImageBase",
    "awayjs-stagegl/lib/image/GL_ImageBase",
    "GL_ImageBase",
    "usages",
    "awayjs-stagegl/lib/image/GL_ImageCube",
    "GL_ImageCube",
    "awayjs-stagegl/lib/image/GL_RenderImage2D",
    "awayjs-stagegl/lib/image/GL_RenderImageCube",
    "awayjs-stagegl/lib/image/GL_Sampler2D",
    "GL_SamplerBase_1",
    "_sampler",
    "../image/GL_SamplerBase",
    "awayjs-stagegl/lib/image/GL_SamplerBase",
    "GL_SamplerBase",
    "awayjs-stagegl/lib/image/GL_SamplerCube",
    "awayjs-stagegl/lib/image/ProgramDataPool",
    "ProgramData_1",
    "ProgramDataPool",
    "_pool",
    "key",
    "disposeItem",
    "../image/ProgramData",
    "awayjs-stagegl/lib/image/ProgramData",
    "ProgramData",
    "pool",
    "PROGRAMDATA_ID_COUNT",
    "awayjs-stagegl/lib/image",
    "GL_BitmapImage2D_1",
    "GL_BitmapImageCube_1",
    "GL_RenderImage2D_1",
    "GL_RenderImageCube_1",
    "GL_Sampler2D_1",
    "GL_SamplerCube_1",
    "./image/GL_BitmapImage2D",
    "./image/GL_BitmapImageCube",
    "./image/GL_Image2D",
    "./image/GL_ImageBase",
    "./image/GL_ImageCube",
    "./image/GL_RenderImage2D",
    "./image/GL_RenderImageCube",
    "./image/GL_Sampler2D",
    "./image/GL_SamplerBase",
    "./image/GL_SamplerCube",
    "./image/ProgramData",
    "./image/ProgramDataPool",
    "awayjs-stagegl/lib/library/GL_IAssetClass",
    "awayjs-stagegl/lib/library",
    "awayjs-stagegl/lib/managers/StageManager",
    "ArgumentError_1",
    "StageManager",
    "_stages",
    "STAGE_MAX_QUANTITY",
    "_onContextCreatedDelegate",
    "onContextCreated",
    "getInstance",
    "_instance",
    "getStageAt",
    "_numStages",
    "removeEventListener",
    "getFreeStage",
    "../base/Stage",
    "awayjs-core/lib/errors/ArgumentError",
    "awayjs-stagegl/lib/managers",
    "StageManager_1",
    "./managers/StageManager"
  ],
  "mappings": "AAAAA,QAAA,QAAAC,GAAAC,EAAAC,EAAAC,GAAA,QAAAC,GAAAC,EAAAC,GAAA,IAAAJ,EAAAG,GAAA,CAAA,IAAAJ,EAAAI,GAAA,CAAA,GAAAE,SAAAR,UAAA,YAAAA,OAAA,KAAAO,GAAAC,EAAA,MAAAA,GAAAF,GAAA,EAAA,IAAAG,EAAA,MAAAA,GAAAH,GAAA,EAAA,IAAAI,GAAA,GAAAC,OAAA,uBAAAL,EAAA,IAAA,MAAAI,GAAAE,KAAA,mBAAAF,EAAA,GAAAG,GAAAV,EAAAG,IAAAQ,WAAAZ,GAAAI,GAAA,GAAAS,KAAAF,EAAAC,QAAA,SAAAb,GAAA,GAAAE,GAAAD,EAAAI,GAAA,GAAAL,EAAA,OAAAI,GAAAF,EAAAA,EAAAF,IAAAY,EAAAA,EAAAC,QAAAb,EAAAC,EAAAC,EAAAC,GAAA,MAAAD,GAAAG,GAAAQ,QAAA,GAAAL,SAAAT,UAAA,YAAAA,OAAA,KAAA,GAAAM,GAAA,EAAAA,EAAAF,EAAAY,OAAAV,IAAAD,EAAAD,EAAAE,GAAA,OAAAD,KAAAY,GAAA,SAAAjB,EAAAkB,EAAAJ,GCCA,YCDA,IAAYK,GAAKnB,EAAU,cA2B1Bc,GAAAK,MAAKA,CA1BN,IAAYC,GAAUpB,EAAS,mBA2B9Bc,GAAAM,WAAUA,CA1BX,IAAYC,GAAIrB,EAAU,aA2BzBc,GAAAO,KAAIA,CA1BL,IAAYC,GAAMtB,EAAU,eA2B3Bc,GAAAQ,OAAMA,CA1BP,IAAYC,GAAKvB,EAAU,cA2B1Bc,GAAAS,MAAKA,CA1BN,IAAYC,GAAOxB,EAAU,gBA2B5Bc,GAAAU,QAAOA,CA1BR,IAAYC,GAAQzB,EAAS,iBA2B5Bc,GAAAW,SAAQA,CAzBT,IAAAC,GAAA1B,EAAgC,8CAChC,IAAA2B,GAAA3B,EAA6B,sCAC7B,IAAA4B,GAAA5B,EAA+B,wCAC/B,IAAA6B,GAAA7B,EAAyB,gCACzB,IAAA8B,GAAA9B,EAA0B,kCAC1B,IAAA+B,GAAA/B,EAA+B,wCAC/B,IAAAgC,GAAAhC,EAA0B,kCAC1B,IAAAiC,GAAAjC,EAA4B,oCAE5BqB,GAAKa,MAAMC,oBAAoBf,EAAWgB,oBAAqBV,EAAAW,QAC/DhB,GAAKa,MAAMC,oBAAoBZ,EAAMe,iBAAkBT,EAAAQ,QACvDhB,GAAKa,MAAMC,oBAAoBZ,EAAMgB,mBAAoBT,EAAAO,QACzDhB,GAAKa,MAAMC,oBAAoBZ,EAAMiB,iBAAkBb,EAAAU,QACvDhB,GAAKa,MAAMC,oBAAoBZ,EAAMkB,mBAAoBb,EAAAS,QACzDhB,GAAKa,MAAMC,oBAAoBZ,EAAMiB,iBAAkBT,EAAAM,QACvDhB,GAAKa,MAAMC,oBAAoBZ,EAAMmB,aAAcV,EAAAK,QACnDhB,GAAKa,MAAMC,oBAAoBZ,EAAMoB,eAAgBV,EAAAI,WDSlDO,cAAc,2BAA2BC,mBAAmB,gCAAgCC,aAAa,0BAA0BC,eAAe,4BAA4BC,cAAc,2BAA2BC,gBAAgB,6BAA6BC,iBAAiB,8BAA8BC,8CAA8CC,UAAUC,sCAAsCD,UAAUE,wCAAwCF,UAAUG,gCAAgCH,UAAUI,kCAAkCJ,UAAUK,kCAAkCL,UAAUM,oCAAoCN,UAAUO,wCAAwCP,YAAYQ,0CAA0C,SAAS5D,EAAQkB,EAAOJ,GACtvB,YEhCA,IAAA+C,GAAA7D,EAA2B,uBAC3B,IAAA8D,GAAA9D,EAAuB,kBACvB,IAAA+D,GAAA/D,EAAwB,mBACxB,IAAAgE,GAAAhE,EAAsB,iBAEtB,IAAAiE,GAAA,WAEC,QAAAA,MAIOA,EAAAC,UAAAC,qBAAP,SAA4BC,GAE3B,GAAIC,GAAgB,GAAIP,GAAAzB,OAExB,IAAI+B,EAAME,oBAAsB,IAAM,CACrC,KAAM,qCAGPD,EAAOE,QAAUH,EAAMI,iBACvB,IAAIH,EAAOE,SAAW,GAAM,CAC3BH,EAAME,kBACND,GAAOE,UAAY,EAEpB,GAAIH,EAAME,oBAAsB,IAAM,CACrC,KAAM,qCAGPD,EAAOI,OAASL,EAAME,kBACtB,QAAQD,EAAOI,QACd,IAAK,GACJJ,EAAOK,KAAO,UACd,MACD,KAAK,GACJL,EAAOK,KAAO,QACd,MACD,KAAK,GACJL,EAAOK,KAAO,KACd,MACD,SACCL,EAAOK,KAAO,EACd,OAGF,GAAIC,GAAmB,GAAId,GAAAxB,OAC3B,IAAIuC,KACJ,OAAOR,EAAMS,SAAWT,EAAMpD,OAAQ,CACrC,GAAI8D,GAAc,GAAId,GAAA3B,OAEtByC,GAAMC,OAASX,EAAMI,iBACrB,IAAIQ,GAAWjB,EAAA1B,QAAQ4C,aAAaH,EAAMC,OAC1C,KAAKC,EAAU,CACd,KAAM,4CAA8CF,EAAMC,OAE3D,GAAIC,EAASE,aAAc,CAC1BP,EAAKQ,UAAY,KAElB,GAAIH,EAASI,KAAM,CAClBN,EAAMM,KAAKC,OAASjB,EAAMkB,mBAC1BR,GAAMM,KAAKG,KAAOnB,EAAME,kBACxBQ,GAAMM,KAAKI,QAAUpB,EAAME,kBAC3BK,GAAKc,SAASX,EAAMM,KAAKI,SAASV,EAAMM,KAAKC,SAAWP,EAAMM,KAAKG,SAC7D,CACNT,EAAMM,KAAO,IACbhB,GAAMI,kBAEP,GAAIQ,EAASxE,EAAG,CACfkF,KAAKC,QAAQb,EAAMtE,EAAG,EAAGmE,EAAMP,OACzB,CACNU,EAAMtE,EAAI,IACV4D,GAAMI,iBACNJ,GAAMI,kBAEP,GAAIQ,EAASY,EAAG,CACfF,KAAKC,QAAQb,EAAMc,EAAGZ,EAASE,aAAe,EAAGP,EAAMP,OACjD,CACNU,EAAMc,EAAI,IACVxB,GAAMI,iBACNJ,GAAMI,kBAEPI,EAAOiB,KAAKf,GAEbH,EAAKN,OAASA,CACdM,GAAKC,OAASA,CAEd,OAAOD,GAGDV,GAAAC,UAAAyB,QAAP,SAAetF,EAAGyF,EAAInB,EAAMP,GAE3B/D,EAAEgF,OAASjB,EAAMkB,mBACjBjF,GAAE0F,YAAc3B,EAAM4B,UACtB3F,GAAE4F,QAAU7B,EAAME,kBAClBjE,GAAEmF,QAAUpB,EAAME,kBAClBK,GAAKuB,QAAQ7F,EAAEmF,SAASnF,EAAEgF,QAAU,EACpC,IAAIhF,EAAEmF,SAAW,EAAK,CAErBnF,EAAE8F,QAAU9F,EAAE0F,WACd1F,GAAE0F,YAAc3C,SAChB/C,GAAE4F,QAAU7C,SAGZ/C,GAAE+F,SAAWhC,EAAME,kBACnBjE,GAAEgG,IAAMhG,EAAE+F,UAAY,CACtB/F,GAAE+F,UAAY,EACd/F,GAAEiG,QAAUlC,EAAME,kBAClBjE,GAAEkG,KAAOlG,EAAEiG,SAAW,CACtBjG,GAAEiG,SAAW,EACbjG,GAAEmG,OAASpC,EAAME,kBACjBjE,GAAEoG,OAASpG,EAAEmG,QAAU,CACvBnG,GAAEmG,QAAU,EACZ7B,GAAK+B,SAASrG,EAAEgF,QAAUhF,MACpB,CACNA,EAAEsG,aAAevC,EAAME,kBACvBjE,GAAEuG,YAAcxC,EAAME,kBACtBjE,GAAEwG,aAAezC,EAAME,mBAExB,GAAIjE,EAAEwG,aAAc,CACnBlC,EAAKmC,YAAc,KAEpB,IAAKzG,EAAEwG,cAAgBf,EAAI,CAC1B,IAAK,GAAIiB,GAAa,EAAGA,EAAMjB,EAAIiB,IACnC,CACCpC,EAAKuB,QAAQ7F,EAAEmF,SAASnF,EAAEgF,OAAS0B,GAAOpC,EAAKuB,QAAQ7F,EAAEmF,SAASnF,EAAEgF,UAIxE,OAAApB,KAEA+C,QAAAC,eAAAnG,EAAA,cAAAoG,MAAA,MFuBApG,GAAQuB,QEvBO4B,IFyBZkD,uBAAuB,uCAAuCC,kBAAkB,kCAAkCC,mBAAmB,mCAAmCC,iBAAiB,mCAAmCC,wCAAwC,SAASvH,EAAQkB,EAAOJ,GAC/R,YG5JA,IAAAiD,GAAA/D,EAAwB,mBAExB,IAAAwH,GAAA,WAAA,QAAAA,MAQQA,EAAAtD,UAAAuD,MAAP,SAAa9C,GAEZ,GAAIN,GAAgB,EACpB,IAAIqD,GAAc,EAElBrD,IAAU,0BACV,IAAIsD,GAAMhD,EAAKN,OAAOK,KAAK,EAG3B,IAAIC,EAAKN,OAAOK,MAAQ,SAAU,CACjCL,GAAU,yBAEX,IAAKM,EAAKmC,YAAa,CACtB,IAAK,GAAIrG,GAAW,EAAGA,EAAIkE,EAAKuB,QAAQ,GAAKlF,OAAQP,IAAK,CACzD,GAAIkE,EAAKuB,QAAQ,GAAKzF,GAAI,CACzB4D,GAAU,gBAAkBsD,EAAM,IAAMlH,EAAI,YAGxC,CACN4D,GAAU,gBAAkBsD,EAAM,SAAWH,EAAYI,mBAAqB,OAI/E,IAAK,GAAInH,GAAI,EAAGA,EAAIkE,EAAKuB,QAAQ,GAAKlF,QAAUP,EAAIkE,EAAKc,SAAS,GAAKzE,OAAQP,IAAK,CACnF,GAAIkE,EAAKuB,QAAQ,GAAKzF,IAAMkE,EAAKc,SAAS,GAAKhF,GAC/C,CACC4D,GAAU,QAAUsD,EAAM,IAAMlH,EAAI,OAKtC,IAAK,GAAIA,GAAW,EAAGA,EAAIkE,EAAKuB,QAAQ,GAAKlF,OAAQP,IAAK,CACzD,GAAIkE,EAAKuB,QAAQ,GAAKzF,GAAI,CACzB4D,GAAU,oBAAsB5D,EAAI,OAKtC,IAAK,GAAIA,GAAW,EAAGA,EAAIkE,EAAKuB,QAAQ,GAAKlF,QAAUP,EAAIkE,EAAKc,SAAS,GAAKzE,OAAQP,IAAK,CAC1F,GAAIkE,EAAKuB,QAAQ,GAAKzF,IAAMkE,EAAKc,SAAS,GAAKhF,GAAI,CAClD4D,GAAU,kBAAoB5D,EAAI,OAKpC,GAAIoH,IAA0B,KAAM,OAAQ,KAAM,GAClD,KAAK,GAAIpH,GAAW,EAAGA,EAAIkE,EAAK+B,SAAS1F,OAAQP,IAAK,CACrD,GAAIkE,EAAK+B,SAASjG,GAAI,CACrB4D,GAAU,kBAAoBwD,EAAUlD,EAAK+B,SAASjG,GAAG4F,IAAM,GAAM,MAAQ5F,EAAI,OAKnF,GAAIkE,EAAKN,OAAOK,MAAQ,SAAU,CACjCL,GAAU,iBAEX,GAAIM,EAAKmD,WAAY,CACpBzD,GAAU,wBAKX,GAAI0D,GAAsB,KAG1BL,IAAQ,iBAER,KAAK,GAAIjH,GAAW,EAAGA,EAAIkE,EAAKC,OAAO5D,OAAQP,IAAK,CAEnD,GAAIuE,GAAWjB,EAAA1B,QAAQ4C,aAAaN,EAAKC,OAAOnE,GAAGsE,OAEnD,IAAGC,EAAS3E,EAAE2H,QAAQ,UAAY,GAAKhD,EAAS3E,EAAE2H,QAAQ,UAAY,EAAGD,EAAc,IACvF,KAAK/C,EAAU,CACd,KAAM,4CAGP,GAAIiD,GAAWjD,EAASE,cAAgB,CAExC,KAAK,GAAIgD,GAAY,EAAGA,EAAKD,EAAUC,IAAM,CAC5C,GAAIC,GAAc,KAAOnD,EAAS3E,CAClC,IAAIsE,EAAKC,OAAOnE,GAAG2E,KAAM,CACxB,GAAIJ,EAASE,aAAc,CAC1B,IAAMP,EAAKC,OAAOnE,GAAG2E,KAAKG,MAAQ2C,EAAM,IAAM,EAAG,CAChD,SAED,GAAIE,GAAuB1C,KAAK2C,YAAY1D,EAAKC,OAAOnE,GAAG2E,KAAKI,QAASb,EAAKC,OAAOnE,GAAG2E,KAAKC,OAAQV,EAAMgD,EAC3G,IAAIW,GAAwB,OAC5B,IAAIC,IAAkB,IAAK,IAAK,IAAK,KAAKL,EAC1CE,IAAiB,IAAMG,MACjB,CACN,GAAIH,GAAuB1C,KAAK2C,YAAY1D,EAAKC,OAAOnE,GAAG2E,KAAKI,QAASb,EAAKC,OAAOnE,GAAG2E,KAAKC,OAAQV,EAAMgD,EAC3G,IAAIW,EACJ,IAAIC,EACJ,IAAI5D,EAAKC,OAAOnE,GAAG2E,KAAKG,MAAQ,GAAK,CACpC,GAAIiD,GAAe,CACnBD,GAAiB,EACjB,IAAI5D,EAAKC,OAAOnE,GAAG2E,KAAKG,KAAO,EAAG,CACjCiD,GACAD,IAAkB,IAEnB,GAAI5D,EAAKC,OAAOnE,GAAG2E,KAAKG,KAAO,EAAG,CACjCiD,GACAD,IAAkB,IAEnB,GAAI5D,EAAKC,OAAOnE,GAAG2E,KAAKG,KAAO,EAAG,CACjCiD,GACAD,IAAkB,IAEnB,GAAI5D,EAAKC,OAAOnE,GAAG2E,KAAKG,KAAO,EAAG,CACjCiD,GACAD,IAAkB,IAEnBH,GAAiB,IAAMG,CACvB,QAAQC,GACP,IAAK,GACJF,EAAiB,OACjB,MACD,KAAK,GACJA,EAAiB,MACjB,MACD,KAAK,GACJA,EAAiB,MACjB,MACD,SACC,KAAM,mCAEF,CACNA,EAAiB,MACjBC,GAAiB,QAGnBJ,EAAOA,EAAKM,QAAQ,QAASL,EAC7BD,GAAOA,EAAKM,QAAQ,QAASH,EAC7BH,GAAOA,EAAKM,QAAQ,MAAOF,GAE5B,GAAIG,GAAa,EACjB,KAAK1D,EAAS2D,MAAQ3D,EAASI,MAAQT,EAAKC,OAAOnE,GAAG2E,KAAM,CAC3DsD,EAAM/D,EAAKC,OAAOnE,GAAG2E,KAAKG,KAE3B,GAAIZ,EAAKC,OAAOnE,GAAGD,EAAG,CACrB2H,EAAOA,EAAKM,QAAQ,KAAM/C,KAAKkD,eAAejE,EAAKC,OAAOnE,GAAGD,EAAG,EAAGkI,EAAK1D,EAAS6D,OAAQlE,EAAMgD,IAEhG,GAAIhD,EAAKC,OAAOnE,GAAGmF,EAAG,CACrBuC,EAAOA,EAAKM,QAAQ,KAAM/C,KAAKkD,eAAejE,EAAKC,OAAOnE,GAAGmF,EAAGsC,EAAIQ,EAAK1D,EAAS6D,OAAQlE,EAAMgD,GAChG,IAAIhD,EAAKC,OAAOnE,GAAGmF,EAAEJ,SAAW,EAAK,CAEpC,GAAIsD,IAAU,KAAM,OAAQ,MAAMnE,EAAKC,OAAOnE,GAAGmF,EAAES,IACnD,IAAI0C,IAAW,OAAQ,OAAQ,QAAQpE,EAAKC,OAAOnE,GAAGmF,EAAES,IACxD8B,GAAOA,EAAKM,QAAQ,UAAWK,EAC/BX,GAAOA,EAAKM,QAAQ,WAAYM,EAChC,IAAIC,GAAgB,EACpBb,GAAOA,EAAKM,QAAQ,OAAQO,IAG9BtB,GAAQS,GAKV,GAAIxD,EAAKN,OAAOK,MAAQ,SAAU,CACjCgD,GAAQ,iFAIT,GAAIK,GAAepD,EAAKN,OAAOK,MAAQ,WAAY,CAClDL,EAAS,oDAAsDA,EAIhE,GAAIM,EAAKmD,WAAY,CACpBJ,GAAQ,mDAITA,GAAQ,KAER,OAAOrD,GAASqD,EAGVF,GAAAtD,UAAAmE,YAAP,SAAmB7C,EAAgBH,EAAeV,EAAkBgD,GAEnE,OAAQnC,GACP,IAAK,GACJ,MAAO,KAAOH,CACf,KAAK,GACJ,GAAIV,EAAKmC,aAAenC,EAAKN,OAAOK,MAAQ,SAAU,CACrD,MAAO,UAAYW,EAAS,QACtB,CACN,MAAOsC,GAAM,IAAMtC,EAErB,IAAK,GACJ,MAAOsC,GAAM,IAAMtC,CACpB,KAAK,GACJ,MAAOV,GAAKN,OAAOK,MAAQ,SAAU,SAAW,cACjD,KAAK,GACJ,MAAO,KAAOW,CACf,KAAK,GACJ,MAAO,KAAOA,CACf,KAAK,GACJ,MAAO,eACR,SACC,KAAM,yBAIFmC,GAAAtD,UAAA0E,eAAP,SAAsBvI,EAAG4I,EAASP,EAAKQ,EAAUvE,EAAMgD,GAEtD,GAAIwB,IAAS,IAAK,IAAK,IAAK,IAC5B,IAAI/I,EAEJ,IAAIC,EAAEwG,aAAc,CACnBzG,EAAI,cAAgBsF,KAAK2C,YAAYhI,EAAEsG,aAActG,EAAEgF,OAAQV,EAAMgD,GAAO,IAAMwB,EAAK9I,EAAEuG,aAAe,GACxG,IAAIwC,GAAUH,EAAU5I,EAAE0F,WAC1B,IAAIqD,EAAU,EAAGhJ,GAAKgJ,EAAQC,UAC9B,IAAID,EAAU,EAAGhJ,GAAK,IAAMgJ,EAAQC,UACpCjJ,IAAK,QACC,CACNA,EAAIsF,KAAK2C,YAAYhI,EAAEmF,QAASnF,EAAEgF,OAAS4D,EAAStE,EAAMgD,GAI3D,GAAItH,EAAEmF,SAAW,EAAK,CACrB,MAAOpF,GAIR,GAAI8I,EAAU,CACb,MAAO9I,GAAI,IAAM+I,EAAM9I,EAAE4F,SAAW,EAAK,GAI1C,GAAI5F,EAAE4F,SAAW,KAAQyC,GAAO,GAAK,CACpC,MAAOtI,GAIRA,GAAK,GACL,IAAIsI,EAAM,EAAGtI,GAAK+I,EAAM9I,EAAE4F,SAAW,EAAK,EAC1C,IAAIyC,EAAM,EAAGtI,GAAK+I,EAAM9I,EAAE4F,SAAW,EAAK,EAC1C,IAAIyC,EAAM,EAAGtI,GAAK+I,EAAM9I,EAAE4F,SAAW,EAAK,EAC1C,IAAIyC,EAAM,EAAGtI,GAAK+I,EAAM9I,EAAE4F,SAAW,EAAK,EAC1C,OAAO7F,GAvPMoH,GAAAI,mBAA4B,GAC5BJ,GAAA8B,iBAA0B,EAC1B9B,GAAA+B,QAAiB,CACjB/B,GAAAgC,WAAoB,CACpBhC,GAAAiC,YAAqB,CAqPpC,OAAAjC,KAEAR,QAAAC,eAAAnG,EAAA,cAAAoG,MAAA,MH2IApG,GAAQuB,QG3IOmF,IH6IZH,mBAAmB,qCAAqCqC,wCAAwC,SAAS1J,EAAQkB,EAAOJ,GAC3H,YI9YA,IAAAgD,GAAA9D,EAAuB,kBAGvB,IAAA2J,GAAA,WA6BC,QAAAA,KA3BOjE,KAAAQ,8BASAR,MAAAD,+BASAC,MAAAoB,YAAsB,KACtBpB,MAAAoC,WAAqB,KACrBpC,MAAAP,UAAoB,KACpBO,MAAAgB,WAGAhB,MAAAd,SACAc,MAAArB,OAAgB,GAAIP,GAAAzB,QAK5B,MAAAsH,KAEA3C,QAAAC,eAAAnG,EAAA,cAAAoG,MAAA,MJ0YApG,GAAQuB,QI1YOsH,IJ4YZvC,kBAAkB,oCAAoCwC,wCAAwC,SAAS5J,EAAQkB,EAAOJ,GACzH,YKlbA,IAAA+I,GAAA,WAmBC,QAAAA,KAjBOnE,KAAAH,KAAc,CACdG,MAAAL,OAAgB,CAChBK,MAAAF,QAAiB,CACjBE,MAAAW,IAAa,CAEbX,MAAAK,YAAqB,CACrBL,MAAAO,QAAiB,CACjBP,MAAAS,QAAiB,CACjBT,MAAAU,SAAkB,CAClBV,MAAAY,QAAiB,CACjBZ,MAAAa,KAAc,CACdb,MAAAe,OAAgB,CAEhBf,MAAAiB,aAAsB,CACtBjB,MAAAkB,YAAqB,CACrBlB,MAAAmB,aAAsB,EAK9B,MAAAgD,KAEA7C,QAAAC,eAAAnG,EAAA,cAAAoG,MAAA,ML+aApG,GAAQuB,QK/aOwH,OLibTC,mCAAmC,SAAS9J,EAAQkB,EAAOJ,GACjE,YM1cA,IAAAiJ,GAAA,WAMC,QAAAA,KAJOrE,KAAAjB,OAAgB,CAChBiB,MAAAnB,QAAiB,CACjBmB,MAAAhB,KAAc,GAKtB,MAAAqF,KAEA/C,QAAAC,eAAAnG,EAAA,cAAAoG,MAAA,MNycApG,GAAQuB,QMzcO0H,ON2cTC,oCAAoC,SAAShK,EAAQkB,EAAOJ,GAClE,YOvdA,IAAAmJ,GAAAjK,EAAsB,iBAEtB,IAAAkK,GAAA,WA4CC,QAAAA,GAAYC,IA1CLD,EAAAjF,cAGN,GAAIgF,GAAA5H,QAAM,uBAAwB,EAAG,KAAM,KAAM,MAAO,KAAM,KAAM,KAAM,KAAM,KAAM,MACtF,GAAI4H,GAAA5H,QAAM,4BAA6B,EAAG,KAAM,KAAM,KAAM,KAAM,KAAM,KAAM,KAAM,KAAM,MAC1F,GAAI4H,GAAA5H,QAAM,4BAA6B,EAAG,KAAM,KAAM,KAAM,KAAM,KAAM,KAAM,KAAM,KAAM,MAC1F,GAAI4H,GAAA5H,QAAM,4BAA6B,EAAG,KAAM,KAAM,KAAM,KAAM,KAAM,KAAM,KAAM,KAAM,MAC1F,GAAI4H,GAAA5H,QAAM,4BAA6B,EAAG,KAAM,KAAM,KAAM,KAAM,KAAM,KAAM,KAAM,KAAM,MAC1F,GAAI4H,GAAA5H,QAAM,6BAA8B,EAAG,KAAM,KAAM,MAAO,KAAM,KAAM,KAAM,KAAM,KAAM,MAC5F,GAAI4H,GAAA5H,QAAM,+BAAgC,EAAG,KAAM,KAAM,KAAM,KAAM,KAAM,KAAM,KAAM,KAAM,MAC7F,GAAI4H,GAAA5H,QAAM,+BAAgC,EAAG,KAAM,KAAM,KAAM,KAAM,KAAM,KAAM,KAAM,KAAM,MAC7F,GAAI4H,GAAA5H,QAAM,8BAA+B,EAAG,KAAM,KAAM,MAAO,KAAM,KAAM,KAAM,KAAM,KAAM,MAC7F,GAAI4H,GAAA5H,QAAM,kCAAmC,EAAG,KAAM,KAAM,MAAO,KAAM,KAAM,KAAM,KAAM,KAAM,MACjG,GAAI4H,GAAA5H,QAAM,yCAA0C,EAAG,KAAM,KAAM,MAAO,KAAM,KAAM,KAAM,KAAM,KAAM,MACxG,GAAI4H,GAAA5H,QAAM,oCAAqC,EAAG,KAAM,KAAM,KAAM,KAAM,KAAM,KAAM,KAAM,KAAM,MAClG,GAAI4H,GAAA5H,QAAM,kCAAmC,EAAG,KAAM,KAAM,MAAO,KAAM,KAAM,KAAM,KAAM,KAAM,MACjG,GAAI4H,GAAA5H,QAAM,6BAA8B,EAAG,KAAM,KAAM,MAAO,KAAM,KAAM,KAAM,KAAM,KAAM,MAG5F,GAAI4H,GAAA5H,QAAM,2CAA4C,EAAG,KAAM,KAAM,MAAO,KAAM,KAAM,KAAM,KAAM,KAAM,MAC1G,GAAI4H,GAAA5H,QAAM,4BAA6B,EAAG,KAAM,KAAM,MAAO,KAAM,KAAM,KAAM,KAAM,KAAM,MAC3F,GAAI4H,GAAA5H,QAAM,4BAA6B,EAAG,KAAM,KAAM,MAAO,KAAM,KAAM,KAAM,KAAM,KAAM,MAC3F,GAAI4H,GAAA5H,QAAM,6CAA8C,EAAG,KAAM,KAAM,KAAM,KAAM,KAAM,KAAM,KAAM,KAAM,MAC3G,GAAI4H,GAAA5H,QAAM,2CAA4C,EAAG,KAAM,KAAM,KAAM,KAAM,KAAM,KAAM,KAAM,KAAM,MACzG,GAAI4H,GAAA5H,QAAM,2CAA4C,EAAG,KAAM,KAAM,KAAM,KAAM,KAAM,KAAM,KAAM,KAAM,MACzG,GAAI4H,GAAA5H,QAAM,4BAA6B,EAAG,KAAM,KAAM,MAAO,KAAM,KAAM,KAAM,KAAM,KAAM,MAC3F,GAAI4H,GAAA5H,QAAM,8BAA+B,EAAG,KAAM,KAAM,MAAO,KAAM,KAAM,KAAM,KAAM,KAAM,MAC7F,GAAI4H,GAAA5H,QAAM,sCAAuC,EAAG,KAAM,KAAM,MAAO,KAAM,KAAM,KAAM,KAAM,KAAM,MACrG,GAAI4H,GAAA5H,QAAM,2CAA4C,KAAM,KAAM,KAAM,KAAM,EAAG,EAAG,KAAM,KAAM,KAAM,MACtG,GAAI4H,GAAA5H,QAAM,2CAA4C,KAAM,KAAM,KAAM,KAAM,EAAG,EAAG,KAAM,KAAM,KAAM,MACtG,GAAI4H,GAAA5H,QAAM,2CAA4C,KAAM,KAAM,KAAM,KAAM,EAAG,EAAG,KAAM,KAAM,KAAM,MAEtG,GAAI4H,GAAA5H,QAAM,6BAA8B,EAAG,KAAM,KAAM,MAAO,KAAM,KAAM,KAAM,KAAM,KAAM,MAC5F,GAAI4H,GAAA5H,QAAM,6BAA8B,EAAG,KAAM,KAAM,MAAO,KAAM,KAAM,KAAM,KAAM,KAAM,MAC5F,GAAI4H,GAAA5H,QAAM,iCAAkC,EAAG,MAAO,KAAM,KAAM,KAAM,KAAM,KAAM,KAAM,KAAM,MAAO,GAAI4H,GAAA5H,QAAM,iCAAkC,EAAG,MAAO,KAAM,KAAM,KAAM,KAAM,KAAM,KAAM,KAAM,MAAO,GAAI4H,GAAA5H,QAAM,iCAAkC,EAAG,MAAO,KAAM,KAAM,KAAM,KAAM,KAAM,KAAM,KAAM,MAAO,GAAI4H,GAAA5H,QAAM,gCAAiC,EAAG,MAAO,KAAM,KAAM,KAAM,KAAM,KAAM,KAAM,KAAM,MAAO,GAAI4H,GAAA5H,QAAM,cAAe,EAAG,MAAO,MAAO,MAAO,KAAM,KAAM,KAAM,KAAM,KAAM,MAAO,GAAI4H,GAAA5H,QAAM,OAAQ,EAAG,MAAO,MAAO,MAAO,KAAM,KAAM,KAAM,KAAM,KAAM,MAAO,GAAI4H,GAAA5H,QAAM,KAAM,KAAM,KAAM,KAAM,MAAO,KAAM,KAAM,KAAM,KAAM,KAAM,MAAO,GAAI4H,GAAA5H,QAAM,KAAM,KAAM,KAAM,KAAM,MAAO,KAAM,KAAM,KAAM,KAAM,KAAM,MAAO,GAAI4H,GAAA5H,QAAM,KAAM,KAAM,KAAM,KAAM,MAAO,KAAM,KAAM,KAAM,KAAM,KAAM,MAAO,GAAI4H,GAAA5H,QAAM,KAAM,KAAM,KAAM,KAAM,MAAO,KAAM,KAAM,KAAM,KAAM,KAAM,MAGj3B,GAAI4H,GAAA5H,QAAM,2DAA4D,KAAM,KAAM,KAAM,KAAM,KAAM,KAAM,KAAM,KAAM,KAAM,MAAO,GAAI4H,GAAA5H,QAAM,kCAAmC,KAAM,MAAO,KAAM,MAAO,KAAM,KAAM,KAAM,KAAM,KAAM,MAAO,GAAI4H,GAAA5H,QAAM,4DAA6D,KAAM,KAAM,KAAM,KAAM,KAAM,KAAM,KAAM,KAAM,KAAM,MAAO,GAAI4H,GAAA5H,QAAM,gDAAiD,EAAG,KAAM,KAAM,KAAM,KAAM,KAAM,KAAM,KAAM,KAAM,MAAO,GAAI4H,GAAA5H,QAAM,wCAAyC,EAAG,KAAM,KAAM,KAAM,KAAM,KAAM,KAAM,KAAM,KAAM,MAAO,GAAI4H,GAAA5H,QAAM,6BAA8B,EAAG,KAAM,KAAM,MAAO,KAAM,KAAM,KAAM,KAAM,KAAM,MAAO,GAAI4H,GAAA5H,QAAM,qCAAsC,EAAG,KAAM,KAAM,KAAM,KAAM,KAAM,KAAM,KAAM,KAAM,MAAO,GAAI4H,GAAA5H,QAAM,wCAAyC,EAAG,KAAM,KAAM,KAAM,KAAM,KAAM,KAAM,KAAM,KAAM,MAS14B,OAAA6H,KAEAlD,QAAAC,eAAAnG,EAAA,cAAAoG,MAAA,MPgdApG,GAAQuB,QOhdO6H,IPkdZE,iBAAiB,mCAAmCC,kCAAkC,SAASrK,EAAQkB,EAAOJ,GACjH,YQvgBA,IAAAwJ,GAAA,WAeC,QAAAA,GAAYjK,EAAUkK,EAAcnF,EAAc5E,EAAWoF,EAAW4E,EAAoBtF,EAAqByD,EAAc8B,EAAgBC,EAAYC,GAE1JjF,KAAKrF,EAAIA,CACTqF,MAAK6E,MAAQA,CACb7E,MAAKN,KAAOA,CACZM,MAAKlF,EAAIA,CACTkF,MAAKE,EAAIA,CACTF,MAAK8E,YAAcA,CACnB9E,MAAKR,aAAeA,CACpBQ,MAAKiD,KAAOA,CACZjD,MAAKmD,OAAS4B,CACd/E,MAAKgF,GAAKA,CACVhF,MAAKiF,IAAMA,EAEb,MAAAL,KAEAtD,QAAAC,eAAAnG,EAAA,cAAAoG,MAAA,MR0fApG,GAAQuB,QQ1fOiI,OR4fTM,kCAAkC,SAAS5K,EAAQkB,EAAOJ,GAChE,YS5hBA,IAAA+J,GAAA7K,EAA2B,uBAE3B,IAAA8K,GAAA,WAOC,QAAAA,KALOpF,KAAAN,KAAmB,GAAIyF,GAAAxI,OACvBqD,MAAAX,OAAgB,CAChBW,MAAAlF,EAAgB,GAAIqK,GAAAxI,OACpBqD,MAAAE,EAAgB,GAAIiF,GAAAxI,QAK5B,MAAAyI,KAEA9D,QAAAC,eAAAnG,EAAA,cAAAoG,MAAA,MT0hBApG,GAAQuB,QS1hBOyI,IT4hBZC,uBAAuB,yCAAyCC,wDAAwD,SAAShL,EAAQkB,EAAOJ,GACnJ,YUziBA,IAAAmK,GAAAjL,EAAyB,kCACzB,IAAAkL,GAAAlL,EAAsB,6BACtB,IAAAmL,GAAAnL,EAAuB,+BACvB,IAAAoL,GAAApL,EAA0B,mCAG1B,IAAAqL,GAAA,WAKC,QAAAA,KAEC3F,KAAKtF,IACLsF,MAAK4F,IAAM,GAAIJ,GAAA7I,QAGTgJ,EAAAnH,UAAAqH,SAAP,SAAgBC,EAAeC,EAAiBC,GAAjB,GAAAD,QAAA,GAAe,CAAfA,EAAA,KAAiB,GAAAC,QAAA,GAAkB,CAAlBA,EAAA,KAE/C,IAAKA,EAAa,CACjBA,EAAc,EAGf,GAAID,EAAU,CACb/F,KAAKiG,UAAUF,EAAUC,GAG1B,GAAIE,GAAQJ,EAAO/C,QAAQ,eAAgB,MAAMoD,MAAM,KAEvD,KAAK,GAAIpL,KAAKmL,GAAO,CACpBlG,KAAKoG,YAAYF,EAAMnL,GAAIA,GAG5B,MAAOiF,MAAKtF,EAGLiL,GAAAnH,UAAA4H,YAAR,SAAoB3D,EAAM4D,GAEzB,GAAIC,GAAsB7D,EAAK8D,OAAO,KACtC,IAAID,IAAiB,EAAG,CACvB7D,EAAOA,EAAK+D,MAAM,EAAGF,GAEtB7D,EAAOA,EAAKM,QAAQ,aAAc,GAClC,MAAMN,EAAKnH,OAAS,GAAK,CACxB,OAED,GAAImL,GAAehE,EAAK8D,OAAO,QAC/B,IAAIG,GAAgB,IACpB,IAAID,IAAU,EAAG,CAChBC,EAAOjE,EAAK+D,MAAMC,GAAOE,MAAM,kBAC/BlE,GAAOA,EAAK+D,MAAM,EAAGC,GAItB,GAAIvH,GAASuD,EAAKkE,MAAM,oBACxB,KAAKzH,GAAUA,EAAO5D,OAAS,EAAG,CACjC,GAAImH,EAAKnH,QAAU,EAAG,CACrBsL,QAAQC,IAAI,qBAAuBR,EAAS,KAAO5D,GAEpD,OAID,OAAQvD,EAAO,IACd,IAAK,OACJc,KAAKiG,UAAU/G,EAAO,GAAI4H,OAAO5H,EAAO,IACxC,MACD,KAAK,UACJ,IAAKc,KAAK4F,IAAK,CACd,KAAM,qBAEP5F,KAAK4F,IAAImB,KAAK5H,SAAW,CACzBa,MAAK4F,IAAM,IACX,OACD,SACC,IAAK5F,KAAK4F,IAAK,CACdgB,QAAQC,IAAI,qBAAuBR,EAAS,KAAO5D,EAAO,oCAC1D,QAED,GAAIzC,KAAK4F,IAAIoB,MAAQ,UAAW,CAC/B,OAED,GAAIC,GAAqB1B,EAAA5I,QAAUuK,IAAIhI,EAAO,GAC9C,KAAK+H,EAAI,CACR,KAAM,cAAgB/H,EAAO,GAAK,IAAMmH,EAAS,KAAO5D,EAIzDzC,KAAKmH,WAAWnH,KAAK4F,IAAKqB,EAAG5H,OAC7B,IAAI+H,GAAY,CAChB,IAAIH,EAAGvH,MAAQuH,EAAGvH,MAAQ,OAAQ,CACjC,IAAKM,KAAKqH,SAASrH,KAAK4F,IAAK1G,EAAOkI,KAAOH,EAAGvH,MAAO,CACpD,KAAM,4BAA8BR,EAAOkI,EAAK,GAAK,IAAMf,EAAS,KAAO5D,OAEtE,CACNzC,KAAKsH,cAActH,KAAK4F,KAGzB,GAAIqB,EAAGnM,GAAKmM,EAAGnM,EAAEyM,QAAU,OAAQ,CAClC,IAAKvH,KAAKwH,WAAWxH,KAAK4F,IAAK1G,EAAOkI,KAAOH,EAAGnM,GAAI,KAAM,uBAAyBoE,EAAOkI,EAAK,GAAK,IAAMf,EAAS,KAAO5D,MACpH,CACNzC,KAAKyH,cAAczH,KAAK4F,KAGzB,GAAIqB,EAAG/G,GAAK+G,EAAG/G,EAAEqH,QAAU,OAAQ,CAClC,GAAIN,EAAG/G,EAAEqH,QAAU,UAAW,CAC7B,IAAKvH,KAAK0H,YAAY1H,KAAK4F,IAAK1G,EAAOkI,KAAOH,EAAG/G,EAAGwG,GAAO,CAC1D,KAAM,wBAA0BxH,EAAOkI,EAAK,GAAK,IAAMf,EAAS,KAAO5D,OAElE,CACN,IAAKzC,KAAKwH,WAAWxH,KAAK4F,IAAK1G,EAAOkI,KAAOH,EAAG/G,GAAI,CACnD,KAAM,uBAAyBhB,EAAOkI,EAAK,GAAK,IAAMf,EAAS,KAAO5D,QAGlE,CACNzC,KAAKyH,cAAczH,KAAK4F,KAEzB,OAIID,GAAAnH,UAAAmJ,WAAP,SAAkBC,GAEjBA,EAAGb,KAAKc,kBAAkB,IAC1BD,GAAGb,KAAKe,iBAAiBF,EAAG/I,QAC5B,IAAI+I,EAAG/I,SAAW,GAAM,CACvB+I,EAAGb,KAAKc,kBAAkB,GAE3BD,EAAGb,KAAKc,kBAAkB,IAC1B,QAAQD,EAAGZ,MACV,IAAK,WACJY,EAAGb,KAAKc,kBAAkB,EAC1B,MACD,KAAK,SACJD,EAAGb,KAAKc,kBAAkB,EAC1B,MACD,KAAK,MACJD,EAAGb,KAAKc,kBAAkB,EAC1B,MACD,SACCD,EAAGb,KAAKc,kBAAkB,IAC1B,QAIIlC,GAAAnH,UAAA2I,WAAP,SAAkBS,EAASvI,GAE1BuI,EAAGb,KAAKe,iBAAiBzI,GAInBsG,GAAAnH,UAAA8I,cAAP,SAAqBM,GAEpBA,EAAGb,KAAKe,iBAAiB,GAGnBnC,GAAAnH,UAAAiJ,cAAP,SAAqBG,GAEpBA,EAAGb,KAAKe,iBAAiB,EACzBF,GAAGb,KAAKe,iBAAiB,GAGnBnC,GAAAnH,UAAA6I,SAAP,SAAgBO,EAAIxI,EAAO2I,GAI1B,GAAIC,GAAM5I,EAAMuH,MAAM,4CAKtB,KAAKlB,EAAA9I,QAAOuK,IAAIc,EAAI,IAAK,MAAO,MAChC,IAAIC,IAAOC,IAAIF,EAAI,GAAIA,EAAI,GAAK,EAAG9M,KAAKuK,EAAA9I,QAAOuK,IAAIc,EAAI,IAAI9M,KAAM2E,KAAKG,KAAKmI,aAAaH,EAAI,IAC5FJ,GAAGb,KAAKqB,mBAAmBH,EAAGC,IAC9BN,GAAGb,KAAKc,kBAAkBI,EAAGpI,KAC7B+H,GAAGb,KAAKc,kBAAkBI,EAAG/M,KAE7B,OAAO,MAGDyK,GAAAnH,UAAA2J,aAAP,SAAoBxN,GAEnB,IAAKA,EAAG,MAAO,GACf,IAAID,GAAI,CACR,IAAIC,EAAE2H,QAAQ,OAAS,EAAG5H,GAAK,CAC/B,IAAIC,EAAE2H,QAAQ,OAAS,EAAG5H,GAAK,CAC/B,IAAIC,EAAE2H,QAAQ,OAAS,EAAG5H,GAAK,CAC/B,IAAIC,EAAE2H,QAAQ,OAAS,EAAG5H,GAAK,CAC/B,OAAOA,GAGDiL,GAAAnH,UAAA6J,gBAAP,SAAuB1N,GAEtB,IAAKA,EAAG,CACP,MAAO,KAER,GAAI2N,IAAgBC,EAAE,EAAGC,EAAE,EAAGC,EAAE,EAAGC,EAAE,EACrC,IAAIC,GAAK,CAET,IAAIhO,EAAEiO,OAAO,IAAM,IAAK,CACvB,KAAM,wBAGP,GAAIjO,EAAEW,OAAS,EAAG,CACjBqN,GAAML,EAAY3N,EAAEiO,OAAO,IAG5B,GAAIjO,EAAEW,OAAS,EAAG,CACjBqN,GAAML,EAAY3N,EAAEiO,OAAO,KAAO,MAC5B,CACND,IAAOA,EAAK,IAAM,EAGnB,GAAIhO,EAAEW,OAAS,EAAG,CACjBqN,GAAML,EAAY3N,EAAEiO,OAAO,KAAO,MAC5B,CACND,IAAOA,EAAM,GAAK,IAAO,EAG1B,GAAIhO,EAAEW,OAAS,EAAG,CACjBqN,GAAML,EAAY3N,EAAEiO,OAAO,KAAO,MAC5B,CACND,IAAOA,EAAM,GAAK,IAAO,EAG1B,MAAOA,GAGDhD,GAAAnH,UAAAkJ,YAAP,SAAmBE,EAASxI,EAAOyJ,EAAOnC,GAEzC,GAAIsB,GAAe5I,EAAMuH,MAAM,WAC/B,KAAKqB,IAAQA,EAAI,GAAI,CACpB,MAAO,OAERJ,EAAGb,KAAKqB,mBAAmBU,SAASd,EAAI,IACxCJ,GAAGb,KAAKc,kBAAkB,EAC1BD,GAAGb,KAAKc,kBAAkB,EAO1B,IAAIkB,GAAqB,CACzB,IAAIC,GAAuB,CAC3B,KAAK,GAAIjO,GAAW,EAAGA,EAAI2L,EAAKpL,OAAQP,IAAK,CAC5C,GAAIH,GAAsB8K,EAAA/I,QAAWuK,IAAKR,EAAK3L,GAAGkO,cAIlD,IAAIrO,EAAG,CACN,IAAMoO,GAAiBpO,EAAEsO,MAAStO,EAAEiF,OAAS,EAAG,CAC/C+G,QAAQC,IAAI,qCAEbmC,GAAiBpO,EAAEiF,MAAQjF,EAAEsO,KAC7BH,MAAiBnO,EAAEiF,MAAQjF,EAAEsO,MAC7BH,IAAenO,EAAE4G,OAAS5G,EAAEsO,UACtB,CACNtC,QAAQC,IAAI,oCAAqCH,EAAK3L,KAIxD6M,EAAGb,KAAKe,iBAAiBiB,EACzB,OAAO,MAGDpD,GAAAnH,UAAAgJ,WAAP,SAAkBI,EAAIxI,EAAOyJ,GAE5B,GAAIM,GAAU/J,EAAMuH,MAAM,8DAC1B,IAAIqB,EACJ,IAAImB,EAAS,CACZ,IAAK1D,EAAA9I,QAAOuK,IAAIiC,EAAQ,IAAK,CAC5B,MAAO,OAER,GAAIC,IAAab,EAAE,EAAGC,EAAE,EAAGC,EAAE,EAAGC,EAAE,EAClC,IAAIT,IAAWC,IAAIiB,EAAQ,GAAK,EAAGjO,KAAKuK,EAAA9I,QAAOuK,IAAIiC,EAAQ,IAAIjO,KAAMqF,QAAQP,KAAKqI,gBAAgBc,EAAQ,IAAKE,OAAOD,EAASD,EAAQ,IAAKG,OAAOH,EAAQ,GAAK,EAChKvB,GAAGb,KAAKqB,mBAAmBH,EAAGC,IAC9BN,GAAGb,KAAKwC,UAAUtB,EAAGqB,OACrB1B,GAAGb,KAAKc,kBAAkBI,EAAG1H,QAC7BqH,GAAGb,KAAKc,kBAAkB,EAC1BD,GAAGb,KAAKc,kBAAkBI,EAAG/M,KAC7B0M,GAAGb,KAAKc,kBAAkBI,EAAGoB,OAC7BzB,GAAGb,KAAKc,kBAAkB,GAAK,OACzB,CACNG,EAAM5I,EAAMuH,MAAM,4CAClB,KAAKlB,EAAA9I,QAAOuK,IAAIc,EAAI,IAAK,CACxB,MAAO,OAER,GAAIC,IAAWC,IAAIF,EAAI,GAAK,EAAG9M,KAAKuK,EAAA9I,QAAOuK,IAAIc,EAAI,IAAI9M,KAAMqF,QAAQP,KAAKqI,gBAAgBL,EAAI,IAC9FJ,GAAGb,KAAKqB,mBAAmBH,EAAGC,IAC9BN,GAAGb,KAAKc,kBAAkB,EAC1BD,GAAGb,KAAKc,kBAAkBI,EAAG1H,QAC7BqH,GAAGb,KAAKc,kBAAkBI,EAAG/M,KAC7B0M,GAAGb,KAAKc,kBAAkB,EAC1BD,GAAGb,KAAKc,kBAAkB,EAC1BD,GAAGb,KAAKc,kBAAkB,GAG3B,MAAO,MAGDlC,GAAAnH,UAAAyH,UAAP,SAAiBuD,EAAU3K,GAE1B,IAAKA,EAAS,CACbA,EAAU,EAEX,GAAImB,KAAKtF,EAAE8O,IAAa9L,UAAW,CAClCsC,KAAKtF,EAAE8O,GAAY,GAAIhE,GAAA7I,QAAK6M,EAAU3K,EACtCmB,MAAK2H,WAAW3H,KAAKtF,EAAG8O,QAClB,IAAIxJ,KAAKtF,EAAE8O,GAAU3K,SAAWA,EAAS,CAC/C,KAAM,8BAAgC2K,EAEvCxJ,KAAK4F,IAAM5F,KAAKtF,EAAE8O,GAEpB,OAAA7D,KAEArE,QAAAC,eAAAnG,EAAA,cAAAoG,MAAA,MVygBApG,GAAQuB,QUzgBOgJ,IV2gBZ8D,kCAAkC,+CAA+CC,6BAA6B,0CAA0CC,+BAA+B,4CAA4CC,mCAAmC,kDAAkDC,yCAAyC,SAASvP,EAAQkB,EAAOJ,GAC5X,YW10BA,IAAA0O,GAAA,WAAA,QAAAA,MAIA,MAAAA,KAEAxI,QAAAC,eAAAnG,EAAA,cAAAoG,MAAA,MX20BApG,GAAQuB,QW30BOmN,OX60BTC,4CAA4C,SAASzP,EAAQkB,EAAOJ,GAC1E,YYp1BA,IAAA4O,GAAA,WAAA,QAAAA,MAMA,MAAAA,KAEA1I,QAAAC,eAAAnG,EAAA,cAAAoG,MAAA,MZm1BApG,GAAQuB,QYn1BOqN,OZq1BTC,gDAAgD,SAAS3P,EAAQkB,EAAOJ,GAC9E,Ya91BA,IAAA8O,GAAA5P,EAAuB,+BAEvB,IAAA6P,GAAA,WAsGC,QAAAA,MAvDA7I,OAAAC,eAAkB4I,EAAA,ObmzBXC,IanzBP,WAGC,IAAKD,EAAUE,KAAM,CAEpBF,EAAUE,KAAO,GAAIC,MACrBH,GAAUE,KAAK,OAAS,GAAIH,GAAAvN,QAAO,SAAU,SAAU,EAAG,OAAQ,EAAG,EAAM,KAAM,KAAM,KAAM,KAC7FwN,GAAUE,KAAK,OAAS,GAAIH,GAAAvN,QAAO,SAAU,SAAU,EAAG,SAAU,EAAG,EAAM,KAAM,KAAM,KAAM,KAC/FwN,GAAUE,KAAK,OAAS,GAAIH,GAAAvN,QAAO,SAAU,SAAU,EAAG,SAAU,EAAG,EAAM,KAAM,KAAM,KAAM,KAC/FwN,GAAUE,KAAK,OAAS,GAAIH,GAAAvN,QAAO,SAAU,SAAU,EAAG,SAAU,EAAG,EAAM,KAAM,KAAM,KAAM,KAC/FwN,GAAUE,KAAK,OAAS,GAAIH,GAAAvN,QAAO,SAAU,SAAU,EAAG,SAAU,EAAG,EAAM,KAAM,KAAM,KAAM,KAC/FwN,GAAUE,KAAK,OAAS,GAAIH,GAAAvN,QAAO,SAAU,SAAU,EAAG,OAAQ,EAAG,EAAM,KAAM,KAAM,KAAM,KAC7FwN,GAAUE,KAAK,OAAS,GAAIH,GAAAvN,QAAO,SAAU,SAAU,EAAG,SAAU,EAAG,EAAM,KAAM,KAAM,KAAM,KAC/FwN,GAAUE,KAAK,OAAS,GAAIH,GAAAvN,QAAO,SAAU,SAAU,EAAG,SAAU,EAAG,EAAM,KAAM,KAAM,KAAM,KAC/FwN,GAAUE,KAAK,OAAS,GAAIH,GAAAvN,QAAO,SAAU,SAAU,EAAG,OAAQ,EAAG,EAAM,KAAM,KAAM,KAAM,KAC7FwN,GAAUE,KAAK,OAAS,GAAIH,GAAAvN,QAAO,SAAU,SAAU,EAAG,OAAQ,EAAG,EAAM,KAAM,KAAM,KAAM,KAC7FwN,GAAUE,KAAK,OAAS,GAAIH,GAAAvN,QAAO,SAAU,SAAU,EAAG,OAAQ,EAAG,GAAM,KAAM,KAAM,KAAM,KAC7FwN,GAAUE,KAAK,OAAS,GAAIH,GAAAvN,QAAO,SAAU,SAAU,EAAG,SAAU,EAAG,GAAM,KAAM,KAAM,KAAM,KAC/FwN,GAAUE,KAAK,OAAS,GAAIH,GAAAvN,QAAO,SAAU,SAAU,EAAG,OAAQ,EAAG,GAAM,KAAM,KAAM,KAAM,KAC7FwN,GAAUE,KAAK,OAAS,GAAIH,GAAAvN,QAAO,SAAU,SAAU,EAAG,OAAQ,EAAG,GAAM,KAAM,KAAM,KAAM,KAC7FwN,GAAUE,KAAK,OAAS,GAAIH,GAAAvN,QAAO,SAAU,SAAU,EAAG,OAAQ,EAAG,GAAM,KAAM,KAAM,KAAM,KAC7FwN,GAAUE,KAAK,OAAS,GAAIH,GAAAvN,QAAO,SAAU,SAAU,EAAG,OAAQ,EAAG,GAAM,KAAM,KAAM,KAAM,KAC7FwN,GAAUE,KAAK,OAAS,GAAIH,GAAAvN,QAAO,SAAU,SAAU,EAAG,OAAQ,EAAG,GAAM,KAAM,KAAM,KAAM,KAC7FwN,GAAUE,KAAK,OAAS,GAAIH,GAAAvN,QAAO,SAAU,SAAU,EAAG,SAAU,EAAG,GAAM,KAAM,KAAM,KAAM,KAC/FwN,GAAUE,KAAK,OAAS,GAAIH,GAAAvN,QAAO,SAAU,SAAU,EAAG,SAAU,EAAG,GAAM,KAAM,KAAM,KAAM,KAC/FwN,GAAUE,KAAK,OAAS,GAAIH,GAAAvN,QAAO,SAAU,SAAU,EAAG,SAAU,EAAG,GAAM,KAAM,KAAM,KAAM,KAC/FwN,GAAUE,KAAK,OAAS,GAAIH,GAAAvN,QAAO,SAAU,SAAU,EAAG,OAAQ,EAAG,GAAM,KAAM,KAAM,KAAM,KAC7FwN,GAAUE,KAAK,OAAS,GAAIH,GAAAvN,QAAO,SAAU,SAAU,EAAG,OAAQ,EAAG,GAAM,KAAM,KAAM,KAAM,KAC7FwN,GAAUE,KAAK,OAAS,GAAIH,GAAAvN,QAAO,SAAU,SAAU,EAAG,OAAQ,EAAG,GAAM,KAAM,KAAM,KAAM,KAE7FwN,GAAUE,KAAK,OAAS,GAAIH,GAAAvN,QAAO,SAAU,SAAU,EAAG,UAAW,EAAG,GAAM,KAAM,KAAM,KAAM,KAChGwN,GAAUE,KAAK,OAAS,GAAIH,GAAAvN,QAAO,OAAQ,SAAU,EAAG,OAAQ,EAAG,GAAM,KAAM,KAAM,KAAM,KAC3FwN,GAAUE,KAAK,OAAS,GAAIH,GAAAvN,QAAO,SAAU,SAAU,EAAG,UAAW,EAAG,GAAM,KAAM,KAAM,KAAM,KAEhGwN,GAAUE,KAAK,OAAS,GAAIH,GAAAvN,QAAO,SAAU,SAAU,EAAG,SAAU,EAAG,GAAM,KAAM,KAAM,KAAM,KAC/FwN,GAAUE,KAAK,OAAS,GAAIH,GAAAvN,QAAO,SAAU,SAAU,EAAG,SAAU,EAAG,GAAM,KAAM,KAAM,KAAM,KAC/FwN,GAAUE,KAAK,OAAS,GAAIH,GAAAvN,QAAO,SAAU,SAAU,EAAG,SAAU,EAAG,GAAM,KAAM,KAAM,KAAM,KAEtFwN,GAAUE,KAAK,OAAS,GAAIH,GAAAvN,QAAO,SAAU,SAAU,EAAG,OAAQ,EAAG,GAAM,KAAM,KAAM,KAAM,KAC7FwN,GAAUE,KAAK,OAAS,GAAIH,GAAAvN,QAAO,SAAU,SAAU,EAAG,OAAQ,EAAG,GAAM,KAAM,KAAM,KAAM,KAEtGwN,GAAUE,KAAK,OAAS,GAAIH,GAAAvN,QAAO,SAAU,SAAU,EAAG,SAAU,EAAG,GAAM,KAAM,KAAM,KAAM,KAC/FwN,GAAUE,KAAK,OAAS,GAAIH,GAAAvN,QAAO,SAAU,SAAU,EAAG,SAAU,EAAG,GAAM,KAAM,KAAM,KAAM,KAC/FwN,GAAUE,KAAK,OAAS,GAAIH,GAAAvN,QAAO,SAAU,SAAU,EAAG,SAAU,EAAG,GAAM,KAAM,KAAM,KAAM,KAC/FwN,GAAUE,KAAK,OAAS,GAAIH,GAAAvN,QAAO,SAAU,SAAU,EAAG,SAAU,EAAG,GAAM,KAAM,KAAM,KAAM,KAC/FwN,GAAUE,KAAK,OAAS,GAAIH,GAAAvN,QAAO,SAAU,SAAU,EAAG,SAAU,EAAG,GAAM,KAAM,KAAM,KAAM,MAKhG,MAAOwN,GAAUE,Mb2yBXE,WAAY,KACZC,aAAc,MapyBtB,OAAAL,KAEA7I,QAAAC,eAAAnG,EAAA,cAAAoG,MAAA,MbuyBApG,GAAQuB,QavyBOwN,IbyyBZM,+BAA+B,8CAA8CC,6CAA6C,SAASpQ,EAAQkB,EAAOJ,GACrJ,Ycv5BA,IAAAuP,GAAArQ,EAAqB,8BACrB,IAAAsQ,GAAAtQ,EAAmB,2BAKnB,IAAAuQ,GAAA,WAQC,QAAAA,GAAYnL,EAAaoL,EAAgBC,EAAcC,EAAgBC,EAAc5L,EAAe6L,EAAgBC,EAAoBC,EAAkBC,GAEzJrL,KAAKlF,EAAI,GAAI8P,GAAAjO,OACbqD,MAAKE,EAAI,GAAI0K,GAAAjO,OACbqD,MAAK6E,MAAQ,GAAI8F,GAAAhO,OAEjBqD,MAAKN,KAAOA,CACZM,MAAKlF,EAAEyM,OAASuD,CAChB9K,MAAKlF,EAAEwQ,KAAOP,CACd/K,MAAKE,EAAEqH,OAASyD,CAChBhL,MAAKE,EAAEoL,KAAOL,CACdjL,MAAKX,OAASA,CACdW,MAAK6E,MAAMqG,OAASA,CACpBlL,MAAK6E,MAAMsG,WAAaA,CACxBnL,MAAK6E,MAAMuG,SAAWA,CACtBpL,MAAK6E,MAAMwG,OAASA,EAEtB,MAAAR,KAEAvJ,QAAAC,eAAAnG,EAAA,cAAAoG,MAAA,Md+4BApG,GAAQuB,Qc/4BOkO,Idi5BZU,2BAA2B,wCAAwCC,8BAA8B,6CAA6CC,2CAA2C,SAASnR,EAAQkB,EAAOJ,GACpN,Yen7BA,IAAAsQ,GAAApR,EAAyB,kCAEzB,IAAAqR,GAAA,WAMC,QAAAA,GAAY3E,EAAoBnI,GAApB,GAAAmI,QAAA,GAAkB,CAAlBA,EAAA,KAAoB,GAAAnI,QAAA,GAAqB,CAArBA,EAAA,KAJzBmB,KAAAgH,KAAc,EACdhH,MAAAnB,QAAiB,CAKvBmB,MAAKgH,KAAOA,CACZhH,MAAKnB,QAAUA,CACfmB,MAAK+G,KAAO,GAAI2E,GAAA/O,QAElB,MAAAgP,KAEArK,QAAAC,eAAAnG,EAAA,cAAAoG,MAAA,Mfk7BApG,GAAQuB,Qel7BOgP,Ifo7BZC,kCAAkClO,YAAYmO,6CAA6C,SAASvR,EAAQkB,EAAOJ,GACtH,YgBp8BA,IAAA0Q,GAAA,WAMC,QAAAA,GAAY5Q,EAAa+D,GAExBe,KAAK9E,KAAOA,CACZ8E,MAAKf,KAAOA,EAEd,MAAA6M,KAEA,IAAAC,GAAA,WAiEC,QAAAA,MA5CAzK,OAAAC,eAAkBwK,EAAA,OhB87BX3B,IgB97BP,WAGC,IAAK2B,EAAO1B,KAAM,CAEjB0B,EAAO1B,KAAO,GAAIC,MAClByB,GAAO1B,KAAK,MAAQ,GAAIyB,GAAI,EAAM,mBAClCC,GAAO1B,KAAK,MAAQ,GAAIyB,GAAI,EAAM,oBAClCC,GAAO1B,KAAK,MAAQ,GAAIyB,GAAI,EAAM,kBAClCC,GAAO1B,KAAK,MAAQ,GAAIyB,GAAI,EAAM,qBAClCC,GAAO1B,KAAK,MAAQ,GAAIyB,GAAI,EAAM,mBAClCC,GAAO1B,KAAK,MAAQ,GAAIyB,GAAI,EAAM,gBAClCC,GAAO1B,KAAK,MAAQ,GAAIyB,GAAI,EAAM,gBAClCC,GAAO1B,KAAK,MAAQ,GAAIyB,GAAI,EAAM,wBAClCC,GAAO1B,KAAK,MAAQ,GAAIyB,GAAI,EAAM,kBAClCC,GAAO1B,KAAK,MAAQ,GAAIyB,GAAI,EAAM,kBAClCC,GAAO1B,KAAK,KAAO,GAAIyB,GAAI,EAAM,UACjCC,GAAO1B,KAAK,MAAQ,GAAIyB,GAAI,EAAM,iBAClCC,GAAO1B,KAAK,MAAQ,GAAIyB,GAAI,EAAM,gBAClCC,GAAO1B,KAAK,MAAQ,GAAIyB,GAAI,EAAM,WAKnC,MAAOC,GAAO1B,MhB07BRE,WAAY,KACZC,aAAc,MgBp6BtB,OAAAuB,KAEAzK,QAAAC,eAAAnG,EAAA,cAAAoG,MAAA,MhBu6BApG,GAAQuB,QgBv6BOoP,OhBy6BTC,iDAAiD,SAAS1R,EAAQkB,EAAOJ,GAC/E,YiB9/BA,IAAA6Q,GAAA3R,EAAuB,gCAEvB,IAAA4R,GAAA,WAmHC,QAAAA,MA9GA5K,OAAAC,eAAkB2K,EAAA,OjB+jCX9B,IiB/jCP,WAGC,IAAK8B,EAAW7B,KAAM,CAErB6B,EAAW7B,KAAO,GAAIC,MACtB4B,GAAW7B,KAAK,QAAU,GAAI4B,GAAAtP,QAAQ,EAAG,GAAK,EAC9CuP,GAAW7B,KAAK,MAAQ,GAAI4B,GAAAtP,QAAQ,EAAG,GAAK,EAC5CuP,GAAW7B,KAAK,KAAO,GAAI4B,GAAAtP,QAAQ,EAAG,GAAK,EAC3CuP,GAAW7B,KAAK,cAAgB,GAAI4B,GAAAtP,QAAQ,EAAG,GAAK,EACpDuP,GAAW7B,KAAK,oBAAsB,GAAI4B,GAAAtP,QAAQ,EAAG,GAAK,EAC1DuP,GAAW7B,KAAK,QAAU,GAAI4B,GAAAtP,QAAQ,EAAG,GAAK,EAC9CuP,GAAW7B,KAAK,QAAU,GAAI4B,GAAAtP,QAAQ,EAAG,GAAK,EAG9CuP,GAAW7B,KAAK,MAAQ,GAAI4B,GAAAtP,QAAQ,GAAI,GAAK,EAC7CuP,GAAW7B,KAAK,QAAU,GAAI4B,GAAAtP,QAAQ,GAAI,GAAK,EAC/CuP,GAAW7B,KAAK,MAAQ,GAAI4B,GAAAtP,QAAQ,GAAI,GAAK,EAG7CuP,GAAW7B,KAAK,YAAc,GAAI4B,GAAAtP,QAAQ,GAAI,EAAG,EACjDuP,GAAW7B,KAAK,iBAAmB,GAAI4B,GAAAtP,QAAQ,GAAI,EAAG,EAGtDuP,GAAW7B,KAAK,SAAW,GAAI4B,GAAAtP,QAAQ,GAAI,GAAK,EAChDuP,GAAW7B,KAAK,UAAY,GAAI4B,GAAAtP,QAAQ,GAAI,GAAK,EACjDuP,GAAW7B,KAAK,QAAU,GAAI4B,GAAAtP,QAAQ,GAAI,GAAK,EAG/CuP,GAAW7B,KAAK,SAAW,GAAI4B,GAAAtP,QAAQ,GAAI,GAAK,EAChDuP,GAAW7B,KAAK,WAAa,GAAI4B,GAAAtP,QAAQ,GAAI,GAAK,EAClDuP,GAAW7B,KAAK,cAAgB,GAAI4B,GAAAtP,QAAQ,GAAI,GAAK,EACrDuP,GAAW7B,KAAK,aAAe,GAAI4B,GAAAtP,QAAQ,GAAI,GAAK,EAGpDuP,GAAW7B,KAAK,WAAa,GAAI4B,GAAAtP,QAAQ,GAAI,GAAK,EAClDuP,GAAW7B,KAAK,UAAY,GAAI4B,GAAAtP,QAAQ,GAAI,GAAK,GAIlD,MAAOuP,GAAW7B,MjBujCZE,WAAY,KACZC,aAAc,MiB/+BtB,OAAA0B,KAEA5K,QAAAC,eAAAnG,EAAA,cAAAoG,MAAA,MjBk/BApG,GAAQuB,QiBl/BOuP,IjBo/BZC,gCAAgC,+CAA+CC,8CAA8C,SAAS9R,EAAQkB,EAAOJ,GACxJ,YkB/mCA,IAAAiR,GAAA,WAMC,QAAAA,GAAYnD,EAAcrJ,EAAa2B,GAEtCxB,KAAKkJ,MAAQA,CACblJ,MAAKH,KAAOA,CACZG,MAAKwB,MAAQA,EAEf,MAAA6K,KAEA/K,QAAAC,eAAAnG,EAAA,cAAAoG,MAAA,MlB2mCApG,GAAQuB,QkB3mCO0P,OlB6mCTC,4BAA4B,SAAShS,EAAQkB,EAAOJ,GAC1D,YmB5nCA,IAAAmR,GAAAjS,EAA8C,sCAAtCc,GAAAuK,kBAAA4G,EAAA5P,OACR,IAAAgO,GAAArQ,EAAqC,0BAA7Bc,GAAA4O,MAAAW,EAAAhO,OACR,IAAAiO,GAAAtQ,EAAmC,uBAA3Bc,GAAA0O,GAAAc,EAAAjO,OACR,IAAAuN,GAAA5P,EAAsC,2BAA9Bc,GAAAyP,OAAAX,EAAAvN,OACR,IAAA4I,GAAAjL,EAAwC,8BAAhCc,GAAA+O,UAAA5E,EAAA5I,OACR,IAAA6I,GAAAlL,EAAoC,yBAA5Bc,GAAAuQ,KAAAnG,EAAA7I,OACR,IAAA8I,GAAAnL,EAAsC,2BAA9Bc,GAAA2Q,OAAAtG,EAAA9I,OACR,IAAAsP,GAAA3R,EAAuC,4BAA/Bc,GAAAiR,QAAAJ,EAAAtP,OACR,IAAA+I,GAAApL,EAAyC,+BAAjCc,GAAA8Q,WAAAxG,EAAA/I,OACR,IAAA6P,GAAAlS,EAA2C,wBAAnCc,GAAAmD,cAAAiO,EAAA7P,OACR,IAAA8P,GAAAnS,EAA0C,sBAAlCc,GAAA0G,YAAA2K,EAAA9P,OACR,IAAAwB,GAAA7D,EAA0C,sBAAlCc,GAAA6I,YAAA9F,EAAAxB,OACR,IAAAwI,GAAA7K,EAA0C,sBAAlCc,GAAA+I,YAAAgB,EAAAxI,OACR,IAAAyB,GAAA9D,EAAsC,iBAA9Bc,GAAAiJ,OAAAjG,EAAAzB,OACR,IAAA0B,GAAA/D,EAAuC,kBAA/Bc,GAAAoJ,QAAAnG,EAAA1B,OACR,IAAA4H,GAAAjK,EAAqC,gBAA7Bc,GAAAwJ,MAAAL,EAAA5H,OACR,IAAA2B,GAAAhE,EAAqC,gBAA7Bc,GAAAgK,MAAA9G,EAAA3B,UnBgpCL+P,wBAAwB,yCAAyCC,sBAAsB,uCAAuCC,sBAAsB,uCAAuCC,sBAAsB,uCAAuCC,iBAAiB,kCAAkCC,kBAAkB,mCAAmCC,gBAAgB,iCAAiCC,gBAAgB,iCAAiCC,sCAAsC,uDAAuDC,uBAAuB,wCAAwCC,0BAA0B,2CAA2CC,2BAA2B,4CAA4CC,8BAA8B,+CAA+CC,yBAAyB,0CAA0CC,2BAA2B,4CAA4CC,4BAA4B,6CAA6CC,+BAA+B,kDAAkDC,qDAAqD,SAASrT,EAAQkB,EAAOJ,GAC3qC,YACA,IAAIwS,GAAa5N,MAAQA,KAAK4N,WAAc,SAAUC,EAAG3N,GACrD,IAAK,GAAI4N,KAAK5N,GAAG,GAAIA,EAAE6N,eAAeD,GAAID,EAAEC,GAAK5N,EAAE4N,EACnD,SAASE,KAAOhO,KAAKiO,YAAcJ,EACnCA,EAAErP,UAAY0B,IAAM,KAAOoB,OAAO4M,OAAOhO,IAAM8N,EAAGxP,UAAY0B,EAAE1B,UAAW,GAAIwP,IoBnqCnF,IAAAG,GAAA7T,EAA+B,0CAU/B,IAAAoC,GAAA,SAAA0R,GAAkCR,EAAAlR,EAAA0R,EAcjC,SAAA1R,GAAY2R,EAAmCC,GAE9CF,EAAA/S,KAAA2E,KAAMqO,EAAkBC,EAExBtO,MAAKuO,OAASD,CAEdtO,MAAKwO,kBAAoBH,EAMnB3R,EAAA8B,UAAAiQ,QAAP,SAAeC,GAEdN,EAAA5P,UAAMiQ,QAAOpT,KAAA2E,KAAC0O,EAEd1O,MAAKwO,kBAAoB,IAEzB,IAAIxO,KAAK2O,aAAc,CACtB3O,KAAK2O,aAAaC,SAClB5O,MAAK2O,aAAe,KAGrB,GAAI3O,KAAK6O,cAAe,CACvB7O,KAAK6O,cAAcD,SACnB5O,MAAK6O,cAAgB,MAIhBnS,GAAA8B,UAAAsQ,SAAP,SAAgBC,EAAczD,EAAa0D,EAAmB1F,EAAe2F,GAAA,GAAAA,QAAA,GAAwB,CAAxBA,EAAA,MAE5EjP,KAAKuO,OAAOW,gBAAgBH,EAAO/O,KAAKmP,mBAAoB7D,EAAM0D,EAAY1F,EAAQ2F,GAGhFvS,GAAA8B,UAAA4Q,KAAP,SAAYC,EAAaC,EAAmBC,GAE3CvP,KAAKuO,OAAOiB,QAAQC,YAAYJ,EAAMrP,KAAK0P,kBAAmBJ,EAAYC,GAGpE7S,GAAA8B,UAAAkR,gBAAP,WAEC,IAAK1P,KAAK2O,aAAc,CACvB3O,KAAK2P,SAAW,IAChB3P,MAAK2O,aAAe3O,KAAKuO,OAAOiB,QAAQI,kBAAkB5P,KAAKwO,kBAAkBqB,MAAM7P,KAAKwO,kBAAkBsB,OAAO,GAGtH,GAAI9P,KAAK2P,SAAU,CAClB3P,KAAK2P,SAAW,KAChB3P,MAAK2O,aAAaoB,oBAAoB/P,KAAKwO,kBAAkBwB,OAAQ,EAAGhQ,KAAKwO,kBAAkBlT,QAGhG,MAAO0E,MAAK2O,aAGNjS,GAAA8B,UAAA2Q,iBAAP,WAEC,IAAKnP,KAAK6O,cAAe,CACxB7O,KAAK2P,SAAW,IAChB3P,MAAK6O,cAAgB7O,KAAKuO,OAAOiB,QAAQS,mBAAmBjQ,KAAKwO,kBAAkBqB,MAAO7P,KAAKwO,kBAAkBsB,QAGlH,GAAI9P,KAAK2P,SAAU,CAClB3P,KAAK2P,SAAW,KAChB3P,MAAK6O,cAAckB,oBAAoB/P,KAAKwO,kBAAkBwB,OAAQ,EAAGhQ,KAAKwO,kBAAkBqB,OAGjG,MAAO7P,MAAK6O,cAEd,OAAAnS,IAlFkCyR,EAAAxR,QAoFlC2E,QAAAC,eAAAnG,EAAA,cAAAoG,MAAA,MpBkoCApG,GAAQuB,QoBloCOD,IpBooCZwT,0CAA0CxS,YAAYyS,iCAAiC,SAAS7V,EAAQkB,EAAOJ,GAClH,YqBruCA,IAAAgV,GAAA9V,EAAgD,mCAAxCc,GAAAsB,oBAAA0T,EAAAzT,UrByuCL0T,mCAAmC,sDAAsDC,gDAAgD,SAAShW,EAAQkB,EAAOJ,GACpK,YsB1uCA,IAAAmV,GAAA,WAAA,QAAAA,MAEeA,EAAAC,kBAA2B,kBAC3BD,GAAAE,kBAA2B,kBAC3BF,GAAAG,IAAa,KACbH,GAAAI,4BAAqC,0BACrCJ,GAAAK,4BAAqC,0BACrCL,GAAAM,uBAAgC;AAChCN,EAAAO,uBAAgC,qBAChCP,GAAAQ,aAAsB,aACtBR,GAAAS,aAAsB,aACtBT,GAAAU,KAAc,MAC7B,OAAAV,KAEAjP,QAAAC,eAAAnG,EAAA,cAAAoG,MAAA,MtB6uCApG,GAAQuB,QsB7uCO4T,OtB+uCTW,8CAA8C,SAAS5W,EAAQkB,EAAOJ,GAC5E,YuB9vCA,IAAA+V,GAAA,WAAA,QAAAA,MAEQA,EAAAC,MAAe,CACfD,GAAAE,MAAe,CACfF,GAAAG,QAAiB,CACjBH,GAAAI,IAAaJ,EAAmBC,MAAQD,EAAmBE,MAAQF,EAAmBG,OAC9F,OAAAH,KAEA7P,QAAAC,eAAAnG,EAAA,cAAAoG,MAAA,MvBiwCApG,GAAQuB,QuBjwCOwU,OvBmwCTK,gDAAgD,SAASlX,EAAQkB,EAAOJ,GAC9E,YwB5wCA,IAAAqW,GAAA,WAAA,QAAAA,MAEeA,EAAAC,OAAgB,QAChBD,GAAAE,MAAe,OACfF,GAAAG,QAAiB,SACjBH,GAAAI,cAAuB,cACvBJ,GAAAK,KAAc,MACdL,GAAAM,WAAoB,WACpBN,GAAAO,MAAe,OACfP,GAAAQ,UAAmB,UAClC,OAAAR,KAEAnQ,QAAAC,eAAAnG,EAAA,cAAAoG,MAAA,MxB+wCApG,GAAQuB,QwB/wCO8U,OxBixCTS,6CAA6C,SAAS5X,EAAQkB,EAAOJ,GAC3E,YyB9xCA,IAAA+W,GAAA,WAAA,QAAAA,MAEeA,EAAAC,UAAmB,WACnBD,GAAAE,MAAe,OAC9B,OAAAF,KAEA7Q,QAAAC,eAAAnG,EAAA,cAAAoG,MAAA,MzBiyCApG,GAAQuB,QyBjyCOwV,OzBmyCTG,8CAA8C,SAAShY,EAAQkB,EAAOJ,GAC5E,Y0B1yCA,IAAAmX,GAAA,WAAA,QAAAA,MAEeA,EAAAC,UAAmB,WACnBD,GAAAE,WAAoB,YACpBF,GAAAG,QAAiB,SAChC,OAAAH,KAEAjR,QAAAC,eAAAnG,EAAA,cAAAoG,MAAA,M1B6yCApG,GAAQuB,Q0B7yCO4V,O1B+yCTI,4CAA4C,SAASrY,EAAQkB,EAAOJ,GAC1E,Y2BvzCA,IAAAwX,GAAA,WAAA,QAAAA,MAEeA,EAAAC,SAAkB,UAClBD,GAAAE,qBAA8B,qBAC9BF,GAAAG,kBAA2B,kBAC1C,OAAAH,KACAtR,QAAAC,eAAAnG,EAAA,cAAAoG,MAAA,M3B2zCApG,GAAQuB,Q2B3zCOiW,O3B6zCTI,gDAAgD,SAAS1Y,EAAQkB,EAAOJ,GAC9E,Y4Bp0CA,IAAA6X,GAAA,WAAA,QAAAA,MAEQA,EAAAC,SAAkB,CAClBD,GAAAE,QAAiB,CACjBF,GAAAG,OAAgB,CACxB,OAAAH,KAEA3R,QAAAC,eAAAnG,EAAA,cAAAoG,MAAA,M5Bu0CApG,GAAQuB,Q4Bv0COsW,O5By0CTI,kDAAkD,SAAS/Y,EAAQkB,EAAOJ,GAChF,Y6Bj1CA,IAAAkY,GAAA,WAAA,QAAAA,MAEeA,EAAAC,mBAA4B,mBAC5BD,GAAAE,eAAwB,eACxBF,GAAAG,mBAA4B,mBAC5BH,GAAAI,eAAwB,eACxBJ,GAAAK,OAAgB,QAChBL,GAAAM,KAAc,MACdN,GAAAO,IAAa,KACbP,GAAArC,KAAc,MAC7B,OAAAqC,KAEAhS,QAAAC,eAAAnG,EAAA,cAAAoG,MAAA,M7Bo1CApG,GAAQuB,Q6Bp1CO2W,O7Bs1CTQ,kDAAkD,SAASxZ,EAAQkB,EAAOJ,GAChF,Y8Bn2CA,IAAA2Y,GAAA,WAAA,QAAAA,MAEeA,EAAAC,OAAgB,QAChBD,GAAAE,QAAiB,SAChC,OAAAF,KAEAzS,QAAAC,eAAAnG,EAAA,cAAAoG,MAAA,M9Bs2CApG,GAAQuB,Q8Bt2COoX,O9Bw2CTG,kDAAkD,SAAS5Z,EAAQkB,EAAOJ,GAChF,Y+B/2CA,IAAA+Y,GAAA,WAAA,QAAAA,MAEQA,EAAAC,KAAc,MACdD,GAAAE,YAAqB,gBACrBF,GAAAG,WAAoB,cACpBH,GAAAI,WAAoB,YACpBJ,GAAAK,iBAA0B,iBAClC,OAAAL,KAEA7S,QAAAC,eAAAnG,EAAA,cAAAoG,MAAA,M/Bk3CApG,GAAQuB,Q+Bl3COwX,O/Bo3CTM,iDAAiD,SAASna,EAAQkB,EAAOJ,GAC/E,YgC93CA,IAAAsZ,GAAA,WAAA,QAAAA,MAEQA,EAAAC,KAAc,MACdD,GAAAE,MAAe,OACfF,GAAAG,eAAwB,cACxBH,GAAAI,KAAc,MACtB,OAAAJ,KAEApT,QAAAC,eAAAnG,EAAA,cAAAoG,MAAA,MhCi4CApG,GAAQuB,QgCj4CO+X,OhCm4CTK,uDAAuD,SAASza,EAAQkB,EAAOJ,GACrF,YiC54CA,IAAA4Z,GAAA,WAAA,QAAAA,MAEQA,EAAAC,QAAiB,CACjBD,GAAAE,QAAiB,CACjBF,GAAAG,QAAiB,CACjBH,GAAAI,QAAiB,CACjBJ,GAAAK,OAAgB,CAChBL,GAAAM,OAAgB,CAChBN,GAAAO,OAAgB,CAChBP,GAAAQ,OAAgB,CAChBR,GAAAS,gBAAyB,CACzBT,GAAAU,gBAAyB,CACzBV,GAAAW,gBAAyB,EACzBX,GAAAY,gBAAyB,EACzBZ,GAAAa,QAAiB,EACjBb,GAAAc,QAAiB,EACjBd,GAAAe,QAAiB,EACjBf,GAAAgB,QAAiB,EACjBhB,GAAAiB,iBAA0B,EAC1BjB,GAAAkB,iBAA0B,EAC1BlB,GAAAmB,iBAA0B,EAC1BnB,GAAAoB,iBAA0B,EAClC,OAAApB,KAEA1T,QAAAC,eAAAnG,EAAA,cAAAoG,MAAA,MjC+4CApG,GAAQuB,QiC/4COqY,OjCi5CTqB,6CAA6C,SAAS/b,EAAQkB,EAAOJ,GAC3E,YkC16CA,IAAAkb,GAAA,WAAA,QAAAA,MAEeA,EAAAC,MAAe,OACfD,GAAAE,OAAgB,QAC/B,OAAAF,KAEAhV,QAAAC,eAAAnG,EAAA,cAAAoG,MAAA,MlC66CApG,GAAQuB,QkC76CO2Z,OlC+6CTG,uCAAuC,SAASnc,EAAQkB,EAAOJ,GACrE,YmCt7CA,IAAAsb,GAAA,WAAA,QAAAA,MAEQA,EAAAC,KAAc,MACdD,GAAAE,MAAe,OACfF,GAAAG,MAAe,OACfH,GAAAI,OAAgB,QAChBJ,GAAAK,SAAkB,UAC1B,OAAAL,KAEApV,QAAAC,eAAAnG,EAAA,cAAAoG,MAAA,MnCy7CApG,GAAQuB,QmCz7CO+Z,OnC27CTM,2CAA2C,SAAS1c,EAAQkB,EAAOJ,GACzE,YoCr8CA,IAAAa,GAAA3B,EAAyC,sCACzC,IAAA2c,GAAA3c,EAA4C,gCAC5C,IAAA4c,GAAA5c,EAA0C,8BAC1C,IAAA6c,GAAA7c,EAAyC,6BACzC,IAAA8c,GAAA9c,EAA4C,gCAC5C,IAAA+c,GAAA/c,EAAyC,iCAEzC,IAAAgd,GAAAhd,EAA0C,mCAE1C,IAAAid,GAAAjd,EAAyC,qCACzC,IAAAkd,GAAAld,EAA4C,+BAE5C,IAAAmd,GAAAnd,EAA0C,6BAC1C,IAAAod,GAAApd,EAA4C,+BAE5C,IAAAqd,GAAArd,EAA4C,+BAG5C,IAAAsd,GAAAtd,EAAyC,gCAWzC,IAAAud,GAAAvd,EAAmD,8BACnD,IAAAwd,GAAAxd,EAAoD,+BACpD,IAAAyd,GAAAzd,EAA+C,0BAC/C,IAAA0d,GAAA1d,EAA+C,0BAE/C,IAAA2d,GAAA3d,EAAqD,+BAErD,IAAA4d,GAAA,WA4CI,QAAAA,GAAYC,GAtCJnY,KAAAoY,gBAA4B,GAAIf,GAAA1a,OAChCqD,MAAAqY,iBAA0B,GAC1BrY,MAAAsY,kBAA2B,GAI3BtY,MAAAuY,WACAvY,MAAAwY,aAAsBZ,EAAAjb,QAAsBgY,IAC5C3U,MAAAyY,aAAsBjB,EAAA7a,QAAqB+T,GAC3C1Q,MAAA0Y,kBAA2BlB,EAAA7a,QAAqBsU,IAChDjR,MAAA2Y,YAAsB,IACtB3Y,MAAA4Y,YAAsB,IACtB5Y,MAAA6Y,YAAsB,IACtB7Y,MAAA8Y,YAAsB,IACtB9Y,MAAA+Y,YAAsB,IACtB/Y,MAAAgZ,kBAA2BtB,EAAA/a,QAAqBmV,IAGhD9R,MAAAiZ,cAAyB,GAAIhC,GAAAta,OAC7BqD,MAAAkZ,mBAA4B,GAAIhC,GAAAva,OAEhCqD,MAAAmZ,SAAiB,GAAIhC,GAAAxa,OACrBqD,MAAAoZ,SAAiB,GAAIjC,GAAAxa,OACrBqD,MAAAqZ,OAAe,GAAIlC,GAAAxa,OAEpBqD,MAAAsZ,iBACAtZ,MAAAuZ,YACAvZ,MAAAwZ,iBACAxZ,MAAAyZ,uBACAzZ,MAAA0Z,uBAEA1Z,MAAA2Z,qBACA3Z,MAAA4Z,mBAIC5Z,MAAA6Z,WAAoB,CAGxB7Z,MAAK8Z,QAAU3B,CAEfnY,MAAK+Z,iBAAmB,GAAI9d,GAAAU,QAAcqD,KAAKqY,iBAAkBrY,KAAKsY,kBAAmB,MAAO,EAAG,MACnGtY,MAAKga,aAAe,GAAI/d,GAAAU,QAAcqD,KAAKqY,iBAAkBrY,KAAKsY,kBAAmB,KAAM,EAAG,MAE9F,IAAI2B,UAAYA,SAASjY,KAAM,CAC3BiY,SAASjY,KAAKkY,YAAYla,KAAKga,aAAaG,cAIpD7Y,OAAAC,eAAW2W,EAAA1Z,UAAA,epCk6CP4L,IoCl6CJ,WACI,MAAOpK,MAAKga,cpCo6CZzP,WAAY,KACZC,aAAc,MoCl6ClBlJ,QAAAC,eAAW2W,EAAA1Z,UAAA,apCq6CP4L,IoCr6CJ,WACI,MAAOpK,MAAK8Z,SpCu6CZvP,WAAY,KACZC,aAAc,MoCr6CX0N,GAAA1Z,UAAA4b,MAAP,SAAaC,EAAgBC,EAAkBC,EAAiBC,EAAkBC,EAAkBC,EAAoB7a,GAA3G,GAAAwa,QAAA,GAAc,CAAdA,EAAA,EAAgB,GAAAC,QAAA,GAAgB,CAAhBA,EAAA,EAAkB,GAAAC,QAAA,GAAe,CAAfA,EAAA,EAAiB,GAAAC,QAAA,GAAgB,CAAhBA,EAAA,EAAkB,GAAAC,QAAA,GAAgB,CAAhBA,EAAA,EAAkB,GAAAC,QAAA,GAAkB,CAAlBA,EAAA,EAAoB,GAAA7a,QAAA,GAAoC,CAApCA,EAAc4X,EAAA9a,QAAmB4U,IACrJ3K,QAAQC,IAAI,UAAYwT,EAAM,KAAOC,EAAQ,KAAOC,EAAO,YAAcC,EACzE,IAAI3a,EAAO4X,EAAA9a,QAAmByU,MAAO,CACjCpR,KAAK+Z,iBAAiBY,SAAS3a,KAAKoY,gBAAiBd,EAAA3a,QAAWie,cAAcJ,EAAQ,IAAMH,EAAM,IAAMC,EAAQ,IAAMC,EAAO,MAKjI,GAAI1a,EAAO4X,EAAA9a,QAAmB0U,MAAO,CACjCrR,KAAKuY,SAASjd,OAAS,CACvB,IAAIuf,GAAa7a,KAAKqY,iBAAmBrY,KAAKsY,iBAC9C,KAAK,GAAIvd,GAAW,EAAGA,EAAI8f,EAAK9f,IAAK,CACjCiF,KAAKuY,SAASxd,GAAK,MAKxBmd,GAAA1Z,UAAAsc,oBAAP,SAA2BC,EAAcC,EAAeC,EAAkBC,GACtEtU,QAAQC,IAAI,kCAAoCoU,EAEhDjb,MAAK6Z,WAAaoB,CAElB,IAAIjb,KAAK6Z,WAAa,GAAK,EAAG,CAC1B7Z,KAAK6Z,WAAasB,KAAKC,MAAMpb,KAAK6Z,WAAa,IAGnD,GAAI7Z,KAAK6Z,YAAc,EAAG,CACtB7Z,KAAK6Z,WAAa,EAGtB7Z,KAAKga,aAAaqB,SAASN,EAAOC,EAElChb,MAAKqY,iBAAmB0C,EAAQ/a,KAAK6Z,UACrC7Z,MAAKsY,kBAAoB0C,EAAShb,KAAK6Z,UAEvC7Z,MAAKoY,gBAAgB2C,MAAQ/a,KAAKqY,gBAClCrY,MAAKoY,gBAAgB4C,OAAShb,KAAKsY,iBAEnCtY,MAAK+Z,iBAAiBsB,SAASrb,KAAKqY,iBAAkBrY,KAAKsY,kBAE3D,IAAIgD,GAAmBtb,KAAKiZ,cAAcsC,OAE1CD,GAAI,GAAMtb,KAAqB,iBAAK,CACpCsb,GAAI,GAAK,CACTA,GAAI,GAAK,CACTA,GAAI,GAAMtb,KAAqB,iBAAK,CAEpCsb,GAAI,GAAK,CACTA,GAAI,IAAOtb,KAAsB,kBAAK,CACtCsb,GAAI,GAAK,CACTA,GAAI,GAAMtb,KAAsB,kBAAK,CAErCsb,GAAI,GAAK,CACTA,GAAI,GAAK,CACTA,GAAI,IAAM,CACVA,GAAI,IAAM,CAEVA,GAAI,IAAM,CACVA,GAAI,IAAM,CACVA,GAAI,IAAM,CACVA,GAAI,IAAM,CAEVtb,MAAKiZ,cAAcuC,WAEnBxb,MAAKkZ,mBAAqB,GAAIhC,GAAAva,OAC9BqD,MAAKkZ,mBAAmBuC,MAAM,EAAIzb,KAAK6Z,WAAY,EAAI7Z,KAAK6Z,YAGzD3B,GAAA1Z,UAAAkd,kBAAP,SAAyBpQ,EAAa/D,EAAeoU,EAAoCC,GAErF,MAAOle,WAGJwa,GAAA1Z,UAAAoR,kBAAP,SAAyBL,GACrB,MAAO,IAAIsI,GAAAlb,QAAoB4S,GAG5B2I,GAAA1Z,UAAAqd,cAAP,WACI,MAAO,IAAI7D,GAAArb,QAGRub,GAAA1Z,UAAAsd,cAAP,SAAqBf,EAAcC,EAAezT,EAAeoU,EAAoCC,GACjG,MAAO,IAAI7D,GAAApb,QAAgBoe,EAAOC,GAG/B9C,GAAA1Z,UAAAyR,mBAAP,SAA0B8L,EAAoBC,GAC1C,MAAO,IAAIlE,GAAAnb,QAAqBof,EAAaC,GAG1C9D,GAAA1Z,UAAAoQ,QAAP,YAGOsJ,GAAA1Z,UAAAyd,gBAAP,SAAuBC,EAAqBC,GACxCvV,QAAQC,IAAI,iCAAmCqV,EAAe,uBAAyBC,EACvFnc,MAAKyY,aAAeyD,CACpBlc,MAAK0Y,kBAAoByD,EAGtBjE,GAAA1Z,UAAA4d,aAAP,SAAoB/B,EAAaC,EAAeC,EAAcC,GAC1Dxa,KAAK2Y,YAAc0B,CACnBra,MAAK4Y,YAAc0B,CACnBta,MAAK6Y,YAAc0B,CACnBva,MAAK8Y,YAAc0B,EAGhBtC,GAAA1Z,UAAA6d,kBAAP,SAAyBC,EAAqBC,EAAoBC,EAAyBC,EAA0BC,EAAqCC,IAInJzE,GAAA1Z,UAAAoe,yBAAP,SAAgCC,EAAuBC,EAAiBC,IAIjE7E,GAAA1Z,UAAAwe,WAAP,SAAkBC,EAA2BN,GAEzC3c,KAAKwY,aAAeyE,EAGjB/E,GAAA1Z,UAAA0e,aAAP,SAAoBC,EAAmBC,GACnCxW,QAAQC,IAAI,iBAAmBsW,EAAY,MAAQC,EACnDpd,MAAK+Y,YAAcoE,CACnBnd,MAAKgZ,kBAAoBoE,EAGtBlF,GAAA1Z,UAAA6e,WAAP,SAAkBC,GACdtd,KAAKud,SAAWD,EAGbpF,GAAA1Z,UAAAgf,8BAAP,SAAqCC,EAAoBC,EAAsBrS,EAAiBsS,GAC5F/W,QAAQC,IAAI,6CAA+C4W,EAAc,mBAAqBC,EAAgB,YAAcrS,EAAS,sBAAwBsS,EAE7J,IAAI9P,GAAiBxC,EAAOkQ,OAC5B,IAAIoC,EAAkB,CAClB,GAAIrC,GAAmB/D,EAAA5a,QAAcihB,kBACrCtC,GAAI,GAAKzN,EAAE,EACXyN,GAAI,GAAKzN,EAAE,EACXyN,GAAI,GAAKzN,EAAE,EACXyN,GAAI,GAAKzN,EAAE,GACXyN,GAAI,GAAKzN,EAAE,EACXyN,GAAI,GAAKzN,EAAE,EACXyN,GAAI,GAAKzN,EAAE,EACXyN,GAAI,GAAKzN,EAAE,GACXyN,GAAI,GAAKzN,EAAE,EACXyN,GAAI,GAAKzN,EAAE,EACXyN,GAAI,IAAMzN,EAAE,GACZyN,GAAI,IAAMzN,EAAE,GACZyN,GAAI,IAAMzN,EAAE,EACZyN,GAAI,IAAMzN,EAAE,EACZyN,GAAI,IAAMzN,EAAE,GACZyN,GAAI,IAAMzN,EAAE,GAEZ7N,MAAK6d,6BAA6BJ,EAAaC,EAAepC,EAAK,OAChE,CACHtb,KAAK6d,6BAA6BJ,EAAaC,EAAe7P,EAAG,IAIlEqK,GAAA1Z,UAAAqf,6BAAP,SAAoCJ,EAAoBC,EAAsB3W,EAAmB+W,GAC7FlX,QAAQC,IAAI,4CAA8C4W,EAAc,mBAAqBC,EAAgB,UAAY3W,EAAO,kBAAoB+W,EACpJ,IAAIC,EACJ,IAAIN,GAAe9F,EAAAhb,QAAqByW,OAAQ,CAC5C2K,EAAS/d,KAAK4Z,qBACX,IAAI6D,GAAe9F,EAAAhb,QAAqBuW,SAAU,CACrD6K,EAAS/d,KAAK2Z,mBAGlB,GAAIqE,GAAW,CACf,KAAK,GAAIjjB,GAAW2iB,EAAe3iB,EAAI2iB,EAAgBI,EAAc/iB,IAAK,CACtEgjB,EAAOhjB,GAAK,GAAIqc,GAAAza,QAASoK,EAAKiX,KAAMjX,EAAKiX,KAAMjX,EAAKiX,KAAMjX,EAAKiX,OAIhE9F,GAAA1Z,UAAAyf,aAAP,SAAoBC,EAAgBC,GAChCvX,QAAQC,IAAI,wBAA0BqX,EAAU,aAAeC,EAC/Dne,MAAKuZ,UAAU2E,GAAWC,EAGvBjG,GAAA1Z,UAAA4f,kBAAP,SAAyBrP,EAAciB,EAA6BqO,EAAqB9W,GACrFX,QAAQC,IAAI,4BAA8BkI,EAAQ,YAAciB,EAAS,kBAAoBqO,EAAe,YAAc9W,EAC1HvH,MAAKwZ,eAAezK,GAASiB,CAC7BhQ,MAAKyZ,qBAAqB1K,GAASsP,CACnCre,MAAK0Z,qBAAqB3K,GAASxH,EAGhC2Q,GAAA1Z,UAAA8f,QAAP,WACI1X,QAAQC,IAAI,YACZ7G,MAAKga,aAAaW,SAAS3a,KAAKga,aAAauE,KAAMjH,EAAA3a,QAAWie,cAAc,EAAG,EAAG,EAAG,GACrF5a,MAAKga,aAAa5K,KAAKpP,KAAK+Z,iBAAkB/Z,KAAKkZ,oBAGhDhB,GAAA1Z,UAAAggB,oBAAP,SAA2BC,IAGpBvG,GAAA1Z,UAAAiR,YAAP,SAAmBJ,EAAaqP,EAAiCpP,EAAmBC,GAChF3I,QAAQC,IAAI,qBAAuBwI,EAAO,gBAAkBC,EAAa,gBAAkBC,EAE3F,KAAKvP,KAAKud,SAAU,CAChB,OAGJvd,KAAK+Z,iBAAiB4E,MAEtB,IAAIC,EACJ,IAAIC,EACJ,IAAIC,EAEJ,IAAIC,EACJ,IAAIC,EACJ,IAAIC,EAEJ,IAAIjf,KAAKwY,cAAgBZ,EAAAjb,QAAsBgY,KAAM,CACjD,IAAK,GAAI5Z,GAAWuU,EAAYvU,EAAIwU,EAAYxU,GAAK,EAAG,CACpD6jB,EAASF,EAAY3X,KAAK2X,EAAYQ,YAAcnkB,EACpD8jB,GAASH,EAAY3X,KAAK2X,EAAYQ,YAAcnkB,EAAI,EACxD+jB,GAASJ,EAAY3X,KAAK2X,EAAYQ,YAAcnkB,EAAI,EAExDgkB,GAAM/e,KAAKud,SAAS4B,OAAOnf,KAAM4e,EACjCI,GAAMhf,KAAKud,SAAS4B,OAAOnf,KAAM6e,EACjCI,GAAMjf,KAAKud,SAAS4B,OAAOnf,KAAM8e,EAEjC9e,MAAKof,SAASL,EAAKC,EAAKC,QAEzB,IAAIjf,KAAKwY,cAAgBZ,EAAAjb,QAAsBiY,MAAO,CACzD,IAAK,GAAI7Z,GAAWuU,EAAYvU,EAAIwU,EAAYxU,GAAK,EAAG,CACpD6jB,EAASF,EAAY3X,KAAK2X,EAAYQ,YAAcnkB,EAAI,EACxD8jB,GAASH,EAAY3X,KAAK2X,EAAYQ,YAAcnkB,EAAI,EACxD+jB,GAASJ,EAAY3X,KAAK2X,EAAYQ,YAAcnkB,EAAI,EAExDgkB,GAAM/e,KAAKud,SAAS4B,OAAOnf,KAAM4e,EACjCI,GAAMhf,KAAKud,SAAS4B,OAAOnf,KAAM6e,EACjCI,GAAMjf,KAAKud,SAAS4B,OAAOnf,KAAM8e,EAEjC9e,MAAKof,SAASL,EAAKC,EAAKC,QAEzB,IAAIjf,KAAKwY,cAAgBZ,EAAAjb,QAAsBkY,gBAAkB7U,KAAKwY,cAAgBZ,EAAAjb,QAAsBmY,KAAM,CACrH,IAAK,GAAI/Z,GAAWuU,EAAYvU,EAAIwU,EAAYxU,GAAK,EAAG,CACpD6jB,EAASF,EAAY3X,KAAK2X,EAAYQ,YAAcnkB,EAAI,EACxD8jB,GAASH,EAAY3X,KAAK2X,EAAYQ,YAAcnkB,EAAI,EACxD+jB,GAASJ,EAAY3X,KAAK2X,EAAYQ,YAAcnkB,EAAI,EAExDgkB,GAAM/e,KAAKud,SAAS4B,OAAOnf,KAAM4e,EACjCI,GAAMhf,KAAKud,SAAS4B,OAAOnf,KAAM6e,EACjCI,GAAMjf,KAAKud,SAAS4B,OAAOnf,KAAM8e,EAEjC9e,MAAKof,SAASL,EAAKC,EAAKC,EAExBL,GAASF,EAAY3X,KAAK2X,EAAYQ,YAAcnkB,EACpD8jB,GAASH,EAAY3X,KAAK2X,EAAYQ,YAAcnkB,EAAI,EACxD+jB,GAASJ,EAAY3X,KAAK2X,EAAYQ,YAAcnkB,EAAI,EAExDgkB,GAAM/e,KAAKud,SAAS4B,OAAOnf,KAAM4e,EACjCI,GAAMhf,KAAKud,SAAS4B,OAAOnf,KAAM6e,EACjCI,GAAMjf,KAAKud,SAAS4B,OAAOnf,KAAM8e,EACjC9e,MAAKof,SAASL,EAAKC,EAAKC,IAOhCjf,KAAK+Z,iBAAiBsF,SAGnBnH,GAAA1Z,UAAA8gB,aAAP,SAAoBjQ,EAAakQ,EAAoBxD,IAI9C7D,GAAA1Z,UAAAghB,oBAAP,SAA2BC,IAIpBvH,GAAA1Z,UAAAkhB,kBAAP,SAAyBxB,EAAgBrd,EAAaE,EAAe4e,GAEjE,GAAIC,GAA6B5f,KAAKsZ,eAAe4E,EACrD,KAAK0B,EAAO,CACRA,EAAQ5f,KAAKsZ,eAAe4E,GAAW,GAAIjG,GAAAtb,QAE/CijB,EAAM/e,KAAOA,CACb+e,GAAM7e,OAASA,CACf6e,GAAMD,UAAYA,EAGfzH,GAAA1Z,UAAAqhB,mBAAP,SAA0B9B,EAAqB7C,EAA+BD,EAAkB6E,IAIzF5H,GAAA1Z,UAAAuhB,sBAAP,YAIO7H,GAAA1Z,UAAAwhB,SAAP,SAAgBzX,EAAUC,EAAUyX,GAChC,GAAIvgB,GAAgB4X,EAAA3a,QAAWujB,mBAAmBlgB,KAAK+Z,iBAAiBoG,WAAW5X,EAAGC,GACtF9I,GAAK,IAAM,GACXA,GAAK,IAAM,GACXA,GAAK,IAAM,GACXA,GAAK,IAAM,GAEX,IAAIoG,GAAkBwR,EAAA3a,QAAWujB,mBAAmBD,EACpDna,GAAO,IAAM,GACbA,GAAO,IAAM,GACbA,GAAO,IAAM,GACbA,GAAO,IAAM,GAEb,IAAIsa,GAAwBpgB,KAAKqgB,eAAe3gB,EAAMM,KAAK0Y,kBAAmBhZ,EAAMoG,EACpF,IAAIwa,GAA0BtgB,KAAKqgB,eAAeva,EAAQ9F,KAAKyY,aAAc/Y,EAAMoG,EAEnF,IAAIhL,GAAWslB,EAAa,GAAKE,EAAe,EAChD,IAAI5lB,GAAW0lB,EAAa,GAAKE,EAAe,EAChD,IAAIC,GAAWH,EAAa,GAAKE,EAAe,EAChD,IAAIpgB,GAAWkgB,EAAa,GAAKE,EAAe,EAEhDxlB,GAAIqgB,KAAKqF,IAAI,EAAGrF,KAAKsF,IAAI3lB,EAAG,GAC5BJ,GAAIygB,KAAKqF,IAAI,EAAGrF,KAAKsF,IAAI/lB,EAAG,GAC5B6lB,GAAIpF,KAAKqF,IAAI,EAAGrF,KAAKsF,IAAIF,EAAG,GAC5BrgB,GAAIib,KAAKqF,IAAI,EAAGrF,KAAKsF,IAAIvgB,EAAG,GAO5BF,MAAK+Z,iBAAiB2G,WAAWnY,EAAGC,EAAG8O,EAAA3a,QAAWie,cAAc9f,EAAI,IAAKJ,EAAI,IAAK6lB,EAAI,IAAKrgB,EAAI,MAG3FgY,GAAA1Z,UAAA6hB,eAAR,SAAuBM,EAAeC,EAAclhB,EAAeoG,GAC/D,GAAI+a,KAEJA,GAAO,GAAKF,EAAK,EACjBE,GAAO,GAAKF,EAAK,EACjBE,GAAO,GAAKF,EAAK,EACjBE,GAAO,GAAKF,EAAK,EAEjB,IAAIC,GAASpJ,EAAA7a,QAAqB6T,kBAAmB,CACjDqQ,EAAO,IAAMnhB,EAAK,EAClBmhB,GAAO,IAAMnhB,EAAK,EAClBmhB,GAAO,IAAMnhB,EAAK,EAClBmhB,GAAO,IAAMnhB,EAAK,OACf,IAAIkhB,GAASpJ,EAAA7a,QAAqB8T,kBAAmB,CACxDoQ,EAAO,IAAMnhB,EAAK,EAClBmhB,GAAO,IAAMnhB,EAAK,EAClBmhB,GAAO,IAAMnhB,EAAK,EAClBmhB,GAAO,IAAMnhB,EAAK,OACf,IAAIkhB,GAASpJ,EAAA7a,QAAqBsU,KAAM,CAC3C4P,EAAO,GAAK,CACZA,GAAO,GAAK,CACZA,GAAO,GAAK,CACZA,GAAO,GAAK,MACT,IAAID,GAASpJ,EAAA7a,QAAqBgU,4BAA6B,CAClEkQ,EAAO,IAAM,EAAInhB,EAAK,EACtBmhB,GAAO,IAAM,EAAInhB,EAAK,EACtBmhB,GAAO,IAAM,EAAInhB,EAAK,EACtBmhB,GAAO,IAAM,EAAInhB,EAAK,OACnB,IAAIkhB,GAASpJ,EAAA7a,QAAqBiU,4BAA6B,CAClEiQ,EAAO,IAAM,EAAInhB,EAAK,EACtBmhB,GAAO,IAAM,EAAInhB,EAAK,EACtBmhB,GAAO,IAAM,EAAInhB,EAAK,EACtBmhB,GAAO,IAAM,EAAInhB,EAAK,OACnB,IAAIkhB,GAASpJ,EAAA7a,QAAqBkU,uBAAwB,CAC7DgQ,EAAO,IAAM,EAAI/a,EAAO,EACxB+a,GAAO,IAAM,EAAI/a,EAAO,EACxB+a,GAAO,IAAM,EAAI/a,EAAO,EACxB+a,GAAO,IAAM,EAAI/a,EAAO,OACrB,IAAI8a,GAASpJ,EAAA7a,QAAqBmU,uBAAwB,CAC7D+P,EAAO,IAAM,EAAI/a,EAAO,EACxB+a,GAAO,IAAM,EAAI/a,EAAO,EACxB+a,GAAO,IAAM,EAAI/a,EAAO,EACxB+a,GAAO,IAAM,EAAI/a,EAAO,OACrB,IAAI8a,GAASpJ,EAAA7a,QAAqBoU,aAAc,CACnD8P,EAAO,IAAM/a,EAAO,EACpB+a,GAAO,IAAM/a,EAAO,EACpB+a,GAAO,IAAM/a,EAAO,EACpB+a,GAAO,IAAM/a,EAAO,OACjB,IAAI8a,GAASpJ,EAAA7a,QAAqBqU,aAAc,CACnD6P,EAAO,IAAM/a,EAAO,EACpB+a,GAAO,IAAM/a,EAAO,EACpB+a,GAAO,IAAM/a,EAAO,EACpB+a,GAAO,IAAM/a,EAAO,GAGxB,MAAO+a,GAGJ3I,GAAA1Z,UAAAsiB,MAAP,SAAatf,EAAcif,EAAgBD,GAAhB,GAAAC,QAAA,GAAc,CAAdA,EAAA,EAAgB,GAAAD,QAAA,GAAc,CAAdA,EAAA,EACvC,MAAOrF,MAAKqF,IAAIC,EAAKtF,KAAKsF,IAAIjf,EAAOgf,IAGlCtI,GAAA1Z,UAAAuiB,YAAP,SAAmBN,EAAYD,EAAYQ,GACvC,MAAOP,IAAOD,EAAMC,GAAOzgB,KAAK8gB,MAAME,GAGnC9I,GAAA1Z,UAAA4gB,SAAP,SAAgBL,EAAuBC,EAAuBC,GAC1D,GAAIgC,GAAclC,EAAImC,eAAe,EACrC,KAAKD,GAAMA,EAAGvY,GAAK,GAAKyY,MAAMF,EAAGvY,GAAI,CACjC9B,QAAQwa,MAAM,iBACd,QAEJ,GAAIC,GAAcrC,EAAIkC,eAAe,EACrC,IAAII,GAAcrC,EAAIiC,eAAe,EAErCD,GAAGxY,EAAIwY,EAAGxY,EAAI,EAAIwY,EAAGvY,CACrB2Y,GAAG5Y,EAAI4Y,EAAG5Y,EAAI,EAAI4Y,EAAG3Y,CACrB4Y,GAAG7Y,EAAI6Y,EAAG7Y,EAAI,EAAI6Y,EAAG5Y,CAErBuY,GAAGM,QAAQ,EAAIN,EAAGvY,EAClB2Y,GAAGE,QAAQ,EAAIF,EAAG3Y,EAClB4Y,GAAGC,QAAQ,EAAID,EAAG5Y,EAElB,IAAI8Y,GAAmB,GAAIpK,GAAAza,QAASskB,EAAGvY,EAAG2Y,EAAG3Y,EAAG4Y,EAAG5Y,EACnDuY,GAAKjhB,KAAKiZ,cAAcwI,gBAAgBR,EACxCI,GAAKrhB,KAAKiZ,cAAcwI,gBAAgBJ,EACxCC,GAAKthB,KAAKiZ,cAAcwI,gBAAgBH,EACxC,IAAI7G,GAAiB,GAAIrD,GAAAza,QAASskB,EAAGxY,EAAG4Y,EAAG5Y,EAAG6Y,EAAG7Y,EAEjDzI,MAAKmZ,SAAS5Q,EAAI,GAClBvI,MAAKmZ,SAAS3Q,EAAI,GAClBxI,MAAKoZ,SAAS7Q,GAAK,GACnBvI,MAAKoZ,SAAS5Q,GAAK,GAEnBxI,MAAKqZ,OAAO9Q,EAAIvI,KAAKqY,iBAAmB,CACxCrY,MAAKqZ,OAAO7Q,EAAIxI,KAAKsY,kBAAoB,CAEzCtY,MAAKmZ,SAAS5Q,EAAI4S,KAAKqF,IAAI,EAAGrF,KAAKsF,IAAIzgB,KAAKmZ,SAAS5Q,EAAG0Y,EAAG1Y,GAC3DvI,MAAKmZ,SAAS3Q,EAAI2S,KAAKqF,IAAI,EAAGrF,KAAKsF,IAAIzgB,KAAKmZ,SAAS3Q,EAAGyY,EAAGzY,GAE3DxI,MAAKmZ,SAAS5Q,EAAI4S,KAAKqF,IAAI,EAAGrF,KAAKsF,IAAIzgB,KAAKmZ,SAAS5Q,EAAG8Y,EAAG9Y,GAC3DvI,MAAKmZ,SAAS3Q,EAAI2S,KAAKqF,IAAI,EAAGrF,KAAKsF,IAAIzgB,KAAKmZ,SAAS3Q,EAAG6Y,EAAG7Y,GAE3DxI,MAAKmZ,SAAS5Q,EAAI4S,KAAKqF,IAAI,EAAGrF,KAAKsF,IAAIzgB,KAAKmZ,SAAS5Q,EAAG+Y,EAAG/Y,GAC3DvI,MAAKmZ,SAAS3Q,EAAI2S,KAAKqF,IAAI,EAAGrF,KAAKsF,IAAIzgB,KAAKmZ,SAAS3Q,EAAG8Y,EAAG9Y,GAE3DxI,MAAKoZ,SAAS7Q,EAAI4S,KAAKsF,IAAIzgB,KAAKqZ,OAAO9Q,EAAG4S,KAAKqF,IAAIxgB,KAAKoZ,SAAS7Q,EAAG0Y,EAAG1Y,GACvEvI,MAAKoZ,SAAS5Q,EAAI2S,KAAKsF,IAAIzgB,KAAKqZ,OAAO7Q,EAAG2S,KAAKqF,IAAIxgB,KAAKoZ,SAAS5Q,EAAGyY,EAAGzY,GAEvExI,MAAKoZ,SAAS7Q,EAAI4S,KAAKsF,IAAIzgB,KAAKqZ,OAAO9Q,EAAG4S,KAAKqF,IAAIxgB,KAAKoZ,SAAS7Q,EAAG8Y,EAAG9Y,GACvEvI,MAAKoZ,SAAS5Q,EAAI2S,KAAKsF,IAAIzgB,KAAKqZ,OAAO7Q,EAAG2S,KAAKqF,IAAIxgB,KAAKoZ,SAAS5Q,EAAG6Y,EAAG7Y,GAEvExI,MAAKoZ,SAAS7Q,EAAI4S,KAAKsF,IAAIzgB,KAAKqZ,OAAO9Q,EAAG4S,KAAKqF,IAAIxgB,KAAKoZ,SAAS7Q,EAAG+Y,EAAG/Y,GACvEvI,MAAKoZ,SAAS5Q,EAAI2S,KAAKsF,IAAIzgB,KAAKqZ,OAAO7Q,EAAG2S,KAAKqF,IAAIxgB,KAAKoZ,SAAS5Q,EAAG8Y,EAAG9Y,GAEvExI,MAAKmZ,SAAS5Q,EAAI4S,KAAKC,MAAMpb,KAAKmZ,SAAS5Q,EAC3CvI,MAAKmZ,SAAS3Q,EAAI2S,KAAKC,MAAMpb,KAAKmZ,SAAS3Q,EAC3CxI,MAAKoZ,SAAS7Q,EAAI4S,KAAKC,MAAMpb,KAAKoZ,SAAS7Q,EAC3CvI,MAAKoZ,SAAS5Q,EAAI2S,KAAKC,MAAMpb,KAAKoZ,SAAS5Q,EAE3C,KAAK,GAAID,GAAWvI,KAAKmZ,SAAS5Q,EAAGA,GAAKvI,KAAKoZ,SAAS7Q,EAAGA,IAAK,CAC5D,IAAK,GAAIC,GAAWxI,KAAKmZ,SAAS3Q,EAAGA,GAAKxI,KAAKoZ,SAAS5Q,EAAGA,IAAK,CAC5D,GAAIyX,GAAiBjgB,KAAK0hB,UAAUnZ,EAAGC,EAAGyY,EAAII,EAAIC,EAAIE,EAAS/G,EAAOsE,EAAKC,EAAKC,EAChF,IAAIgB,EAAO,CACPjgB,KAAKggB,SAASzX,EAAGC,EAAG8O,EAAA3a,QAAWie,cAAcqF,EAAMvX,EAAGuX,EAAM1X,EAAG0X,EAAMzX,EAAGyX,EAAMxX,OAMvFyP,GAAA1Z,UAAAkjB,UAAP,SAAiBnZ,EAAUC,EAAUyY,EAAaI,EAAaC,EAAaE,EAAkB/G,EAAgBsE,EAAuBC,EAAuBC,GACxJ,GAAI0C,GAAkB3hB,KAAK4hB,YAAYX,EAAII,EAAIC,EAAI/Y,EAAGC,EACtD,IAAIqZ,GAAuB7hB,KAAK4hB,YAAYX,EAAII,EAAIC,EAAI/Y,EAAI,EAAGC,EAC/D,IAAIsZ,GAAwB9hB,KAAK4hB,YAAYX,EAAII,EAAIC,EAAI/Y,EAAGC,EAAI,EAEhE,IAAIuZ,GAAgB,GAAI3K,GAAAza,QAASglB,EAAOpZ,EAAIiZ,EAAQjZ,EAAGoZ,EAAOnZ,EAAIgZ,EAAQhZ,EAAGmZ,EAAOlZ,EAAI+Y,EAAQ/Y,EAChGsZ,GAAKR,QAAQ,GAAKQ,EAAKxZ,EAAIwZ,EAAKvZ,EAAIuZ,EAAKtZ,GAEzC,IAAIuZ,GAAqB,GAAI5K,GAAAza,QAASklB,EAAYtZ,EAAIiZ,EAAQjZ,EAAGsZ,EAAYrZ,EAAIgZ,EAAQhZ,EAAGqZ,EAAYpZ,EAAI+Y,EAAQ/Y,EACpHuZ,GAAUT,QAAQ,GAAKS,EAAUzZ,EAAIyZ,EAAUxZ,EAAIwZ,EAAUvZ,GAE7D,IAAIwZ,GAAsB,GAAI7K,GAAAza,QAASmlB,EAAavZ,EAAIiZ,EAAQjZ,EAAGuZ,EAAatZ,EAAIgZ,EAAQhZ,EAAGsZ,EAAarZ,EAAI+Y,EAAQ/Y,EACxHwZ,GAAWV,QAAQ,GAAKU,EAAW1Z,EAAI0Z,EAAWzZ,EAAIyZ,EAAWxZ,GAEjE,IAAIsG,GAAiBxG,EAAIvI,KAAKqY,iBAAoB7P,EAAIxI,KAAKqY,gBAE3D,IAAI6J,GAAmBzH,EAAMlS,EAAIoZ,EAAOpZ,EAAIkS,EAAMjS,EAAImZ,EAAOnZ,EAAIiS,EAAMhS,EAAIkZ,EAAOlZ,CAElF,IAAIkZ,EAAOpZ,EAAI,GAAKoZ,EAAOnZ,EAAI,GAAKmZ,EAAOlZ,EAAI,EAAG,CAC9C,MAAO,MAGX,GAAI0Z,GAAsBniB,KAAKuY,SAASxJ,EAExC,IAAIqT,GAAwB,KAC5B,QAAQpiB,KAAKgZ,mBACT,IAAKtB,GAAA/a,QAAqB+U,OACtB0Q,EAAgB,IAChB,MACJ,KAAK1K,GAAA/a,QAAqBgV,MACtByQ,EAAgBF,GAAaC,CAC7B,MACJ,KAAKzK,GAAA/a,QAAqBiV,QACtBwQ,EAAgBF,EAAYC,CAC5B,MACJ,KAAKzK,GAAA/a,QAAqBkV,cACtBuQ,EAAgBF,GAAaC,CAC7B,MACJ,KAAKzK,GAAA/a,QAAqBmV,KACtBsQ,EAAgBF,EAAYC,CAC5B,MACJ,KAAKzK,GAAA/a,QAAqBoV,WACtBqQ,EAAgBF,GAAaC,CAC7B,MACJ,KAAKzK,GAAA/a,QAAqBqV,MACtBoQ,EAAgB,KAChB,MACJ,KAAK1K,GAAA/a,QAAqBsV,UACtBmQ,EAAgBF,GAAaC,CAC7B,MACJ,UAGJ,IAAKC,EAAe,CAChB,MAAO,MAGX,GAAIC,GAA+BriB,KAAKud,SAAS+E,SAAStiB,KAAM+hB,EAAMC,EAAWC,EAAYlD,EAAKC,EAAKC,EAAKiD,EAC5G,IAAIG,EAAWE,QAAS,CACpB,MAAO,MAGX,GAAIviB,KAAK+Y,YAAa,CAClB/Y,KAAKuY,SAASxJ,GAASmT,EAG3B,GAAIjC,GAAiBoC,EAAWG,YAAY,EAE5CvC,GAAM1X,EAAI4S,KAAKqF,IAAI,EAAGrF,KAAKsF,IAAIR,EAAM1X,EAAG,GACxC0X,GAAMzX,EAAI2S,KAAKqF,IAAI,EAAGrF,KAAKsF,IAAIR,EAAMzX,EAAG,GACxCyX,GAAMxX,EAAI0S,KAAKqF,IAAI,EAAGrF,KAAKsF,IAAIR,EAAMxX,EAAG,GACxCwX,GAAMvX,EAAIyS,KAAKqF,IAAI,EAAGrF,KAAKsF,IAAIR,EAAMvX,EAAG,GAExCuX,GAAM1X,GAAK,GACX0X,GAAMzX,GAAK,GACXyX,GAAMxX,GAAK,GACXwX,GAAMvX,GAAK,GACX,OAAOuX,GAGJ/H,GAAA1Z,UAAAojB,YAAP,SAAmB9mB,EAAYoF,EAAYuiB,EAAYla,EAAUC,GAC7D,GAAIka,GAAc,GAAItL,GAAAza,OACtB+lB,GAAGna,EAAIka,EAAEla,EAAIzN,EAAEyN,CACfma,GAAGla,EAAItI,EAAEqI,EAAIzN,EAAEyN,CACfma,GAAGja,EAAI3N,EAAEyN,EAAIA,CAEb,IAAIoa,GAAc,GAAIvL,GAAAza,OACtBgmB,GAAGpa,EAAIka,EAAEja,EAAI1N,EAAE0N,CACfma,GAAGna,EAAItI,EAAEsI,EAAI1N,EAAE0N,CACfma,GAAGla,EAAI3N,EAAE0N,EAAIA,CAEb,IAAI3N,GAAa6nB,EAAGE,aAAaD,EACjC,IAAI9nB,EAAE4N,EAAI,IAAM,CACZ,MAAO,IAAI2O,GAAAza,QAAS,GAAK9B,EAAE0N,EAAI1N,EAAE2N,GAAK3N,EAAE4N,EAAG5N,EAAE2N,EAAI3N,EAAE4N,EAAG5N,EAAE0N,EAAI1N,EAAE4N,GAElE,MAAO,IAAI2O,GAAAza,SAAU,EAAG,EAAG,GAhmBjBub,GAAA2K,aAAsB,CAkmBxC,OAAA3K,KAEA5W,QAAAC,eAAAnG,EAAA,cAAAoG,MAAA,MpCw1CApG,GAAQuB,QoCx1COub,CAEf,IAAA4K,GAAA,WAOI,QAAAA,GAAYxX,EAAatM,EAAa+jB,GAClC/iB,KAAKsL,KAAOA,CACZtL,MAAKhB,KAAOA,CACZgB,MAAK+iB,WAAaA,EAE1B,MAAAD,QpCo1CGE,+BAA+B,+CAA+CC,6BAA6B,6CAA6CC,+BAA+B,+CAA+CC,+BAA+B,+CAA+CC,gCAAgC,gDAAgDC,8BAA8B,8CAA8CC,0BAA0B,0CAA0CC,+BAA+B,+CAA+CC,0BAA0B,0CAA0CC,+BAA+B,+CAA+CC,8BAA8BhmB,UAAUimB,gCAAgCjmB,UAAUkmB,qCAAqClmB,UAAUmmB,6BAA6BnmB,UAAUomB,iCAAiCpmB,UAAUqmB,gCAAgCrmB,UAAUC,sCAAsCD,UAAUsmB,mCAAmCtmB,YAAYumB,0CAA0C,SAAS3pB,EAAQkB,EAAOJ,GACrpC,YqC7+DA,IAAAmc,GAAAjd,EAA6B,qCAI7B,IAAAmd,GAAAnd,EAAiC,6BACjC,IAAAqd,GAAArd,EAAmC,+BACnC,IAAA4pB,GAAA5pB,EAAgC,2BAEhC,IAAA6pB,GAAA7pB,EAAgC,2BAChC,IAAA8pB,GAAA9pB,EAAyB,kBACzB,IAAA+pB,GAAA/pB,EAA6B,uBAC7B,IAAAgqB,GAAAhqB,EAA6B,uBAE7B,IAAAiqB,GAAAjqB,EAAgC,4BAEhC,IAAAkqB,GAAA,WAgDC,QAAAA,GAAYC,EAA6BC,GAvCjC1kB,KAAA2kB,WAAoB,EAyC3B3kB,MAAK4kB,WAAa,GAAIta,MAEtB,IAAIua,GAAgB,QAGpB,IAAIC,IACHC,GAAGN,EAAUM,GAGd,IAAIC,IACHC,QAAQ,OACRC,QAAQ,UACRC,kBAAkB,aAClBC,gBAAgB,OAChBC,MAAM,SAGPrlB,MAAKslB,sBAAwB,KAC7BtlB,MAAKulB,aAAe,SAEpB,IAAI7pB,IACH8pB,OAAO,KACPT,GAAGN,EAAUM,GACb/d,KAAKyd,EAAU,QAGhBzkB,MAAKylB,WAAiChB,EAAUiB,WAChD1lB,MAAK2lB,WAA2BlB,EAAUmB,UAE1C,IAAIC,GAAe7lB,IACnBwkB,GAAesB,SAASrB,EAAUM,IAAM/kB,IAExC,SAAA+lB,GAA2BC,GAE1B,IAAKA,EAAaC,QACjB,MAEDJ,GAAaK,WAAaF,EAAaG,GACvCN,GAAaO,WAAa1B,GAnE5BpjB,OAAAC,eAAWijB,EAAAhmB,UAAA,arCy/DJ4L,IqCz/DP,WAEC,MAAOpK,MAAKkmB,YrC0/DN3b,WAAY,KACZC,aAAc,MqCx/DrBlJ,QAAAC,eAAWijB,EAAAhmB,UAAA,crC2/DJ4L,IqC3/DP,WAEC,MAAOpK,MAAKulB,crC4/DNhb,WAAY,KACZC,aAAc,MqC1/DrBlJ,QAAAC,eAAWijB,EAAAhmB,UAAA,wBrC6/DJ4L,IqC7/DP,WAEC,MAAOpK,MAAKslB,uBrC8/DNe,IqC3/DP,SAAgC7kB,GAE/B,GAAIxB,KAAKslB,uBAAyB9jB,EACjC,MAEDxB,MAAKslB,sBAAwB9jB,CAE7BxB,MAAKsmB,UAAUC,OAAOC,aAAapC,EAAAznB,QAAQ8pB,oBAAqBjlB,EAAO4iB,EAAAznB,QAAQ+pB,UAAYtC,EAAAznB,QAAQgqB,YACnG3mB,MAAK4mB,WrC0/DCrc,WAAY,KACZC,aAAc,MqCz8Ddga,GAAAhmB,UAAAqoB,cAAP,SAAqBC,GAEpB9mB,KAAK4kB,WAAWzkB,KAAK2mB,GAGftC,GAAAhmB,UAAAuoB,iBAAP,SAAwBD,GAEvB9mB,KAAK4kB,WAAWoC,OAAOhnB,KAAK4kB,WAAWtiB,QAAQwkB,IAGzCtC,GAAAhmB,UAAAsd,cAAP,SAAqBf,EAAcC,EAAezT,EAAeoU,EAAoCC,GAAA,GAAAA,QAAA,GAA0B,CAA1BA,EAAA,EAGpG,MAAO,IAAI0I,GAAA3nB,QAAaqD,KAAM+a,EAAOC,EAAQzT,EAAQoU,GAG/C6I,GAAAhmB,UAAAkd,kBAAP,SAAyBpQ,EAAa/D,EAAeoU,EAAoCC,GAAA,GAAAA,QAAA,GAA0B,CAA1BA,EAAA,EAGxF,MAAO,IAAIsI,GAAAvnB,QAAiBqD,KAAMsL,EAAM/D,EAAQoU,GAI1C6I,GAAAhmB,UAAAyf,aAAP,SAAoBC,EAAgBC,GAEnC,GAAIA,EAAS,CACZne,KAAKsmB,UAAUC,OAAOC,aAAapC,EAAAznB,QAAQshB,cAAgBC,EAAU,IAAMC,EAAQ4G,GAAK,SAClF,CACN/kB,KAAKsmB,UAAUC,OAAOC,aAAapC,EAAAznB,QAAQsqB,gBAAkB/I,EAAQva,WAAa,KAGnF,GAAI6gB,EAAe0C,MAClBlnB,KAAK4mB,UAGApC,GAAAhmB,UAAAkhB,kBAAP,SAAyBxB,EAAgBrd,EAAaE,EAAe4e,IAK9D6E,GAAAhmB,UAAA6d,kBAAP,SAAyBC,EAAsCC,EAA+BC,EAAkCC,EAAmCC,EAA8CC,GAAxL,GAAAL,QAAA,GAAoC,CAApCA,EAAA,eAAsC,GAAAC,QAAA,GAA6B,CAA7BA,EAAA,SAA+B,GAAAC,QAAA,GAAgC,CAAhCA,EAAA,OAAkC,GAAAC,QAAA,GAAiC,CAAjCA,EAAA,OAAmC,GAAAC,QAAA,GAA4C,CAA5CA,EAAA,OAA8C,GAAAC,QAAA,GAAsC,CAAtCA,EAAA,aAEhN3c,KAAKsmB,UAAUC,OAAOC,aAAapC,EAAAznB,QAAQ0f,mBAAqBC,EAAe,IAAMC,EAAc,IAAMC,EAAmB,IAAMC,EAAoB,IAAMC,EAA+B,IAE3L,IAAI8H,EAAe0C,MAClBlnB,KAAK4mB,UAGApC,GAAAhmB,UAAAoe,yBAAP,SAAgCC,EAAuBC,EAAuBC,GAAvB,GAAAD,QAAA,GAAqB,CAArBA,EAAA,IAAuB,GAAAC,QAAA,GAAsB,CAAtBA,EAAA,IAE7E/c,KAAKsmB,UAAUC,OAAOC,aAAapC,EAAAznB,QAAQigB,yBAA0BC,EAAiBuH,EAAAznB,QAAQwqB,QAASrK,EAAWsH,EAAAznB,QAAQwqB,QAASpK,EAAYqH,EAAAznB,QAAQwqB,SAEvJ,IAAI3C,EAAe0C,MAClBlnB,KAAK4mB,UAGApC,GAAAhmB,UAAAwe,WAAP,SAAkBC,EAA2BN,GAAA,GAAAA,QAAA,GAAsC,CAAtCA,EAAA,aAG5C3c,KAAKsmB,UAAUC,OAAOC,aAAapC,EAAAznB,QAAQqgB,YAAcC,EAAqB,IAE9E,IAAIuH,EAAe0C,MAClBlnB,KAAK4mB,UAGApC,GAAAhmB,UAAAiR,YAAP,SAAmBJ,EAAaqP,EAA8BpP,EAAuBC,GAAvB,GAAAD,QAAA,GAAqB,CAArBA,EAAA,EAAuB,GAAAC,QAAA,GAAsB,CAAtBA,GAAqB,EAEzGD,EAAaA,GAAc,CAC3B,KAAKC,GAAcA,EAAa,EAC/BA,EAAamP,EAAYnP,UAG1BvP,MAAKsmB,UAAUC,OAAOC,aAAapC,EAAAznB,QAAQyqB,cAAe1I,EAAYqG,GAAKX,EAAAznB,QAAQwqB,SAAW7X,EAAa,IAAMC,EAAa,IAE9H,IAAIiV,EAAe0C,MAClBlnB,KAAK4mB,UAGApC,GAAAhmB,UAAA8gB,aAAP,SAAoBjQ,EAAakQ,EAAwBxD,GAAxB,GAAAwD,QAAA,GAAsB,CAAtBA,EAAA,EAAwB,GAAAxD,QAAA,GAAuB,CAAvBA,GAAsB,GAMxEyI,GAAAhmB,UAAAgf,8BAAP,SAAqCC,EAAoBC,EAAsBrS,EAAiBsS,GAAA,GAAAA,QAAA,GAAgC,CAAhCA,EAAA,MAK/F,GAAI9P,GAAiBxC,EAAOkQ,OAC5B,IAAIoC,EAAkB,CACrB,GAAIrC,GAAmB/D,EAAA5a,QAAcihB,kBACrCtC,GAAI,GAAKzN,EAAE,EACXyN,GAAI,GAAKzN,EAAE,EACXyN,GAAI,GAAKzN,EAAE,EACXyN,GAAI,GAAKzN,EAAE,GACXyN,GAAI,GAAKzN,EAAE,EACXyN,GAAI,GAAKzN,EAAE,EACXyN,GAAI,GAAKzN,EAAE,EACXyN,GAAI,GAAKzN,EAAE,GACXyN,GAAI,GAAKzN,EAAE,EACXyN,GAAI,GAAKzN,EAAE,EACXyN,GAAI,IAAMzN,EAAE,GACZyN,GAAI,IAAMzN,EAAE,GACZyN,GAAI,IAAMzN,EAAE,EACZyN,GAAI,IAAMzN,EAAE,EACZyN,GAAI,IAAMzN,EAAE,GACZyN,GAAI,IAAMzN,EAAE,GAEZ7N,MAAK6d,6BAA6BJ,EAAaC,EAAepC,EAAK,OAC7D,CACNtb,KAAK6d,6BAA6BJ,EAAaC,EAAe7P,EAAG,IAI5D2W,GAAAhmB,UAAAqf,6BAAP,SAAoCJ,EAAoBC,EAAsB3W,EAAmB+W,GAAA,GAAAA,QAAA,GAAwB,CAAxBA,GAAuB,EAEvH,GAAIuJ,EACJ,IAAItJ,GAAiBN,GAAe9F,EAAAhb,QAAqByW,OAASgR,EAAAznB,QAAQ+pB,UAAYtC,EAAAznB,QAAQgqB,UAC9F,KAAK,GAAI5rB,GAAW,EAAGA,EAAI+iB,EAAc/iB,IAAK,CAC7CssB,EAAatsB,EAAE,CACfiF,MAAKsmB,UAAUC,OAAOC,aAAapC,EAAAznB,QAAQ2qB,mBAAoBvJ,EAASL,EAAgB3iB,EAAKqpB,EAAAznB,QAAQwqB,SAAWpgB,EAAKsgB,GAAc,IAAMtgB,EAAKsgB,EAAa,GAAK,IAAMtgB,EAAKsgB,EAAa,GAAK,IAAMtgB,EAAKsgB,EAAa,GAAK,IAE1N,IAAI7C,EAAe0C,MAClBlnB,KAAK4mB,WAIDpC,GAAAhmB,UAAA6e,WAAP,SAAkBC,GAEjBtd,KAAKsmB,UAAUC,OAAOC,aAAapC,EAAAznB,QAAQ0gB,WAAYC,EAAQyH,GAAKX,EAAAznB,QAAQwqB,SAE5E,IAAI3C,EAAe0C,MAClBlnB,KAAK4mB,UAGApC,GAAAhmB,UAAA8f,QAAP,WAECte,KAAKsmB,UAAUC,OAAOC,aAAapC,EAAAznB,QAAQ2hB,SAC3Cte,MAAK4mB,UAGCpC,GAAAhmB,UAAA4b,MAAP,SAAaC,EAAgBC,EAAkBC,EAAiBC,EAAkBC,EAAkBC,EAAoB7a,GAA3G,GAAAwa,QAAA,GAAc,CAAdA,EAAA,EAAgB,GAAAC,QAAA,GAAgB,CAAhBA,EAAA,EAAkB,GAAAC,QAAA,GAAe,CAAfA,EAAA,EAAiB,GAAAC,QAAA,GAAgB,CAAhBA,EAAA,EAAkB,GAAAC,QAAA,GAAgB,CAAhBA,EAAA,EAAkB,GAAAC,QAAA,GAAkB,CAAlBA,EAAA,EAAoB,GAAA7a,QAAA,GAAoC,CAApCA,EAAc4X,EAAA9a,QAAmB4U,IAExJvR,KAAKsmB,UAAUC,OAAOC,aAAapC,EAAAznB,QAAQyd,OAASC,EAAM,IAAMC,EAAQ,IAAMC,EAAO,IAAMC,EAAQ,IAAMC,EAAQ,IAAMC,EAAU,IAAM7a,EAAO,IAE9I,IAAI2kB,EAAe0C,MAClBlnB,KAAK4mB,UAGApC,GAAAhmB,UAAAqd,cAAP,WAEC,MAAO,IAAIwI,GAAA1nB,QAAaqD,MAGlBwkB,GAAAhmB,UAAAyR,mBAAP,SAA0B8L,EAAoBwL,GAE7C,MAAO,IAAIhD,GAAA5nB,QAAkBqD,KAAM+b,EAAawL,GAG1C/C,GAAAhmB,UAAAoR,kBAAP,SAAyBL,GAExB,MAAO,IAAI4U,GAAAxnB,QAAiBqD,KAAMuP,GAG5BiV,GAAAhmB,UAAAsc,oBAAP,SAA2BC,EAAcC,EAAeC,EAAkBC,GAAA,GAAAA,QAAA,GAAoC,CAApCA,EAAA,KAEzElb,KAAKwnB,OAASzM,CACd/a,MAAKynB,QAAUzM,CAGfhb,MAAKsmB,UAAUC,OAAOC,aAAapC,EAAAznB,QAAQme,qBAAuBC,EAAQ,IAAMC,EAAS,KAGnFwJ,GAAAhmB,UAAAggB,oBAAP,SAA2BC,IAKpB+F,GAAAhmB,UAAA4f,kBAAP,SAAyBrP,EAAciB,EAA0BqO,EAAyB9W,GAAzB,GAAA8W,QAAA,GAAuB,CAAvBA,EAAA,EAAyB,GAAA9W,QAAA,GAAoB,CAApBA,EAAA,KAEzF,GAAIyI,EAAQ,CACXhQ,KAAKsmB,UAAUC,OAAOC,aAAapC,EAAAznB,QAAQyhB,kBAAmBrP,EAAQqV,EAAAznB,QAAQwqB,SAAWnX,EAAO+U,GAAK,IAAM1G,EAAe,IAAM9W,EAAS,SACnI,CACNvH,KAAKsmB,UAAUC,OAAOC,aAAapC,EAAAznB,QAAQ+qB,oBAAqB3Y,EAAQqV,EAAAznB,QAAQwqB,UAGjF,GAAI3C,EAAe0C,MAClBlnB,KAAK4mB,UAGApC,GAAAhmB,UAAA4d,aAAP,SAAoB/B,EAAaC,EAAeC,EAAcC,GAE7Dxa,KAAKsmB,UAAUC,OAAOC,aAAapC,EAAAznB,QAAQyf,aAAc/B,EAAK+J,EAAAznB,QAAQ+pB,UAAYtC,EAAAznB,QAAQgqB,WAAYrM,EAAO8J,EAAAznB,QAAQ+pB,UAAYtC,EAAAznB,QAAQgqB,WAAYpM,EAAM6J,EAAAznB,QAAQ+pB,UAAYtC,EAAAznB,QAAQgqB,WAAYnM,EAAO4J,EAAAznB,QAAQ+pB,UAAYtC,EAAAznB,QAAQgqB,YAEtO,IAAInC,EAAe0C,MAClBlnB,KAAK4mB,UAGApC,GAAAhmB,UAAAyd,gBAAP,SAAuBC,EAAqBC,GAE3Cnc,KAAKsmB,UAAUC,OAAOC,aAAapC,EAAAznB,QAAQsf,iBAAmBC,EAAe,IAAMC,EAAoB,IAEvG,IAAIqI,EAAe0C,MAClBlnB,KAAK4mB,UAGApC,GAAAhmB,UAAAqhB,mBAAP,SAA0B9B,EAA0B7C,EAAuCD,EAAsB6E,GAA7D,GAAA5E,QAAA,GAAqC,CAArCA,EAAA,MAAuC,GAAAD,QAAA,GAAoB,CAApBA,EAAA,EAAsB,GAAA6E,QAAA,GAA0B,CAA1BA,EAAA,EAEhH,GAAI/B,IAAW,MAAQA,IAAWrgB,UAAW,CAC5CsC,KAAKsmB,UAAUC,OAAOC,aAAapC,EAAAznB,QAAQgrB,2BACrC,CACN3nB,KAAKsmB,UAAUC,OAAOC,aAAapC,EAAAznB,QAAQkjB,mBAAoB3E,EAAuBkJ,EAAAznB,QAAQ+pB,UAAYtC,EAAAznB,QAAQgqB,YAAc5I,EAAOgH,GAAK,KAAO9J,GAAa,GAAK,KAGtK,GAAIuJ,EAAe0C,MAClBlnB,KAAK4mB,UAIApC,GAAAhmB,UAAAuhB,sBAAP,WAEC/f,KAAKsmB,UAAUC,OAAOC,aAAapC,EAAAznB,QAAQgrB,sBAE3C,IAAInD,EAAe0C,MAClBlnB,KAAK4mB,UAGApC,GAAAhmB,UAAAghB,oBAAP,SAA2BC,GAE1B,GAAIA,EAAW,CACdzf,KAAKsmB,UAAUC,OAAOC,aAAapC,EAAAznB,QAAQirB,gBAAkBnI,EAAUlX,EAAI,IAAMkX,EAAUjX,EAAI,IAAMiX,EAAU1E,MAAQ,IAAM0E,EAAUzE,OAAS,SAC1I,CACNhb,KAAKsmB,UAAUC,OAAOC,aAAapC,EAAAznB,QAAQkrB,mBAG5C,GAAIrD,EAAe0C,MAClBlnB,KAAK4mB,UAGApC,GAAAhmB,UAAA0e,aAAP,SAAoBC,EAAmBC,GAEtCpd,KAAKsmB,UAAUC,OAAOC,aAAapC,EAAAznB,QAAQugB,aAAcC,EAAWiH,EAAAznB,QAAQ+pB,UAAYtC,EAAAznB,QAAQgqB,YAAcvJ,EAAkB,IAEhI,IAAIoH,EAAe0C,MAClBlnB,KAAK4mB,UAGApC,GAAAhmB,UAAAoQ,QAAP,WAEC,GAAI5O,KAAKkmB,YAAc,KACtB,MAEDtf,SAAQC,IAAI,gCAAkC7G,KAAK4kB,WAAWtpB,OAAS,cAEvE,OAAO0E,KAAK4kB,WAAWtpB,OACtB0E,KAAK4kB,WAAW,GAAGhW,SAEpB,IAAI5O,KAAKkmB,WAAY,CAEpBlmB,KAAKsmB,UAAUC,OAAOC,aAAapC,EAAAznB,QAAQmrB,gBAC3C9nB,MAAK4mB,SAEL,IAAI5mB,KAAKylB,YAAczlB,KAAK2lB,WAAY,CACvC3lB,KAAK2lB,WAAWzL,YAAYla,KAAKylB,WACjCzlB,MAAK2lB,WAAa,KAEnB3lB,KAAKkmB,WAAa,KAGnBlmB,KAAKylB,WAAa,KAGZjB,GAAAhmB,UAAA8nB,UAAP,SAAiByB,GAEhB/nB,KAAK2kB,YAAcoD,EAGbvD,GAAAhmB,UAAAooB,QAAP,WAEC,GAAIpC,EAAewD,UAClBphB,QAAQC,IAAI7G,KAAK2kB,WAElB,IAAI9D,GAAgB7gB,KAAKkmB,WAAW,gBAAgB,iFAAuFlmB,KAAK2kB,WAAa,iCAE7J,IAAI7d,OAAO+Z,KAAY,EACtB,KAAM,oBAEP7gB,MAAK2kB,WAAa,EAElB,OAAO7d,QAAO+Z,GA9XD2D,GAAAsB,SAAkB,GAAIxkB,OActBkjB,GAAA0C,MAAgB,KAChB1C,GAAAwD,UAAoB,KAiXnC,OAAAxD,KAEAljB,QAAAC,eAAAnG,EAAA,cAAAoG,MAAA,MrCu5DApG,GAAQuB,QqCv5DO6nB,CAKf,SAAAyD,GAAuClD,EAAImD,GAE1C,GAAIC,GAAqB3D,EAAesB,SAASf,EACjD,IAAIoD,EAAI/B,WAAY,CACnB+B,EAAI5C,aAAe2C,CAEnB,IAAIE,GAAYC,OAAOC,WAAW,WAEjCD,OAAOE,aAAaH,EACpB,KACCD,EAAI/B,WAAW+B,GACd,MAAO5tB,GACRqM,QAAQC,IAAI,qDAAuDtM,EAAEoJ,WAAa,OAEjF,OrCy5DFsf,6BAA6B,6CAA6CE,+BAA+B,+CAA+CqF,2BAA2B,2CAA2CC,2BAA2B,2CAA2CC,kBAAkB,kCAAkCC,uBAAuB,uCAAuCC,uBAAuB,uCAAuCC,4BAA4B,4CAA4CjF,qCAAqClmB,YAAYorB,wCAAwC,SAASxuB,EAAQkB,EAAOJ,GAChpB,YsCh0EA,IAAAmc,GAAAjd,EAA6B,qCAC7B,IAAA+c,GAAA/c,EAA0B,iCAC1B,IAAAoR,GAAApR,EAA0B,kCAE1B,IAAAkd,GAAAld,EAAmC,+BACnC,IAAAyuB,GAAAzuB,EAAgC,4BAChC,IAAAmd,GAAAnd,EAAiC,6BACjC,IAAAod,GAAApd,EAAmC,+BACnC,IAAA0uB,GAAA1uB,EAAiC,6BACjC,IAAAqd,GAAArd,EAAmC,+BACnC,IAAA2uB,GAAA3uB,EAAoC,iCACpC,IAAA4uB,GAAA5uB,EAAoC,iCACpC,IAAAsd,GAAAtd,EAAmC,gCACnC,IAAA6uB,GAAA7uB,EAAwC,sCACxC,IAAA8uB,GAAA9uB,EAAgC,4BAChC,IAAA+uB,GAAA/uB,EAAgC,2BAEhC,IAAAgvB,GAAAhvB,EAAgC,2BAChC,IAAAivB,GAAAjvB,EAA6B,uBAE7B,IAAAkvB,GAAAlvB,EAA6B,uBAC7B,IAAAmvB,GAAAnvB,EAA6B,uBAC7B,IAAAovB,GAAApvB,EAAgC,4BAEhC,IAAAqvB,GAAA,WAmDC,QAAAA,GAAYxR,GAjDJnY,KAAA4pB,uBAAgC,GAAItoB,OACpCtB,MAAA6pB,oBAA6B,GAAIvoB,OACjCtB,MAAA8pB,uBAAgC,GAAIxoB,OACpCtB,MAAA+pB,yBAAkC,GAAIzoB,OACtCtB,MAAAgqB,wBAAwC,GAAI1f,OAAc,EAC1DtK,MAAAiqB,uBAAgC,GAAI3oB,OACpCtB,MAAAkqB,gBAAyB,GAAI5oB,OAC7BtB,MAAAmqB,kBAA2B,GAAI7oB,OAC/BtB,MAAAoqB,wBAAiC,GAAI9oB,OACrCtB,MAAAqqB,oCAYArqB,MAAAsZ,eAAqC,GAAIhP,OAAoB,EAe1DtK,MAAAsqB,uBAAkC,CAClCtqB,MAAAuqB,iBAA4B,GAC5BvqB,MAAAwqB,iBAA6B,KAavCxqB,MAAKkmB,WAAa/N,CAElB,KACCnY,KAAKyqB,IAA8BtS,EAAOuS,WAAW,sBAAwBC,mBAAmB,MAAOnQ,MAAM,MAAOE,QAAQ,MAE5H,KAAK1a,KAAKyqB,IACTzqB,KAAKyqB,IAA8BtS,EAAOuS,WAAW,SAAWC,mBAAmB,MAAOnQ,MAAM,MAAOE,QAAQ,OAC/G,MAAOngB,IAIT,GAAIyF,KAAKyqB,IAAK,CAGb,GAAGzqB,KAAKyqB,IAAIG,aAAa,4BACzB,CACC5qB,KAAK6qB,qBAAuB,SACxB,CACJ7qB,KAAK6qB,qBAAuB,MAI7B7qB,KAAK4pB,uBAAuBpS,EAAA7a,QAAqB+T,KAAO1Q,KAAKyqB,IAAI/Z,GACjE1Q,MAAK4pB,uBAAuBpS,EAAA7a,QAAqB6T,mBAAqBxQ,KAAKyqB,IAAIK,SAC/E9qB,MAAK4pB,uBAAuBpS,EAAA7a,QAAqB8T,mBAAqBzQ,KAAKyqB,IAAIM,SAC/E/qB,MAAK4pB,uBAAuBpS,EAAA7a,QAAqB+T,KAAO1Q,KAAKyqB,IAAI/Z,GACjE1Q,MAAK4pB,uBAAuBpS,EAAA7a,QAAqBgU,6BAA+B3Q,KAAKyqB,IAAIO,mBACzFhrB,MAAK4pB,uBAAuBpS,EAAA7a,QAAqBiU,6BAA+B5Q,KAAKyqB,IAAIQ,mBACzFjrB,MAAK4pB,uBAAuBpS,EAAA7a,QAAqBkU,wBAA0B7Q,KAAKyqB,IAAIS,mBACpFlrB,MAAK4pB,uBAAuBpS,EAAA7a,QAAqBmU,wBAA0B9Q,KAAKyqB,IAAIU,mBACpFnrB,MAAK4pB,uBAAuBpS,EAAA7a,QAAqBoU,cAAgB/Q,KAAKyqB,IAAIW,SAC1EprB,MAAK4pB,uBAAuBpS,EAAA7a,QAAqBqU,cAAgBhR,KAAKyqB,IAAIY,SAC1ErrB,MAAK4pB,uBAAuBpS,EAAA7a,QAAqBsU,MAAQjR,KAAKyqB,IAAIxZ,IAElEjR,MAAK6pB,oBAAoBd,EAAApsB,QAAkB0V,OAASrS,KAAKyqB,IAAIpY,KAC7DrS,MAAK6pB,oBAAoBd,EAAApsB,QAAkByV,WAAapS,KAAKyqB,IAAIrY,SAExDpS,MAAK8pB,uBAAuBpS,EAAA/a,QAAqB+U,QAAU1R,KAAKyqB,IAAI/Y,MACpE1R,MAAK8pB,uBAAuBpS,EAAA/a,QAAqBgV,OAAS3R,KAAKyqB,IAAI9Y,KACnE3R,MAAK8pB,uBAAuBpS,EAAA/a,QAAqBiV,SAAW5R,KAAKyqB,IAAI7Y,OAC9E5R,MAAK8pB,uBAAuBpS,EAAA/a,QAAqBkV,eAAiB7R,KAAKyqB,IAAIa,MAC3EtrB,MAAK8pB,uBAAuBpS,EAAA/a,QAAqBmV,MAAQ9R,KAAKyqB,IAAI3Y,IAClE9R,MAAK8pB,uBAAuBpS,EAAA/a,QAAqBoV,YAAc/R,KAAKyqB,IAAIc,MACxEvrB,MAAK8pB,uBAAuBpS,EAAA/a,QAAqBqV,OAAShS,KAAKyqB,IAAIzY,KACnEhS,MAAK8pB,uBAAuBpS,EAAA/a,QAAqBsV,WAAajS,KAAKyqB,IAAIe,QAE9DxrB,MAAK+pB,yBAAyBd,EAAAtsB,QAAuB4W,oBAAsBvT,KAAKyqB,IAAIgB,IACpFzrB,MAAK+pB,yBAAyBd,EAAAtsB,QAAuB6W,gBAAkBxT,KAAKyqB,IAAIiB,SAChF1rB,MAAK+pB,yBAAyBd,EAAAtsB,QAAuB8W,oBAAsBzT,KAAKyqB,IAAIkB,IACpF3rB,MAAK+pB,yBAAyBd,EAAAtsB,QAAuB+W,gBAAkB1T,KAAKyqB,IAAImB,SAChF5rB,MAAK+pB,yBAAyBd,EAAAtsB,QAAuBgX,QAAU3T,KAAKyqB,IAAI9W,MACxE3T,MAAK+pB,yBAAyBd,EAAAtsB,QAAuBiX,MAAQ5T,KAAKyqB,IAAI7W,IACtE5T,MAAK+pB,yBAAyBd,EAAAtsB,QAAuBkX,KAAO7T,KAAKyqB,IAAIoB,OACrE7rB,MAAK+pB,yBAAyBd,EAAAtsB,QAAuBsU,MAAQjR,KAAKyqB,IAAIxZ,IAE/EjR,MAAKgqB,wBAAwB,GAAKhqB,KAAKyqB,IAAIqB,QAC3C9rB,MAAKgqB,wBAAwB,GAAKhqB,KAAKyqB,IAAIsB,QAC3C/rB,MAAKgqB,wBAAwB,GAAKhqB,KAAKyqB,IAAIuB,QAC3ChsB,MAAKgqB,wBAAwB,GAAKhqB,KAAKyqB,IAAIwB,QAC3CjsB,MAAKgqB,wBAAwB,GAAKhqB,KAAKyqB,IAAIyB,QAC3ClsB,MAAKgqB,wBAAwB,GAAKhqB,KAAKyqB,IAAI0B,QAC3CnsB,MAAKgqB,wBAAwB,GAAKhqB,KAAKyqB,IAAI2B,QAC3CpsB,MAAKgqB,wBAAwB,GAAKhqB,KAAKyqB,IAAI4B,QAE3CrsB,MAAKiqB,uBAAuB,aAAejqB,KAAKyqB,IAAI6B,UACpDtsB,MAAKiqB,uBAAuB,eAAiBjqB,KAAKyqB,IAAI8B,gBAEtDvsB,MAAKkqB,gBAAgBd,EAAAzsB,QAAkB6Z,QAAUxW,KAAKyqB,IAAIjU,MAC1DxW,MAAKkqB,gBAAgBd,EAAAzsB,QAAkB4Z,OAASvW,KAAKyqB,IAAI+B,aAEzDxsB,MAAKmqB,kBAAkBjB,EAAAvsB,QAAuBqX,QAAUhU,KAAKyqB,IAAIzW,MACjEhU,MAAKmqB,kBAAkBjB,EAAAvsB,QAAuBsX,SAAWjU,KAAKyqB,IAAIxW,OAElEjU,MAAKoqB,wBAAwBlB,EAAAvsB,QAAuBqX,QAAU,GAAI1S,OAClEtB,MAAKoqB,wBAAwBlB,EAAAvsB,QAAuBqX,QAAQgV,EAAArsB,QAAmB8V,YAAczS,KAAKyqB,IAAIgC,qBACtGzsB,MAAKoqB,wBAAwBlB,EAAAvsB,QAAuBqX,QAAQgV,EAAArsB,QAAmB6V,WAAaxS,KAAKyqB,IAAIiC,oBACrG1sB,MAAKoqB,wBAAwBlB,EAAAvsB,QAAuBqX,QAAQgV,EAAArsB,QAAmB+V,SAAW1S,KAAKyqB,IAAIzW,MACnGhU,MAAKoqB,wBAAwBlB,EAAAvsB,QAAuBsX,SAAW,GAAI3S,OACnEtB,MAAKoqB,wBAAwBlB,EAAAvsB,QAAuBsX,SAAS+U,EAAArsB,QAAmB8V,YAAczS,KAAKyqB,IAAIkC,sBACvG3sB,MAAKoqB,wBAAwBlB,EAAAvsB,QAAuBsX,SAAS+U,EAAArsB,QAAmB6V,WAAaxS,KAAKyqB,IAAImC,qBACtG5sB,MAAKoqB,wBAAwBlB,EAAAvsB,QAAuBsX,SAAS+U,EAAArsB,QAAmB+V,SAAW1S,KAAKyqB,IAAIxW,OAEpGjU,MAAKqqB,kCAAkClB,EAAAxsB,QAA4BsY,SAAW,GAAI6N,GAAuB,EAAG9iB,KAAKyqB,IAAIoC,MAAO,MAC5H7sB,MAAKqqB,kCAAkClB,EAAAxsB,QAA4BuY,SAAW,GAAI4N,GAAuB,EAAG9iB,KAAKyqB,IAAIoC,MAAO,MAC5H7sB,MAAKqqB,kCAAkClB,EAAAxsB,QAA4BwY,SAAW,GAAI2N,GAAuB,EAAG9iB,KAAKyqB,IAAIoC,MAAO,MAC5H7sB,MAAKqqB,kCAAkClB,EAAAxsB,QAA4ByY,SAAW,GAAI0N,GAAuB,EAAG9iB,KAAKyqB,IAAIoC,MAAO,MAC5H7sB,MAAKqqB,kCAAkClB,EAAAxsB,QAA4B0Y,QAAU,GAAIyN,GAAuB,EAAG9iB,KAAKyqB,IAAIqC,KAAM,KAC1H9sB,MAAKqqB,kCAAkClB,EAAAxsB,QAA4B2Y,QAAU,GAAIwN,GAAuB,EAAG9iB,KAAKyqB,IAAIqC,KAAM,KAC1H9sB,MAAKqqB,kCAAkClB,EAAAxsB,QAA4B4Y,QAAU,GAAIuN,GAAuB,EAAG9iB,KAAKyqB,IAAIqC,KAAM,KAC1H9sB,MAAKqqB,kCAAkClB,EAAAxsB,QAA4B6Y,QAAU,GAAIsN,GAAuB,EAAG9iB,KAAKyqB,IAAIqC,KAAM;AAC1H9sB,KAAKqqB,kCAAkClB,EAAAxsB,QAA4B8Y,iBAAmB,GAAIqN,GAAuB,EAAG9iB,KAAKyqB,IAAIsC,cAAe,KAC5I/sB,MAAKqqB,kCAAkClB,EAAAxsB,QAA4B+Y,iBAAmB,GAAIoN,GAAuB,EAAG9iB,KAAKyqB,IAAIsC,cAAe,KAC5I/sB,MAAKqqB,kCAAkClB,EAAAxsB,QAA4BgZ,iBAAmB,GAAImN,GAAuB,EAAG9iB,KAAKyqB,IAAIsC,cAAe,KAC5I/sB,MAAKqqB,kCAAkClB,EAAAxsB,QAA4BiZ,iBAAmB,GAAIkN,GAAuB,EAAG9iB,KAAKyqB,IAAIsC,cAAe,KAC5I/sB,MAAKqqB,kCAAkClB,EAAAxsB,QAA4BkZ,SAAW,GAAIiN,GAAuB,EAAG9iB,KAAKyqB,IAAIuC,MAAO,KAC5HhtB,MAAKqqB,kCAAkClB,EAAAxsB,QAA4BmZ,SAAW,GAAIgN,GAAuB,EAAG9iB,KAAKyqB,IAAIuC,MAAO,KAC5HhtB,MAAKqqB,kCAAkClB,EAAAxsB,QAA4BoZ,SAAW,GAAI+M,GAAuB,EAAG9iB,KAAKyqB,IAAIuC,MAAO,KAC5HhtB,MAAKqqB,kCAAkClB,EAAAxsB,QAA4BqZ,SAAW,GAAI8M,GAAuB,EAAG9iB,KAAKyqB,IAAIuC,MAAO,KAC5HhtB,MAAKqqB,kCAAkClB,EAAAxsB,QAA4BsZ,kBAAoB,GAAI6M,GAAuB,EAAG9iB,KAAKyqB,IAAIwC,eAAgB,KAC9IjtB,MAAKqqB,kCAAkClB,EAAAxsB,QAA4BuZ,kBAAoB,GAAI4M,GAAuB,EAAG9iB,KAAKyqB,IAAIwC,eAAgB,KAC9IjtB,MAAKqqB,kCAAkClB,EAAAxsB,QAA4BwZ,kBAAoB,GAAI2M,GAAuB,EAAG9iB,KAAKyqB,IAAIwC,eAAgB,KAC9IjtB,MAAKqqB,kCAAkClB,EAAAxsB,QAA4ByZ,kBAAoB,GAAI0M,GAAuB,EAAG9iB,KAAKyqB,IAAIwC,eAAgB,KAErIjtB,MAAKktB,oBAAsBltB,KAAKyqB,IAAI/Y,MACpC1R,MAAKmtB,wBAA0BntB,KAAKyqB,IAAI/Y,MACxC1R,MAAKotB,yBAA2BptB,KAAKyqB,IAAI/Y,WAC5C,CAEN2b,MAAM,2BAIP,IAAK,GAAItyB,GAAW,EAAGA,EAAI4uB,EAAa9G,eAAgB9nB,EAAG,CAC1DiF,KAAKsZ,eAAeve,GAAK,GAAI0uB,GAAA9sB,OAC7BqD,MAAKsZ,eAAeve,GAAG8F,KAAOb,KAAKyqB,IAAIjU,MACvCxW,MAAKsZ,eAAeve,GAAGgG,OAASf,KAAKyqB,IAAIzW,MACzChU,MAAKsZ,eAAeve,GAAG4kB,UAAY3f,KAAKyqB,IAAIzW,QA9H9C1S,OAAAC,eAAWooB,EAAAnrB,UAAA,atC24EJ4L,IsC34EP,WAEC,MAAOpK,MAAKkmB,YtC44EN3b,WAAY,KACZC,aAAc,MsC34ErBlJ,QAAAC,eAAWooB,EAAAnrB,UAAA,uBtC84EJ4L,IsC94EP,WAEC,MAAOpK,MAAK6qB,sBtC+4ENtgB,WAAY,KACZC,aAAc,MsCpxEdmf,GAAAnrB,UAAA8uB,GAAP,WAEC,MAAOttB,MAAKyqB,IAGNd,GAAAnrB,UAAA4b,MAAP,SAAaC,EAAgBC,EAAkBC,EAAiBC,EAAkBC,EAAkBC,EAAoB7a,GAA3G,GAAAwa,QAAA,GAAc,CAAdA,EAAA,EAAgB,GAAAC,QAAA,GAAgB,CAAhBA,EAAA,EAAkB,GAAAC,QAAA,GAAe,CAAfA,EAAA,EAAiB,GAAAC,QAAA,GAAgB,CAAhBA,EAAA,EAAkB,GAAAC,QAAA,GAAgB,CAAhBA,EAAA,EAAkB,GAAAC,QAAA,GAAkB,CAAlBA,EAAA,EAAoB,GAAA7a,QAAA,GAAoC,CAApCA,EAAc4X,EAAA9a,QAAmB4U,IAExJ,IAAKvR,KAAKutB,SAAU,CACnBvtB,KAAKwtB,mBACLxtB,MAAKutB,SAAW,KAGjB,GAAIE,GAAgB,CACpB,IAAI5tB,EAAO4X,EAAA9a,QAAmByU,MAAOqc,GAAUztB,KAAKyqB,IAAIiD,gBACxD,IAAI7tB,EAAO4X,EAAA9a,QAAmB2U,QAASmc,GAAUztB,KAAKyqB,IAAIkD,kBAC1D,IAAI9tB,EAAO4X,EAAA9a,QAAmB0U,MAAOoc,GAAUztB,KAAKyqB,IAAImD,gBAExD5tB,MAAKyqB,IAAIoD,WAAWxT,EAAKC,EAAOC,EAAMC,EACtCxa,MAAKyqB,IAAIqD,WAAWrT,EACpBza,MAAKyqB,IAAIsD,aAAarT,EACtB1a,MAAKyqB,IAAIrQ,MAAMqT,GAGT9D,GAAAnrB,UAAAsc,oBAAP,SAA2BC,EAAcC,EAAeC,EAAkBC,GAAA,GAAAA,QAAA,GAAoC,CAApCA,EAAA,KAEzElb,KAAKwnB,OAASzM,CACd/a,MAAKynB,QAAUzM,CAEf,IAAIE,EAAuB,CAC1Blb,KAAKyqB,IAAIuD,OAAOhuB,KAAKyqB,IAAIwD,aACzBjuB,MAAKyqB,IAAIuD,OAAOhuB,KAAKyqB,IAAIyD,YAG1BluB,KAAKyqB,IAAI0D,SAAS,SAAWpT,CAC7B/a,MAAKyqB,IAAI0D,SAAS,UAAYnT,CAE9Bhb,MAAKyqB,IAAI0D,SAAS,EAAG,EAAGpT,EAAOC,GAGzB2O,GAAAnrB,UAAAkd,kBAAP,SAAyBpQ,EAAa/D,EAAeoU,EAAoCC,GAAA,GAAAA,QAAA,GAA0B,CAA1BA,EAAA,EAExF,MAAO,IAAIyN,GAAA1sB,QAAiBqD,KAAKyqB,IAAKnf,GAGhCqe,GAAAnrB,UAAAoR,kBAAP,SAAyBL,GAExB,MAAO,IAAI+Z,GAAA3sB,QAAiBqD,KAAKyqB,IAAKlb,GAGhCoa,GAAAnrB,UAAAqd,cAAP,WAEC,MAAO,IAAI0N,GAAA5sB,QAAaqD,KAAKyqB,KAGvBd,GAAAnrB,UAAAsd,cAAP,SAAqBf,EAAcC,EAAezT,EAAeoU,EAAoCC,GAAA,GAAAA,QAAA,GAA0B,CAA1BA,EAAA,EAGpG,MAAO,IAAI4N,GAAA7sB,QAAaqD,KAAKyqB,IAAK1P,EAAOC,GAGnC2O,GAAAnrB,UAAAyR,mBAAP,SAA0B8L,EAAoBC,GAE7C,MAAO,IAAI0N,GAAA/sB,QAAkBqD,KAAKyqB,IAAK1O,EAAaC,GAG9C2N,GAAAnrB,UAAAoQ,QAAP,WAEC,IAAK,GAAI7T,GAAW,EAAGA,EAAIiF,KAAKsZ,eAAehe,SAAUP,EACxDiF,KAAKsZ,eAAeve,GAAK,KAGpB4uB,GAAAnrB,UAAAggB,oBAAP,SAA2BC,GAE1B,GAAI2P,GAA0B,GAAIC,aAAY5P,EAAY1D,MAAM0D,EAAYzD,OAAO,EAEnFhb,MAAKyqB,IAAI6D,WAAW,EAAG,EAAG7P,EAAY1D,MAAO0D,EAAYzD,OAAQhb,KAAKyqB,IAAI8D,KAAMvuB,KAAKyqB,IAAIsC,cAAe,GAAIyB,YAAWJ,GAEvH,IAAIK,GAAsB,GAAI/iB,GAAA/O,OAC9B8xB,GAAUC,eAAeN,EAEzB3P,GAAYkQ,UAAU,GAAItX,GAAA1a,QAAU,EAAG,EAAG8hB,EAAY1D,MAAO0D,EAAYzD,QAASyT,GAG5E9E,GAAAnrB,UAAAiR,YAAP,SAAmBJ,EAAaqP,EAA8BpP,EAAuBC,GAAvB,GAAAD,QAAA,GAAqB,CAArBA,EAAA,EAAuB,GAAAC,QAAA,GAAsB,CAAtBA,GAAqB,EAEzG,IAAKvP,KAAKutB,SACT,KAAM,gGAGPvtB,MAAKyqB,IAAImE,WAAW5uB,KAAKyqB,IAAIoE,qBAAsBnQ,EAAYoQ,SAC/D9uB,MAAKyqB,IAAIsE,aAAa/uB,KAAK6pB,oBAAoBxa,GAAQE,IAAe,EAAImP,EAAYnP,WAAaA,EAAYvP,KAAKyqB,IAAIwC,eAAgB3d,EAAW,GAG7Iqa,GAAAnrB,UAAA8gB,aAAP,SAAoBjQ,EAAakQ,EAAwBxD,GAAxB,GAAAwD,QAAA,GAAsB,CAAtBA,EAAA,EAAwB,GAAAxD,QAAA,GAAuB,CAAvBA,GAAsB,EAE9E,IAAK/b,KAAKutB,SACT,KAAM,gGAEPvtB,MAAKyqB,IAAIuE,WAAWhvB,KAAK6pB,oBAAoBxa,GAAOkQ,EAAaxD,GAG3D4N,GAAAnrB,UAAA8f,QAAP,WAECte,KAAKutB,SAAW,MAGV5D,GAAAnrB,UAAAyd,gBAAP,SAAuBC,EAAqBC,GAE3Cnc,KAAKivB,cAAgB,IAErBjvB,MAAKkvB,mBAAqBlvB,KAAK4pB,uBAAuB1N,EAEtDlc,MAAKmvB,wBAA0BnvB,KAAK4pB,uBAAuBzN,EAE3Dnc,MAAKwtB,oBAGC7D,GAAAnrB,UAAA4d,aAAP,SAAoB/B,EAAaC,EAAeC,EAAcC,GAE7Dxa,KAAKyqB,IAAI2E,UAAU/U,EAAKC,EAAOC,EAAMC,GAG/BmP,GAAAnrB,UAAAwe,WAAP,SAAkBC,EAA2BN,GAAA,GAAAA,QAAA,GAAsC,CAAtCA,EAAA,aAE5C,GAAIM,GAAsBrF,EAAAjb,QAAsBmY,KAAM,CACrD9U,KAAKyqB,IAAI4E,QAAQrvB,KAAKyqB,IAAI6E,eACpB,CACNtvB,KAAKyqB,IAAIuD,OAAOhuB,KAAKyqB,IAAI6E,UAChBtvB,MAAKyqB,IAAI8E,SAASvvB,KAAKwvB,sBAAsBvS,EAAoBN,KAKrEgN,GAAAnrB,UAAA0e,aAAP,SAAoBC,EAAmBC,GAEtCpd,KAAKyqB,IAAIgF,UAAUzvB,KAAK8pB,uBAAuB1M,GAE/Cpd,MAAKyqB,IAAItN,UAAUA,GAGVwM,GAAAnrB,UAAA6d,kBAAP,SAAyBC,EAAsCC,EAA+BC,EAAkCC,EAAmCC,EAA8CC,GAAxL,GAAAL,QAAA,GAAoC,CAApCA,EAAA,eAAsC,GAAAC,QAAA,GAA6B,CAA7BA,EAAA,SAA+B,GAAAC,QAAA,GAAgC,CAAhCA,EAAA,OAAkC,GAAAC,QAAA,GAAiC,CAAjCA,EAAA,OAAmC,GAAAC,QAAA,GAA4C,CAA5CA,EAAA,OAA8C,GAAAC,QAAA,GAAsC,CAAtCA,EAAA,aAE7M3c,KAAKwqB,iBAAmBlO,GAAgB,cAExC,IAAIoT,GAAgB1vB,KAAK8pB,uBAAuBvN,EAEhD,IAAIoT,GAAO3vB,KAAK+pB,yBAAyBrN,EACzC,IAAIkT,GAAQ5vB,KAAK+pB,yBAAyBtN,EAC1C,IAAIoT,GAAO7vB,KAAK+pB,yBAAyBvN,EAEzC,KAAKxc,KAAKwqB,iBAAkB,CACxBxqB,KAAKktB,oBAAsBwC,CAC3B1vB,MAAKyqB,IAAIqF,YAAYJ,EAAe1vB,KAAKsqB,uBAAwBtqB,KAAKuqB,iBACtEvqB,MAAKyqB,IAAIsF,UAAUJ,EAAMC,EAAOC,OAE/B,IAAIvT,GAAgB,OAAQ,CAC7Btc,KAAKmtB,wBAA0BuC,CAC/B1vB,MAAKyqB,IAAIuF,oBAAoBhwB,KAAKyqB,IAAI9V,KAAM+a,EAAe1vB,KAAKsqB,uBAAwBtqB,KAAKuqB,iBAC7FvqB,MAAKyqB,IAAIwF,kBAAkBjwB,KAAKyqB,IAAI9V,KAAMgb,EAAMC,EAAOC,OAEtD,IAAIvT,GAAgB,QAAS,CAC9Btc,KAAKotB,yBAA2BsC,CAChC1vB,MAAKyqB,IAAIuF,oBAAoBhwB,KAAKyqB,IAAI7V,MAAO8a,EAAe1vB,KAAKsqB,uBAAwBtqB,KAAKuqB,iBAC9FvqB,MAAKyqB,IAAIwF,kBAAkBjwB,KAAKyqB,IAAI7V,MAAO+a,EAAMC,EAAOC,IAIzDlG,GAAAnrB,UAAAoe,yBAAP,SAAgCC,EAAuBC,EAAiBC,GAEpE/c,KAAKsqB,uBAAyBzN,CAC9B7c,MAAKuqB,iBAAmBzN,CAExB,IAAI9c,KAAKwqB,iBAAkB,CACvBxqB,KAAKyqB,IAAIuF,oBAAoBhwB,KAAKyqB,IAAI7V,MAAO5U,KAAKotB,yBAA0BvQ,EAAgBC,EAC5F9c,MAAKyqB,IAAIuF,oBAAoBhwB,KAAKyqB,IAAI9V,KAAM3U,KAAKmtB,wBAAyBtQ,EAAgBC,OAEzF,CACD9c,KAAKyqB,IAAIqF,YAAY9vB,KAAKktB,oBAAqBrQ,EAAgBC,GAGnE9c,KAAKyqB,IAAIyF,YAAYnT,GAGrB4M,GAAAnrB,UAAA6e,WAAP,SAAkBC,GAGjBtd,KAAKmwB,gBAAkB7S,CACvBA,GAAQ8S,eAKFzG,GAAAnrB,UAAAgf,8BAAP,SAAqCC,EAAoBC,EAAsBrS,EAAiBsS,GAAA,GAAAA,QAAA,GAAgC,CAAhCA,EAAA,MAK/F,GAAI9P,GAAiBxC,EAAOkQ,OAC5B,IAAIoC,EAAkB,CACrB,GAAIrC,GAAmB/D,EAAA5a,QAAcihB,kBACrCtC,GAAI,GAAKzN,EAAE,EACXyN,GAAI,GAAKzN,EAAE,EACXyN,GAAI,GAAKzN,EAAE,EACXyN,GAAI,GAAKzN,EAAE,GACXyN,GAAI,GAAKzN,EAAE,EACXyN,GAAI,GAAKzN,EAAE,EACXyN,GAAI,GAAKzN,EAAE,EACXyN,GAAI,GAAKzN,EAAE,GACXyN,GAAI,GAAKzN,EAAE,EACXyN,GAAI,GAAKzN,EAAE,EACXyN,GAAI,IAAMzN,EAAE,GACZyN,GAAI,IAAMzN,EAAE,GACZyN,GAAI,IAAMzN,EAAE,EACZyN,GAAI,IAAMzN,EAAE,EACZyN,GAAI,IAAMzN,EAAE,GACZyN,GAAI,IAAMzN,EAAE,GAEZ7N,MAAK6d,6BAA6BJ,EAAaC,EAAepC,EAAK,OAC7D,CACNtb,KAAK6d,6BAA6BJ,EAAaC,EAAe7P,EAAG,IAM5D8b,GAAAnrB,UAAAqf,6BAAP,SAAoCJ,EAAoBC,EAAsB3W,EAAmB+W,GAAA,GAAAA,QAAA,GAAwB,CAAxBA,GAAuB,EAEvH,GAAIuJ,EACJ,KAAK,GAAItsB,GAAW,EAAGA,EAAI+iB,EAAc/iB,IAAK,CAC7CssB,EAAatsB,EAAE,CACfiF,MAAKyqB,IAAI4F,UAAUrwB,KAAKmwB,gBAAgBG,mBAAmB7S,EAAcC,EAAgB3iB,GAAKgM,EAAKsgB,GAAatgB,EAAKsgB,EAAa,GAAItgB,EAAKsgB,EAAa,GAAItgB,EAAKsgB,EAAa,KAIzKsC,GAAAnrB,UAAAghB,oBAAP,SAA2BC,GAE1B,IAAKA,EAAW,CACfzf,KAAKyqB,IAAI4E,QAAQrvB,KAAKyqB,IAAI8F,aAC1B,QAGDvwB,KAAKyqB,IAAIuD,OAAOhuB,KAAKyqB,IAAI8F,aACzBvwB,MAAKyqB,IAAI+F,QAAQ/Q,EAAUlX,EAAGkX,EAAUjX,EAAGiX,EAAU1E,MAAO0E,EAAUzE,QAGhE2O,GAAAnrB,UAAAyf,aAAP,SAAoBC,EAAgBC,GAEnC,GAAIsS,GAA4BzwB,KAAKsZ,eAAe4E,EAEpD,IAAIle,KAAK0wB,gBAAkBxS,IAAYC,GAAWsS,EAAazxB,MAAO,CACrEgB,KAAK0wB,eAAiBxS,CACtBle,MAAKyqB,IAAIkG,cAAc3wB,KAAKgqB,wBAAwB9L,IAGrD,IAAKC,EAAS,CACb,GAAIsS,EAAazxB,KAAM,CACtBgB,KAAKyqB,IAAImG,YAAYH,EAAazxB,KAAM,KACxCyxB,GAAazxB,KAAO,KAGrB,OAGD,GAAI6xB,GAAqB7wB,KAAKiqB,uBAAuB9L,EAAQ0S,YAC7DJ,GAAazxB,KAAO6xB,CAEpB7wB,MAAKyqB,IAAImG,YAAYC,EAAa1S,EAAQ2S,UAE1C9wB,MAAKyqB,IAAIsG,UAAU/wB,KAAKmwB,gBAAgBG,mBAAmB3Y,EAAAhb,QAAqBwW,QAAS+K,GAAUA,EAEnGle,MAAKyqB,IAAIuG,cAAcH,EAAa7wB,KAAKyqB,IAAIwG,eAAgBR,EAAa5vB,KAC1Eb,MAAKyqB,IAAIuG,cAAcH,EAAa7wB,KAAKyqB,IAAIyG,eAAgBT,EAAa5vB,KAE1Eb,MAAKyqB,IAAIuG,cAAcH,EAAa7wB,KAAKyqB,IAAI0G,mBAAoBV,EAAa1vB,OAC9Ef,MAAKyqB,IAAIuG,cAAcH,EAAa7wB,KAAKyqB,IAAI2G,mBAAoBX,EAAa9Q,WAGxEgK,GAAAnrB,UAAAkhB,kBAAP,SAAyBxB,EAAgBrd,EAAaE,EAAe4e,GAEpE,GAAI,GAAKzB,GAAWA,EAAUyL,EAAa9G,aAAc,CACxD7iB,KAAKsZ,eAAe4E,GAASrd,KAAOb,KAAKkqB,gBAAgBrpB,EACzDb,MAAKsZ,eAAe4E,GAASnd,OAASf,KAAKmqB,kBAAkBppB,EAC7Df,MAAKsZ,eAAe4E,GAASyB,UAAY3f,KAAKoqB,wBAAwBrpB,GAAQ4e,OACxE,CACN,KAAM,6BAIDgK,GAAAnrB,UAAA4f,kBAAP,SAAyBrP,EAAciB,EAA0BqO,EAAyB9W,GAAzB,GAAA8W,QAAA,GAAuB,CAAvBA,EAAA,EAAyB,GAAA9W,QAAA,GAAiB,CAAjBA,EAAA,EAEzF,GAAI8pB,GAAkBrxB,KAAKmwB,gBAAiBnwB,KAAKmwB,gBAAgBmB,kBAAkBviB,IAAU,CAE7F,KAAKiB,EAAQ,CACZ,GAAIqhB,GAAY,EACfrxB,KAAKyqB,IAAI8G,yBAAyBF,EAEnC,QAID,GAAIrxB,KAAKwxB,qBAAuBxhB,EAAQ,CACvChQ,KAAKwxB,oBAAsBxhB,CAC3BhQ,MAAKyqB,IAAImE,WAAW5uB,KAAKyqB,IAAIgH,aAAczhB,EAAQA,EAAO8e,SAAW,MAGtE,GAAI4C,GAAoC1xB,KAAKqqB,kCAAkC9iB,EAE/EvH,MAAKyqB,IAAIkH,wBAAwBN,EACjCrxB,MAAKyqB,IAAImH,oBAAoBP,EAAUK,EAAWpmB,KAAMomB,EAAW1yB,KAAM0yB,EAAW3O,WAAY/S,EAAOgM,cAAeqC,GAGhHsL,GAAAnrB,UAAAqhB,mBAAP,SAA0B9B,EAAyB7C,EAAuCD,EAAsB6E,GAA7D,GAAA5E,QAAA,GAAqC,CAArCA,EAAA,MAAuC,GAAAD,QAAA,GAAoB,CAApBA,EAAA,EAAsB,GAAA6E,QAAA,GAA0B,CAA1BA,EAAA,EAE/G,GAAI3B,GAAsCJ,CAC1C,IAAI8T,GAA+B1T,EAAQ0T,WAC3C7xB,MAAKyqB,IAAIqH,gBAAgB9xB,KAAKyqB,IAAIsH,YAAaF,EAE/C,IAAI3W,EAAuB,CAC1Blb,KAAKyqB,IAAIuD,OAAOhuB,KAAKyqB,IAAIwD,aACzBjuB,MAAKyqB,IAAIuD,OAAOhuB,KAAKyqB,IAAIyD,YAG1BluB,KAAKyqB,IAAI0D,SAAS,EAAG,EAAGhQ,EAAQpD,MAAOoD,EAAQnD,QAGzC2O,GAAAnrB,UAAAuhB,sBAAP,WAEC/f,KAAKyqB,IAAIqH,gBAAgB9xB,KAAKyqB,IAAIsH,YAAa,MAGxCpI,GAAAnrB,UAAAgvB,kBAAR,WAEC,GAAIxtB,KAAKivB,cAAe,CACvBjvB,KAAKyqB,IAAIuD,OAAOhuB,KAAKyqB,IAAIuH,MACzBhyB,MAAKyqB,IAAIwH,cAAcjyB,KAAKyqB,IAAIyH,SAChClyB,MAAKyqB,IAAI0H,UAAUnyB,KAAKkvB,mBAAoBlvB,KAAKmvB,6BAC3C,CACNnvB,KAAKyqB,IAAI4E,QAAQrvB,KAAKyqB,IAAIuH,QAIjBrI,GAAAnrB,UAAAgxB,sBAAR,SAA8BlT,EAAqBK,GAE/C,OAAQL,GACJ,IAAK1E,GAAAjb,QAAsBgY,KACvB,MAAQgI,IAAoB,aAAe3c,KAAKyqB,IAAI7V,MAAQ5U,KAAKyqB,IAAI9V,IACzE,KAAKiD,GAAAjb,QAAsBiY,MACvB,MAAQ+H,IAAoB,aAAe3c,KAAKyqB,IAAI9V,KAAO3U,KAAKyqB,IAAI7V,KACxE,KAAKgD,GAAAjb,QAAsBkY,eACvB,MAAO7U,MAAKyqB,IAAI5V,cACpB,SACI,KAAM,uCAnfP8U,GAAA9G,aAAsB,CAkVrB8G,GAAAyI,QAAuB,GAAIC,cAAa,EAiCzC1I,GAAA2I,OAAgB,CAmI/B,OAAA3I,KAEAroB,QAAAC,eAAAnG,EAAA,cAAAoG,MAAA,MtCwtEApG,GAAQuB,QsCxtEOgtB,CAGf,IAAA7G,GAAA,WAQC,QAAAA,GAAYxX,EAAatM,EAAa+jB,GAErC/iB,KAAKsL,KAAOA,CACZtL,MAAKhB,KAAOA,CACZgB,MAAK+iB,WAAaA,EAEpB,MAAAD,QtCitEGE,+BAA+B,+CAA+CC,6BAA6B,6CAA6CC,+BAA+B,+CAA+CqP,4BAA4B,4CAA4CC,6BAA6B,6CAA6CrP,+BAA+B,+CAA+CsP,iCAAiC,iDAAiDC,iCAAiC,iDAAiDtP,gCAAgC,gDAAgDuP,sCAAsC,sDAAsDC,4BAA4B,4CAA4CC,2BAA2B,2CAA2CC,2BAA2B,2CAA2CC,uBAAuB,uCAAuCC,uBAAuB,uCAAuCC,uBAAuB,uCAAuCC,4BAA4B,4CAA4CtP,qCAAqClmB,UAAUomB,iCAAiCpmB,UAAUkO,kCAAkClO,YAAYy1B,4CAA4C,SAAS74B,EAAQkB,EAAOJ,GAC37C,YACA,IAAIwS,GAAa5N,MAAQA,KAAK4N,WAAc,SAAUC,EAAG3N,GACrD,IAAK,GAAI4N,KAAK5N,GAAG,GAAIA,EAAE6N,eAAeD,GAAID,EAAEC,GAAK5N,EAAE4N,EACnD,SAASE,KAAOhO,KAAKiO,YAAcJ,EACnCA,EAAErP,UAAY0B,IAAM,KAAOoB,OAAO4M,OAAOhO,IAAM8N,EAAGxP,UAAY0B,EAAE1B,UAAW,GAAIwP,IuCjxFnF,IAAAolB,GAAA94B,EAA6B,sCAI7B,IAAA8pB,GAAA9pB,EAAyB,kBACzB,IAAA+4B,GAAA/4B,EAAgC,4BAEhC,IAAAg5B,GAAA,SAAAllB,GAA+BR,EAAA0lB,EAAAllB,EAU9B,SAAAklB,GAAY9jB,EAAwBlE,EAAa/D,EAAegsB,EAAgBC,GAAA,GAAAA,QAAA,GAAyB,CAAzBA,EAAA,MAE/EplB,EAAA/S,KAAA2E,KAEAA,MAAKyzB,SAAWjkB,CAChBxP,MAAK0zB,MAAQpoB,CAEbtL,MAAKyzB,SAASnN,UAAUC,OAAOC,aAAapC,EAAAznB,QAAQg3B,gBAAkBJ,EAAQnP,EAAAznB,QAAQ+pB,UAAYtC,EAAAznB,QAAQgqB,YAAerb,EAAO,IAAMkoB,EAAY,IAAMjsB,EAAS,IACjKvH,MAAK4zB,KAAO5zB,KAAKyzB,SAAS7M,SAC1B5mB,MAAKyzB,SAAS5M,cAAc7mB,MAd7BsB,OAAAC,eAAW+xB,EAAA90B,UAAA,QvCsxFJ4L,IuCtxFP,WAEC,MAAOpK,MAAK0zB,OvCuxFNnpB,WAAY,KACZC,aAAc,MuCzwFd8oB,GAAA90B,UAAAoQ,QAAP,WAEC5O,KAAKyzB,SAASnN,UAAUC,OAAOC,aAAapC,EAAAznB,QAAQk3B,oBAAsB7zB,KAAK4zB,KAAKjwB,WAAa,IACjG3D,MAAKyzB,SAAS7M,SACd5mB,MAAKyzB,SAAS1M,iBAAiB/mB,KAE/BA,MAAKyzB,SAAW,KAKVH,GAAA90B,UAAAs1B,eAAP,SAAsB/sB,EAAUgtB,EAAaC,GAAA,GAAAA,QAAA,GAAmB,CAAnBA,EAAA,EAE5C,GAAIjtB,YAAgBktB,kBAAkB,CACrC,GAAIC,GAAMja,SAASka,cAAc,SACjC,IAAIzrB,GAAI3B,EAAKgU,KACb,IAAIqZ,GAAIrtB,EAAKiU,MACbkZ,GAAInZ,MAAQrS,CACZwrB,GAAIlZ,OAASoZ,CACb,IAAIjM,GAAM+L,EAAIxJ,WAAW,KACzBvC,GAAIkM,UAAUttB,EAAM,EAAG,EACvBA,GAAOohB,EAAImM,aAAa,EAAG,EAAG5rB,EAAG0rB,GAAGrtB,KAGrC,GAAIwtB,GAAM,CACV,IAAI71B,GAAQ00B,EAAAz2B,QAAc63B,wBAAwBztB,EAAKzL,OAAQ,WAC9D,MAAOyL,GAAKwtB,MACV,KAEHv0B,MAAKyzB,SAASnN,UAAUC,OAAOC,aAAapC,EAAAznB,QAAQ83B,wBAA0Bz0B,KAAK4zB,KAAO,IAAMI,EAAW,IAAMD,EAAO,KAAO/zB,KAAKsL,MAAQ0oB,GAAY,IAAMt1B,EAAQ,IACtKsB,MAAKyzB,SAAS7M,UAGR0M,GAAA90B,UAAAk2B,qCAAP,SAA4C3tB,EAAgB4tB,EAAiCC,GAAA,GAAAA,QAAA,GAAqB,CAArBA,EAAA,OAI9F,OAAAtB,IA3D+BD,EAAA12B,QA6D/B2E,QAAAC,eAAAnG,EAAA,cAAAoG,MAAA,MvCmwFApG,GAAQuB,QuCnwFO22B,IvCqwFZ5K,kBAAkB,kCAAkCmM,4BAA4B,4CAA4CC,sCAAsCp3B,YAAYq3B,4CAA4C,SAASz6B,EAAQkB,EAAOJ,GACrP,YACA,IAAIwS,GAAa5N,MAAQA,KAAK4N,WAAc,SAAUC,EAAG3N,GACrD,IAAK,GAAI4N,KAAK5N,GAAG,GAAIA,EAAE6N,eAAeD,GAAID,EAAEC,GAAK5N,EAAE4N,EACnD,SAASE,KAAOhO,KAAKiO,YAAcJ,EACnCA,EAAErP,UAAY0B,IAAM,KAAOoB,OAAO4M,OAAOhO,IAAM8N,EAAGxP,UAAY0B,EAAE1B,UAAW,GAAIwP,IwC50FnF,IAAAgnB,GAAA16B,EAAgC,2BAEhC,IAAA26B,GAAA,SAAA7mB,GAA+BR,EAAAqnB,EAAA7mB,EAS9B,SAAA6mB,GAAY3H,EAA0BhiB,GAErC8C,EAAA/S,KAAA2E,KAAMstB,EARCttB,MAAAk1B,2BAA2C,GAAI5qB,OAAc,EAE9DtK,MAAA6wB,YAAqB,aAO3B7wB,MAAK0zB,MAAQpoB,CACbtL,MAAKm1B,SAAWn1B,KAAKyqB,IAAI3O,eAEzB9b,MAAKk1B,2BAA2B,GAAK5H,EAAG8H,2BACxCp1B,MAAKk1B,2BAA2B,GAAK5H,EAAG+H,2BACxCr1B,MAAKk1B,2BAA2B,GAAK5H,EAAGgI,2BACxCt1B,MAAKk1B,2BAA2B,GAAK5H,EAAGiI,2BACxCv1B,MAAKk1B,2BAA2B,GAAK5H,EAAGkI,2BACxCx1B,MAAKk1B,2BAA2B,GAAK5H,EAAGmI,4BAGlCR,EAAAz2B,UAAAoQ,QAAP,WAEC5O,KAAKyqB,IAAIiL,cAAc11B,KAAKm1B,UAKtBF,GAAAz2B,UAAAs1B,eAAP,SAAsB/sB,EAAUgtB,EAAaC,GAAA,GAAAA,QAAA,GAAmB,CAAnBA,EAAA,EAE5Ch0B,KAAKyqB,IAAImG,YAAY5wB,KAAKyqB,IAAI8B,iBAAkBvsB,KAAKm1B,SACrDn1B,MAAKyqB,IAAIkL,WAAW31B,KAAKk1B,2BAA2BnB,GAAOC,EAAUh0B,KAAKyqB,IAAI8D,KAAMvuB,KAAKyqB,IAAI8D,KAAMvuB,KAAKyqB,IAAIsC,cAAehmB,EAC3H/G,MAAKyqB,IAAImG,YAAY5wB,KAAKyqB,IAAI8B,iBAAkB,MAG1C0I,GAAAz2B,UAAAk2B,qCAAP,SAA4C3tB,EAAgB4tB,EAAiCC,GAAA,GAAAA,QAAA,GAAqB,CAArBA,EAAA,OAK7FtzB,QAAAC,eAAW0zB,EAAAz2B,UAAA,QxC+zFJ4L,IwC/zFP,WAEC,MAAOpK,MAAK0zB,OxCg0FNnpB,WAAY,KACZC,aAAc,MwC9zFrBlJ,QAAAC,eAAW0zB,EAAAz2B,UAAA,axCi0FJ4L,IwCj0FP,WAEC,MAAOpK,MAAKm1B,UxCk0FN5qB,WAAY,KACZC,aAAc,MwCj0FtB,OAAAyqB,IAnD+BD,EAAAr4B,QAqD/B2E,QAAAC,eAAAnG,EAAA,cAAAoG,MAAA,MxCo0FApG,GAAQuB,QwCp0FOs4B,IxCs0FZW,2BAA2B,6CAA6CC,sCAAsC,SAASv7B,EAAQkB,EAAOJ,GACzI,kBAEM06B,wCAAwC,SAASx7B,EAAQkB,EAAOJ,GACtE,kBAEM26B,wCAAwC,SAASz7B,EAAQkB,EAAOJ,GACtE,kBAEM46B,oCAAoC,SAAS17B,EAAQkB,EAAOJ,GAClE,kBAEM66B,wCAAwC,SAAS37B,EAAQkB,EAAOJ,GACtE,kBAEM86B,oCAAoC,SAAS57B,EAAQkB,EAAOJ,GAClE,kBAEM+6B,yCAAyC,SAAS77B,EAAQkB,EAAOJ,GACvE,kBAEMg7B,4CAA4C,SAAS97B,EAAQkB,EAAOJ,GAC1E,YACA,IAAIwS,GAAa5N,MAAQA,KAAK4N,WAAc,SAAUC,EAAG3N,GACrD,IAAK,GAAI4N,KAAK5N,GAAG,GAAIA,EAAE6N,eAAeD,GAAID,EAAEC,GAAK5N,EAAE4N,EACnD,SAASE,KAAOhO,KAAKiO,YAAcJ,EACnCA,EAAErP,UAAY0B,IAAM,KAAOoB,OAAO4M,OAAOhO,IAAM8N,EAAGxP,UAAY0B,EAAE1B,UAAW,GAAIwP,IyCx5FnF,IAAAoW,GAAA9pB,EAAyB,kBACzB,IAAA+4B,GAAA/4B,EAAgC,4BAEhC,IAAA+7B,GAAA,SAAAjoB,GAA+BR,EAAAyoB,EAAAjoB,EAK9B,SAAAioB,GAAY7mB,EAAwBD,GAEnCnB,EAAA/S,KAAA2E,KAEAA,MAAKyzB,SAAWjkB,CAChBxP,MAAKs2B,YAAc/mB,CACnBvP,MAAKyzB,SAASnN,UAAUC,OAAOC,aAAapC,EAAAznB,QAAQ45B,gBAAiBhnB,EAAa6U,EAAAznB,QAAQwqB,SAC1FnnB,MAAK4zB,KAAO5zB,KAAKyzB,SAAS7M,SAC1B5mB,MAAKyzB,SAAS5M,cAAc7mB,MAEtBq2B,EAAA73B,UAAAg4B,gBAAP,SAAuBzvB,EAAemY,EAAoBrP,GAEzD7P,KAAKyzB,SAASnN,UAAUC,OAAOC,aAAapC,EAAAznB,QAAQ85B,uBAAwBz2B,KAAK4zB,KAAOxP,EAAAznB,QAAQwqB,SAAWpgB,EAAK2vB,OAAS,IAAMxX,EAAc,IAAMrP,EAAQ,IAC3J7P,MAAKyzB,SAAS7M,UAGRyP,GAAA73B,UAAAuR,oBAAP,SAA2BhJ,EAAkBmY,EAAoBrP,IAK1DwmB,GAAA73B,UAAAoQ,QAAP,WAEC5O,KAAKyzB,SAASnN,UAAUC,OAAOC,aAAapC,EAAAznB,QAAQg6B,mBAAoB32B,KAAK4zB,KAAOxP,EAAAznB,QAAQwqB,SAC5FnnB,MAAKyzB,SAAS7M,SACd5mB,MAAKyzB,SAAS1M,iBAAiB/mB,KAE/BA,MAAKyzB,SAAW,KAGjBnyB,QAAAC,eAAW80B,EAAA73B,UAAA,czC64FJ4L,IyC74FP,WAEC,MAAOpK,MAAKs2B,azC84FN/rB,WAAY,KACZC,aAAc,MyC74FtB,OAAA6rB,IAvC+BhD,EAAA12B,QAyC/B2E,QAAAC,eAAAnG,EAAA,cAAAoG,MAAA,MzCg5FApG,GAAQuB,QyCh5FO05B,IzCk5FZ3N,kBAAkB,kCAAkCmM,4BAA4B,8CAA8C+B,+CAA+C,SAASt8B,EAAQkB,EAAOJ,GACxM,Y0C/7FA,IAAAy7B,GAAA,WAKI,QAAAA,GAAYtnB,GACRvP,KAAKs2B,YAAc/mB,EAGhBsnB,EAAAr4B,UAAAg4B,gBAAP,SAAuBzvB,EAAemY,EAAoBrP,GACtD7P,KAAK82B,aAAe5X,EAAc,CAClClf,MAAK+2B,MAAQ,GAAIC,aAAYjwB,GAG1B8vB,GAAAr4B,UAAAuR,oBAAP,SAA2BhJ,EAAkBmY,EAAoBrP,GAC7D7P,KAAK82B,aAAe5X,EAAc,CAClClf,MAAK+2B,MAAQ,GAAIC,aAAYjwB,GAG1B8vB,GAAAr4B,UAAAoQ,QAAP,WACI5O,KAAK+2B,MAAQ,KAGjBz1B,QAAAC,eAAWs1B,EAAAr4B,UAAA,c1Cy7FP4L,I0Cz7FJ,WACI,MAAOpK,MAAKs2B,a1C27FZ/rB,WAAY,KACZC,aAAc,M0Cz7FlBlJ,QAAAC,eAAWs1B,EAAAr4B,UAAA,Q1C47FP4L,I0C57FJ,WACI,MAAOpK,MAAK+2B,O1C87FZxsB,WAAY,KACZC,aAAc,M0C57FlBlJ,QAAAC,eAAWs1B,EAAAr4B,UAAA,e1C+7FP4L,I0C/7FJ,WACI,MAAOpK,MAAK82B,c1Ci8FZvsB,WAAY,KACZC,aAAc,M0C/7FtB,OAAAqsB,KAEAv1B,QAAAC,eAAAnG,EAAA,cAAAoG,MAAA,M1Ck8FApG,GAAQuB,Q0Cl8FOk6B,O1Co8FTI,4CAA4C,SAAS38B,EAAQkB,EAAOJ,GAC1E,Y2C1+FA,IAAA87B,GAAA,WAOC,QAAAA,GAAY5J,EAA0B/d,GAErCvP,KAAKyqB,IAAM6C,CACXttB,MAAKm3B,QAAUn3B,KAAKyqB,IAAI2M,cACxBp3B,MAAKs2B,YAAc/mB,EAGb2nB,EAAA14B,UAAAg4B,gBAAP,SAAuBzvB,EAAemY,EAAoBrP,GAEzD7P,KAAKyqB,IAAImE,WAAW5uB,KAAKyqB,IAAIoE,qBAAsB7uB,KAAKm3B,QAExD,IAAIjY,EACHlf,KAAKyqB,IAAI4M,cAAcr3B,KAAKyqB,IAAIoE,qBAAsB3P,EAAY,EAAG,GAAI8X,aAAYjwB,QAErF/G,MAAKyqB,IAAI6M,WAAWt3B,KAAKyqB,IAAIoE,qBAAsB,GAAImI,aAAYjwB,GAAO/G,KAAKyqB,IAAI8M,aAG9EL,GAAA14B,UAAAuR,oBAAP,SAA2BhJ,EAAkBmY,EAAoBrP,GAEhE7P,KAAKyqB,IAAImE,WAAW5uB,KAAKyqB,IAAIoE,qBAAsB7uB,KAAKm3B,QAExD,IAAIjY,EACHlf,KAAKyqB,IAAI4M,cAAcr3B,KAAKyqB,IAAIoE,qBAAsB3P,EAAY,EAAGnY,OAErE/G,MAAKyqB,IAAI6M,WAAWt3B,KAAKyqB,IAAIoE,qBAAsB9nB,EAAM/G,KAAKyqB,IAAI8M,aAG7DL,GAAA14B,UAAAoQ,QAAP,WAEC5O,KAAKyqB,IAAI+M,aAAax3B,KAAKm3B,SAG5B71B,QAAAC,eAAW21B,EAAA14B,UAAA,c3C49FJ4L,I2C59FP,WAEC,MAAOpK,MAAKs2B,a3C69FN/rB,WAAY,KACZC,aAAc,M2C39FrBlJ,QAAAC,eAAW21B,EAAA14B,UAAA,Y3C89FJ4L,I2C99FP,WAEC,MAAOpK,MAAKm3B,S3C+9FN5sB,WAAY,KACZC,aAAc,M2C99FtB,OAAA0sB,KAEA51B,QAAAC,eAAAnG,EAAA,cAAAoG,MAAA,M3Ci+FApG,GAAQuB,Q2Cj+FOu6B,O3Cm+FTO,mCAAmC,SAASn9B,EAAQkB,EAAOJ,GACjE,Y4CxhGA,IAAAs8B,GAAA,WAAA,QAAAA,MAEeA,EAAAhR,UAAmB,EACnBgR,GAAA/Q,WAAoB,EACpB+Q,GAAAvQ,QAAiB,EACjBuQ,GAAAtQ,cAAuB,EACvBsQ,GAAApQ,mBAA4B,EAC5BoQ,GAAAra,WAAoB,EACpBqa,GAAApZ,QAAiB,EACjBoZ,GAAAtd,MAAe,EACfsd,GAAAC,YAAqB,EACrBD,GAAAE,iBAA0B,EAC1BF,GAAAnB,gBAAyB,EACzBmB,GAAA5c,oBAA6B,EAC7B4c,GAAAjB,uBAAgC,EAChCiB,GAAAG,wBAAiC,EACjCH,GAAAI,uBAAgC,EAChCJ,GAAAtZ,kBAA2B,EAC3BsZ,GAAAK,uBAAgC,EAChCL,GAAAM,wBAAiC,EACjCN,GAAAtb,aAAsB,EACtBsb,GAAAxa,aAAsB,EACtBwa,GAAAO,eAAwB,EACxBP,GAAA5P,eAAwB,EAExB4P,GAAAQ,oBAA6B,EAE7BR,GAAAf,mBAA4B,EAC5Be,GAAAS,YAAqB,EACrBT,GAAAzZ,aAAsB,EACtByZ,GAAAU,mBAA4B,EAC5BV,GAAAW,eAAwB,EACxBX,GAAA1a,WAAoB,EACpB0a,GAAA9P,eAAwB,EACxB8P,GAAA7P,iBAA0B,EAC1B6P,GAAAzb,gBAAyB,EACzByb,GAAA7X,mBAA4B,EAC5B6X,GAAAzQ,eAAwB,EACxByQ,GAAAhQ,oBAA6B,EAC7BgQ,GAAArb,kBAA2B,EAC3Bqb,GAAA9a,yBAAkC,EAClC8a,GAAA/D,gBAAyB,EACzB+D,GAAA7D,mBAA4B,EAC5B6D,GAAAjD,uBAAgC,EAChCiD,GAAA/P,qBAA8B,EAC9B+P,GAAAjR,oBAA6B,EAC5C,OAAAiR,KAEAp2B,QAAAC,eAAAnG,EAAA,cAAAoG,MAAA,M5C2hGApG,GAAQuB,Q4C3hGO+6B,O5C6hGTY,wCAAwC,SAASh+B,EAAQkB,EAAOJ,GACtE,YACA,IAAIwS,GAAa5N,MAAQA,KAAK4N,WAAc,SAAUC,EAAG3N,GACrD,IAAK,GAAI4N,KAAK5N,GAAG,GAAIA,EAAE6N,eAAeD,GAAID,EAAEC,GAAK5N,EAAE4N,EACnD,SAASE,KAAOhO,KAAKiO,YAAcJ,EACnCA,EAAErP,UAAY0B,IAAM,KAAOoB,OAAO4M,OAAOhO,IAAM8N,EAAGxP,UAAY0B,EAAE1B,UAAW,GAAIwP,I6ChlGnF,IAAAuqB,GAAAj+B,EAA8B,yBAE9B,IAAA8pB,GAAA9pB,EAAyB,kBACzB,IAAA+4B,GAAA/4B,EAAgC,4BAEhC,IAAAk+B,GAAA,SAAApqB,GAA2BR,EAAA4qB,EAAApqB,EAI1B,SAAAoqB,GAAYhpB,GAEXpB,EAAA/S,KAAA2E,KAEAA,MAAKyzB,SAAWjkB,CAChBxP,MAAKyzB,SAASnN,UAAUC,OAAOC,aAAapC,EAAAznB,QAAQg7B,aACpD33B,MAAK4zB,KAAO5zB,KAAKyzB,SAAS7M,SAC1B5mB,MAAKyzB,SAAS5M,cAAc7mB,MAGtBw4B,EAAAh6B,UAAAi6B,OAAP,SAAcC,EAAyBC,GAEtC34B,KAAKyzB,SAASnN,UAAUC,OAAOC,aAAapC,EAAAznB,QAAQm7B,uBAAwB93B,KAAK4zB,KAAOxP,EAAAznB,QAAQwqB,SAAWuR,EAAcE,iBAAiBF,EAAcp9B,QAAU,IAAMq9B,EAAgBC,iBAAiBD,EAAgBr9B,QAAU,IAEnO,IAAIi9B,EAAA57B,QAAeuqB,MAClBlnB,KAAKyzB,SAAS7M,UAGT4R,GAAAh6B,UAAAoQ,QAAP,WAEC5O,KAAKyzB,SAASnN,UAAUC,OAAOC,aAAapC,EAAAznB,QAAQs7B,eAAgBj4B,KAAK4zB,KAAOxP,EAAAznB,QAAQwqB,SACxFnnB,MAAKyzB,SAAS7M,SACd5mB,MAAKyzB,SAAS1M,iBAAiB/mB,KAE/BA,MAAKyzB,SAAW,KAElB,OAAA+E,IA9B2BnF,EAAA12B,QAgC3B2E,QAAAC,eAAAnG,EAAA,cAAAoG,MAAA,M7CukGApG,GAAQuB,Q6CvkGO67B,I7CykGZK,yBAAyB,yCAAyCnQ,kBAAkB,kCAAkCmM,4BAA4B,8CAA8CiE,2CAA2C,SAASx+B,EAAQkB,EAAOJ,GACtQ,Y8C/mGA,IAAAoR,GAAAlS,EAAyC,yBAGzC,IAAAy+B,GAAAz+B,EAAqD,4BAMrD,IAAA2c,GAAA3c,EAA4C,gCAE5C,IAAA8c,GAAA9c,EAA4C,gCAI5C,IAAA6uB,GAAA7uB,EAA2C,sCAE3C,IAAA2d,GAAA3d,EAAiC,+BAIjC,IAAA4uB,GAAA5uB,EAAmC,iCACnC,IAAA0uB,GAAA1uB,EAA+B,6BAC/B,IAAA8uB,GAAA9uB,EAA8B,4BAE9B,IAAA0+B,GAAA,WAuDI,QAAAA,MAIOA,EAAAx6B,UAAAi6B,OAAP,SAAcC,EAAyBC,GACnC34B,KAAKi5B,aAAeD,EAAgBE,WAAWz6B,qBAAqBi6B,EACpE14B,MAAKm5B,eAAiBH,EAAgBE,WAAWz6B,qBAAqBk6B,GAGnEK,GAAAx6B,UAAAoQ,QAAP,WACI5O,KAAKi5B,aAAe,IACpBj5B,MAAKm5B,eAAiB,KAGnBH,GAAAx6B,UAAA2gB,OAAP,SAAcia,EAAiCC,GAC3C,GAAIC,GAAuB,GAAIP,GAAAp8B,OAE/B,IAAI5B,EACJ,KAAKA,EAAI,EAAGA,EAAIq+B,EAAgB5f,eAAele,OAAQP,IAAK,CACxD,GAAIiV,GAA8BopB,EAAgB5f,eAAeze,EACjE,KAAKiV,EAAQ,QAEb,IAAIupB,GAAqB,GAAIniB,GAAAza,QAAS,EAAG,EAAG,EAAG,EAE/C,IAAIoS,GAAeqqB,EAAgB3f,qBAAqB1e,GAAK,EAAIs+B,EAAcrpB,EAAOwpB,mBACtF,IAAIJ,EAAgB1f,qBAAqB3e,IAAMouB,EAAAxsB,QAA4BiZ,gBAAiB,CACxF2jB,EAAUhxB,EAAIyH,EAAOypB,SAAS1qB,EAAM,EACpCwqB,GAAU/wB,EAAIwH,EAAOypB,SAAS1qB,EAAM,EAAE,EACtCwqB,GAAU9wB,EAAIuH,EAAOypB,SAAS1qB,EAAM,EAAE,EACtCwqB,GAAU7wB,EAAIsH,EAAOypB,SAAS1qB,EAAM,EAAE,GAG1C,GAAIqqB,EAAgB1f,qBAAqB3e,IAAMouB,EAAAxsB,QAA4BsY,QAAS,CAChFskB,EAAUhxB,EAAIyH,EAAOjJ,KAAKgI,GAG9B,GAAIqqB,EAAgB1f,qBAAqB3e,IAAMouB,EAAAxsB,QAA4BuY,QAAS,CAChFqkB,EAAUhxB,EAAIyH,EAAOjJ,KAAKgI,EAC1BwqB,GAAU/wB,EAAIwH,EAAOjJ,KAAKgI,EAAQ,GAGtC,GAAIqqB,EAAgB1f,qBAAqB3e,IAAMouB,EAAAxsB,QAA4BwY,QAAS,CAChFokB,EAAUhxB,EAAIyH,EAAOjJ,KAAKgI,EAC1BwqB,GAAU/wB,EAAIwH,EAAOjJ,KAAKgI,EAAQ,EAClCwqB,GAAU9wB,EAAIuH,EAAOjJ,KAAKgI,EAAQ,GAGtC,GAAIqqB,EAAgB1f,qBAAqB3e,IAAMouB,EAAAxsB,QAA4ByY,QAAS,CAChFmkB,EAAUhxB,EAAIyH,EAAOjJ,KAAKgI,EAC1BwqB,GAAU/wB,EAAIwH,EAAOjJ,KAAKgI,EAAQ,EAClCwqB,GAAU9wB,EAAIuH,EAAOjJ,KAAKgI,EAAQ,EAClCwqB,GAAU7wB,EAAIsH,EAAOjJ,KAAKgI,EAAQ,GAEtCuqB,EAAG59B,WAAWX,GAAKw+B,EAGvB,GAAI1e,GAAa7a,KAAKi5B,aAAa/5B,OAAO5D,MAC1C,KAAK,GAAIP,GAAW,EAAGA,EAAI8f,EAAK9f,IAAK,CACjC,GAAIqE,GAAcY,KAAKi5B,aAAa/5B,OAAOnE,EAC3Ci+B,GAAgBU,YAAYt6B,EAAMC,QAAQi6B,EAAIt5B,KAAKi5B,aAAc75B,EAAMM,KAAMN,EAAMtE,EAAGsE,EAAMc,EAAGk5B,GAGnG,MAAOE,GAGJN,GAAAx6B,UAAA8jB,SAAP,SAAgB9S,EAAyBuS,EAAeC,EAAoBC,EAAqBlD,EAAuBC,EAAuBC,EAAuBiD,GAClK,GAAIoX,GAAuB,GAAIP,GAAAp8B,OAC/B28B,GAAGK,YAAczX,CAEjB,KAAK,GAAInnB,GAAW,EAAGA,EAAIgkB,EAAI6a,QAAQt+B,OAAQP,IAAK,CAChD,GAAI8+B,GAAoB9a,EAAI6a,QAAQ7+B,EACpC,IAAI++B,GAAoB9a,EAAI4a,QAAQ7+B,EACpC,IAAIg/B,GAAoB9a,EAAI2a,QAAQ7+B,EACpC,KAAK8+B,IAAaC,IAAaC,EAAU,QAEzC,IAAIlZ,GAAkByY,EAAGM,QAAQ7+B,GAAK,GAAIqc,GAAAza,QAAS,EAAG,EAAG,EAAG,EAC5DkkB,GAAOtY,EAAIwZ,EAAKxZ,EAAIsxB,EAAStxB,EAAIwZ,EAAKvZ,EAAIsxB,EAASvxB,EAAIwZ,EAAKtZ,EAAIsxB,EAASxxB,CACzEsY,GAAOrY,EAAIuZ,EAAKxZ,EAAIsxB,EAASrxB,EAAIuZ,EAAKvZ,EAAIsxB,EAAStxB,EAAIuZ,EAAKtZ,EAAIsxB,EAASvxB,CACzEqY,GAAOpY,EAAIsZ,EAAKxZ,EAAIsxB,EAASpxB,EAAIsZ,EAAKvZ,EAAIsxB,EAASrxB,EAAIsZ,EAAKtZ,EAAIsxB,EAAStxB,CACzEoY,GAAOnY,EAAIqZ,EAAKxZ,EAAIsxB,EAASnxB,EAAIqZ,EAAKvZ,EAAIsxB,EAASpxB,EAAIqZ,EAAKtZ,EAAIsxB,EAASrxB,CAEzE,IAAIsxB,GAAuBV,EAAGU,YAAYj/B,GAAK,GAAIqc,GAAAza,OACnDq9B,GAAYzxB,EAAIyZ,EAAUzZ,EAAIsxB,EAAStxB,EAAIyZ,EAAUxZ,EAAIsxB,EAASvxB,EAAIyZ,EAAUvZ,EAAIsxB,EAASxxB,CAC7FyxB,GAAYxxB,EAAIwZ,EAAUzZ,EAAIsxB,EAASrxB,EAAIwZ,EAAUxZ,EAAIsxB,EAAStxB,EAAIwZ,EAAUvZ,EAAIsxB,EAASvxB,CAC7FwxB,GAAYvxB,EAAIuZ,EAAUzZ,EAAIsxB,EAASpxB,EAAIuZ,EAAUxZ,EAAIsxB,EAASrxB,EAAIuZ,EAAUvZ,EAAIsxB,EAAStxB,CAC7FuxB,GAAYtxB,EAAIsZ,EAAUzZ,EAAIsxB,EAASnxB,EAAIsZ,EAAUxZ,EAAIsxB,EAASpxB,EAAIsZ,EAAUvZ,EAAIsxB,EAASrxB,CAC7FsxB,GAAYzxB,GAAKsY,EAAOtY,CACxByxB,GAAYxxB,GAAKqY,EAAOrY,CACxBwxB,GAAYvxB,GAAKoY,EAAOpY,CACxBuxB,GAAYtxB,GAAKmY,EAAOnY,CAExB,IAAIuxB,GAAuBX,EAAGW,YAAYl/B,GAAK,GAAIqc,GAAAza,OACnDs9B,GAAY1xB,EAAI0Z,EAAW1Z,EAAIsxB,EAAStxB,EAAI0Z,EAAWzZ,EAAIsxB,EAASvxB,EAAI0Z,EAAWxZ,EAAIsxB,EAASxxB,CAChG0xB,GAAYzxB,EAAIyZ,EAAW1Z,EAAIsxB,EAASrxB,EAAIyZ,EAAWzZ,EAAIsxB,EAAStxB,EAAIyZ,EAAWxZ,EAAIsxB,EAASvxB,CAChGyxB,GAAYxxB,EAAIwZ,EAAW1Z,EAAIsxB,EAASpxB,EAAIwZ,EAAWzZ,EAAIsxB,EAASrxB,EAAIwZ,EAAWxZ,EAAIsxB,EAAStxB,CAChGwxB,GAAYvxB,EAAIuZ,EAAW1Z,EAAIsxB,EAASnxB,EAAIuZ,EAAWzZ,EAAIsxB,EAASpxB,EAAIuZ,EAAWxZ,EAAIsxB,EAASrxB,CAChGuxB,GAAY1xB,GAAKsY,EAAOtY,CACxB0xB,GAAYzxB,GAAKqY,EAAOrY,CACxByxB,GAAYxxB,GAAKoY,EAAOpY,CACxBwxB,GAAYvxB,GAAKmY,EAAOnY,EAG5B,GAAImS,GAAa7a,KAAKm5B,eAAej6B,OAAO5D,MAC5C,KAAK,GAAIP,GAAW,EAAGA,EAAI8f,EAAK9f,IAAK,CACjC,GAAIqE,GAAcY,KAAKm5B,eAAej6B,OAAOnE,EAC7Ci+B,GAAgBU,YAAYt6B,EAAMC,QAAQi6B,EAAIt5B,KAAKm5B,eAAgB/5B,EAAMM,KAAMN,EAAMtE,EAAGsE,EAAMc,EAAGsP,GAGrG,MAAO8pB,GAGIN,GAAAkB,cAAf,SAA6BZ,EAAsBr6B,EAAkBS,GACjE,GAAIy6B,EAEJ,IAAIz6B,EAAKI,SAAW,EAAK,CACrBq6B,EAAab,EAAGc,SACb,IAAI16B,EAAKI,SAAW,EAAK,CAE5B,GAAIb,EAAKN,OAAOK,MAAQ,SAAU,CAC9Bm7B,EAAab,EAAGpY,mBACb,CACHiZ,EAAab,EAAG9W,iBAEjB,IAAI9iB,EAAKI,SAAW,EAAK,CAC5Bq6B,EAAab,EAAGM,QAEpB,GAAIS,GAAqB36B,EAAKC,MAC9B,IAAIoe,GAAkBoc,EAAWE,EACjC,KAAKtc,EAAQ,CACTA,EAASoc,EAAWE,GAAe,GAAIjjB,GAAAza,QAAS,EAAG,EAAG,EAAG,GAE7D,MAAOohB,GAGIib,GAAAsB,oBAAf,SAAmChB,EAAsBr6B,EAAkBS,EAAkB8P,GACzF,GAAI2qB,EAEJ,IAAIz6B,EAAKI,SAAW,EAAK,CACrBq6B,EAAab,EAAG59B,eACb,IAAIgE,EAAKI,SAAW,EAAK,CAC5B,GAAIb,EAAKN,OAAOK,MAAQ,SAAU,CAC9Bm7B,EAAa3qB,EAAQoK,qBAClB,CACHugB,EAAa3qB,EAAQmK,wBAEtB,IAAIja,EAAKI,SAAW,EAAK,CAC5Bq6B,EAAab,EAAGc,SACb,IAAI16B,EAAKI,SAAW,EAAK,CAC5Bq6B,EAAab,EAAGM,QAEpB,MAAOO,GAGInB,GAAAuB,uBAAf,SAAsCJ,EAAuBE,GACzD,GAAItc,GAAkBoc,EAAWE,EACjC,KAAKtc,EAAQ,CACTA,EAASoc,EAAWE,GAAe,GAAIjjB,GAAAza,QAAS,EAAG,EAAG,EAAG,GAE7D,MAAOohB,GAGIib,GAAAwB,gBAAf,SAA+BlB,EAAsBr6B,EAAkBS,EAAkB8P,GACrF,GAAI2qB,GAAwBnB,EAAgBsB,oBAAoBhB,EAAIr6B,EAAMS,EAAM8P,EAChF,OAAOwpB,GAAgBuB,uBAAuBJ,EAAYz6B,EAAKC,QAGrDq5B,GAAAyB,IAAd,SAAkBnB,EAAsBr6B,EAAkBS,EAAkBg7B,EAAqBC,EAAqBnrB,GAClH,GAAIuO,GAAkBib,EAAgBkB,cAAcZ,EAAIr6B,EAAMS,EAE9D,IAAIk7B,GAAyB5B,EAAgBwB,gBAAgBlB,EAAIr6B,EAAMy7B,EAASlrB,EAEhF,IAAI/L,IAAiB,IAAK,IAAK,IAAK,IAEpC,IAAI/D,EAAKG,KAAO,EAAG,CACfke,EAAOxV,EAAIqyB,EAAcn3B,EAAMi3B,EAAQn6B,SAAW,EAAK,IAG3D,GAAIb,EAAKG,KAAO,EAAG,CACfke,EAAOvV,EAAIoyB,EAAcn3B,EAAMi3B,EAAQn6B,SAAW,EAAK,IAG3D,GAAIb,EAAKG,KAAO,EAAG,CACfke,EAAOtV,EAAImyB,EAAcn3B,EAAMi3B,EAAQn6B,SAAW,EAAK,IAG3D,GAAIb,EAAKG,KAAO,EAAG,CACfke,EAAOrV,EAAIkyB,EAAcn3B,EAAMi3B,EAAQn6B,SAAW,EAAK,KAIjDy4B,GAAA6B,IAAd,SAAkBvB,EAAsBr6B,EAAkBS,EAAkBg7B,EAAqBC,EAAqBnrB,GAClH,GAAIuO,GAAkBib,EAAgBkB,cAAcZ,EAAIr6B,EAAMS,EAE9D,IAAIk7B,GAAyB5B,EAAgBwB,gBAAgBlB,EAAIr6B,EAAMy7B,EAASlrB,EAEhF,IAAIsrB,GAAyB9B,EAAgBsB,oBAAoBhB,EAAIr6B,EAAM07B,EAASnrB,EAEpF,IAAIurB,GAA0B/B,EAAgBuB,uBAAuBO,EAAaH,EAAQh7B,OAC1F,IAAIq7B,GAA0BhC,EAAgBuB,uBAAuBO,EAAaH,EAAQh7B,OAAS,EACnG,IAAIs7B,GAA0BjC,EAAgBuB,uBAAuBO,EAAaH,EAAQh7B,OAAS,EACnG,IAAIu7B,GAA0BlC,EAAgBuB,uBAAuBO,EAAaH,EAAQh7B,OAAS,EAEnG,IAAI0L,GAAkB,GAAI4L,GAAAta,QAAS,GAAI01B,eACnC0I,EAAexyB,EAAGyyB,EAAezyB,EAAG0yB,EAAe1yB,EAAG2yB,EAAe3yB,EACrEwyB,EAAevyB,EAAGwyB,EAAexyB,EAAGyyB,EAAezyB,EAAG0yB,EAAe1yB,EACrEuyB,EAAetyB,EAAGuyB,EAAevyB,EAAGwyB,EAAexyB,EAAGyyB,EAAezyB,EACrEsyB,EAAeryB,EAAGsyB,EAAetyB,EAAGuyB,EAAevyB,EAAGwyB,EAAexyB,IAGzE,IAAImY,GAAkBxV,EAAOoW,gBAAgBmZ,EAE7C,IAAIl7B,EAAKG,KAAO,EAAG,CACfke,EAAOxV,EAAIsY,EAAOtY,EAGtB,GAAI7I,EAAKG,KAAO,EAAG,CACfke,EAAOvV,EAAIqY,EAAOrY,EAGtB,GAAI9I,EAAKG,KAAO,EAAG,CACfke,EAAOtV,EAAIoY,EAAOpY,EAGtB,GAAI/I,EAAKG,KAAO,EAAG,CACfke,EAAOrV,EAAImY,EAAOnY,GAIXswB,GAAAmC,OAAf,SAAsB7B,EAAsB9pB,EAAyB3U,EAAUugC,EAAUC,EAAqBC,EAAYC,EAAYC,EAAYC,GAC9I,GAAIJ,GAAgB7rB,EAAQ+J,UAAUje,QAAUkU,EAAQ+J,UAAU8hB,IAAiB,KAAM,CACrF,OAAQ,EAAGxgC,EAAGugC,EAAG,GAGrB,GAAIjd,GAA0B3O,EAAQ+J,UAAU8hB,EAChD,IAAIzb,GAA6BpQ,EAAQ8J,eAAe+hB,EACxD,KAAKzb,EAAO,CACRA,EAAQ5f,KAAK07B,qBAEjB,GAAIC,GAAiB/b,EAAM/e,MAAQuoB,EAAAzsB,QAAkB6Z,MACrD,IAAI1V,GAAiB8e,EAAMD,WAAaqJ,EAAArsB,QAAmB6V,SAC3D,IAAI1R,GAAUqd,EAAQyd,oBAAsB,EAAG,CAC3CN,EAAMngB,KAAK0gB,IAAIP,EACfC,GAAMpgB,KAAK0gB,IAAIN,EACfC,GAAMrgB,KAAK0gB,IAAIL,EACfC,GAAMtgB,KAAK0gB,IAAIJ,EAEf,IAAIK,GAAgB3gB,KAAKtU,IAAIsU,KAAKqF,IAAIrC,EAAQpD,MAAQI,KAAK4gB,KAAKT,EAAMA,EAAMC,EAAMA,GAAMpd,EAAQnD,OAASG,KAAK4gB,KAAKP,EAAMA,EAAMC,EAAMA,KAAStgB,KAAK6gB,GACnJ,IAAIF,EAAS,EAAG,CAEZ,GAAIG,GAAqB9gB,KAAKC,MAAM0gB,EACpC,IAAII,GAAsB/gB,KAAKghB,KAAKL,EAEpC,IAAIM,GAAqBjhB,KAAKtU,IAAIsU,KAAKsF,IAAItC,EAAQpD,MAAOoD,EAAQnD,SAAWG,KAAK6gB,GAElF,IAAIE,EAAeE,EAAa,CAC5BF,EAAeE,EAEnB,GAAIH,EAAcG,EAAa,CAC3BH,EAAcG,EAGlB,GAAIC,GAAkBP,EAAS3gB,KAAKC,MAAM0gB,EAE1C,IAAIQ,KACJ,IAAIC,KAGJ,IAAIC,GAAmBre,EAAQse,QAAQR,EACvC,IAAIS,GAAsBve,EAAQpD,MAAQI,KAAKwhB,IAAI,EAAGV,EACtD,IAAIW,GAAuBze,EAAQnD,OAASG,KAAKwhB,IAAI,EAAGV,EACxD,IAAIY,GAAoB1e,EAAQse,QAAQP,EACxC,IAAIY,GAAuB3e,EAAQpD,MAAQI,KAAKwhB,IAAI,EAAGT,EACvD,IAAIa,GAAwB5e,EAAQnD,OAASG,KAAKwhB,IAAI,EAAGT,EAEzD,IAAItc,EAAM7e,QAAUmoB,EAAAvsB,QAAuBqX,OAAQ,CAC/CsoB,EAAYtD,EAAgBgE,eAAeniC,EAAGugC,EAAGoB,EAASE,EAAcE,EAAejB,EACvFY,GAAavD,EAAgBgE,eAAeniC,EAAGugC,EAAGyB,EAAUC,EAAeC,EAAgBpB,OACxF,CACHW,EAAYtD,EAAgBiE,cAAcpiC,EAAGugC,EAAGoB,EAASE,EAAcE,EAAejB,EACtFY,GAAavD,EAAgBiE,cAAcpiC,EAAGugC,EAAGyB,EAAUC,EAAeC,EAAgBpB,GAG9F,MAAO3C,GAAgBkE,iBAAiBZ,EAAWC,EAAYF,IAIvE,GAAIxb,EACJ,IAAI9Z,GAAgBoX,EAAQse,QAAQ,EACpC,IAAI7c,EAAM7e,QAAUmoB,EAAAvsB,QAAuBqX,OAAQ,CAC/C6M,EAASmY,EAAgBgE,eAAeniC,EAAGugC,EAAGr0B,EAAMoX,EAAQpD,MAAOoD,EAAQnD,OAAQ2gB,OAChF,CACH9a,EAASmY,EAAgBiE,cAAcpiC,EAAGugC,EAAGr0B,EAAMoX,EAAQpD,MAAOoD,EAAQnD,OAAQ2gB,GAEtF,MAAO9a,GAGImY,GAAAiE,cAAf,SAA6BpiC,EAAUugC,EAAU+B,EAAsBC,EAAqBC,EAAsB1B,GAC9G9gC,GAAKuiC,CACLhC,IAAKiC,CAEL,IAAI1B,EAAQ,CACR9gC,EAAIsgB,KAAK0gB,IAAIhhC,EAAIuiC,EACjBhC,GAAIjgB,KAAK0gB,IAAIT,EAAIiC,OACd,CACH,GAAIxiC,EAAI,EAAG,CACPA,EAAI,MACD,IAAIA,EAAIuiC,EAAe,EAAG,CAC7BviC,EAAIuiC,EAAe,EAGvB,GAAIhC,EAAI,EAAG,CACPA,EAAI,MACD,IAAIA,EAAIiC,EAAgB,EAAG,CAC9BjC,EAAIiC,EAAgB,GAI5BxiC,EAAIsgB,KAAKC,MAAMvgB,EACfugC,GAAIjgB,KAAKC,MAAMggB,EAEf,IAAI7G,IAAc15B,EAAIugC,EAAIgC,GAAgB,CAC1C,IAAI1iC,GAAWyiC,EAAY5I,GAAO,GAClC,IAAIhU,GAAW4c,EAAY5I,EAAM,GAAK,GACtC,IAAIr0B,GAAWi9B,EAAY5I,EAAM,GAAK,GACtC,IAAIz5B,GAAWqiC,EAAY5I,EAAM,GAAK,GAEtC,QAAQz5B,EAAGJ,EAAG6lB,EAAGrgB,GAGN84B,GAAAgE,eAAf,SAA8BniC,EAAUugC,EAAU+B,EAAsBC,EAAqBC,EAAsB1B,GAC/G,GAAI2B,GAAoB,EAAIF,CAC5B,IAAIG,GAAoB,EAAIF,CAC5BxiC,IAAKyiC,EAAa,CAClBlC,IAAKmC,EAAa,CAElB,IAAIC,GAAmBxE,EAAgBiE,cAAcpiC,EAAGugC,EAAG+B,EAAaC,EAAcC,EAAe1B,EACrG,IAAI8B,GAAmBzE,EAAgBiE,cAAcpiC,EAAIyiC,EAAYlC,EAAG+B,EAAaC,EAAcC,EAAe1B,EAElH,IAAI+B,GAAmB1E,EAAgBiE,cAAcpiC,EAAGugC,EAAImC,EAAYJ,EAAaC,EAAcC,EAAe1B,EAClH,IAAIgC,GAAmB3E,EAAgBiE,cAAcpiC,EAAIyiC,EAAYlC,EAAImC,EAAYJ,EAAaC,EAAcC,EAAe1B,EAE/H,IAAI7gC,GAAWD,EAAIuiC,CACnBtiC,GAAIA,EAAIqgB,KAAKC,MAAMtgB,EAEnB,IAAI8iC,GAAuB5E,EAAgBkE,iBAAiBM,EAASC,EAAS3iC,EAC9E,IAAI+iC,GAAuB7E,EAAgBkE,iBAAiBQ,EAASC,EAAS7iC,EAE9E,IAAIoF,GAAWk7B,EAAIiC,CACnBn9B,GAAIA,EAAIib,KAAKC,MAAMlb,EACnB,OAAO84B,GAAgBkE,iBAAiBU,EAAaC,EAAa39B,GAIvD84B,GAAAkE,iBAAf,SAAgCp3B,EAAiBiY,EAAiBjjB,GAC9D,GAAI+lB,KACJA,GAAO,GAAK/a,EAAO,IAAMiY,EAAO,GAAKjY,EAAO,IAAMhL,CAClD+lB,GAAO,GAAK/a,EAAO,IAAMiY,EAAO,GAAKjY,EAAO,IAAMhL,CAClD+lB,GAAO,GAAK/a,EAAO,IAAMiY,EAAO,GAAKjY,EAAO,IAAMhL,CAClD+lB,GAAO,GAAK/a,EAAO,IAAMiY,EAAO,GAAKjY,EAAO,IAAMhL,CAClD,OAAO+lB,GAGGmY,GAAA8E,IAAd,SAAkBxE,EAAsBr6B,EAAkBS,EAAkBg7B,EAAqBC,EAAqBnrB,GAClH,GAAIuO,GAAkBib,EAAgBkB,cAAcZ,EAAIr6B,EAAMS,EAE9D,IAAIk7B,GAAyB5B,EAAgBwB,gBAAgBlB,EAAIr6B,EAAMy7B,EAASlrB,EAEhF,IAAI/L,IAAiB,IAAK,IAAK,IAAK,IAEpC,IAAI5I,GAAW+/B,EAAcn3B,EAAMi3B,EAAQn6B,SAAW,EAAK,GAC3D,IAAI66B,GAAWR,EAAcn3B,EAAMi3B,EAAQn6B,SAAW,EAAK,GAE3D,IAAI+6B,GAAahC,EAAGU,YAAYU,EAAQ/6B,QAAQ8D,EAAMi3B,EAAQn6B,SAAW,EAAK,GAC9E,IAAIg7B,GAAajC,EAAGU,YAAYU,EAAQ/6B,QAAQ8D,EAAMi3B,EAAQn6B,SAAW,EAAK,GAC9E,IAAIi7B,GAAalC,EAAGW,YAAYS,EAAQ/6B,QAAQ8D,EAAMi3B,EAAQn6B,SAAW,EAAK,GAC9E,IAAIk7B,GAAanC,EAAGW,YAAYS,EAAQ/6B,QAAQ8D,EAAMi3B,EAAQn6B,SAAW,EAAK,GAE9E,IAAI0f,GAAiB+Y,EAAgBmC,OAAO7B,EAAI9pB,EAAS3U,EAAGugC,EAAGT,EAAQh7B,OAAQ27B,EAAKC,EAAKC,EAAKC,EAE9F,IAAI/7B,EAAKG,KAAO,EAAG,CACfke,EAAOxV,EAAI0X,EAAM,GAGrB,GAAIvgB,EAAKG,KAAO,EAAG,CACfke,EAAOvV,EAAIyX,EAAM,GAGrB,GAAIvgB,EAAKG,KAAO,EAAG,CACfke,EAAOtV,EAAIwX,EAAM,GAGrB,GAAIvgB,EAAKG,KAAO,EAAG,CACfke,EAAOrV,EAAIuX,EAAM,IAIX+Y,GAAA+E,IAAd,SAAkBzE,EAAsBr6B,EAAkBS,EAAkBg7B,EAAqBC,EAAqBnrB,GAClH,GAAIuO,GAAkBib,EAAgBkB,cAAcZ,EAAIr6B,EAAMS,EAE9D,IAAIk7B,GAAyB5B,EAAgBwB,gBAAgBlB,EAAIr6B,EAAMy7B,EAASlrB,EAChF,IAAIwuB,GAAyBhF,EAAgBwB,gBAAgBlB,EAAIr6B,EAAM07B,EAASnrB,EAEhF,IAAI/L,IAAiB,IAAK,IAAK,IAAK,IAEpC,IAAI/D,EAAKG,KAAO,EAAG,CACfke,EAAOxV,EAAIqyB,EAAcn3B,EAAMi3B,EAAQn6B,SAAW,EAAK,IAAMy9B,EAAcv6B,EAAMk3B,EAAQp6B,SAAW,EAAK,IAG7G,GAAIb,EAAKG,KAAO,EAAG,CACfke,EAAOvV,EAAIoyB,EAAcn3B,EAAMi3B,EAAQn6B,SAAW,EAAK,IAAMy9B,EAAcv6B,EAAMk3B,EAAQp6B,SAAW,EAAK,IAG7G,GAAIb,EAAKG,KAAO,EAAG,CACfke,EAAOtV,EAAImyB,EAAcn3B,EAAMi3B,EAAQn6B,SAAW,EAAK,IAAMy9B,EAAcv6B,EAAMk3B,EAAQp6B,SAAW,EAAK,IAG7G,GAAIb,EAAKG,KAAO,EAAG,CACfke,EAAOrV,EAAIkyB,EAAcn3B,EAAMi3B,EAAQn6B,SAAW,EAAK,IAAMy9B,EAAcv6B,EAAMk3B,EAAQp6B,SAAW,EAAK,KAInGy4B,GAAAiF,IAAd,SAAkB3E,EAAsBr6B,EAAkBS,EAAkBg7B,EAAqBC,EAAqBnrB,GAClH,GAAIuO,GAAkBib,EAAgBkB,cAAcZ,EAAIr6B,EAAMS,EAE9D,IAAIk7B,GAAyB5B,EAAgBwB,gBAAgBlB,EAAIr6B,EAAMy7B,EAASlrB,EAChF,IAAIwuB,GAAyBhF,EAAgBwB,gBAAgBlB,EAAIr6B,EAAM07B,EAASnrB,EAEhF,IAAI/L,IAAiB,IAAK,IAAK,IAAK,IAEpC,IAAI/D,EAAKG,KAAO,EAAG,CACfke,EAAOxV,EAAIqyB,EAAcn3B,EAAMi3B,EAAQn6B,SAAW,EAAK,IAAMy9B,EAAcv6B,EAAMk3B,EAAQp6B,SAAW,EAAK,IAG7G,GAAIb,EAAKG,KAAO,EAAG,CACfke,EAAOvV,EAAIoyB,EAAcn3B,EAAMi3B,EAAQn6B,SAAW,EAAK,IAAMy9B,EAAcv6B,EAAMk3B,EAAQp6B,SAAW,EAAK,IAG7G,GAAIb,EAAKG,KAAO,EAAG,CACfke,EAAOtV,EAAImyB,EAAcn3B,EAAMi3B,EAAQn6B,SAAW,EAAK,IAAMy9B,EAAcv6B,EAAMk3B,EAAQp6B,SAAW,EAAK,IAG7G,GAAIb,EAAKG,KAAO,EAAG,CACfke,EAAOrV,EAAIkyB,EAAcn3B,EAAMi3B,EAAQn6B,SAAW,EAAK,IAAMy9B,EAAcv6B,EAAMk3B,EAAQp6B,SAAW,EAAK,KAInGy4B,GAAAkF,IAAd,SAAkB5E,EAAsBr6B,EAAkBS,EAAkBg7B,EAAqBC,EAAqBnrB,GAClH,GAAIuO,GAAkBib,EAAgBkB,cAAcZ,EAAIr6B,EAAMS,EAE9D,IAAIk7B,GAAyB5B,EAAgBwB,gBAAgBlB,EAAIr6B,EAAMy7B,EAASlrB,EAChF,IAAIwuB,GAAyBhF,EAAgBwB,gBAAgBlB,EAAIr6B,EAAM07B,EAASnrB,EAEhF,IAAI/L,IAAiB,IAAK,IAAK,IAAK,IAEpC,IAAI/D,EAAKG,KAAO,EAAG,CACfke,EAAOxV,EAAIqyB,EAAcn3B,EAAMi3B,EAAQn6B,SAAW,EAAK,IAAMy9B,EAAcv6B,EAAMk3B,EAAQp6B,SAAW,EAAK,IAG7G,GAAIb,EAAKG,KAAO,EAAG,CACfke,EAAOvV,EAAIoyB,EAAcn3B,EAAMi3B,EAAQn6B,SAAW,EAAK,IAAMy9B,EAAcv6B,EAAMk3B,EAAQp6B,SAAW,EAAK,IAG7G,GAAIb,EAAKG,KAAO,EAAG,CACfke,EAAOtV,EAAImyB,EAAcn3B,EAAMi3B,EAAQn6B,SAAW,EAAK,IAAMy9B,EAAcv6B,EAAMk3B,EAAQp6B,SAAW,EAAK,IAG7G,GAAIb,EAAKG,KAAO,EAAG,CACfke,EAAOrV,EAAIkyB,EAAcn3B,EAAMi3B,EAAQn6B,SAAW,EAAK,IAAMy9B,EAAcv6B,EAAMk3B,EAAQp6B,SAAW,EAAK,KAInGy4B,GAAAmF,IAAd,SAAkB7E,EAAsBr6B,EAAkBS,EAAkBg7B,EAAqBC,EAAqBnrB,GAClH,GAAIuO,GAAkBib,EAAgBkB,cAAcZ,EAAIr6B,EAAMS,EAE9D,IAAIk7B,GAAyB5B,EAAgBwB,gBAAgBlB,EAAIr6B,EAAMy7B,EAASlrB,EAChF,IAAIwuB,GAAyBhF,EAAgBwB,gBAAgBlB,EAAIr6B,EAAM07B,EAASnrB,EAEhF,IAAI/L,IAAiB,IAAK,IAAK,IAAK,IAEpC,IAAI/D,EAAKG,KAAO,EAAG,CACfke,EAAOxV,EAAIqyB,EAAcn3B,EAAMi3B,EAAQn6B,SAAW,EAAK,IAAMy9B,EAAcv6B,EAAMk3B,EAAQp6B,SAAW,EAAK,IAG7G,GAAIb,EAAKG,KAAO,EAAG,CACfke,EAAOvV,EAAIoyB,EAAcn3B,EAAMi3B,EAAQn6B,SAAW,EAAK,IAAMy9B,EAAcv6B,EAAMk3B,EAAQp6B,SAAW,EAAK,IAG7G,GAAIb,EAAKG,KAAO,EAAG,CACfke,EAAOtV,EAAImyB,EAAcn3B,EAAMi3B,EAAQn6B,SAAW,EAAK,IAAMy9B,EAAcv6B,EAAMk3B,EAAQp6B,SAAW,EAAK,IAG7G,GAAIb,EAAKG,KAAO,EAAG,CACfke,EAAOrV,EAAIkyB,EAAcn3B,EAAMi3B,EAAQn6B,SAAW,EAAK,IAAMy9B,EAAcv6B,EAAMk3B,EAAQp6B,SAAW,EAAK,KAInGy4B,GAAAoF,IAAd,SAAkB9E,EAAsBr6B,EAAkBS,EAAkBg7B,EAAqBC,EAAqBnrB,GAClH,GAAIuO,GAAkBib,EAAgBkB,cAAcZ,EAAIr6B,EAAMS,EAE9D,IAAIk7B,GAAyB5B,EAAgBwB,gBAAgBlB,EAAIr6B,EAAMy7B,EAASlrB,EAEhF,IAAI/L,IAAiB,IAAK,IAAK,IAAK,IAEpC,IAAI/D,EAAKG,KAAO,EAAG,CACfke,EAAOxV,EAAI,EAAIqyB,EAAcn3B,EAAMi3B,EAAQn6B,SAAW,EAAK,IAG/D,GAAIb,EAAKG,KAAO,EAAG,CACfke,EAAOvV,EAAI,EAAIoyB,EAAcn3B,EAAMi3B,EAAQn6B,SAAW,EAAK,IAG/D,GAAIb,EAAKG,KAAO,EAAG,CACfke,EAAOtV,EAAI,EAAImyB,EAAcn3B,EAAMi3B,EAAQn6B,SAAW,EAAK,IAG/D,GAAIb,EAAKG,KAAO,EAAG,CACfke,EAAOrV,EAAI,EAAIkyB,EAAcn3B,EAAMi3B,EAAQn6B,SAAW,EAAK,KAIrDy4B,GAAAvY,IAAd,SAAkB6Y,EAAsBr6B,EAAkBS,EAAkBg7B,EAAqBC,EAAqBnrB,GAClH,GAAIuO,GAAkBib,EAAgBkB,cAAcZ,EAAIr6B,EAAMS,EAE9D,IAAIk7B,GAAyB5B,EAAgBwB,gBAAgBlB,EAAIr6B,EAAMy7B,EAASlrB,EAChF,IAAIwuB,GAAyBhF,EAAgBwB,gBAAgBlB,EAAIr6B,EAAM07B,EAASnrB,EAEhF,IAAI/L,IAAiB,IAAK,IAAK,IAAK,IAEpC,IAAI/D,EAAKG,KAAO,EAAG,CACfke,EAAOxV,EAAI4S,KAAKsF,IAAIma,EAAcn3B,EAAMi3B,EAAQn6B,SAAW,EAAK,IAAKy9B,EAAcv6B,EAAMk3B,EAAQp6B,SAAW,EAAK,KAGrH,GAAIb,EAAKG,KAAO,EAAG,CACfke,EAAOvV,EAAI2S,KAAKsF,IAAIma,EAAcn3B,EAAMi3B,EAAQn6B,SAAW,EAAK,IAAKy9B,EAAcv6B,EAAMk3B,EAAQp6B,SAAW,EAAK,KAGrH,GAAIb,EAAKG,KAAO,EAAG,CACfke,EAAOtV,EAAI0S,KAAKsF,IAAIma,EAAcn3B,EAAMi3B,EAAQn6B,SAAW,EAAK,IAAKy9B,EAAcv6B,EAAMk3B,EAAQp6B,SAAW,EAAK,KAGrH,GAAIb,EAAKG,KAAO,EAAG,CACfke,EAAOrV,EAAIyS,KAAKsF,IAAIma,EAAcn3B,EAAMi3B,EAAQn6B,SAAW,EAAK,IAAKy9B,EAAcv6B,EAAMk3B,EAAQp6B,SAAW,EAAK,MAI3Gy4B,GAAAxY,IAAd,SAAkB8Y,EAAsBr6B,EAAkBS,EAAkBg7B,EAAqBC,EAAqBnrB,GAClH,GAAIuO,GAAkBib,EAAgBkB,cAAcZ,EAAIr6B,EAAMS,EAE9D,IAAIk7B,GAAyB5B,EAAgBwB,gBAAgBlB,EAAIr6B,EAAMy7B,EAASlrB,EAChF,IAAIwuB,GAAyBhF,EAAgBwB,gBAAgBlB,EAAIr6B,EAAM07B,EAASnrB,EAEhF,IAAI/L,IAAiB,IAAK,IAAK,IAAK,IAEpC,IAAI/D,EAAKG,KAAO,EAAG,CACfke,EAAOxV,EAAI4S,KAAKqF,IAAIoa,EAAcn3B,EAAMi3B,EAAQn6B,SAAW,EAAK,IAAKy9B,EAAcv6B,EAAMk3B,EAAQp6B,SAAW,EAAK,KAGrH,GAAIb,EAAKG,KAAO,EAAG,CACfke,EAAOvV,EAAI2S,KAAKqF,IAAIoa,EAAcn3B,EAAMi3B,EAAQn6B,SAAW,EAAK,IAAKy9B,EAAcv6B,EAAMk3B,EAAQp6B,SAAW,EAAK,KAGrH,GAAIb,EAAKG,KAAO,EAAG,CACfke,EAAOtV,EAAI0S,KAAKqF,IAAIoa,EAAcn3B,EAAMi3B,EAAQn6B,SAAW,EAAK,IAAKy9B,EAAcv6B,EAAMk3B,EAAQp6B,SAAW,EAAK,KAGrH,GAAIb,EAAKG,KAAO,EAAG,CACfke,EAAOrV,EAAIyS,KAAKqF,IAAIoa,EAAcn3B,EAAMi3B,EAAQn6B,SAAW,EAAK,IAAKy9B,EAAcv6B,EAAMk3B,EAAQp6B,SAAW,EAAK,MAI3Gy4B,GAAAqF,IAAd,SAAkB/E,EAAsBr6B,EAAkBS,EAAkBg7B,EAAqBC,EAAqBnrB,GAClH,GAAIuO,GAAkBib,EAAgBkB,cAAcZ,EAAIr6B,EAAMS,EAE9D,IAAIk7B,GAAyB5B,EAAgBwB,gBAAgBlB,EAAIr6B,EAAMy7B,EAASlrB,EAEhF,IAAI/L,IAAiB,IAAK,IAAK,IAAK,IAEpC,IAAI/D,EAAKG,KAAO,EAAG,CACfke,EAAOxV,EAAIqyB,EAAcn3B,EAAMi3B,EAAQn6B,SAAW,EAAK,IAAM4a,KAAKC,MAAMwf,EAAcn3B,EAAMi3B,EAAQn6B,SAAW,EAAK,KAGxH,GAAIb,EAAKG,KAAO,EAAG,CACfke,EAAOvV,EAAIoyB,EAAcn3B,EAAMi3B,EAAQn6B,SAAW,EAAK,IAAM4a,KAAKC,MAAMwf,EAAcn3B,EAAMi3B,EAAQn6B,SAAW,EAAK,KAGxH,GAAIb,EAAKG,KAAO,EAAG,CACfke,EAAOtV,EAAImyB,EAAcn3B,EAAMi3B,EAAQn6B,SAAW,EAAK,IAAM4a,KAAKC,MAAMwf,EAAcn3B,EAAMi3B,EAAQn6B,SAAW,EAAK,KAGxH,GAAIb,EAAKG,KAAO,EAAG,CACfke,EAAOrV,EAAIkyB,EAAcn3B,EAAMi3B,EAAQn6B,SAAW,EAAK,IAAM4a,KAAKC,MAAMwf,EAAcn3B,EAAMi3B,EAAQn6B,SAAW,EAAK,MAI9Gy4B,GAAAsF,IAAd,SAAkBhF,EAAsBr6B,EAAkBS,EAAkBg7B,EAAqBC,EAAqBnrB,GAClH,GAAIuO,GAAkBib,EAAgBkB,cAAcZ,EAAIr6B,EAAMS,EAE9D,IAAIk7B,GAAyB5B,EAAgBwB,gBAAgBlB,EAAIr6B,EAAMy7B,EAASlrB,EAEhF,IAAI/L,IAAiB,IAAK,IAAK,IAAK,IAEpC,IAAI/D,EAAKG,KAAO,EAAG,CACfke,EAAOxV,EAAI4S,KAAK4gB,KAAKnB,EAAcn3B,EAAMi3B,EAAQn6B,SAAW,EAAK,KAGrE,GAAIb,EAAKG,KAAO,EAAG,CACfke,EAAOvV,EAAI2S,KAAK4gB,KAAKnB,EAAcn3B,EAAMi3B,EAAQn6B,SAAW,EAAK,KAGrE,GAAIb,EAAKG,KAAO,EAAG,CACfke,EAAOtV,EAAI0S,KAAK4gB,KAAKnB,EAAcn3B,EAAMi3B,EAAQn6B,SAAW,EAAK,KAGrE,GAAIb,EAAKG,KAAO,EAAG,CACfke,EAAOrV,EAAIyS,KAAK4gB,KAAKnB,EAAcn3B,EAAMi3B,EAAQn6B,SAAW,EAAK,MAI3Dy4B,GAAAuF,IAAd,SAAkBjF,EAAsBr6B,EAAkBS,EAAkBg7B,EAAqBC,EAAqBnrB,GAClH,GAAIuO,GAAkBib,EAAgBkB,cAAcZ,EAAIr6B,EAAMS,EAE9D,IAAIk7B,GAAyB5B,EAAgBwB,gBAAgBlB,EAAIr6B,EAAMy7B,EAASlrB,EAEhF,IAAI/L,IAAiB,IAAK,IAAK,IAAK,IAEpC,IAAI/D,EAAKG,KAAO,EAAG,CACfke,EAAOxV,EAAI,EAAI4S,KAAK4gB,KAAKnB,EAAcn3B,EAAMi3B,EAAQn6B,SAAW,EAAK,KAGzE,GAAIb,EAAKG,KAAO,EAAG,CACfke,EAAOvV,EAAI,EAAI2S,KAAK4gB,KAAKnB,EAAcn3B,EAAMi3B,EAAQn6B,SAAW,EAAK,KAGzE,GAAIb,EAAKG,KAAO,EAAG,CACfke,EAAOtV,EAAI,EAAI0S,KAAK4gB,KAAKnB,EAAcn3B,EAAMi3B,EAAQn6B,SAAW,EAAK,KAGzE,GAAIb,EAAKG,KAAO,EAAG,CACfke,EAAOrV,EAAI,EAAIyS,KAAK4gB,KAAKnB,EAAcn3B,EAAMi3B,EAAQn6B,SAAW,EAAK,MAI/Dy4B,GAAA2D,IAAd,SAAkBrD,EAAsBr6B,EAAkBS,EAAkBg7B,EAAqBC,EAAqBnrB,GAClH,GAAIuO,GAAkBib,EAAgBkB,cAAcZ,EAAIr6B,EAAMS,EAE9D,IAAIk7B,GAAyB5B,EAAgBwB,gBAAgBlB,EAAIr6B,EAAMy7B,EAASlrB,EAChF,IAAIwuB,GAAyBhF,EAAgBwB,gBAAgBlB,EAAIr6B,EAAM07B,EAASnrB,EAEhF,IAAI/L,IAAiB,IAAK,IAAK,IAAK,IAEpC,IAAI/D,EAAKG,KAAO,EAAG,CACfke,EAAOxV,EAAI4S,KAAKwhB,IAAI/B,EAAcn3B,EAAMi3B,EAAQn6B,SAAW,EAAK,IAAKy9B,EAAcv6B,EAAMk3B,EAAQp6B,SAAW,EAAK,KAGrH,GAAIb,EAAKG,KAAO,EAAG,CACfke,EAAOvV,EAAI2S,KAAKwhB,IAAI/B,EAAcn3B,EAAMi3B,EAAQn6B,SAAW,EAAK,IAAKy9B,EAAcv6B,EAAMk3B,EAAQp6B,SAAW,EAAK,KAGrH,GAAIb,EAAKG,KAAO,EAAG,CACfke,EAAOtV,EAAI0S,KAAKwhB,IAAI/B,EAAcn3B,EAAMi3B,EAAQn6B,SAAW,EAAK,IAAKy9B,EAAcv6B,EAAMk3B,EAAQp6B,SAAW,EAAK,KAGrH,GAAIb,EAAKG,KAAO,EAAG,CACfke,EAAOrV,EAAIyS,KAAKwhB,IAAI/B,EAAcn3B,EAAMi3B,EAAQn6B,SAAW,EAAK,IAAKy9B,EAAcv6B,EAAMk3B,EAAQp6B,SAAW,EAAK,MAI3Gy4B,GAAAnyB,IAAd,SAAkByyB,EAAsBr6B,EAAkBS,EAAkBg7B,EAAqBC,EAAqBnrB,GAClH,GAAIuO,GAAkBib,EAAgBkB,cAAcZ,EAAIr6B,EAAMS,EAE9D,IAAIk7B,GAAyB5B,EAAgBwB,gBAAgBlB,EAAIr6B,EAAMy7B,EAASlrB,EAEhF,IAAI/L,IAAiB,IAAK,IAAK,IAAK,IAEpC,IAAI/D,EAAKG,KAAO,EAAG,CACfke,EAAOxV,EAAI4S,KAAKtU,IAAI+zB,EAAcn3B,EAAMi3B,EAAQn6B,SAAW,EAAK,KAAO4a,KAAK6gB,IAGhF,GAAIt8B,EAAKG,KAAO,EAAG,CACfke,EAAOvV,EAAI2S,KAAKtU,IAAI+zB,EAAcn3B,EAAMi3B,EAAQn6B,SAAW,EAAK,KAAO4a,KAAK6gB,IAGhF,GAAIt8B,EAAKG,KAAO,EAAG,CACfke,EAAOtV,EAAI0S,KAAKtU,IAAI+zB,EAAcn3B,EAAMi3B,EAAQn6B,SAAW,EAAK,KAAO4a,KAAK6gB,IAGhF,GAAIt8B,EAAKG,KAAO,EAAG,CACfke,EAAOrV,EAAIyS,KAAKtU,IAAI+zB,EAAcn3B,EAAMi3B,EAAQn6B,SAAW,EAAK,KAAO4a,KAAK6gB,KAItEhD,GAAAwF,IAAd,SAAkBlF,EAAsBr6B,EAAkBS,EAAkBg7B,EAAqBC,EAAqBnrB,GAClH,GAAIuO,GAAkBib,EAAgBkB,cAAcZ,EAAIr6B,EAAMS,EAE9D,IAAIk7B,GAAyB5B,EAAgBwB,gBAAgBlB,EAAIr6B,EAAMy7B,EAASlrB,EAEhF,IAAI/L,IAAiB,IAAK,IAAK,IAAK,IAEpC,IAAI/D,EAAKG,KAAO,EAAG,CACfke,EAAOxV,EAAI4S,KAAKqjB,IAAI5D,EAAcn3B,EAAMi3B,EAAQn6B,SAAW,EAAK,KAGpE,GAAIb,EAAKG,KAAO,EAAG,CACfke,EAAOvV,EAAI2S,KAAKqjB,IAAI5D,EAAcn3B,EAAMi3B,EAAQn6B,SAAW,EAAK,KAGpE,GAAIb,EAAKG,KAAO,EAAG,CACfke,EAAOtV,EAAI0S,KAAKqjB,IAAI5D,EAAcn3B,EAAMi3B,EAAQn6B,SAAW,EAAK,KAGpE,GAAIb,EAAKG,KAAO,EAAG,CACfke,EAAOrV,EAAIyS,KAAKqjB,IAAI5D,EAAcn3B,EAAMi3B,EAAQn6B,SAAW,EAAK,MAI1Dy4B,GAAAyF,IAAd,SAAkBnF,EAAsBr6B,EAAkBS,EAAkBg7B,EAAqBC,EAAqBnrB,GAClH,GAAIuO,GAAkBib,EAAgBkB,cAAcZ,EAAIr6B,EAAMS;AAE9D,GAAIk7B,GAAyB5B,EAAgBwB,gBAAgBlB,EAAIr6B,EAAMy7B,EAASlrB,EAEhF,IAAI/L,IAAiB,IAAK,IAAK,IAAK,IAEpC,IAAI8E,GAAWqyB,EAAcn3B,EAAMi3B,EAAQn6B,SAAW,EAAK,GAC3D,IAAIiI,GAAWoyB,EAAcn3B,EAAMi3B,EAAQn6B,SAAW,EAAK,GAC3D,IAAIkI,GAAWmyB,EAAcn3B,EAAMi3B,EAAQn6B,SAAW,EAAK,GAE3D,IAAIsa,GAAaM,KAAK4gB,KAAKxzB,EAAIA,EAAIC,EAAIA,EAAIC,EAAIA,EAC/CF,IAAKsS,CACLrS,IAAKqS,CACLpS,IAAKoS,CAEL,IAAInb,EAAKG,KAAO,EAAG,CACfke,EAAOxV,EAAIA,EAGf,GAAI7I,EAAKG,KAAO,EAAG,CACfke,EAAOvV,EAAIA,EAGf,GAAI9I,EAAKG,KAAO,EAAG,CACfke,EAAOtV,EAAIA,GAILuwB,GAAA0F,IAAd,SAAkBpF,EAAsBr6B,EAAkBS,EAAkBg7B,EAAqBC,EAAqBnrB,GAClH,GAAIuO,GAAkBib,EAAgBkB,cAAcZ,EAAIr6B,EAAMS,EAE9D,IAAIk7B,GAAyB5B,EAAgBwB,gBAAgBlB,EAAIr6B,EAAMy7B,EAASlrB,EAEhF,IAAI/L,IAAiB,IAAK,IAAK,IAAK,IAEpC,IAAI/D,EAAKG,KAAO,EAAG,CACfke,EAAOxV,EAAI4S,KAAKujB,IAAI9D,EAAcn3B,EAAMi3B,EAAQn6B,SAAW,EAAK,KAGpE,GAAIb,EAAKG,KAAO,EAAG,CACfke,EAAOvV,EAAI2S,KAAKujB,IAAI9D,EAAcn3B,EAAMi3B,EAAQn6B,SAAW,EAAK,KAGpE,GAAIb,EAAKG,KAAO,EAAG,CACfke,EAAOtV,EAAI0S,KAAKujB,IAAI9D,EAAcn3B,EAAMi3B,EAAQn6B,SAAW,EAAK,KAGpE,GAAIb,EAAKG,KAAO,EAAG,CACfke,EAAOrV,EAAIyS,KAAKujB,IAAI9D,EAAcn3B,EAAMi3B,EAAQn6B,SAAW,EAAK,MAI1Dy4B,GAAA2F,IAAd,SAAkBrF,EAAsBr6B,EAAkBS,EAAkBg7B,EAAqBC,EAAqBnrB,GAClH,GAAIuO,GAAkBib,EAAgBkB,cAAcZ,EAAIr6B,EAAMS,EAE9D,IAAIk7B,GAAyB5B,EAAgBwB,gBAAgBlB,EAAIr6B,EAAMy7B,EAASlrB,EAEhF,IAAI/L,IAAiB,IAAK,IAAK,IAAK,IAEpC,IAAI/D,EAAKG,KAAO,EAAG,CACfke,EAAOxV,EAAI4S,KAAKwjB,IAAI/D,EAAcn3B,EAAMi3B,EAAQn6B,SAAW,EAAK,KAGpE,GAAIb,EAAKG,KAAO,EAAG,CACfke,EAAOvV,EAAI2S,KAAKwjB,IAAI/D,EAAcn3B,EAAMi3B,EAAQn6B,SAAW,EAAK,KAGpE,GAAIb,EAAKG,KAAO,EAAG,CACfke,EAAOtV,EAAI0S,KAAKwjB,IAAI/D,EAAcn3B,EAAMi3B,EAAQn6B,SAAW,EAAK,KAGpE,GAAIb,EAAKG,KAAO,EAAG,CACfke,EAAOrV,EAAIyS,KAAKwjB,IAAI/D,EAAcn3B,EAAMi3B,EAAQn6B,SAAW,EAAK,MAI1Dy4B,GAAA4F,IAAd,SAAkBtF,EAAsBr6B,EAAkBS,EAAkBg7B,EAAqBC,EAAqBnrB,GAClH,GAAIuO,GAAkBib,EAAgBkB,cAAcZ,EAAIr6B,EAAMS,EAE9D,IAAI+D,IAAiB,IAAK,IAAK,IAAK,IAEpC,IAAIm3B,GAAyB5B,EAAgBwB,gBAAgBlB,EAAIr6B,EAAMy7B,EAASlrB,EAChF,IAAIqvB,GAAwBjE,EAAcn3B,EAAMi3B,EAAQn6B,SAAW,EAAK,GACxE,IAAIu+B,GAAwBlE,EAAcn3B,EAAMi3B,EAAQn6B,SAAW,EAAK,GACxE,IAAIw+B,GAAwBnE,EAAcn3B,EAAMi3B,EAAQn6B,SAAW,EAAK,GAExE,IAAIy9B,GAAyBhF,EAAgBwB,gBAAgBlB,EAAIr6B,EAAM07B,EAASnrB,EAChF,IAAIwvB,GAAwBhB,EAAcv6B,EAAMk3B,EAAQp6B,SAAW,EAAK,GACxE,IAAI0+B,GAAwBjB,EAAcv6B,EAAMk3B,EAAQp6B,SAAW,EAAK,GACxE,IAAI2+B,GAAwBlB,EAAcv6B,EAAMk3B,EAAQp6B,SAAW,EAAK,GAExE,IAAIb,EAAKG,KAAO,EAAG,CACfke,EAAOxV,EAAIu2B,EAAiBI,EAAiBH,EAAiBE,EAGlE,GAAIv/B,EAAKG,KAAO,EAAG,CACfke,EAAOvV,EAAIu2B,EAAiBC,EAAiBH,EAAiBK,EAGlE,GAAIx/B,EAAKG,KAAO,EAAG,CACfke,EAAOtV,EAAIo2B,EAAiBI,EAAiBH,EAAiBE,GAIxDhG,GAAAmG,IAAd,SAAkB7F,EAAsBr6B,EAAkBS,EAAkBg7B,EAAqBC,EAAqBnrB,GAClH,GAAIuO,GAAkBib,EAAgBkB,cAAcZ,EAAIr6B,EAAMS,EAE9D,IAAI+D,IAAiB,IAAK,IAAK,IAAK,IAEpC,IAAIm3B,GAAyB5B,EAAgBwB,gBAAgBlB,EAAIr6B,EAAMy7B,EAASlrB,EAChF,IAAIqvB,GAAwBjE,EAAcn3B,EAAMi3B,EAAQn6B,SAAW,EAAK,GACxE,IAAIu+B,GAAwBlE,EAAcn3B,EAAMi3B,EAAQn6B,SAAW,EAAK,GACxE,IAAIw+B,GAAwBnE,EAAcn3B,EAAMi3B,EAAQn6B,SAAW,EAAK,GAExE,IAAIy9B,GAAyBhF,EAAgBwB,gBAAgBlB,EAAIr6B,EAAM07B,EAASnrB,EAChF,IAAIwvB,GAAwBhB,EAAcv6B,EAAMk3B,EAAQp6B,SAAW,EAAK,GACxE,IAAI0+B,GAAwBjB,EAAcv6B,EAAMk3B,EAAQp6B,SAAW,EAAK,GACxE,IAAI2+B,GAAwBlB,EAAcv6B,EAAMk3B,EAAQp6B,SAAW,EAAK,GAExE,IAAIb,EAAKG,KAAO,EAAG,CACfke,EAAOxV,EAAIs2B,EAAiBG,EAAiBF,EAAiBG,EAAiBF,EAAiBG,EAGpG,GAAIx/B,EAAKG,KAAO,EAAG,CACfke,EAAOvV,EAAIq2B,EAAiBG,EAAiBF,EAAiBG,EAAiBF,EAAiBG,EAGpG,GAAIx/B,EAAKG,KAAO,EAAG,CACfke,EAAOtV,EAAIo2B,EAAiBG,EAAiBF,EAAiBG,EAAiBF,EAAiBG,EAGpG,GAAIx/B,EAAKG,KAAO,EAAG,CACfke,EAAOrV,EAAIm2B,EAAiBG,EAAiBF,EAAiBG,EAAiBF,EAAiBG,GAI1FlG,GAAAoG,IAAd,SAAkB9F,EAAsBr6B,EAAkBS,EAAkBg7B,EAAqBC,EAAqBnrB,GAClH,GAAIuO,GAAkBib,EAAgBkB,cAAcZ,EAAIr6B,EAAMS,EAE9D,IAAI+D,IAAiB,IAAK,IAAK,IAAK,IAEpC,IAAIm3B,GAAyB5B,EAAgBwB,gBAAgBlB,EAAIr6B,EAAMy7B,EAASlrB,EAChF,IAAIqvB,GAAwBjE,EAAcn3B,EAAMi3B,EAAQn6B,SAAW,EAAK,GACxE,IAAIu+B,GAAwBlE,EAAcn3B,EAAMi3B,EAAQn6B,SAAW,EAAK,GACxE,IAAIw+B,GAAwBnE,EAAcn3B,EAAMi3B,EAAQn6B,SAAW,EAAK,GACxE,IAAI8+B,GAAwBzE,EAAcn3B,EAAMi3B,EAAQn6B,SAAW,EAAK,GAExE,IAAIy9B,GAAyBhF,EAAgBwB,gBAAgBlB,EAAIr6B,EAAM07B,EAASnrB,EAChF,IAAIwvB,GAAwBhB,EAAcv6B,EAAMk3B,EAAQp6B,SAAW,EAAK,GACxE,IAAI0+B,GAAwBjB,EAAcv6B,EAAMk3B,EAAQp6B,SAAW,EAAK,GACxE,IAAI2+B,GAAwBlB,EAAcv6B,EAAMk3B,EAAQp6B,SAAW,EAAK,GACxE,IAAI++B,GAAwBtB,EAAcv6B,EAAMk3B,EAAQp6B,SAAW,EAAK,GAExE,IAAIb,EAAKG,KAAO,EAAG,CACfke,EAAOxV,EAAIs2B,EAAiBG,EAAiBF,EAAiBG,EAAiBF,EAAiBG,EAAiBG,EAAiBC,EAGtI,GAAI5/B,EAAKG,KAAO,EAAG,CACfke,EAAOvV,EAAIq2B,EAAiBG,EAAiBF,EAAiBG,EAAiBF,EAAiBG,EAAiBG,EAAiBC,EAGtI,GAAI5/B,EAAKG,KAAO,EAAG,CACfke,EAAOtV,EAAIo2B,EAAiBG,EAAiBF,EAAiBG,EAAiBF,EAAiBG,EAAiBG,EAAiBC,EAGtI,GAAI5/B,EAAKG,KAAO,EAAG,CACfke,EAAOrV,EAAIm2B,EAAiBG,EAAiBF,EAAiBG,EAAiBF,EAAiBG,EAAiBG,EAAiBC,GAI5HtG,GAAA6C,IAAd,SAAkBvC,EAAsBr6B,EAAkBS,EAAkBg7B,EAAqBC,EAAqBnrB,GAClH,GAAIuO,GAAkBib,EAAgBkB,cAAcZ,EAAIr6B,EAAMS,EAE9D,IAAIk7B,GAAyB5B,EAAgBwB,gBAAgBlB,EAAIr6B,EAAMy7B,EAASlrB,EAEhF,IAAI/L,IAAiB,IAAK,IAAK,IAAK,IAEpC,IAAI/D,EAAKG,KAAO,EAAG,CACfke,EAAOxV,EAAI4S,KAAK0gB,IAAIjB,EAAcn3B,EAAMi3B,EAAQn6B,SAAW,EAAK,KAGpE,GAAIb,EAAKG,KAAO,EAAG,CACfke,EAAOvV,EAAI2S,KAAK0gB,IAAIjB,EAAcn3B,EAAMi3B,EAAQn6B,SAAW,EAAK,KAGpE,GAAIb,EAAKG,KAAO,EAAG,CACfke,EAAOtV,EAAI0S,KAAK0gB,IAAIjB,EAAcn3B,EAAMi3B,EAAQn6B,SAAW,EAAK,KAGpE,GAAIb,EAAKG,KAAO,EAAG,CACfke,EAAOrV,EAAIyS,KAAK0gB,IAAIjB,EAAcn3B,EAAMi3B,EAAQn6B,SAAW,EAAK,MAI1Dy4B,GAAAuG,IAAd,SAAkBjG,EAAsBr6B,EAAkBS,EAAkBg7B,EAAqBC,EAAqBnrB,GAClH,GAAIuO,GAAkBib,EAAgBkB,cAAcZ,EAAIr6B,EAAMS,EAE9D,IAAIk7B,GAAyB5B,EAAgBwB,gBAAgBlB,EAAIr6B,EAAMy7B,EAASlrB,EAEhF,IAAI/L,IAAiB,IAAK,IAAK,IAAK,IAEpC,IAAI/D,EAAKG,KAAO,EAAG,CACfke,EAAOxV,GAAKqyB,EAAcn3B,EAAMi3B,EAAQn6B,SAAW,EAAK,IAG5D,GAAIb,EAAKG,KAAO,EAAG,CACfke,EAAOvV,GAAKoyB,EAAcn3B,EAAMi3B,EAAQn6B,SAAW,EAAK,IAG5D,GAAIb,EAAKG,KAAO,EAAG,CACfke,EAAOtV,GAAKmyB,EAAcn3B,EAAMi3B,EAAQn6B,SAAW,EAAK,IAG5D,GAAIb,EAAKG,KAAO,EAAG,CACfke,EAAOrV,GAAKkyB,EAAcn3B,EAAMi3B,EAAQn6B,SAAW,EAAK,KAIlDy4B,GAAAwG,IAAd,SAAkBlG,EAAsBr6B,EAAkBS,EAAkBg7B,EAAqBC,EAAqBnrB,GAClH,GAAIuO,GAAkBib,EAAgBkB,cAAcZ,EAAIr6B,EAAMS,EAE9D,IAAIk7B,GAAyB5B,EAAgBwB,gBAAgBlB,EAAIr6B,EAAMy7B,EAASlrB,EAEhF,IAAI/L,IAAiB,IAAK,IAAK,IAAK,IAEpC,IAAI/D,EAAKG,KAAO,EAAG,CACfke,EAAOxV,EAAI4S,KAAKqF,IAAI,EAAGrF,KAAKsF,IAAI,EAAGma,EAAcn3B,EAAMi3B,EAAQn6B,SAAW,EAAK,MAGnF,GAAIb,EAAKG,KAAO,EAAG,CACfke,EAAOvV,EAAI2S,KAAKqF,IAAI,EAAGrF,KAAKsF,IAAI,EAAGma,EAAcn3B,EAAMi3B,EAAQn6B,SAAW,EAAK,MAGnF,GAAIb,EAAKG,KAAO,EAAG,CACfke,EAAOtV,EAAI0S,KAAKqF,IAAI,EAAGrF,KAAKsF,IAAI,EAAGma,EAAcn3B,EAAMi3B,EAAQn6B,SAAW,EAAK,MAGnF,GAAIb,EAAKG,KAAO,EAAG,CACfke,EAAOrV,EAAIyS,KAAKqF,IAAI,EAAGrF,KAAKsF,IAAI,EAAGma,EAAcn3B,EAAMi3B,EAAQn6B,SAAW,EAAK,OAIzEy4B,GAAAyG,IAAd,SAAkBnG,EAAsBr6B,EAAkBS,EAAkBg7B,EAAqBC,EAAqBnrB,GAClH,GAAIuO,GAAkBib,EAAgBkB,cAAcZ,EAAIr6B,EAAMS,EAE9D,IAAIk7B,GAAyB5B,EAAgBwB,gBAAgBlB,EAAIr6B,EAAMy7B,EAASlrB,EAEhF,IAAIsrB,GAAyB9B,EAAgBsB,oBAAoBhB,EAAIr6B,EAAM07B,EAASnrB,EAEpF,IAAIurB,GAA0B/B,EAAgBuB,uBAAuBO,EAAaH,EAAQh7B,OAC1F,IAAIq7B,GAA0BhC,EAAgBuB,uBAAuBO,EAAaH,EAAQh7B,OAAS,EACnG,IAAIs7B,GAA0BjC,EAAgBuB,uBAAuBO,EAAaH,EAAQh7B,OAAS,EAEnG,IAAI0L,GAAkB,GAAI4L,GAAAta,QAAS,GAAI01B,eACnC0I,EAAexyB,EAAGyyB,EAAezyB,EAAG0yB,EAAe1yB,EAAG,EACtDwyB,EAAevyB,EAAGwyB,EAAexyB,EAAGyyB,EAAezyB,EAAG,EACtDuyB,EAAetyB,EAAGuyB,EAAevyB,EAAGwyB,EAAexyB,EAAG,EACtD,EAAG,EAAG,EAAG,IAGb,IAAIoY,GAAkBxV,EAAOoW,gBAAgBmZ,EAE7C,IAAIl7B,EAAKG,KAAO,EAAG,CACfke,EAAOxV,EAAIsY,EAAOtY,EAGtB,GAAI7I,EAAKG,KAAO,EAAG,CACfke,EAAOvV,EAAIqY,EAAOrY,EAGtB,GAAI9I,EAAKG,KAAO,EAAG,CACfke,EAAOtV,EAAIoY,EAAOpY,GAIZuwB,GAAA0G,IAAd,SAAkBpG,EAAsBr6B,EAAkBS,EAAkBg7B,EAAqBC,EAAqBnrB,GAClH,GAAIuO,GAAkBib,EAAgBkB,cAAcZ,EAAIr6B,EAAMS,EAE9D,IAAIk7B,GAAyB5B,EAAgBwB,gBAAgBlB,EAAIr6B,EAAMy7B,EAASlrB,EAEhF,IAAIsrB,GAAyB9B,EAAgBsB,oBAAoBhB,EAAIr6B,EAAM07B,EAASnrB,EAEpF,IAAIurB,GAA0B/B,EAAgBuB,uBAAuBO,EAAaH,EAAQh7B,OAC1F,IAAIq7B,GAA0BhC,EAAgBuB,uBAAuBO,EAAaH,EAAQh7B,OAAS,EACnG,IAAIs7B,GAA0BjC,EAAgBuB,uBAAuBO,EAAaH,EAAQh7B,OAAS,EAEnG,IAAI0L,GAAkB,GAAI4L,GAAAta,QAAS,GAAI01B,eACnC0I,EAAexyB,EAAGyyB,EAAezyB,EAAG0yB,EAAe1yB,EAAG,EACtDwyB,EAAevyB,EAAGwyB,EAAexyB,EAAGyyB,EAAezyB,EAAG,EACtDuyB,EAAetyB,EAAGuyB,EAAevyB,EAAGwyB,EAAexyB,EAAG,EACtDsyB,EAAeryB,EAAGsyB,EAAetyB,EAAGuyB,EAAevyB,EAAG,IAG1D,IAAImY,GAAkBxV,EAAOoW,gBAAgBmZ,EAE7C,IAAIl7B,EAAKG,KAAO,EAAG,CACfke,EAAOxV,EAAIsY,EAAOtY,EAGtB,GAAI7I,EAAKG,KAAO,EAAG,CACfke,EAAOvV,EAAIqY,EAAOrY,EAGtB,GAAI9I,EAAKG,KAAO,EAAG,CACfke,EAAOtV,EAAIoY,EAAOpY,EAGtB,GAAI/I,EAAKG,KAAO,EAAG,CACfke,EAAOrV,EAAImY,EAAOnY,GAIZswB,GAAA2G,IAAd,SAAkBrG,EAAsBr6B,EAAkBS,EAAkBg7B,EAAqBC,EAAqBnrB,GAClH,GAAIuO,GAAkBib,EAAgBkB,cAAcZ,EAAIr6B,EAAMS,EAE9D,IAAIk7B,GAAyBtB,EAAGU,YAAYU,EAAQ/6B,OAEpD,IAAI8D,IAAiB,IAAK,IAAK,IAAK,IAEpC,IAAI/D,EAAKG,KAAO,EAAG,CACfke,EAAOxV,EAAIqyB,EAAcn3B,EAAMi3B,EAAQn6B,SAAW,EAAK,IAG3D,GAAIb,EAAKG,KAAO,EAAG,CACfke,EAAOvV,EAAGoyB,EAAcn3B,EAAMi3B,EAAQn6B,SAAW,EAAK,IAG1D,GAAIb,EAAKG,KAAO,EAAG,CACfke,EAAOtV,EAAGmyB,EAAcn3B,EAAMi3B,EAAQn6B,SAAW,EAAK,IAG1D,GAAIb,EAAKG,KAAO,EAAG,CACfke,EAAOrV,EAAGkyB,EAAcn3B,EAAMi3B,EAAQn6B,SAAW,EAAK,KAIhDy4B,GAAA4G,IAAd,SAAkBtG,EAAsBr6B,EAAkBS,EAAkBg7B,EAAqBC,EAAqBnrB,GAClH,GAAIuO,GAAkBib,EAAgBkB,cAAcZ,EAAIr6B,EAAMS,EAE9D,IAAIk7B,GAAyBtB,EAAGW,YAAYS,EAAQ/6B,OAEpD,IAAI8D,IAAiB,IAAK,IAAK,IAAK,IAEpC,IAAI/D,EAAKG,KAAO,EAAG,CACfke,EAAOxV,EAAIqyB,EAAcn3B,EAAMi3B,EAAQn6B,SAAW,EAAK,IAG3D,GAAIb,EAAKG,KAAO,EAAG,CACfke,EAAOvV,EAAGoyB,EAAcn3B,EAAMi3B,EAAQn6B,SAAW,EAAK,IAG1D,GAAIb,EAAKG,KAAO,EAAG,CACfke,EAAOtV,EAAGmyB,EAAcn3B,EAAMi3B,EAAQn6B,SAAW,EAAK,IAG1D,GAAIb,EAAKG,KAAO,EAAG,CACfke,EAAOrV,EAAGkyB,EAAcn3B,EAAMi3B,EAAQn6B,SAAW,EAAK,KAIhDy4B,GAAA6G,IAAd,SAAkBvG,EAAsBr6B,EAAkBS,EAAkBg7B,EAAqBC,EAAqBnrB,GAClH,GAAIuO,GAAkBib,EAAgBkB,cAAcZ,EAAIr6B,EAAMS,EAE9D,IAAI+D,IAAiB,IAAK,IAAK,IAAK,IAEpC,IAAIm3B,GAAyB5B,EAAgBwB,gBAAgBlB,EAAIr6B,EAAMy7B,EAASlrB,EAChF,IAAIqvB,GAAwBjE,EAAcn3B,EAAMi3B,EAAQn6B,SAAW,EAAK,GACxE,IAAIu+B,GAAwBlE,EAAcn3B,EAAMi3B,EAAQn6B,SAAW,EAAK,GACxE,IAAIw+B,GAAwBnE,EAAcn3B,EAAMi3B,EAAQn6B,SAAW,EAAK,GACxE,IAAI8+B,GAAwBzE,EAAcn3B,EAAMi3B,EAAQn6B,SAAW,EAAK,GAExE,IAAIy9B,GAAyBhF,EAAgBwB,gBAAgBlB,EAAIr6B,EAAM07B,EAASnrB,EAChF,IAAIwvB,GAAwBhB,EAAcv6B,EAAMk3B,EAAQp6B,SAAW,EAAK,GACxE,IAAI0+B,GAAwBjB,EAAcv6B,EAAMk3B,EAAQp6B,SAAW,EAAK,GACxE,IAAI2+B,GAAwBlB,EAAcv6B,EAAMk3B,EAAQp6B,SAAW,EAAK,GACxE,IAAI++B,GAAwBtB,EAAcv6B,EAAMk3B,EAAQp6B,SAAW,EAAK,GAExE,IAAIb,EAAKG,KAAO,EAAG,CACfke,EAAOxV,EAAIs2B,GAAkBG,EAAiB,EAAI,EAGtD,GAAIt/B,EAAKG,KAAO,EAAG,CACfke,EAAOvV,EAAIs2B,GAAkBG,EAAiB,EAAI,EAGtD,GAAIv/B,EAAKG,KAAO,EAAG,CACfke,EAAOtV,EAAIs2B,GAAkBG,EAAiB,EAAI,EAGtD,GAAIx/B,EAAKG,KAAO,EAAG,CACfke,EAAOrV,EAAI22B,GAAkBC,EAAiB,EAAI,GAI5CtG,GAAA8G,IAAd,SAAkBxG,EAAsBr6B,EAAkBS,EAAkBg7B,EAAqBC,EAAqBnrB,GAClH,GAAIuO,GAAkBib,EAAgBkB,cAAcZ,EAAIr6B,EAAMS,EAE9D,IAAI+D,IAAiB,IAAK,IAAK,IAAK,IAEpC,IAAIm3B,GAAyB5B,EAAgBwB,gBAAgBlB,EAAIr6B,EAAMy7B,EAASlrB,EAChF,IAAIqvB,GAAwBjE,EAAcn3B,EAAMi3B,EAAQn6B,SAAW,EAAK,GACxE,IAAIu+B,GAAwBlE,EAAcn3B,EAAMi3B,EAAQn6B,SAAW,EAAK,GACxE,IAAIw+B,GAAwBnE,EAAcn3B,EAAMi3B,EAAQn6B,SAAW,EAAK,GACxE,IAAI8+B,GAAwBzE,EAAcn3B,EAAMi3B,EAAQn6B,SAAW,EAAK,GAExE,IAAIy9B,GAAyBhF,EAAgBwB,gBAAgBlB,EAAIr6B,EAAM07B,EAASnrB,EAChF,IAAIwvB,GAAwBhB,EAAcv6B,EAAMk3B,EAAQp6B,SAAW,EAAK,GACxE,IAAI0+B,GAAwBjB,EAAcv6B,EAAMk3B,EAAQp6B,SAAW,EAAK,GACxE,IAAI2+B,GAAwBlB,EAAcv6B,EAAMk3B,EAAQp6B,SAAW,EAAK,GACxE,IAAI++B,GAAwBtB,EAAcv6B,EAAMk3B,EAAQp6B,SAAW,EAAK,GAExE,IAAIb,EAAKG,KAAO,EAAG,CACfke,EAAOxV,EAAIs2B,EAAiBG,EAAiB,EAAI,EAGrD,GAAIt/B,EAAKG,KAAO,EAAG,CACfke,EAAOvV,EAAIs2B,EAAiBG,EAAiB,EAAI,EAGrD,GAAIv/B,EAAKG,KAAO,EAAG,CACfke,EAAOtV,EAAIs2B,EAAiBG,EAAiB,EAAI,EAGrD,GAAIx/B,EAAKG,KAAO,EAAG,CACfke,EAAOrV,EAAI22B,EAAiBC,EAAiB,EAAI,GAI3CtG,GAAA+G,IAAd,SAAkBzG,EAAsBr6B,EAAkBS,EAAkBg7B,EAAqBC,EAAqBnrB,GAClH,GAAIuO,GAAkBib,EAAgBkB,cAAcZ,EAAIr6B,EAAMS,EAE9D,IAAI+D,IAAiB,IAAK,IAAK,IAAK,IAEpC,IAAIm3B,GAAyB5B,EAAgBwB,gBAAgBlB,EAAIr6B,EAAMy7B,EAASlrB,EAChF,IAAIqvB,GAAwBjE,EAAcn3B,EAAMi3B,EAAQn6B,SAAW,EAAK,GACxE,IAAIu+B,GAAwBlE,EAAcn3B,EAAMi3B,EAAQn6B,SAAW,EAAK,GACxE,IAAIw+B,GAAwBnE,EAAcn3B,EAAMi3B,EAAQn6B,SAAW,EAAK,GACxE,IAAI8+B,GAAwBzE,EAAcn3B,EAAMi3B,EAAQn6B,SAAW,EAAK,GAExE,IAAIy9B,GAAyBhF,EAAgBwB,gBAAgBlB,EAAIr6B,EAAM07B,EAASnrB,EAChF,IAAIwvB,GAAwBhB,EAAcv6B,EAAMk3B,EAAQp6B,SAAW,EAAK,GACxE,IAAI0+B,GAAwBjB,EAAcv6B,EAAMk3B,EAAQp6B,SAAW,EAAK,GACxE,IAAI2+B,GAAwBlB,EAAcv6B,EAAMk3B,EAAQp6B,SAAW,EAAK,GACxE,IAAI++B,GAAwBtB,EAAcv6B,EAAMk3B,EAAQp6B,SAAW,EAAK,GAExE,IAAIb,EAAKG,KAAO,EAAG,CACfke,EAAOxV,EAAIs2B,GAAkBG,EAAiB,EAAI,EAGtD,GAAIt/B,EAAKG,KAAO,EAAG,CACfke,EAAOvV,EAAIs2B,GAAkBG,EAAiB,EAAI,EAGtD,GAAIv/B,EAAKG,KAAO,EAAG,CACfke,EAAOtV,EAAIs2B,GAAkBG,EAAiB,EAAI,EAGtD,GAAIx/B,EAAKG,KAAO,EAAG,CACfke,EAAOrV,EAAI22B,GAAkBC,EAAiB,EAAI,GAI5CtG,GAAAgH,IAAd,SAAkB1G,EAAsBr6B,EAAkBS,EAAkBg7B,EAAqBC,EAAqBnrB,GAClH,GAAIuO,GAAkBib,EAAgBkB,cAAcZ,EAAIr6B,EAAMS,EAE9D,IAAI+D,IAAiB,IAAK,IAAK,IAAK,IAEpC,IAAIm3B,GAAyB5B,EAAgBwB,gBAAgBlB,EAAIr6B,EAAMy7B,EAASlrB,EAChF,IAAIqvB,GAAwBjE,EAAcn3B,EAAMi3B,EAAQn6B,SAAW,EAAK,GACxE,IAAIu+B,GAAwBlE,EAAcn3B,EAAMi3B,EAAQn6B,SAAW,EAAK,GACxE,IAAIw+B,GAAwBnE,EAAcn3B,EAAMi3B,EAAQn6B,SAAW,EAAK,GACxE,IAAI8+B,GAAwBzE,EAAcn3B,EAAMi3B,EAAQn6B,SAAW,EAAK,GAExE,IAAIy9B,GAAyBhF,EAAgBwB,gBAAgBlB,EAAIr6B,EAAM07B,EAASnrB,EAChF,IAAIwvB,GAAwBhB,EAAcv6B,EAAMk3B,EAAQp6B,SAAW,EAAK,GACxE,IAAI0+B,GAAwBjB,EAAcv6B,EAAMk3B,EAAQp6B,SAAW,EAAK,GACxE,IAAI2+B,GAAwBlB,EAAcv6B,EAAMk3B,EAAQp6B,SAAW,EAAK,GACxE,IAAI++B,GAAwBtB,EAAcv6B,EAAMk3B,EAAQp6B,SAAW,EAAK,GAExE,IAAIb,EAAKG,KAAO,EAAG,CACfke,EAAOxV,EAAIs2B,GAAkBG,EAAiB,EAAI,EAGtD,GAAIt/B,EAAKG,KAAO,EAAG,CACfke,EAAOvV,EAAIs2B,GAAkBG,EAAiB,EAAI,EAGtD,GAAIv/B,EAAKG,KAAO,EAAG,CACfke,EAAOtV,EAAIs2B,GAAkBG,EAAiB,EAAI,EAGtD,GAAIx/B,EAAKG,KAAO,EAAG,CACfke,EAAOrV,EAAI22B,GAAkBC,EAAiB,EAAI,GAI5CtG,GAAAiH,IAAd,SAAkB3G,EAAsBr6B,EAAkBS,EAAkBg7B,EAAqBC,EAAqBnrB,GAClH,GAAIuO,GAAkBib,EAAgBkB,cAAcZ,EAAIr6B,EAAMS,EAE9D,IAAI+D,IAAiB,IAAK,IAAK,IAAK,IAEpC,IAAIm3B,GAAyB5B,EAAgBwB,gBAAgBlB,EAAIr6B,EAAMy7B,EAASlrB,EAChF,IAAIqvB,GAAwBjE,EAAcn3B,EAAMi3B,EAAQn6B,SAAW,EAAK,GACxE,IAAIu+B,GAAwBlE,EAAcn3B,EAAMi3B,EAAQn6B,SAAW,EAAK,GACxE,IAAIw+B,GAAwBnE,EAAcn3B,EAAMi3B,EAAQn6B,SAAW,EAAK,GACxE,IAAI8+B,GAAwBzE,EAAcn3B,EAAMi3B,EAAQn6B,SAAW,EAAK,GAExE,IAAIb,EAAKG,KAAO,EAAG,CAEfke,EAAOxV,EAAI,CACX,IAAIs2B,EAAiB,EAAG,CACpB9gB,EAAOxV,GAAK,MACT,IAAIs2B,GAAkB,EAAG,CAC5B9gB,EAAOxV,EAAI,GAInB,GAAI7I,EAAKG,KAAO,EAAG,CACfke,EAAOvV,EAAI,CACX,IAAIs2B,EAAiB,EAAG,CACpB/gB,EAAOvV,GAAK,MACT,IAAIs2B,GAAkB,EAAG,CAC5B/gB,EAAOvV,EAAI,GAInB,GAAI9I,EAAKG,KAAO,EAAG,CACfke,EAAOtV,EAAI,CACX,IAAIs2B,EAAiB,EAAG,CACpBhhB,EAAOtV,GAAK,MACT,IAAIs2B,GAAkB,EAAG,CAC5BhhB,EAAOtV,EAAI,GAInB,GAAI/I,EAAKG,KAAO,EAAG,CACfke,EAAOrV,EAAI,CACX,IAAI22B,EAAiB,EAAG,CACpBthB,EAAOrV,GAAK,MACT,IAAI22B,GAAkB,EAAG,CAC5BthB,EAAOrV,EAAI,IAKTswB,GAAAkH,IAAd,SAAkB5G,EAAsBr6B,EAAkBS,EAAkBg7B,EAAqBC,EAAqBnrB,GAClH,GAAI/L,IAAiB,IAAK,IAAK,IAAK,IAEpC,IAAIm3B,GAAyB5B,EAAgBwB,gBAAgBlB,EAAIr6B,EAAMy7B,EAASlrB,EAChF,IAAIqvB,GAAwBjE,EAAcn3B,EAAMi3B,EAAQn6B,SAAW,EAAK,GAExE,IAAGs+B,EAAe,EAAG,CACjBvF,EAAG/W,QAAU,MA1yCNyW,GAAA0C,qBAA4C,GAAIzjB,GAAAtb,OAChDq8B,GAAAE,WAA2B,GAAI1sB,GAAA7P,OAC/Bq8B,GAAAU,aACXV,EAAgByB,IAChBzB,EAAgB+E,IAChB/E,EAAgBiF,IAChBjF,EAAgBkF,IAChBlF,EAAgBmF,IAChBnF,EAAgBoF,IAChBpF,EAAgBvY,IAChBuY,EAAgBxY,IAChBwY,EAAgBqF,IAChBrF,EAAgBsF,IAChBtF,EAAgBuF,IAChBvF,EAAgB2D,IAChB3D,EAAgBnyB,IAChBmyB,EAAgBwF,IAChBxF,EAAgByF,IAChBzF,EAAgB0F,IAChB1F,EAAgB2F,IAChB3F,EAAgB4F,IAChB5F,EAAgBmG,IAChBnG,EAAgBoG,IAChBpG,EAAgB6C,IAChB7C,EAAgBuG,IAChBvG,EAAgBwG,IAChBxG,EAAgByG,IAChBzG,EAAgB6B,IAChB7B,EAAgB0G,IAChB,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA1G,EAAgBkH,IAChBlH,EAAgB8E,IAChB9E,EAAgB6G,IAChB7G,EAAgB8G,IAChB9G,EAAgBiH,IAChBjH,EAAgB+G,IAChB/G,EAAgBgH,IA6vCxB,OAAAhH,KAEA13B,QAAAC,eAAAnG,EAAA,cAAAoG,MAAA,M9CszFApG,GAAQuB,Q8CtzFOq8B,I9CwzFZmH,yBAAyB,yCAAyC3N,6BAA6B,6CAA6CE,iCAAiC,iDAAiDC,sCAAsC,sDAAsDC,4BAA4B,4CAA4CwN,4BAA4B,4CAA4C7c,+BAA+B,+CAA+CI,gCAAgCjmB,UAAUqmB,gCAAgCrmB,YAAY2iC,6CAA6C,SAAS/lC,EAAQkB,EAAOJ,GACtrB,Y+CloIA,IAAAklC,GAAA,WAAA,QAAAA,KACWtgC,KAAAkhB,iBACAlhB,MAAAwiB,cAEAxiB,MAAA45B,UACA55B,MAAAg6B,cACAh6B,MAAAi6B,cACAj6B,MAAAo6B,OACAp6B,MAAAtE,aACAsE,MAAAuiB,QAAkB,MAC7B,MAAA+d,KAEAh/B,QAAAC,eAAAnG,EAAA,cAAAoG,MAAA,M/CqoIApG,GAAQuB,Q+CroIO2jC,O/CuoITC,wCAAwC,SAASjmC,EAAQkB,EAAOJ,GACtE,YgDppIA,IAAAoR,GAAAlS,EAA6B,yBAC7B,IAAAmS,GAAAnS,EAA4B,uBAI5B,IAAAkmC,GAAA,WAaC,QAAAA,GAAYlT,GAHJttB,KAAAygC,oBACAzgC,MAAA0gC,WAIP1gC,MAAKyqB,IAAM6C,CACXttB,MAAKud,SAAWvd,KAAKyqB,IAAI5O,gBAGnB2kB,EAAAhiC,UAAAi6B,OAAP,SAAcC,EAAyBC,GAEtC,GAAIgI,GAAsBH,EAAaI,aAAa7+B,MAAMy+B,EAAatH,WAAWz6B,qBAAqBi6B,GACvG,IAAImI,GAAwBL,EAAaI,aAAa7+B,MAAMy+B,EAAatH,WAAWz6B,qBAAqBk6B,GAEzG34B,MAAK8gC,cAAgB9gC,KAAKyqB,IAAIsW,aAAa/gC,KAAKyqB,IAAIuW,cACpDhhC,MAAKihC,gBAAkBjhC,KAAKyqB,IAAIsW,aAAa/gC,KAAKyqB,IAAIyW,gBAEtDlhC,MAAKyqB,IAAI0W,aAAanhC,KAAK8gC,cAAeH,EAC1C3gC,MAAKyqB,IAAI2W,cAAcphC,KAAK8gC,cAE5B,KAAK9gC,KAAKyqB,IAAI4W,mBAAmBrhC,KAAK8gC,cAAe9gC,KAAKyqB,IAAI6W,gBAC7D,KAAM,IAAIrmC,OAAM+E,KAAKyqB,IAAI8W,iBAAiBvhC,KAAK8gC,eAEhD9gC,MAAKyqB,IAAI0W,aAAanhC,KAAKihC,gBAAiBJ,EAC5C7gC,MAAKyqB,IAAI2W,cAAcphC,KAAKihC,gBAE5B,KAAKjhC,KAAKyqB,IAAI4W,mBAAmBrhC,KAAKihC,gBAAiBjhC,KAAKyqB,IAAI6W,gBAC/D,KAAM,IAAIrmC,OAAM+E,KAAKyqB,IAAI8W,iBAAiBvhC,KAAKihC,iBAEhDjhC,MAAKyqB,IAAI+W,aAAaxhC,KAAKud,SAAUvd,KAAK8gC,cAC1C9gC,MAAKyqB,IAAI+W,aAAaxhC,KAAKud,SAAUvd,KAAKihC,gBAC1CjhC,MAAKyqB,IAAIgX,YAAYzhC,KAAKud,SAE1B,KAAKvd,KAAKyqB,IAAIiX,oBAAoB1hC,KAAKud,SAAUvd,KAAKyqB,IAAIkX,aACzD,KAAM,IAAI1mC,OAAM+E,KAAKyqB,IAAImX,kBAAkB5hC,KAAKud,UAEjDvd,MAAKygC,UAAU,GAAGnlC,OAAS,CAC3B0E,MAAKygC,UAAU,GAAGnlC,OAAS,CAC3B0E,MAAKygC,UAAU,GAAGnlC,OAAS,CAC3B0E,MAAK0gC,SAASplC,OAAS,EAGjBklC,GAAAhiC,UAAA8xB,mBAAP,SAA0B7S,EAAoB1O,GAE7C,GAAI/O,KAAKygC,UAAUhjB,GAAa1O,IAAU,KACzC,MAAO/O,MAAKygC,UAAUhjB,GAAa1O,EAEpC,OAAQ/O,MAAKygC,UAAUhjB,GAAa1O,GAAS/O,KAAKyqB,IAAI6F,mBAAmBtwB,KAAKud,SAAUijB,EAAaqB,+BAA+BpkB,GAAe1O,GAI7IyxB,GAAAhiC,UAAA8yB,kBAAP,SAAyBviB,GAExB,GAAI/O,KAAK0gC,SAAS3xB,IAAU,KAC3B,MAAO/O,MAAK0gC,SAAS3xB,EAEtB,OAAQ/O,MAAK0gC,SAAS3xB,GAAS/O,KAAKyqB,IAAI6G,kBAAkBtxB,KAAKud,SAAU,KAAOxO,GAI1EyxB,GAAAhiC,UAAAoQ,QAAP,WAEC5O,KAAKyqB,IAAIqX,cAAc9hC,KAAKud,UAGtBijB,GAAAhiC,UAAA4xB,aAAP,WAECpwB,KAAKyqB,IAAIsX,WAAW/hC,KAAKud,UAG1Bjc,QAAAC,eAAWi/B,EAAAhiC,UAAA,ahDinIJ4L,IgDjnIP,WAEC,MAAOpK,MAAKud,UhDknINhT,WAAY,KACZC,aAAc,MgDnsINg2B,GAAAtH,WAA2B,GAAI1sB,GAAA7P,OAC/B6jC,GAAAI,aAA2B,GAAIn0B,GAAA9P,OAC/B6jC,GAAAqB,gCAAgD,KAAM,KAAM,KAgF5E,OAAArB,KAEAl/B,QAAAC,eAAAnG,EAAA,cAAAoG,MAAA,MhDunIApG,GAAQuB,QgDvnIO6jC,IhDynIZL,yBAAyB,yCAAyC6B,uBAAuB,yCAAyCC,6CAA6C,SAAS3nC,EAAQkB,EAAOJ,GAC1M,YiDvtIA,IAAA8mC,GAAA,WAAA,QAAAA,MAIC5gC,OAAAC,eAAW2gC,EAAA1jC,UAAA,MjDwtIJ4L,IiDxtIP,WAEC,MAAOpK,MAAK4zB,MjDytINrpB,WAAY,KACZC,aAAc,MiDvtId03B,GAAA1jC,UAAAoQ,QAAP,YAID,OAAAszB,KAEA5gC,QAAAC,eAAAnG,EAAA,cAAAoG,MAAA,MjDwtIApG,GAAQuB,QiDxtIOulC,OjD0tITC,wCAAwC,SAAS7nC,EAAQkB,EAAOJ,GACtE,YkD1uIA,IAAAgnC,GAAA,WAAA,QAAAA,MAMA,MAAAA,KAEA9gC,QAAAC,eAAAnG,EAAA,cAAAoG,MAAA,MlDyuIApG,GAAQuB,QkDzuIOylC,OlD2uITC,gDAAgD,SAAS/nC,EAAQkB,EAAOJ,GAC9E,YmDpvIA,IAAA8tB,GAAA5uB,EAAmC,iCACnC,IAAA0uB,GAAA1uB,EAA+B,6BAC/B,IAAA8uB,GAAA9uB,EAA8B,4BAK9B,IAAAgoC,GAAA,WAAA,QAAAA,KAEWtiC,KAAAa,KAAcuoB,EAAAzsB,QAAkB6Z,MAChCxW,MAAAe,OAAgBmoB,EAAAvsB,QAAuBqX,MACvChU,MAAA2f,UAAmBqJ,EAAArsB,QAAmB6V,UACjD,MAAA8vB,KACAhhC,QAAAC,eAAAnG,EAAA,cAAAoG,MAAA,MnDwvIApG,GAAQuB,QmDxvIO2lC,InD0vIZ9P,6BAA6B,6CAA6CE,iCAAiC,iDAAiDE,4BAA4B,8CAA8C2P,iCAAiC,SAASjoC,EAAQkB,EAAOJ,GAClS,YACA,IAAIwS,GAAa5N,MAAQA,KAAK4N,WAAc,SAAUC,EAAG3N,GACrD,IAAK,GAAI4N,KAAK5N,GAAG,GAAIA,EAAE6N,eAAeD,GAAID,EAAEC,GAAK5N,EAAE4N,EACnD,SAASE,KAAOhO,KAAKiO,YAAcJ,EACnCA,EAAErP,UAAY0B,IAAM,KAAOoB,OAAO4M,OAAOhO,IAAM8N,EAAGxP,UAAY0B,EAAE1B,UAAW,GAAIwP,IoD5wInF,IAAAw0B,GAAAloC,EAA+B,yCAC/B,IAAA+c,GAAA/c,EAA0B,iCAM1B,IAAAmoC,GAAAnoC,EAAsB,4BAEtB,IAAAooC,GAAApoC,EAA4B,sBAC5B,IAAA0uB,GAAA1uB,EAAiC,6BACjC,IAAA4uB,GAAA5uB,EAAoC,iCACpC,IAAA6uB,GAAA7uB,EAAwC,sCACxC,IAAA8uB,GAAA9uB,EAAgC,4BAChC,IAAAqoC,GAAAroC,EAA6B,uBAC7B,IAAAi+B,GAAAj+B,EAA8B,yBAC9B,IAAAsoC,GAAAtoC,EAA+B,0BAG/B,IAAAuoC,GAAAvoC,EAA2B,uBAI3B,IAAAwoC,GAAAxoC,EAA+B,2BAW/B,IAAAkC,GAAA,SAAA4R,GAAoBR,EAAApR,EAAA4R,EA8CnB,SAAA5R,GAAYioB,EAA6Bse,EAAmBC,EAA2BC,EAA+BC,GA9CvH,GAAAC,GAAAnjC,IA8CwF,IAAAijC,QAAA,GAA6B,CAA7BA,EAAA,MAA+B,GAAAC,QAAA,GAA2B,CAA3BA,EAAA,WAErH90B,EAAA/S,KAAA2E,KA5COA,MAAAojC,iBAA0B,GAAI9hC,OAE9BtB,MAAAqjC,aAAkC,GAAI/4B,MAMtCtK,MAAAsjC,GAAY,CACZtjC,MAAAujC,GAAY,CAIZvjC,MAAAwjC,aAAsB,CAKtBxjC,MAAAyjC,WAAoB,CAMpBzjC,MAAA0jC,cAA0B,IAC1B1jC,MAAA2jC,uBAAgC,CAahC3jC,MAAA4jC,aAAuB,KAEvB5jC,MAAA6jC,wBAA+C,GAAIv5B,OAAqB,EAM/EtK,MAAK8jC,iBAAmB,GAAIhB,GAAAnmC,QAAgBqD,KAE5CA,MAAKkmB,WAAazB,CAClB,IAAGzkB,KAAKkmB,WAAY,CACnBlmB,KAAKkmB,WAAW6d,iBAAiB,mBAAoB,SAACr1B,GAAU,MAAAy0B,GAAKa,cAAct1B,IACnF1O,MAAKkmB,WAAW6d,iBAAiB,uBAAwB,SAACr1B,GAAU,MAAAy0B,GAAKc,kBAAkBv1B,KAG5F1O,KAAKwjC,YAAcT,CAEnB/iC,MAAKkkC,cAAgBlB,CAErBhjC,MAAKmkC,UAAY,GAAI9sB,GAAA1a,OAErBqD,MAAKokC,uBAAyB,IAE9B3B,GAAA9lC,QAAI0nC,YAAYrkC,KAAKkmB,WAAY,EACjCuc,GAAA9lC,QAAI2nC,YAAYtkC,KAAKkmB,WAAY,EAEjClmB,MAAK6jC,wBAAwB,GAAK,GAAIv5B,OAAc,EACpDtK,MAAK6jC,wBAAwB,GAAG,GAAK1a,EAAAxsB,QAA4B0Y,MACjErV,MAAK6jC,wBAAwB,GAAG,GAAK1a,EAAAxsB,QAA4B2Y,MACjEtV,MAAK6jC,wBAAwB,GAAG,GAAK1a,EAAAxsB,QAA4B4Y,MACjEvV,MAAK6jC,wBAAwB,GAAG,GAAK1a,EAAAxsB,QAA4B6Y,MACjExV,MAAK6jC,wBAAwB,GAAK,GAAIv5B,OAAc,EACpDtK,MAAK6jC,wBAAwB,GAAG,GAAK1a,EAAAxsB,QAA4BkZ,OACjE7V,MAAK6jC,wBAAwB,GAAG,GAAK1a,EAAAxsB,QAA4BmZ,OACjE9V,MAAK6jC,wBAAwB,GAAG,GAAK1a,EAAAxsB,QAA4BoZ,OACjE/V,MAAK6jC,wBAAwB,GAAG,GAAK1a,EAAAxsB,QAA4BqZ,OACjEhW,MAAK6jC,wBAAwB,GAAK,GAAIv5B,OAAc,EACpDtK,MAAK6jC,wBAAwB,GAAG,GAAK1a,EAAAxsB,QAA4BsY,OACjEjV,MAAK6jC,wBAAwB,GAAG,GAAK1a,EAAAxsB,QAA4BuY,OACjElV,MAAK6jC,wBAAwB,GAAG,GAAK1a,EAAAxsB,QAA4BwY,OACjEnV,MAAK6jC,wBAAwB,GAAG,GAAK1a,EAAAxsB,QAA4ByY,OACjEpV,MAAK6jC,wBAAwB,GAAK,GAAIv5B,OAAc,EACpDtK,MAAK6jC,wBAAwB,GAAG,GAAK1a,EAAAxsB,QAA4B8Y,eACjEzV,MAAK6jC,wBAAwB,GAAG,GAAK1a,EAAAxsB,QAA4B+Y,eACjE1V,MAAK6jC,wBAAwB,GAAG,GAAK1a,EAAAxsB,QAA4BgZ,eACjE3V,MAAK6jC,wBAAwB,GAAG,GAAK1a,EAAAxsB,QAA4BiZ,eACjE5V,MAAK6jC,wBAAwB,GAAK,GAAIv5B,OAAc,EACpDtK,MAAK6jC,wBAAwB,GAAG,GAAK1a,EAAAxsB,QAA4BsZ,gBACjEjW,MAAK6jC,wBAAwB,GAAG,GAAK1a,EAAAxsB,QAA4BuZ,gBACjElW,MAAK6jC,wBAAwB,GAAG,GAAK1a,EAAAxsB,QAA4BwZ,gBACjEnW,MAAK6jC,wBAAwB,GAAG,GAAK1a,EAAAxsB,QAA4ByZ,gBAIjEpW,MAAKukC,QAAU,KAGT/nC,EAAAgC,UAAAgmC,eAAP,SAAsB7D,EAAqBE,GAE1C,MAAO7gC,MAAK8jC,iBAAiBW,QAAQ9D,EAAcE,GAG7CrkC,GAAAgC,UAAAkmC,gBAAP,SAAuB3mB,EAAkB7C,EAAuC4E,GAAvC,GAAA5E,QAAA,GAAqC,CAArCA,EAAA,MAAuC,GAAA4E,QAAA,GAA0B,CAA1BA,EAAA,EAE/E,GAAI9f,KAAK0jC,gBAAkB3lB,GAAU+B,GAAmB9f,KAAK2jC,wBAA0B3jC,KAAKokC,wBAA0BlpB,EACrH,MAEDlb,MAAK0jC,cAAgB3lB,CACrB/d,MAAK2jC,uBAAyB7jB,CAC9B9f,MAAKokC,uBAAyBlpB,CAC9B,IAAI6C,EAAQ,CACX/d,KAAKyzB,SAAS5T,mBAAmC7f,KAAK2kC,eAAe5mB,GAASI,QAASjD,EAAuBlb,KAAKyjC,WAAY3jB,OACzH,CACN9f,KAAKyzB,SAAS1T,uBACd/f,MAAK8a,oBAAoB9a,KAAKwnB,OAAQxnB,KAAKynB,QAASznB,KAAKyjC,WAAYzjC,KAAKokC,yBAIrE5nC,GAAAgC,UAAAmmC,eAAP,SAAsBC,GAErB,MAAQ5kC,MAAKojC,iBAAiBwB,EAAM7f,MAAQ/kB,KAAKojC,iBAAiBwB,EAAM7f,IAAM,GAAsBvoB,GAAMqoC,sBAAsBD,EAAME,WAAYF,EAAO5kC,OAOnJxD,GAAAgC,UAAAumC,iBAAP,SAAwBH,GAEvB5kC,KAAKojC,iBAAiBwB,EAAM7f,IAAM,KAOrBvoB,GAAAC,oBAAd,SAAkCuoC,EAA8BC,GAE/DzoC,EAAMqoC,sBAAsBI,EAAWH,WAAaE,EAM9CxoC,GAAAgC,UAAA0mC,eAAP,SAAsBjC,EAA+BC,EAA6B7zB,GAAlF,GAAA8zB,GAAAnjC,IAAsB,IAAAijC,QAAA,GAA6B,CAA7BA,EAAA,MAA+B,GAAAC,QAAA,GAA2B,CAA3BA,EAAA,WAA6B,GAAA7zB,QAAA,GAAoB,CAApBA,EAAA,OAOjF,GAAIrP,KAAKmlC,wBAA0B,KAClCnlC,KAAKmlC,uBAAyBlC,CAE/BjjC,MAAKolC,SAAWlC,CAEhB,KACC,GAAI7zB,GAAQqzB,EAAA/lC,QAAYka,MACvB,GAAI0hB,GAAA57B,QAAmCqD,KAAKkmB,WAAY,SAAC1W,GAAuB,MAAA2zB,GAAKkC,UAAU71B,SAC3F,IAAGH,GAAQqzB,EAAA/lC,QAAYoa,SAC3B/W,KAAKyzB,SAAW,GAAImP,GAAAjmC,QAAoCqD,KAAKkmB,gBAE7DlmB,MAAKyzB,SAAW,GAAIkP,GAAAhmC,QAAiCqD,KAAKkmB,YAE1D,MAAO3rB,GACR,IACC,GAAI8U,GAAQqzB,EAAA/lC,QAAYga,KACvB,GAAI4hB,GAAA57B,QAAmCqD,KAAKkmB,WAAY,SAAC1W,GAAuB,MAAA2zB,GAAKkC,UAAU71B,SAE/FxP,MAAKslC,cAAc,GAAIzC,GAAAlmC,QAAWkmC,EAAAlmC,QAAW4oC,YAAavlC,OAC1D,MAAOzF,GACRyF,KAAKslC,cAAc,GAAIzC,GAAAlmC,QAAWkmC,EAAAlmC,QAAW4oC,YAAavlC,QAK5D,GAAIA,KAAKyzB,SACRzzB,KAAKqlC,UAAUrlC,KAAKyzB,UAMtBnyB,QAAAC,eAAW/E,EAAAgC,UAAA,SpDitIJ4L,IoDjtIP,WAEC,MAAOpK,MAAKwnB,QpDktINnB,IoD/sIP,SAAiBmf,GAEhB,GAAIxlC,KAAKwnB,QAAUge,EAClB,MAED/C,GAAA9lC,QAAI8oC,gBAAgBzlC,KAAKkmB,WAAYsf,EAErCxlC,MAAKwnB,OAASxnB,KAAKmkC,UAAUppB,MAAQyqB,CAErCxlC,MAAK0lC,iBAAmB,IAExB1lC,MAAK2lC,yBpD4sICp7B,WAAY,KACZC,aAAc,MoDvsIrBlJ,QAAAC,eAAW/E,EAAAgC,UAAA,UpD6sIJ4L,IoD7sIP,WAEC,MAAOpK,MAAKynB,SpD8sINpB,IoD3sIP,SAAkBmf,GAEjB,GAAIxlC,KAAKynB,SAAW+d,EACnB,MAED/C,GAAA9lC,QAAIipC,iBAAiB5lC,KAAKkmB,WAAYsf,EAEtCxlC,MAAKynB,QAAUznB,KAAKmkC,UAAUnpB,OAASwqB,CAEvCxlC,MAAK0lC,iBAAmB,IAExB1lC,MAAK2lC,yBpDwsICp7B,WAAY,KACZC,aAAc,MoDnsIrBlJ,QAAAC,eAAW/E,EAAAgC,UAAA,KpDysIJ4L,IoDzsIP,WAEC,MAAOpK,MAAKsjC,IpD0sINjd,IoDvsIP,SAAamf,GAEZ,GAAIxlC,KAAKsjC,IAAMkC,EACd,MAED/C,GAAA9lC,QAAI0nC,YAAYrkC,KAAKkmB,WAAYsf,EAEjCxlC,MAAKsjC,GAAKtjC,KAAKmkC,UAAU57B,EAAIi9B,CAE7BxlC,MAAK2lC,yBpDqsICp7B,WAAY,KACZC,aAAc,MoDhsIrBlJ,QAAAC,eAAW/E,EAAAgC,UAAA,KpDssIJ4L,IoDtsIP,WAEC,MAAOpK,MAAKujC,IpDusINld,IoDpsIP,SAAamf,GAEZ,GAAIxlC,KAAKujC,IAAMiC,EACd,MAED/C,GAAA9lC,QAAI2nC,YAAYtkC,KAAKkmB,WAAYsf,EAEjCxlC,MAAKujC,GAAKvjC,KAAKmkC,UAAU37B,EAAIg9B,CAE7BxlC,MAAK2lC,yBpDksICp7B,WAAY,KACZC,aAAc,MoDhsIrBlJ,QAAAC,eAAW/E,EAAAgC,UAAA,WpDmsIJ4L,IoD9rIP,WAEC,MAAOq4B,GAAA9lC,QAAIkpC,qBAAqB7lC,KAAKkmB,apD+rI/BG,IoDtsIP,SAAmBmf,GAElB/C,EAAA9lC,QAAImpC,qBAAqB9lC,KAAKkmB,WAAYsf,IpDusIpCj7B,WAAY,KACZC,aAAc,MoDhsIrBlJ,QAAAC,eAAW/E,EAAAgC,UAAA,apDmsIJ4L,IoDnsIP,WAEC,MAAOpK,MAAKkmB,YpDosIN3b,WAAY,KACZC,aAAc,MoD/rIrBlJ,QAAAC,eAAW/E,EAAAgC,UAAA,WpDqsIJ4L,IoDrsIP,WAEC,MAAOpK,MAAKyzB,UpDssINlpB,WAAY,KACZC,aAAc,MoDpsIbhO,GAAAgC,UAAAmnC,sBAAR,WAEC,GAAI3lC,KAAK+lC,eACR,MAED/lC,MAAK+lC,eAAiB,IAEtB/lC,MAAKslC,cAAc,GAAIzC,GAAAlmC,QAAWkmC,EAAAlmC,QAAWqpC,iBAAkBhmC,OAGhEsB,QAAAC,eAAW/E,EAAAgC,UAAA,WpDmsIJ4L,IoDnsIP,WAEC,MAAOpK,MAAKolC,UpDosIN76B,WAAY,KACZC,aAAc,MoD/rIdhO,GAAAgC,UAAAoQ,QAAP,WAEC,IAAK,GAAImW,KAAM/kB,MAAKojC,iBACnBpjC,KAAKojC,iBAAiBre,GAAI3K,OAE3Bpa,MAAKojC,iBAAmB,IAExBpjC,MAAKkkC,cAAc+B,aAAajmC,KAChCA,MAAKkmC,aACLlmC,MAAKkkC,cAAgB,IACrBlkC,MAAKwjC,aAAe,EAUdhnC,GAAAgC,UAAAsc,oBAAP,SAA2BqrB,EAAwBC,EAAyBnrB,EAAkBC,GAE7Flb,KAAK+a,MAAQorB,CACbnmC,MAAKgb,OAASorB,CAEdpmC,MAAKyjC,WAAaxoB,CAClBjb,MAAKokC,uBAAyBlpB,CAE9B,IAAIlb,KAAKyzB,SACRzzB,KAAKyzB,SAAS3Y,oBAAoBqrB,EAAiBC,EAAkBnrB,EAAWC,GAMlF5Z,QAAAC,eAAW/E,EAAAgC,UAAA,yBpD6rIJ4L,IoD7rIP,WAEC,MAAOpK,MAAKokC,wBpD8rIN/d,IoD3rIP,SAAiCnL,GAEhClb,KAAKokC,uBAAyBlpB,CAC9Blb,MAAK0lC,iBAAmB,MpD4rIlBn7B,WAAY,KACZC,aAAc,MoD1rIrBlJ,QAAAC,eAAW/E,EAAAgC,UAAA,gBpD6rIJ4L,IoD7rIP,WAEC,MAAOpK,MAAK0jC,epD8rINn5B,WAAY,KACZC,aAAc,MoD5rIrBlJ,QAAAC,eAAW/E,EAAAgC,UAAA,yBpD+rIJ4L,IoD/rIP,WAEC,MAAOpK,MAAK2jC,wBpDgsINp5B,WAAY,KACZC,aAAc,MoD3rIdhO,GAAAgC,UAAA4b,MAAP,WAEC,IAAKpa,KAAKyzB,SACT,MAED,IAAIzzB,KAAK0lC,iBAAkB,CAC1B1lC,KAAK8a,oBAAoB9a,KAAKwnB,OAAQxnB,KAAKynB,QAASznB,KAAKyjC,WAAYzjC,KAAKokC,uBAC1EpkC,MAAK0lC,iBAAmB,MAGzB1lC,KAAKyzB,SAASrZ,OAAQpa,KAAKqmC,OAAS,cAAiB,IAC5CrmC,KAAKqmC,OAAS,YAAe,IAC7BrmC,KAAKqmC,OAAS,SAAa,EAC9BrmC,KAAKqmC,OAAS,IAEpBrmC,MAAKsmC,aAAe,KAGrBhlC,QAAAC,eAAW/E,EAAAgC,UAAA,epD4rIJ4L,IoD5rIP,WAEC,MAAOpK,MAAKumC,cpD6rINlgB,IoD1rIP,SAAuB7kB,GAEtBxB,KAAKumC,aAAe/kC,CAEpBxB,MAAKyzB,SAASjU,oBAAoBxf,KAAKumC,epD0rIjCh8B,WAAY,KACZC,aAAc,MoDrrIrBlJ,QAAAC,eAAW/E,EAAAgC,UAAA,cpD2rIJ4L,IoD3rIP,WAEC,MAAOpK,MAAKwjC,apD4rINj5B,WAAY,KACZC,aAAc,MoDrrIrBlJ,QAAAC,eAAW/E,EAAAgC,UAAA,yBpD6rIJ4L,IoD7rIP,WAEC,MAAOpK,MAAKmlC,wBpD8rIN56B,WAAY,KACZC,aAAc,MoDzrIrBlJ,QAAAC,eAAW/E,EAAAgC,UAAA,apD+rIJ4L,IoD/rIP,WAEC,MAAOpK,MAAKyjC,YpDgsINpd,IoD7rIP,SAAqBpL,GAEpBjb,KAAKyjC,WAAaxoB,CAClBjb,MAAK0lC,iBAAmB,MpD8rIlBn7B,WAAY,KACZC,aAAc,MoDzrIrBlJ,QAAAC,eAAW/E,EAAAgC,UAAA,YpD+rIJ4L,IoD/rIP,WAECpK,KAAK+lC,eAAiB,KAEtB,OAAO/lC,MAAKmkC,WpD+rIN55B,WAAY,KACZC,aAAc,MoD1rIrBlJ,QAAAC,eAAW/E,EAAAgC,UAAA,SpDgsIJ4L,IoDhsIP,WAEC,MAAOpK,MAAKqmC,QpDisINhgB,IoD9rIP,SAAiBpG,GAEhBjgB,KAAKqmC,OAASpmB,GpD+rIR1V,WAAY,KACZC,aAAc,MoD1rIrBlJ,QAAAC,eAAW/E,EAAAgC,UAAA,epDgsIJ4L,IoDhsIP,WAEC,MAAOpK,MAAKsmC,cpDisINjgB,IoD9rIP,SAAuBmgB,GAEtBxmC,KAAKsmC,aAAeE,GpD+rIdj8B,WAAY,KACZC,aAAc,MoD5rIdhO,GAAAgC,UAAAioC,gBAAP,SAAuBC,GAEtB,GAAI3rC,GAAW,CACf,OAAOiF,KAAKqjC,aAAatoC,IAAM,KAC9BA,GAEDiF,MAAKqjC,aAAatoC,GAAK2rC,CACvBA,GAAY3hB,GAAKhqB,EAGXyB,GAAAgC,UAAAmoC,kBAAP,SAAyBD,GAExB1mC,KAAKqjC,aAAaqD,EAAY3hB,IAAM,IACpC2hB,GAAY3hB,IAAM,EAMXvoB,GAAAgC,UAAA0nC,YAAR,WAEC,GAAIlmC,KAAKyzB,SAAU,CAClBzzB,KAAKyzB,SAAS7kB,SAEd5O,MAAKslC,cAAc,GAAIzC,GAAAlmC,QAAWkmC,EAAAlmC,QAAWiqC,iBAAkB5mC,OAGhEA,KAAKyzB,SAAW,IAEhBzzB,MAAK4jC,aAAe,MAGbpnC,GAAAgC,UAAAwlC,cAAR,SAAsBt1B,IAKdlS,GAAAgC,UAAAylC,kBAAR,SAA0Bv1B,IAKnBlS,GAAAgC,UAAAqoC,oBAAP,WAEC,IAAK7mC,KAAKyzB,SACT,MAAO,MAaR,OAAO,MAIAj3B,GAAAgC,UAAA6mC,UAAR,SAAkB71B,GAEjBxP,KAAKyzB,SAAWjkB,CAEhBxP,MAAKkmB,WAAalmB,KAAKyzB,SAAShP,SAKhC,IAAIzkB,KAAKwnB,QAAUxnB,KAAKynB,QACvBznB,KAAKyzB,SAAS3Y,oBAAoB9a,KAAKwnB,OAAQxnB,KAAKynB,QAASznB,KAAKyjC,WAAYzjC,KAAKokC,uBAIpFpkC,MAAKslC,cAAc,GAAIzC,GAAAlmC,QAAWqD,KAAK4jC,aAAcf,EAAAlmC,QAAWmqC,kBAAoBjE,EAAAlmC,QAAWoqC,gBAAiB/mC,MAEhHA,MAAK4jC,aAAe,KAGdpnC,GAAAgC,UAAA0Q,gBAAP,SAAuBH,EAAciB,EAAsB1E,EAAa0D,EAAmB1F,EAAe2F,GAAA,GAAAA,QAAA,GAAwB,CAAxBA,EAAA,MAEzGjP,KAAKyzB,SAASrV,kBAAkBrP,EAAOiB,EAAQ1G,EAAQtJ,KAAK6jC,wBAAwB50B,EAAU3D,EAAO,EAAIA,GAAM0D,IAGzGxS,GAAAgC,UAAAwoC,gBAAP,SAAuBj4B,EAAc4sB,EAAgBsL,EAAgBnmC,GAEpE,GAAID,GAAc86B,EAAQvS,EAAAzsB,QAAkB6Z,OAAQ4S,EAAAzsB,QAAkB4Z,KACtE,IAAIxV,GAAgBkmC,EAAQ/d,EAAAvsB,QAAuBqX,OAASkV,EAAAvsB,QAAuBsX,OACnF,IAAI0L,GAAmB7e,EAAQkoB,EAAArsB,QAAmB6V,UAAYwW,EAAArsB,QAAmB+V,OAEjF1S,MAAKyzB,SAAS/T,kBAAkB3Q,EAAOlO,EAAME,EAAQ4e,GA5iBvCnjB,GAAAqoC,sBAA+B,GAAIvjC,OA8iBnD,OAAA9E,IAhjBoBgmC,EAAA7lC,QAkjBpB2E,QAAAC,eAAAnG,EAAA,cAAAoG,MAAA,MpDkqIApG,GAAQuB,QoDlqIOH,IpDoqIZg2B,6BAA6B,6CAA6CE,iCAAiC,iDAAiDC,sCAAsC,sDAAsDC,4BAA4B,4CAA4CsU,sBAAsB,sCAAsCC,0BAA0B,0CAA0CtO,yBAAyB,yCAAyCuO,uBAAuB,uCAAuCC,uBAAuB,uCAAuCC,2BAA2B,2CAA2CC,yCAAyC7pC,UAAUomB,iCAAiCpmB,UAAU8pC,4BAA4B9pC,YAAY+pC,4CAA4C,SAASntC,EAAQkB,EAAOJ,GACj5B,YqDzvJA,IAAAssC,GAAAptC,EAAkC,6CAElC,IAAAqtC,GAAA,WAKC,QAAAA,GAAYra,GAHLttB,KAAA6wB,YAAqB,EAK3B7wB,MAAKyqB,IAAM6C,EAGLqa,EAAAnpC,UAAAoQ,QAAP,WAEC,KAAM,sCAGPtN,QAAAC,eAAWomC,EAAAnpC,UAAA,arDmvJJ4L,IqDnvJP,WAEC,KAAM,IAAIs9B,GAAA/qC,SrDovJJ4N,WAAY,KACZC,aAAc,MqDnvJtB,OAAAm9B,KAEArmC,QAAAC,eAAAnG,EAAA,cAAAoG,MAAA,MrDsvJApG,GAAQuB,QqDtvJOgrC,IrDwvJZC,6CAA6ClqC,YAAYmqC,wCAAwC,SAASvtC,EAAQkB,EAAOJ,GAC5H,YACA,IAAIwS,GAAa5N,MAAQA,KAAK4N,WAAc,SAAUC,EAAG3N,GACrD,IAAK,GAAI4N,KAAK5N,GAAG,GAAIA,EAAE6N,eAAeD,GAAID,EAAEC,GAAK5N,EAAE4N,EACnD,SAASE,KAAOhO,KAAKiO,YAAcJ,EACnCA,EAAErP,UAAY0B,IAAM,KAAOoB,OAAO4M,OAAOhO,IAAM8N,EAAGxP,UAAY0B,EAAE1B,UAAW,GAAIwP,IsDpxJnF,IAAAolB,GAAA94B,EAA6B,sCAI7B,IAAA8pB,GAAA9pB,EAAyB,kBACzB,IAAA+4B,GAAA/4B,EAAgC,4BAEhC,IAAAwtC,GAAA,SAAA15B,GAA2BR,EAAAk6B,EAAA15B,EAgB1B,SAAA05B,GAAYt4B,EAAwBuL,EAAcC,EAAezT,EAAegsB,EAAgBC,GAAA,GAAAA,QAAA,GAAyB,CAAzBA,EAAA,MAE/FplB,EAAA/S,KAAA2E,KAEAA,MAAKyzB,SAAWjkB,CAChBxP,MAAKwnB,OAASzM,CACd/a,MAAKynB,QAAUzM,CAEfhb,MAAKyzB,SAASnN,UAAUC,OAAOC,aAAapC,EAAAznB,QAAQw7B,YAAc5E,EAAQnP,EAAAznB,QAAQ+pB,UAAYtC,EAAAznB,QAAQgqB,YAAe5L,EAAQ,IAAMC,EAAS,IAAMwY,EAAY,IAAMjsB,EAAS,IAC7KvH,MAAK4zB,KAAO5zB,KAAKyzB,SAAS7M,SAC1B5mB,MAAKyzB,SAAS5M,cAAc7mB,MApB7BsB,OAAAC,eAAWumC,EAAAtpC,UAAA,StDyxJJ4L,IsDzxJP,WAEC,MAAOpK,MAAKwnB,QtD0xJNjd,WAAY,KACZC,aAAc,MsDxxJrBlJ,QAAAC,eAAWumC,EAAAtpC,UAAA,UtD2xJJ4L,IsD3xJP,WAEC,MAAOpK,MAAKynB,StD4xJNld,WAAY,KACZC,aAAc,MsD7wJds9B,GAAAtpC,UAAAoQ,QAAP,WAEC5O,KAAKyzB,SAASnN,UAAUC,OAAOC,aAAapC,EAAAznB,QAAQ07B,gBAAkBr4B,KAAK4zB,KAAKjwB,WAAa,IAC7F3D,MAAKyzB,SAAS7M,SACd5mB,MAAKyzB,SAAS1M,iBAAiB/mB,KAE/BA,MAAKyzB,SAAW,KAKVqU,GAAAtpC,UAAAs1B,eAAP,SAAsB/sB,EAAUitB,GAAA,GAAAA,QAAA,GAAmB,CAAnBA,EAAA,EAE/B,GAAIjtB,YAAgBktB,kBAAkB,CACrC,GAAIC,GAAMja,SAASka,cAAc,SACjC,IAAIzrB,GAAI3B,EAAKgU,KACb,IAAIqZ,GAAIrtB,EAAKiU,MACbkZ,GAAInZ,MAAQrS,CACZwrB,GAAIlZ,OAASoZ,CACb,IAAIjM,GAAM+L,EAAIxJ,WAAW,KACzBvC,GAAIkM,UAAUttB,EAAM,EAAG,EACvBA,GAAOohB,EAAImM,aAAa,EAAG,EAAG5rB,EAAG0rB,GAAGrtB,KAGrC,GAAIwtB,GAAM,CACV,IAAI71B,GAAQ00B,EAAAz2B,QAAc63B,wBAAwBztB,EAAKzL,OAAQ,WAC9D,MAAOyL,GAAKwtB,MACV,KAEHv0B,MAAKyzB,SAASnN,UAAUC,OAAOC,aAAapC,EAAAznB,QAAQy7B,oBAAsBp4B,KAAK4zB,KAAO,IAAMI,EAAW,KAAOh0B,KAAKwnB,QAAUwM,GAAY,KAAOh0B,KAAKynB,SAAWuM,GAAY,IAAMt1B,EAAQ,IAC1LsB,MAAKyzB,SAAS7M,UAEhB,OAAAkhB,IA7D2BzU,EAAA12B,QA+D3B2E,QAAAC,eAAAnG,EAAA,cAAAoG,MAAA,MtDywJApG,GAAQuB,QsDzwJOmrC,ItD2wJZpf,kBAAkB,kCAAkCmM,4BAA4B,4CAA4CC,sCAAsCp3B,YAAYqqC,2CAA2C,SAASztC,EAAQkB,EAAOJ,GACpP,YuD70JA,IAAA4sC,GAAA,WAOI,QAAAA,GAAYjtB,EAAcC,GANnBhb,KAAA6wB,YAAqB,WAIpB7wB,MAAAioC,aAGJjoC,MAAKwnB,OAASzM,CACd/a,MAAKynB,QAAUzM,EAGZgtB,EAAAxpC,UAAAoQ,QAAP,WACI5O,KAAKioC,WAAa,KAGtB3mC,QAAAC,eAAWymC,EAAAxpC,UAAA,SvDy0JP4L,IuDz0JJ,WACI,MAAOpK,MAAKwnB,QvD20JZjd,WAAY,KACZC,aAAc,MuDz0JlBlJ,QAAAC,eAAWymC,EAAAxpC,UAAA,UvD40JP4L,IuD50JJ,WACI,MAAOpK,MAAKynB,SvD80JZld,WAAY,KACZC,aAAc,MuD10JXw9B,GAAAxpC,UAAAs1B,eAAP,SAAsB/sB,EAAUitB,GAAA,GAAAA,QAAA,GAAmB,CAAnBA,EAAA,EAC5BptB,QAAQC,IAAI,mBAAqBE,EAAO,cAAgBitB,EACxDh0B,MAAKioC,WAAWjU,GAAYjtB,EAAKA,KAG9BihC,GAAAxpC,UAAAi+B,QAAP,SAAezI,GACX,MAAOh0B,MAAKioC,WAAWjU,GAGpBgU,GAAAxpC,UAAAo9B,kBAAP,WACI,MAAO57B,MAAKioC,WAAW3sC,OAE/B,OAAA0sC,KAEA1mC,QAAAC,eAAAnG,EAAA,cAAAoG,MAAA,MvD40JApG,GAAQuB,QuD50JOqrC,OvD80JTE,wCAAwC,SAAS5tC,EAAQkB,EAAOJ,GACtE,YACA,IAAIwS,GAAa5N,MAAQA,KAAK4N,WAAc,SAAUC,EAAG3N,GACrD,IAAK,GAAI4N,KAAK5N,GAAG,GAAIA,EAAE6N,eAAeD,GAAID,EAAEC,GAAK5N,EAAE4N,EACnD,SAASE,KAAOhO,KAAKiO,YAAcJ,EACnCA,EAAErP,UAAY0B,IAAM,KAAOoB,OAAO4M,OAAOhO,IAAM8N,EAAGxP,UAAY0B,EAAE1B,UAAW,GAAIwP,IwD73JnF,IAAAgnB,GAAA16B,EAAgC,2BAEhC,IAAA6tC,GAAA,SAAA/5B,GAA2BR,EAAAu6B,EAAA/5B,EAY1B,SAAA+5B,GAAY7a,EAA0BvS,EAAcC,GAEnD5M,EAAA/S,KAAA2E,KAAMstB,EAXAttB,MAAA6wB,YAAqB,WAY3B7wB,MAAKwnB,OAASzM,CACd/a,MAAKynB,QAAUzM,CAEfhb,MAAKooC,WAAapoC,KAAKyqB,IAAI3O,gBAGrBqsB,EAAA3pC,UAAAoQ,QAAP,WAEC5O,KAAKyqB,IAAIiL,cAAc11B,KAAKooC,YAG7B9mC,QAAAC,eAAW4mC,EAAA3pC,UAAA,SxDi3JJ4L,IwDj3JP,WAEC,MAAOpK,MAAKwnB,QxDk3JNjd,WAAY,KACZC,aAAc,MwDh3JrBlJ,QAAAC,eAAW4mC,EAAA3pC,UAAA,UxDm3JJ4L,IwDn3JP,WAEC,MAAOpK,MAAKynB,SxDo3JNld,WAAY,KACZC,aAAc,MwDl3JrBlJ,QAAAC,eAAW4mC,EAAA3pC,UAAA,exDq3JJ4L,IwDr3JP,WAEC,IAAKpK,KAAKqoC,aAAc,CACvBroC,KAAKqoC,aAAeroC,KAAKyqB,IAAI6d,mBAC7BtoC,MAAKyqB,IAAIqH,gBAAgB9xB,KAAKyqB,IAAIsH,YAAa/xB,KAAKqoC,aACpDroC,MAAKyqB,IAAImG,YAAY5wB,KAAKyqB,IAAI6B,WAAYtsB,KAAKooC,WAC/CpoC,MAAKyqB,IAAIkL,WAAW31B,KAAKyqB,IAAI6B,WAAY,EAAGtsB,KAAKyqB,IAAI8D,KAAMvuB,KAAKwnB,OAAQxnB,KAAKynB,QAAS,EAAGznB,KAAKyqB,IAAI8D,KAAMvuB,KAAKyqB,IAAIsC,cAAe,KAEhI,IAAIwb,GAAiCvoC,KAAKyqB,IAAI+d,oBAC9CxoC,MAAKyqB,IAAIge,iBAAiBzoC,KAAKyqB,IAAIie,aAAcH,EACjDvoC,MAAKyqB,IAAIke,oBAAoB3oC,KAAKyqB,IAAIie,aAAc1oC,KAAKyqB,IAAIme,cAAe5oC,KAAKwnB,OAAQxnB,KAAKynB,QAE9FznB,MAAKyqB,IAAIoe,qBAAqB7oC,KAAKyqB,IAAIsH,YAAa/xB,KAAKyqB,IAAIqe,kBAAmB9oC,KAAKyqB,IAAI6B,WAAYtsB,KAAKooC,WAAY,EACtHpoC,MAAKyqB,IAAIse,wBAAwB/oC,KAAKyqB,IAAIsH,YAAa/xB,KAAKyqB,IAAIue,yBAA0BhpC,KAAKyqB,IAAIie,aAAcH,EAEjHvoC,MAAKyqB,IAAImG,YAAY5wB,KAAKyqB,IAAI6B,WAAY,KAC1CtsB,MAAKyqB,IAAIge,iBAAiBzoC,KAAKyqB,IAAIie,aAAc,KACjD1oC,MAAKyqB,IAAIqH,gBAAgB9xB,KAAKyqB,IAAIsH,YAAa,MAGhD,MAAO/xB,MAAKqoC,cxDk3JN99B,WAAY,KACZC,aAAc,MwD92Jd29B,GAAA3pC,UAAAs1B,eAAP,SAAsB/sB,EAAUitB,GAAA,GAAAA,QAAA,GAAmB,CAAnBA,EAAA,EAE/Bh0B,KAAKyqB,IAAImG,YAAY5wB,KAAKyqB,IAAI6B,WAAYtsB,KAAKooC,WAC/CpoC,MAAKyqB,IAAIkL,WAAW31B,KAAKyqB,IAAI6B,WAAY0H,EAAUh0B,KAAKyqB,IAAI8D,KAAMvuB,KAAKyqB,IAAI8D,KAAMvuB,KAAKyqB,IAAIsC,cAAehmB,EACzG/G,MAAKyqB,IAAImG,YAAY5wB,KAAKyqB,IAAI6B,WAAY,MAGpC6b,GAAA3pC,UAAAk2B,qCAAP,SAA4C3tB,EAAgB4tB,EAAiCC,GAAA,GAAAA,QAAA,GAAqB,CAArBA,EAAA,MAE5F,GAAIqU,GAAajpC,KAAKyqB,IAAIG,aAAa,wCAIxCtpB,QAAAC,eAAW4mC,EAAA3pC,UAAA,axD+2JJ4L,IwD/2JP,WAEC,MAAOpK,MAAKooC,YxDg3JN79B,WAAY,KACZC,aAAc,MwD92Jd29B,GAAA3pC,UAAA0qC,gBAAP,YAOD,OAAAf,IAtF2BnT,EAAAr4B,QAwF3B2E,QAAAC,eAAAnG,EAAA,cAAAoG,MAAA,MxDg3JApG,GAAQuB,QwDh3JOwrC,IxDk3JZvS,2BAA2B,6CAA6CuT,6CAA6C,SAAS7uC,EAAQkB,EAAOJ,GAChJ,YACA,IAAIwS,GAAa5N,MAAQA,KAAK4N,WAAc,SAAUC,EAAG3N,GACrD,IAAK,GAAI4N,KAAK5N,GAAG,GAAIA,EAAE6N,eAAeD,GAAID,EAAEC,GAAK5N,EAAE4N,EACnD,SAASE,KAAOhO,KAAKiO,YAAcJ,EACnCA,EAAErP,UAAY0B,IAAM,KAAOoB,OAAO4M,OAAOhO,IAAM8N,EAAGxP,UAAY0B,EAAE1B,UAAW,GAAIwP,IyDl9JnF,IAAAoW,GAAA9pB,EAAyB,kBACzB,IAAA+4B,GAAA/4B,EAAgC,4BAEhC,IAAA8uC,GAAA,SAAAh7B,GAAgCR,EAAAw7B,EAAAh7B,EAM/B,SAAAg7B,GAAY55B,EAAwBuM,EAAoBC,GAEvD5N,EAAA/S,KAAA2E,KAEAA,MAAKyzB,SAAWjkB,CAChBxP,MAAKqpC,aAAettB,CACpB/b,MAAKspC,eAAiBttB,CACtBhc,MAAKyzB,SAASnN,UAAUC,OAAOC,aAAapC,EAAAznB,QAAQi7B,iBAAkB5b,EAAgBoI,EAAAznB,QAAQwqB,SAAWpL,EAAYpY,WAAa,IAClI3D,MAAK4zB,KAAO5zB,KAAKyzB,SAAS7M,SAC1B5mB,MAAKyzB,SAAS5M,cAAc7mB,MAGtBopC,EAAA5qC,UAAAg4B,gBAAP,SAAuBzvB,EAAewiC,EAAoBxtB,GAEzD/b,KAAKyzB,SAASnN,UAAUC,OAAOC,aAAapC,EAAAznB,QAAQk7B,wBAAyB73B,KAAK4zB,KAAOxP,EAAAznB,QAAQwqB,SAAWpgB,EAAK2vB,OAAS,KAAO6S,EAAaxtB,GAAa2a,OAAS,IACpK12B,MAAKyzB,SAAS7M,UAGRwiB,GAAA5qC,UAAAuR,oBAAP,SAA2BhJ,EAAkBwiC,EAAoBxtB,IAKjEza,QAAAC,eAAW6nC,EAAA5qC,UAAA,ezDw8JJ4L,IyDx8JP,WAEC,MAAOpK,MAAKqpC,czDy8JN9+B,WAAY,KACZC,aAAc,MyDv8JrBlJ,QAAAC,eAAW6nC,EAAA5qC,UAAA,iBzD08JJ4L,IyD18JP,WAEC,MAAOpK,MAAKspC,gBzD28JN/+B,WAAY,KACZC,aAAc,MyDz8Jd4+B,GAAA5qC,UAAAoQ,QAAP,WAEC5O,KAAKyzB,SAASnN,UAAUC,OAAOC,aAAapC,EAAAznB,QAAQu7B,oBAAqBl4B,KAAK4zB,KAAOxP,EAAAznB,QAAQwqB,SAC7FnnB,MAAKyzB,SAAS7M,SACd5mB,MAAKyzB,SAAS1M,iBAAiB/mB,KAE/BA,MAAKyzB,SAAW,KAElB,OAAA2V,IA/CgC/V,EAAA12B,QAiDhC2E,QAAAC,eAAAnG,EAAA,cAAAoG,MAAA,MzD08JApG,GAAQuB,QyD18JOysC,IzD48JZ1gB,kBAAkB,kCAAkCmM,4BAA4B,8CAA8C2U,gDAAgD,SAASlvC,EAAQkB,EAAOJ,GACzM,Y0DjgKA,IAAAquC,GAAA,WAOI,QAAAA,GAAY1tB,EAAoBC,GAC5Bhc,KAAKqpC,aAAettB,CACpB/b,MAAKspC,eAAiBttB,EAGnBytB,EAAAjrC,UAAAg4B,gBAAP,SAAuBkT,EAAmBH,EAAoBxtB,GAC1DnV,QAAQC,IAAI,uCAEZ7G,MAAK2pC,WAAa,GAAItX,cAAaqX,GAGhCD,GAAAjrC,UAAAuR,oBAAP,SAA2BhJ,EAAkBwiC,EAAoBxtB,GAC7DnV,QAAQC,IAAI,2CAEZ7G,MAAK2pC,WAAa,GAAItX,cAAatrB,EAAMwiC,EAAcvpC,KAAKspC,eAAgBvtB,EAAc/b,KAAKspC,eAAiB,EAChHtpC,MAAK4pC,UAAY,GAAIpb,YAAWznB,GAGpCzF,QAAAC,eAAWkoC,EAAAjrC,UAAA,e1D2/JP4L,I0D3/JJ,WACI,MAAOpK,MAAKqpC,c1D6/JZ9+B,WAAY,KACZC,aAAc,M0D3/JlBlJ,QAAAC,eAAWkoC,EAAAjrC,UAAA,iB1D8/JP4L,I0D9/JJ,WACI,MAAOpK,MAAKspC,gB1DggKZ/+B,WAAY,KACZC,aAAc,M0D9/JlBlJ,QAAAC,eAAWkoC,EAAAjrC,UAAA,uB1DigKP4L,I0DjgKJ,WACI,MAAOpK,MAAKspC,eAAiB,G1DmgK7B/+B,WAAY,KACZC,aAAc,M0DjgKXi/B,GAAAjrC,UAAAoQ,QAAP,WACI5O,KAAK2pC,WAAa,KAGtBroC,QAAAC,eAAWkoC,EAAAjrC,UAAA,Q1DmgKP4L,I0DngKJ,WACI,MAAOpK,MAAK2pC,Y1DqgKZp/B,WAAY,KACZC,aAAc,M0DngKlBlJ,QAAAC,eAAWkoC,EAAAjrC,UAAA,Y1DsgKP4L,I0DtgKJ,WACI,MAAOpK,MAAK4pC,W1DwgKZr/B,WAAY,KACZC,aAAc,M0DvgKtB,OAAAi/B,KAEAnoC,QAAAC,eAAAnG,EAAA,cAAAoG,MAAA,M1D0gKApG,GAAQuB,Q0D1gKO8sC,O1D4gKTI,6CAA6C,SAASvvC,EAAQkB,EAAOJ,GAC3E,Y2D/jKA,IAAA0uC,GAAA,WAQC,QAAAA,GAAYxc,EAA0BvR,EAAoBC,GAEzDhc,KAAKyqB,IAAM6C,CACXttB,MAAKm3B,QAAUn3B,KAAKyqB,IAAI2M,cACxBp3B,MAAKqpC,aAAettB,CACpB/b,MAAKspC,eAAiBttB,EAGhB8tB,EAAAtrC,UAAAg4B,gBAAP,SAAuBkT,EAAmBH,EAAoBxtB,GAE7D/b,KAAKyqB,IAAImE,WAAW5uB,KAAKyqB,IAAIgH,aAAczxB,KAAKm3B,QAEhD,IAAIoS,EACHvpC,KAAKyqB,IAAI4M,cAAcr3B,KAAKyqB,IAAIgH,aAAc8X,EAAYvpC,KAAKspC,eAAgB,GAAIjX,cAAaqX,QAEhG1pC,MAAKyqB,IAAI6M,WAAWt3B,KAAKyqB,IAAIgH,aAAc,GAAIY,cAAaqX,GAAW1pC,KAAKyqB,IAAI8M,aAI3EuS,GAAAtrC,UAAAuR,oBAAP,SAA2BhJ,EAAkBwiC,EAAoBxtB,GAEhE/b,KAAKyqB,IAAImE,WAAW5uB,KAAKyqB,IAAIgH,aAAczxB,KAAKm3B;AAEhD,GAAIoS,EACHvpC,KAAKyqB,IAAI4M,cAAcr3B,KAAKyqB,IAAIgH,aAAc8X,EAAYvpC,KAAKspC,eAAgBviC,OAE/E/G,MAAKyqB,IAAI6M,WAAWt3B,KAAKyqB,IAAIgH,aAAc1qB,EAAM/G,KAAKyqB,IAAI8M,aAG5Dj2B,QAAAC,eAAWuoC,EAAAtrC,UAAA,e3DijKJ4L,I2DjjKP,WAEC,MAAOpK,MAAKqpC,c3DkjKN9+B,WAAY,KACZC,aAAc,M2DhjKrBlJ,QAAAC,eAAWuoC,EAAAtrC,UAAA,iB3DmjKJ4L,I2DnjKP,WAEC,MAAOpK,MAAKspC,gB3DojKN/+B,WAAY,KACZC,aAAc,M2DljKrBlJ,QAAAC,eAAWuoC,EAAAtrC,UAAA,Y3DqjKJ4L,I2DrjKP,WAEC,MAAOpK,MAAKm3B,S3DsjKN5sB,WAAY,KACZC,aAAc,M2DpjKds/B,GAAAtrC,UAAAoQ,QAAP,WAEC5O,KAAKyqB,IAAI+M,aAAax3B,KAAKm3B,SAE7B,OAAA2S,KAEAxoC,QAAAC,eAAAnG,EAAA,cAAAoG,MAAA,M3DsjKApG,GAAQuB,Q2DtjKOmtC,O3DwjKTC,2BAA2B,SAASzvC,EAAQkB,EAAOJ,GACzD,Y4DrnKA,IAAAoc,GAAAld,EAAgD,8BAAxCc,GAAAmV,qBAAAiH,EAAA7a,OACR,IAAA8a,GAAAnd,EAA+C,4BAAvCc,GAAA+V,mBAAAsG,EAAA9a,OACR,IAAA+a,GAAApd,EAAgD,8BAAxCc,GAAAqW,qBAAAiG,EAAA/a,OACR,IAAAosB,GAAAzuB,EAA8C,2BAAtCc,GAAA+W,kBAAA4W,EAAApsB,OACR,IAAAqsB,GAAA1uB,EAA+C,4BAAvCc,GAAAmX,mBAAAyW,EAAArsB,OACR,IAAAqtC,GAAA1vC,EAA6C,0BAArCc,GAAAwX,iBAAAo3B,EAAArtC,OACR,IAAAgb,GAAArd,EAAgD,8BAAxCc,GAAA6X,qBAAA0E,EAAAhb,OACR,IAAAssB,GAAA3uB,EAAkD,gCAA1Cc,GAAAkY,uBAAA2V,EAAAtsB,OACR,IAAAusB,GAAA5uB,EAAkD,gCAA1Cc,GAAA2Y,uBAAAmV,EAAAvsB,OACR,IAAAstC,GAAA3vC,EAAkD,gCAA1Cc,GAAA+Y,uBAAA81B,EAAAttC,OACR,IAAAib,GAAAtd,EAAiD,+BAAzCc,GAAAsZ,sBAAAkD,EAAAjb,OACR,IAAAwsB,GAAA7uB,EAAsD,qCAA9Cc,GAAA4Z,4BAAAmU,EAAAxsB,OACR,IAAAysB,GAAA9uB,EAA8C,2BAAtCc,GAAAkb,kBAAA8S,EAAAzsB,OACR,IAAA+lC,GAAApoC,EAA0C,qBAAlCc,GAAAsb,YAAAgsB,EAAA/lC,OACR,IAAAimC,GAAAtoC,EAA6C,yBAArCc,GAAA8c,gBAAA0qB,EAAAjmC,OACR,IAAA47B,GAAAj+B,EAA4C,wBAApCc,GAAAopB,eAAA+T,EAAA57B,OACR,IAAAgmC,GAAAroC,EAA0C,sBAAlCc,GAAAuuB,aAAAgZ,EAAAhmC,OACR,IAAAunB,GAAA5pB,EAA6C,0BAArCc,GAAAk4B,iBAAApP,EAAAvnB,OACR,IAAA0sB,GAAA/uB,EAA6C,0BAArCc,GAAA65B,iBAAA5L,EAAA1sB,OAIR,IAAAwnB,GAAA7pB,EAA6C,0BAArCc,GAAAi7B,iBAAAlS,EAAAxnB,OACR,IAAAkb,GAAAvd,EAAgD,6BAAxCc,GAAAy7B,oBAAAhf,EAAAlb,OACR,IAAA2sB,GAAAhvB,EAA6C,0BAArCc,GAAA87B,iBAAA5N,EAAA3sB,OAKR,IAAAynB,GAAA9pB,EAAuC,iBAA/Bc,GAAAs8B,QAAAtT,EAAAznB,OACR,IAAA0nB,GAAA/pB,EAA0C,sBAAlCc,GAAAo9B,aAAAnU,EAAA1nB,OACR,IAAAqb,GAAA1d,EAA6C,yBAArCc,GAAA49B,gBAAAhhB,EAAArb,OACR,IAAAo8B,GAAAz+B,EAA8C,2BAAtCc,GAAAklC,kBAAAvH,EAAAp8B,OACR,IAAA4sB,GAAAjvB,EAA0C,sBAAlCc,GAAAolC,aAAAjX,EAAA5sB,OACR,IAAA02B,GAAA/4B,EAA8C,2BAAtCc,GAAA8mC,kBAAA7O,EAAA12B,OACR,IAAA8sB,GAAAnvB,EAA0C,sBAAlCc,GAAAgnC,aAAA3Y,EAAA9sB,OACR,IAAAsb,GAAA3d,EAAgD,8BAAxCc,GAAAknC,qBAAArqB,EAAAtb,OACR,IAAAutC,GAAA5vC,EAAqC,eAA7Bc,GAAAoB,MAAA0tC,EAAAvtC,OACR,IAAAq4B,GAAA16B,EAA6C,0BAArCc,GAAAusC,iBAAA3S,EAAAr4B,OACR,IAAA2nB,GAAAhqB,EAA0C,sBAAlCc,GAAA0sC,aAAAxjB,EAAA3nB,OACR,IAAAob,GAAAzd,EAA6C,yBAArCc,GAAA4sC,gBAAAjwB,EAAApb,OACR,IAAA6sB,GAAAlvB,EAA0C,sBAAlCc,GAAA+sC,aAAA3e,EAAA7sB,OACR,IAAA4nB,GAAAjqB,EAA8C,2BAAtCc,GAAAguC,kBAAA7kB,EAAA5nB,OACR,IAAAmb,GAAAxd,EAAgD,8BAAxCc,GAAAquC,qBAAA3xB,EAAAnb,OACR,IAAA+sB,GAAApvB,EAA8C,2BAAtCc,GAAA0uC,kBAAApgB,EAAA/sB,U5DupKLwtC,8BAA8B,+CAA+CC,4BAA4B,6CAA6CC,8BAA8B,+CAA+CC,2BAA2B,4CAA4CC,4BAA4B,6CAA6CC,0BAA0B,2CAA2CC,8BAA8B,+CAA+CC,gCAAgC,iDAAiDC,gCAAgC,iDAAiDC,gCAAgC,iDAAiDC,+BAA+B,gDAAgDC,qCAAqC,sDAAsDC,2BAA2B,4CAA4CC,qBAAqB,sCAAsCC,yBAAyB,0CAA0CC,wBAAwB,yCAAyCC,sBAAsB,uCAAuCC,0BAA0B,2CAA2CC,0BAA0B,2CAA2CC,0BAA0B,2CAA2CC,6BAA6B,8CAA8CC,0BAA0B,2CAA2CC,iBAAiB,kCAAkCC,sBAAsB,uCAAuCC,yBAAyB,0CAA0CC,2BAA2B,4CAA4CC,sBAAsB,uCAAuCC,2BAA2B,4CAA4CC,sBAAsB,uCAAuCC,8BAA8B,+CAA+CC,eAAe,gCAAgCC,0BAA0B,2CAA2CC,sBAAsB,uCAAuCC,yBAAyB,0CAA0CC,sBAAsB,uCAAuCC,2BAA2B,4CAA4CC,8BAA8B,+CAA+CC,2BAA2B,8CAA8CC,wCAAwC,SAASnyC,EAAQkB,EAAOJ,GAC7pF,YACA,IAAIwS,GAAa5N,MAAQA,KAAK4N,WAAc,SAAUC,EAAG3N,GACrD,IAAK,GAAI4N,KAAK5N,GAAG,GAAIA,EAAE6N,eAAeD,GAAID,EAAEC,GAAK5N,EAAE4N,EACnD,SAASE,KAAOhO,KAAKiO,YAAcJ,EACnCA,EAAErP,UAAY0B,IAAM,KAAOoB,OAAO4M,OAAOhO,IAAM8N,EAAGxP,UAAY0B,EAAE1B,UAAW,GAAIwP,I6DxsKnF,IAAA0+B,GAAApyC,EAAyB,mCAIzB,IAAAqyC,GAAA,SAAAv+B,GAAyBR,EAAA++B,EAAAv+B,EAqCxB,SAAAu+B,GAAY3tC,EAAasP,GAExBF,EAAA/S,KAAA2E,KAAMhB,EAENgB,MAAKuO,OAASD,EATfhN,OAAAC,eAAWorC,EAAAnuC,UAAA,S7DirKJ4L,I6DjrKP,WAEC,MAAOpK,MAAKuO,Q7DkrKNhE,WAAY,KACZC,aAAc,M6DtqKdmiC,GAAAnuC,UAAAouC,MAAP,WAEC,MAAO,IAAID,GAAW3sC,KAAKhB,KAAMgB,KAAKuO,QA5CzBo+B,GAAApH,YAAqB,YAKrBoH,GAAA5F,gBAAyB,gBAKzB4F,GAAA/F,iBAA0B,iBAK1B+F,GAAA7F,kBAA2B,kBAK3B6F,GAAA3G,iBAA0B,iBA0BzC,OAAA2G,IAnDyBD,EAAA/vC,QAqDzB2E,QAAAC,eAAAnG,EAAA,cAAAoG,MAAA,M7D+rKApG,GAAQuB,Q6D/rKOgwC,I7DisKZE,mCAAmCnvC,YAAYovC,6BAA6B,SAASxyC,EAAQkB,EAAOJ,GACvG,Y8D3vKA,IAAAynC,GAAAvoC,EAAyC,sBAAjCc,GAAAuxC,WAAA9J,EAAAlmC,U9D+vKLowC,sBAAsB,yCAAyCC,6CAA6C,SAAS1yC,EAAQkB,EAAOJ,GACvI,YACA,IAAIwS,GAAa5N,MAAQA,KAAK4N,WAAc,SAAUC,EAAG3N,GACrD,IAAK,GAAI4N,KAAK5N,GAAG,GAAIA,EAAE6N,eAAeD,GAAID,EAAEC,GAAK5N,EAAE4N,EACnD,SAASE,KAAOhO,KAAKiO,YAAcJ,EACnCA,EAAErP,UAAY0B,IAAM,KAAOoB,OAAO4M,OAAOhO,IAAM8N,EAAGxP,UAAY0B,EAAE1B,UAAW,GAAIwP,I+DlwKnF,IAAAi/B,GAAA3yC,EAA+B,wCAE/B,IAAA4yC,GAAA5yC,EAA2B,sBAO3B,IAAAwC,GAAA,SAAAsR,GAA+BR,EAAA9Q,EAAAsR,EAA/B,SAAAtR,KAA+BsR,EAAA++B,MAAAntC,KAAAotC,WAIvBtwC,EAAA0B,UAAAsQ,SAAP,SAAgBC,EAAcjO,GAE7B,IAAKd,KAAKm1B,SAAU,CACnBn1B,KAAKqtC,gBACLrtC,MAAK2P,SAAW,KAGjB,IAAK3P,KAAKstC,SAAWxsC,EAAQ,CAC5Bd,KAAKstC,QAAU,IACfttC,MAAK2P,SAAW,KAGjB,GAAI3P,KAAK2P,SAAU,CAClB3P,KAAK2P,SAAW,KAChB,IAAI7O,EAAQ,CACX,GAAIysC,GAAkCvtC,KAAKwtC,cAAgBxtC,KAAKwtC,YAAc,GAAIljC,OAElF2iC,GAAAtwC,QAAgB8wC,iBAAkCztC,KAAK0tC,OAAQvzB,YAAaozB,EAAY,KACxF,IAAI1yB,GAAa0yB,EAAWjyC,MAC5B,KAAK,GAAIP,GAAW,EAAGA,EAAI8f,EAAK9f,IACnBiF,KAAKm1B,SAAUrB,eAAeyZ,EAAWxyC,GAAGu5B,eAAgBv5B,OACnE,CACMiF,KAAKm1B,SAAUrB,eAAgC9zB,KAAK0tC,OAAQpZ,eAAgB,IAI1FlmB,EAAA5P,UAAMsQ,SAAQzT,KAAA2E,KAAC+O,EAAOjO,GAMhBhE,GAAA0B,UAAAiQ,QAAP,SAAeC,GAEdN,EAAA5P,UAAMiQ,QAAOpT,KAAA2E,KAAC0O,EAEd,IAAI1O,KAAKwtC,YAAa,CACrB,GAAI3yB,GAAa7a,KAAKwtC,YAAYlyC,MAClC,KAAK,GAAIP,GAAW,EAAGA,EAAI8f,EAAK9f,IAC/BkyC,EAAAtwC,QAAgBgxC,kBAAkB3tC,KAAKwtC,YAAYzyC,KAGvD,OAAA+B,IA9C+BowC,EAAAvwC,QAgD/B2E,QAAAC,eAAAnG,EAAA,cAAAoG,MAAA,M/D4vKApG,GAAQuB,Q+D5vKOG,I/D8vKZ8wC,sBAAsB,sCAAsCC,wCAAwCnwC,YAAYowC,+CAA+C,SAASxzC,EAAQkB,EAAOJ,GAC1L,YACA,IAAIwS,GAAa5N,MAAQA,KAAK4N,WAAc,SAAUC,EAAG3N,GACrD,IAAK,GAAI4N,KAAK5N,GAAG,GAAIA,EAAE6N,eAAeD,GAAID,EAAEC,GAAK5N,EAAE4N,EACnD,SAASE,KAAOhO,KAAKiO,YAAcJ,EACnCA,EAAErP,UAAY0B,IAAM,KAAOoB,OAAO4M,OAAOhO,IAAM8N,EAAGxP,UAAY0B,EAAE1B,UAAW,GAAIwP,IgE1zKnF,IAAAi/B,GAAA3yC,EAA+B,wCAE/B,IAAAyzC,GAAAzzC,EAA6B,wBAO7B,IAAAyC,GAAA,SAAAqR,GAAiCR,EAAA7Q,EAAAqR,EAAjC,SAAArR,KAAiCqR,EAAA++B,MAAAntC,KAAAotC,UAEzBptC,MAAAguC,iBAA+C,GAAI1jC,OAA4B,GAE/EvN,EAAAyB,UAAAsQ,SAAP,SAAgBC,EAAcjO,GAE7B,IAAKd,KAAKm1B,SAAU,CACnBn1B,KAAKqtC,gBACLrtC,MAAK2P,SAAW,KAGjB,IAAK3P,KAAKstC,SAAWxsC,EAAQ,CAC5Bd,KAAKstC,QAAU,IACfttC,MAAK2P,SAAW,KAGjB,GAAI3P,KAAK2P,SAAU,CAClB3P,KAAK2P,SAAW,KAChB,KAAK,GAAI5U,GAAW,EAAGA,EAAI,IAAKA,EAAG,CAClC,GAAI+F,EAAQ,CACX,GAAIysC,GAAkCvtC,KAAKguC,iBAAiBjzC,KAAOiF,KAAKguC,iBAAiBjzC,GAAK,GAAIuP,OAElG2iC,GAAAtwC,QAAgB8wC,iBAAoCztC,KAAK0tC,OAAQvzB,UAAUpf,GAAIwyC,EAAY,KAC3F,IAAI1yB,GAAa0yB,EAAWjyC,MAC5B,KAAK,GAAI2yC,GAAW,EAAGA,EAAIpzB,EAAKozB,IACfjuC,KAAKm1B,SAAUrB,eAAeyZ,EAAWU,GAAG3Z,eAAgBv5B,EAAGkzC,OAC1E,CACUjuC,KAAKm1B,SAAUrB,eAAkC9zB,KAAK0tC,OAAQpZ,aAAav5B,GAAIA,EAAG,KAKrGqT,EAAA5P,UAAMsQ,SAAQzT,KAAA2E,KAAC+O,EAAOjO,GAMhB/D,GAAAyB,UAAAiQ,QAAP,SAAeC,GAEdN,EAAA5P,UAAMiQ,QAAOpT,KAAA2E,KAAC0O,EAEd,KAAK,GAAI3T,GAAW,EAAGA,EAAI,EAAGA,IAAK,CAClC,GAAIwyC,GAAkCvtC,KAAKguC,iBAAiBjzC,EAE5D,IAAIwyC,EAAY,CACf,GAAI1yB,GAAa0yB,EAAWjyC,MAE5B,KAAK,GAAI2yC,GAAW,EAAGA,EAAIpzB,EAAK9f,IAC/BkyC,EAAAtwC,QAAgBgxC,kBAAkBJ,EAAWU,MAIlD,OAAAlxC,IArDiCgxC,EAAApxC,QAuDjC2E,QAAAC,eAAAnG,EAAA,cAAAoG,MAAA,MhEmzKApG,GAAQuB,QgEnzKOI,IhEqzKZmxC,wBAAwB,wCAAwCL,wCAAwCnwC,YAAYywC,uCAAuC,SAAS7zC,EAAQkB,EAAOJ,GACtL,YACA,IAAIwS,GAAa5N,MAAQA,KAAK4N,WAAc,SAAUC,EAAG3N,GACrD,IAAK,GAAI4N,KAAK5N,GAAG,GAAIA,EAAE6N,eAAeD,GAAID,EAAEC,GAAK5N,EAAE4N,EACnD,SAASE,KAAOhO,KAAKiO,YAAcJ,EACnCA,EAAErP,UAAY0B,IAAM,KAAOoB,OAAO4M,OAAOhO,IAAM8N,EAAGxP,UAAY0B,EAAE1B,UAAW,GAAIwP,IiE53KnF,IAAAi8B,GAAA3vC,EAAoC,iCACpC,IAAA8zC,GAAA9zC,EAA6B,wBAM7B,IAAA+zC,GAAA,SAAAjgC,GAAyBR,EAAAygC,EAAAjgC,EAAzB,SAAAigC,KAAyBjgC,EAAA++B,MAAAntC,KAAAotC,WAOjBiB,EAAA7vC,UAAA6uC,eAAP,WAECrtC,KAAKm1B,SAAWn1B,KAAKuO,OAAOiB,QAAQsM,cAAyB9b,KAAK0tC,OAAQ3yB,MAAkB/a,KAAK0tC,OAAQ1yB,OAAQivB,EAAAttC,QAAuByX,KAAM,MAEhJ,OAAAi6B,IAXyBD,EAAAzxC,QAazB2E,QAAAC,eAAAnG,EAAA,cAAAoG,MAAA,MjEg4KApG,GAAQuB,QiEh4KO0xC,IjEk4KZC,iCAAiC,iDAAiDC,wBAAwB,0CAA0CC,yCAAyC,SAASl0C,EAAQkB,EAAOJ,GACxN,YACA,IAAIwS,GAAa5N,MAAQA,KAAK4N,WAAc,SAAUC,EAAG3N,GACrD,IAAK,GAAI4N,KAAK5N,GAAG,GAAIA,EAAE6N,eAAeD,GAAID,EAAEC,GAAK5N,EAAE4N,EACnD,SAASE,KAAOhO,KAAKiO,YAAcJ,EACnCA,EAAErP,UAAY0B,IAAM,KAAOoB,OAAO4M,OAAOhO,IAAM8N,EAAGxP,UAAY0B,EAAE1B,UAAW,GAAIwP,IkE75KnF,IAAA05B,GAAAptC,EAAkC,6CAGlC,IAAA6T,GAAA7T,EAA+B,0CAS/B,IAAAm0C,GAAA,SAAArgC,GAA2BR,EAAA6gC,EAAArgC,EAoB1B,SAAAqgC,GAAY7J,EAAct2B,GAEzBF,EAAA/S,KAAA2E,KAAM4kC,EAAOt2B,EApBPtO,MAAA0uC,OAAgB,CAsBtB1uC,MAAKuO,OAASD,EAdfhN,OAAAC,eAAWktC,EAAAjwC,UAAA,WlEu5KJ4L,IkEv5KP,WAEC,IAAKpK,KAAKm1B,SAAU,CACnBn1B,KAAKqtC,gBACLrtC,MAAK2P,SAAW,KAGjB,MAAO3P,MAAKm1B,UlEu5KN5qB,WAAY,KACZC,aAAc,MkE34KdikC,GAAAjwC,UAAAiQ,QAAP,SAAeC,GAEdN,EAAA5P,UAAMiQ,QAAOpT,KAAA2E,KAAC0O,EAEd,IAAI1O,KAAKm1B,SAAU,CAClBn1B,KAAKm1B,SAASvmB,SACd5O,MAAKm1B,SAAW,MAIXsZ,GAAAjwC,UAAAsQ,SAAP,SAAgBC,EAAcjO,GAE7Bd,KAAKuO,OAAOiB,QAAQyO,aAAalP,EAAO/O,KAAKm1B,UAGvCsZ,GAAAjwC,UAAA6uC,eAAP,WAEC,KAAM,IAAI3F,GAAA/qC,QAEZ,OAAA8xC,IAjD2BtgC,EAAAxR,QAmD3B2E,QAAAC,eAAAnG,EAAA,cAAAoG,MAAA,MlE24KApG,GAAQuB,QkE34KO8xC,IlE64KZ7G,6CAA6ClqC,UAAUwS,0CAA0CxS,YAAYixC,yCAAyC,SAASr0C,EAAQkB,EAAOJ,GACjL,YACA,IAAIwS,GAAa5N,MAAQA,KAAK4N,WAAc,SAAUC,EAAG3N,GACrD,IAAK,GAAI4N,KAAK5N,GAAG,GAAIA,EAAE6N,eAAeD,GAAID,EAAEC,GAAK5N,EAAE4N,EACnD,SAASE,KAAOhO,KAAKiO,YAAcJ,EACnCA,EAAErP,UAAY0B,IAAM,KAAOoB,OAAO4M,OAAOhO,IAAM8N,EAAGxP,UAAY0B,EAAE1B,UAAW,GAAIwP,ImE/8KnF,IAAAi8B,GAAA3vC,EAAoC,iCACpC,IAAA8zC,GAAA9zC,EAA6B,wBAM7B,IAAAs0C,GAAA,SAAAxgC,GAA2BR,EAAAghC,EAAAxgC,EAA3B,SAAAwgC,KAA2BxgC,EAAA++B,MAAAntC,KAAAotC,WAOnBwB,EAAApwC,UAAA6uC,eAAP,WAECrtC,KAAKm1B,SAAWn1B,KAAKuO,OAAOiB,QAAQkM,kBAA+B1b,KAAK0tC,OAAQpiC,KAAM2+B,EAAAttC,QAAuByX,KAAM,OAErH,OAAAw6B,IAX2BR,EAAAzxC,QAa3B2E,QAAAC,eAAAnG,EAAA,cAAAoG,MAAA,MnEm9KApG,GAAQuB,QmEn9KOiyC,InEq9KZN,iCAAiC,iDAAiDC,wBAAwB,0CAA0CM,6CAA6C,SAASv0C,EAAQkB,EAAOJ,GAC5N,YACA,IAAIwS,GAAa5N,MAAQA,KAAK4N,WAAc,SAAUC,EAAG3N,GACrD,IAAK,GAAI4N,KAAK5N,GAAG,GAAIA,EAAE6N,eAAeD,GAAID,EAAEC,GAAK5N,EAAE4N,EACnD,SAASE,KAAOhO,KAAKiO,YAAcJ,EACnCA,EAAErP,UAAY0B,IAAM,KAAOoB,OAAO4M,OAAOhO,IAAM8N,EAAGxP,UAAY0B,EAAE1B,UAAW,GAAIwP,IoEh/KnF,IAAAk/B,GAAA5yC,EAA2B,sBAM3B,IAAAsC,GAAA,SAAAwR,GAA+BR,EAAAhR,EAAAwR,EAA/B,SAAAxR,KAA+BwR,EAAA++B,MAAAntC,KAAAotC,WAGvBxwC,EAAA4B,UAAAsQ,SAAP,SAAgBC,EAAcjO,GAE7BsN,EAAA5P,UAAMsQ,SAAQzT,KAAA2E,KAAC+O,EAAO,OAIxB,OAAAnS,IAT+BswC,EAAAvwC,QAW/B2E,QAAAC,eAAAnG,EAAA,cAAAoG,MAAA,MpEk/KApG,GAAQuB,QoEl/KOC,IpEo/KZgxC,sBAAsB,wCAAwCkB,+CAA+C,SAASx0C,EAAQkB,EAAOJ,GACxI,YACA,IAAIwS,GAAa5N,MAAQA,KAAK4N,WAAc,SAAUC,EAAG3N,GACrD,IAAK,GAAI4N,KAAK5N,GAAG,GAAIA,EAAE6N,eAAeD,GAAID,EAAEC,GAAK5N,EAAE4N,EACnD,SAASE,KAAOhO,KAAKiO,YAAcJ,EACnCA,EAAErP,UAAY0B,IAAM,KAAOoB,OAAO4M,OAAOhO,IAAM8N,EAAGxP,UAAY0B,EAAE1B,UAAW,GAAIwP,IqE1gLnF,IAAA+/B,GAAAzzC,EAA6B,wBAM7B,IAAAuC,GAAA,SAAAuR,GAAiCR,EAAA/Q,EAAAuR,EAAjC,SAAAvR,KAAiCuR,EAAA++B,MAAAntC,KAAAotC,WAEzBvwC,EAAA2B,UAAAsQ,SAAP,SAAgBC,EAAcjO,GAE7BsN,EAAA5P,UAAMsQ,SAAQzT,KAAA2E,KAAC+O,EAAO,OAKxB,OAAAlS,IATiCkxC,EAAApxC,QAWjC2E,QAAAC,eAAAnG,EAAA,cAAAoG,MAAA,MrE4gLApG,GAAQuB,QqE5gLOE,IrE8gLZqxC,wBAAwB,0CAA0Ca,yCAAyC,SAASz0C,EAAQkB,EAAOJ,GACtI,YACA,IAAIwS,GAAa5N,MAAQA,KAAK4N,WAAc,SAAUC,EAAG3N,GACrD,IAAK,GAAI4N,KAAK5N,GAAG,GAAIA,EAAE6N,eAAeD,GAAID,EAAEC,GAAK5N,EAAE4N,EACnD,SAASE,KAAOhO,KAAKiO,YAAcJ,EACnCA,EAAErP,UAAY0B,IAAM,KAAOoB,OAAO4M,OAAOhO,IAAM8N,EAAGxP,UAAY0B,EAAE1B,UAAW,GAAIwP,IsEjiLnF,IAAAghC,GAAA10C,EAA8B,0BAM9B,IAAA0C,GAAA,SAAAoR,GAA2BR,EAAA5Q,EAAAoR,EAI1B,SAAApR,GAAYkhB,EAAmB5P,GAE9BF,EAAA/S,KAAA2E,KAAMke,EAAS5P,EAEftO,MAAKivC,SAAW/wB,EAGVlhB,EAAAwB,UAAAsQ,SAAP,SAAgBC,GAEf/O,KAAKuO,OAAOy4B,gBAAgBj4B,EAAO/O,KAAKivC,SAAStT,OAAQ37B,KAAKivC,SAAShI,OAAQjnC,KAAKivC,SAASnuC,QAE/F,OAAA9D,IAf2BgyC,EAAAryC,QAiB3B2E,QAAAC,eAAAnG,EAAA,cAAAoG,MAAA,MtE6hLApG,GAAQuB,QsE7hLOK,ItE+hLZkyC,0BAA0B,4CAA4CC,2CAA2C,SAAS70C,EAAQkB,EAAOJ,GAC5I,YACA,IAAIwS,GAAa5N,MAAQA,KAAK4N,WAAc,SAAUC,EAAG3N,GACrD,IAAK,GAAI4N,KAAK5N,GAAG,GAAIA,EAAE6N,eAAeD,GAAID,EAAEC,GAAK5N,EAAE4N,EACnD,SAASE,KAAOhO,KAAKiO,YAAcJ,EACnCA,EAAErP,UAAY0B,IAAM,KAAOoB,OAAO4M,OAAOhO,IAAM8N,EAAGxP,UAAY0B,EAAE1B,UAAW,GAAIwP,IuE9jLnF,IAAA05B,GAAAptC,EAAkC,6CAElC,IAAA6T,GAAA7T,EAA+B,0CAQ/B,IAAA80C,GAAA,SAAAhhC,GAA6BR,EAAAwhC,EAAAhhC,EAI5B,SAAAghC,GAAYxK,EAAct2B,GAEzBF,EAAA/S,KAAA2E,KAAM4kC,EAAOt2B,EAEbtO,MAAKuO,OAASD,EAGR8gC,EAAA5wC,UAAAsQ,SAAP,SAAgBC,GAEf,KAAM,IAAI24B,GAAA/qC,QAEZ,OAAAyyC,IAf6BjhC,EAAAxR,QAiB7B2E,QAAAC,eAAAnG,EAAA,cAAAoG,MAAA,MvEujLApG,GAAQuB,QuEvjLOyyC,IvEyjLZxH,6CAA6ClqC,UAAUwS,0CAA0CxS,YAAY2xC,2CAA2C,SAAS/0C,EAAQkB,EAAOJ,GACnL,YACA,IAAIwS,GAAa5N,MAAQA,KAAK4N,WAAc,SAAUC,EAAG3N,GACrD,IAAK,GAAI4N,KAAK5N,GAAG,GAAIA,EAAE6N,eAAeD,GAAID,EAAEC,GAAK5N,EAAE4N,EACnD,SAASE,KAAOhO,KAAKiO,YAAcJ,EACnCA,EAAErP,UAAY0B,IAAM,KAAOoB,OAAO4M,OAAOhO,IAAM8N,EAAGxP,UAAY0B,EAAE1B,UAAW,GAAIwP,IwEtlLnF,IAAAghC,GAAA10C,EAA8B,0BAM9B,IAAA2C,GAAA,SAAAmR,GAA6BR,EAAA3Q,EAAAmR,EAI5B,SAAAnR,GAAYihB,EAAqB5P,GAEhCF,EAAA/S,KAAA2E,KAAMke,EAAS5P,EAEftO,MAAKivC,SAAW/wB,EAGVjhB,EAAAuB,UAAAsQ,SAAP,SAAgBC,GAEf/O,KAAKuO,OAAOy4B,gBAAgBj4B,EAAO,MAAO/O,KAAKivC,SAAShI,OAAQjnC,KAAKivC,SAASnuC,QAEhF,OAAA7D,IAf6B+xC,EAAAryC,QAiB7B2E,QAAAC,eAAAnG,EAAA,cAAAoG,MAAA,MxEklLApG,GAAQuB,QwEllLOM,IxEolLZiyC,0BAA0B,4CAA4CI,4CAA4C,SAASh1C,EAAQkB,EAAOJ,GAC7I,YyE9mLA,IAAAm0C,GAAAj1C,EAA4B,uBAK5B,IAAAk1C,GAAA,WAUC,QAAAA,GAAYlhC,GARJtO,KAAAyvC,MAAe,GAAInuC,OAU1BtB,MAAKuO,OAASD,EASRkhC,EAAAhxC,UAAAimC,QAAP,SAAe9D,EAAqBE,GAEnC,GAAI6O,GAAa/O,EAAeE,CAChC,OAAO7gC,MAAKyvC,MAAMC,KAAS1vC,KAAKyvC,MAAMC,GAAO,GAAIH,GAAA5yC,QAAYqD,KAAMA,KAAKuO,OAAQoyB,EAAcE,IAQxF2O,GAAAhxC,UAAAmxC,YAAP,SAAmBD,GAElB1vC,KAAKyvC,MAAMC,GAAO,KAEpB,OAAAF,KAEAluC,QAAAC,eAAAnG,EAAA,cAAAoG,MAAA,MzEumLApG,GAAQuB,QyEvmLO6yC,IzEymLZI,uBAAuB,yCAAyCC,wCAAwC,SAASv1C,EAAQkB,EAAOJ,GACnI,Y0E9oLA,IAAA00C,GAAA,WAkBC,QAAAA,GAAYC,EAAsBvgC,EAAemxB,EAAqBE,GAN/D7gC,KAAA0uC,OAAgB,CAQtB1uC,MAAKyvC,MAAQM,CACb/vC,MAAKsO,MAAQkB,CACbxP,MAAK2gC,aAAeA,CACpB3gC,MAAK6gC,eAAiBA,CACtB7gC,MAAKsO,MAAMm4B,gBAAgBzmC,MAMrB8vC,EAAAtxC,UAAAoQ,QAAP,WAEC5O,KAAK0uC,QAEL,KAAK1uC,KAAK0uC,OAAQ,CACjB1uC,KAAKyvC,MAAME,YAAY3vC,KAAK2gC,aAAe3gC,KAAK6gC,eAEhD7gC,MAAKsO,MAAMq4B,kBAAkB3mC,KAE7B,IAAIA,KAAKsd,QAAS,CACjBtd,KAAKsd,QAAQ1O,SACb5O,MAAKsd,QAAU,OAvCJwyB,GAAAE,qBAA8B,CA2C7C,OAAAF,KAEAxuC,QAAAC,eAAAnG,EAAA,cAAAoG,MAAA,M1E+nLApG,GAAQuB,Q0E/nLOmzC,O1EioLTG,4BAA4B,SAAS31C,EAAQkB,EAAOJ,GAC1D,Y2EzrLA,IAAA80C,GAAA51C,EAA6C,2BAArCc,GAAA0B,iBAAAozC,EAAAvzC,OACR,IAAAwzC,GAAA71C,EAA+C,6BAAvCc,GAAA2B,mBAAAozC,EAAAxzC,OACR,IAAAuwC,GAAA5yC,EAAyC,qBAAjCc,GAAAizC,WAAAnB,EAAAvwC,OACR,IAAAyxC,GAAA9zC,EAA0C,uBAAlCc,GAAAqzC,aAAAL,EAAAzxC,OACR,IAAAoxC,GAAAzzC,EAA0C,uBAAlCc,GAAAwzC,aAAAb,EAAApxC,OACR,IAAAyzC,GAAA91C,EAA6C,2BAArCc,GAAAwB,iBAAAwzC,EAAAzzC,OACR,IAAA0zC,GAAA/1C,EAA+C,6BAAvCc,GAAAyB,mBAAAwzC,EAAA1zC,OACR,IAAA2zC,GAAAh2C,EAA0C,uBAAlCc,GAAA4B,aAAAszC,EAAA3zC,OACR,IAAAqyC,GAAA10C,EAA4C,yBAApCc,GAAAg0C,eAAAJ,EAAAryC,OACR,IAAA4zC,GAAAj2C,EAA4C,yBAApCc,GAAA6B,eAAAszC,EAAA5zC,OACR,IAAA4yC,GAAAj1C,EAA0C,sBAAlCc,GAAA00C,YAAAP,EAAA5yC,OACR,IAAAmmC,GAAAxoC,EAA6C,0BAArCc,GAAAo0C,gBAAA1M,EAAAnmC,U3EwsLL6zC,2BAA2B,4CAA4CC,6BAA6B,8CAA8CC,qBAAqB,sCAAsCC,uBAAuB,wCAAwCC,uBAAuB,wCAAwCC,2BAA2B,4CAA4CC,6BAA6B,8CAA8CC,uBAAuB,wCAAwCC,yBAAyB,0CAA0CC,yBAAyB,0CAA0CC,sBAAsB,uCAAuCC,0BAA0B,6CAA6CC,6CAA6C,SAAS92C,EAAQkB,EAAOJ,GAC92B,kBAEMi2C,8BAA8B,SAAS/2C,EAAQkB,EAAOJ,GAC5D,kBAEMk2C,4CAA4C,SAASh3C,EAAQkB,EAAOJ,GAC1E,YACA,IAAIwS,GAAa5N,MAAQA,KAAK4N,WAAc,SAAUC,EAAG3N,GACrD,IAAK,GAAI4N,KAAK5N,GAAG,GAAIA,EAAE6N,eAAeD,GAAID,EAAEC,GAAK5N,EAAE4N,EACnD,SAASE,KAAOhO,KAAKiO,YAAcJ,EACnCA,EAAErP,UAAY0B,IAAM,KAAOoB,OAAO4M,OAAOhO,IAAM8N,EAAGxP,UAAY0B,EAAE1B,UAAW,GAAIwP,I4E9tLnF,IAAAw0B,GAAAloC,EAA+B,yCAC/B,IAAAi3C,GAAAj3C,EAA6B,uCAE7B,IAAA4vC,GAAA5vC,EAAuB,gBACvB,IAAAuoC,GAAAvoC,EAA2B,uBAO3B,IAAAk3C,GAAA,SAAApjC,GAA2BR,EAAA4jC,EAAApjC,EAc1B,SAAAojC,KAdD,GAAArO,GAAAnjC,IAgBEoO,GAAA/S,KAAA2E,KAEAA,MAAKyxC,QAAU,GAAInnC,OAAaknC,EAAaE,mBAE7C1xC,MAAK2xC,0BAA4B,SAACjjC,GAAqB,MAAAy0B,GAAKyO,iBAAiBljC,IAQhE8iC,EAAAK,YAAd,WAEC,GAAI7xC,KAAK8xC,WAAa,KACrB9xC,KAAK8xC,UAAY,GAAIN,EAEtB,OAAOxxC,MAAK8xC,UAWNN,GAAAhzC,UAAAuzC,WAAP,SAAkBhjC,EAAck0B,EAA+BC,EAA6B7zB,GAA5D,GAAA4zB,QAAA,GAA6B,CAA7BA,EAAA,MAA+B,GAAAC,QAAA,GAA2B,CAA3BA,EAAA,WAA6B,GAAA7zB,QAAA,GAAoB,CAApBA,EAAA,OAE3F,GAAIN,EAAQ,GAAKA,GAASyiC,EAAaE,mBACtC,KAAM,IAAIH,GAAA50C,QAAc,8BAAgC60C,EAAaE,mBAAqB,IAE3F,KAAK1xC,KAAKyxC,QAAQ1iC,GAAQ,CACzByiC,EAAaQ,YAEb,IAAG/3B,SAAU,CACZ,GAAI9B,GAA2B8B,SAASka,cAAc,SACtDhc,GAAO4M,GAAK,QAAUhW,CACtBkL,UAASjY,KAAKkY,YAAY/B,GAE3B,GAAI7J,GAActO,KAAKyxC,QAAQ1iC,GAAS,GAAIm7B,GAAAvtC,QAAMwb,EAAQpJ,EAAO/O,KAAMijC,EAAeC,EACtF50B,GAAMy1B,iBAAiBlB,EAAAlmC,QAAWoqC,gBAAiB/mC,KAAK2xC,0BACxDrjC,GAAM42B,eAAejC,EAAeC,EAAS7zB,GAG9C,MAAOf,GAQDkjC,GAAAhzC,UAAAynC,aAAP,SAAoB33B,GAEnBkjC,EAAaQ,YAEb1jC,GAAM2jC,oBAAoBpP,EAAAlmC,QAAWoqC,gBAAiB/mC,KAAK2xC,0BAE3D3xC,MAAKyxC,QAAQnjC,EAAMy0B,YAAc,KAS3ByO,GAAAhzC,UAAA0zC,aAAP,SAAoBjP,EAA+BC,EAA6B7zB,GAA5D,GAAA4zB,QAAA,GAA6B,CAA7BA,EAAA,MAA+B,GAAAC,QAAA,GAA2B,CAA3BA,EAAA,WAA6B,GAAA7zB,QAAA,GAAoB,CAApBA,EAAA,OAE/E,GAAItU,GAAW,CACf,IAAI8f,GAAa7a,KAAKyxC,QAAQn2C,MAE9B,OAAOP,EAAI8f,EAAK,CACf,IAAK7a,KAAKyxC,QAAQ12C,GACjB,MAAOiF,MAAK+xC,WAAWh3C,EAAGkoC,EAAeC,EAAS7zB,KAEjDtU,EAGH,MAAO,MAORuG,QAAAC,eAAWiwC,EAAAhzC,UAAA,gB5E0sLJ4L,I4E1sLP,WAEC,MAAOonC,GAAaQ,WAAaR,EAAaE,mBAAoB,KAAO,O5E2sLnEnnC,WAAY,KACZC,aAAc,M4ErsLrBlJ,QAAAC,eAAWiwC,EAAAhzC,UAAA,gB5E4sLJ4L,I4E5sLP,WAEC,MAAOonC,GAAaE,mBAAqBF,EAAaQ,Y5E6sLhDznC,WAAY,KACZC,aAAc,M4EvsLrBlJ,QAAAC,eAAWiwC,EAAAhzC,UAAA,gB5E8sLJ4L,I4E9sLP,WAEC,MAAOonC,GAAaQ,Y5E+sLdznC,WAAY,KACZC,aAAc,M4E1sLrBlJ,QAAAC,eAAWiwC,EAAAhzC,UAAA,iB5EgtLJ4L,I4EhtLP,WAEC,MAAOpK,MAAKyxC,QAAQn2C,Q5EitLdiP,WAAY,KACZC,aAAc,M4E/sLbgnC,GAAAhzC,UAAAozC,iBAAR,SAAyBljC,IArIV8iC,GAAAE,mBAA4B,CAI5BF,GAAAQ,WAAoB,CAsIpC,OAAAR,IA5I2BhP,EAAA7lC,QA8I3B2E,QAAAC,eAAAnG,EAAA,cAAAoG,MAAA,M5EmtLApG,GAAQuB,Q4EntLO60C,I5EqtLZW,gBAAgB,gCAAgC9K,uBAAuB,uCAAuC+K,uCAAuC10C,UAAU6pC,yCAAyC7pC,YAAY20C,+BAA+B,SAAS/3C,EAAQkB,EAAOJ,GAC9Q,Y6E/2LA,IAAAk3C,GAAAh4C,EAA0C,0BAAlCc,GAAAo2C,aAAAc,EAAA31C,U7Em3LL41C,0BAA0B,kDAAkD",
  "file": "awayjs-stagegl.min.js",
  "sourcesContent": [
    "(function e(t,n,r){function s(o,u){if(!n[o]){if(!t[o]){var a=typeof require==\"function\"&&require;if(!u&&a)return a(o,!0);if(i)return i(o,!0);var f=new Error(\"Cannot find module '\"+o+\"'\");throw f.code=\"MODULE_NOT_FOUND\",f}var l=n[o]={exports:{}};t[o][0].call(l.exports,function(e){var n=t[o][1][e];return s(n?n:e)},l,l.exports,e,t,n,r)}return n[o].exports}var i=typeof require==\"function\"&&require;for(var o=0;o<r.length;o++)s(r[o]);return s})",
    "require=(function e(t,n,r){function s(o,u){if(!n[o]){if(!t[o]){var a=typeof require==\"function\"&&require;if(!u&&a)return a(o,!0);if(i)return i(o,!0);var f=new Error(\"Cannot find module '\"+o+\"'\");throw f.code=\"MODULE_NOT_FOUND\",f}var l=n[o]={exports:{}};t[o][0].call(l.exports,function(e){var n=t[o][1][e];return s(n?n:e)},l,l.exports,e,t,n,r)}return n[o].exports}var i=typeof require==\"function\"&&require;for(var o=0;o<r.length;o++)s(r[o]);return s})({1:[function(require,module,exports){\n\"use strict\";\nvar aglsl = require(\"./lib/aglsl\");\nexports.aglsl = aglsl;\nvar attributes = require(\"./lib/attributes\");\nexports.attributes = attributes;\nvar base = require(\"./lib/base\");\nexports.base = base;\nvar events = require(\"./lib/events\");\nexports.events = events;\nvar image = require(\"./lib/image\");\nexports.image = image;\nvar library = require(\"./lib/library\");\nexports.library = library;\nvar managers = require(\"./lib/managers\");\nexports.managers = managers;\nvar AttributesBuffer_1 = require(\"awayjs-core/lib/attributes/AttributesBuffer\");\nvar BitmapImage2D_1 = require(\"awayjs-core/lib/image/BitmapImage2D\");\nvar BitmapImageCube_1 = require(\"awayjs-core/lib/image/BitmapImageCube\");\nvar Image2D_1 = require(\"awayjs-core/lib/image/Image2D\");\nvar ImageCube_1 = require(\"awayjs-core/lib/image/ImageCube\");\nvar SpecularImage2D_1 = require(\"awayjs-core/lib/image/SpecularImage2D\");\nvar Sampler2D_1 = require(\"awayjs-core/lib/image/Sampler2D\");\nvar SamplerCube_1 = require(\"awayjs-core/lib/image/SamplerCube\");\nbase.Stage.registerAbstraction(attributes.GL_AttributesBuffer, AttributesBuffer_1.default);\nbase.Stage.registerAbstraction(image.GL_RenderImage2D, Image2D_1.default);\nbase.Stage.registerAbstraction(image.GL_RenderImageCube, ImageCube_1.default);\nbase.Stage.registerAbstraction(image.GL_BitmapImage2D, BitmapImage2D_1.default);\nbase.Stage.registerAbstraction(image.GL_BitmapImageCube, BitmapImageCube_1.default);\nbase.Stage.registerAbstraction(image.GL_BitmapImage2D, SpecularImage2D_1.default);\nbase.Stage.registerAbstraction(image.GL_Sampler2D, Sampler2D_1.default);\nbase.Stage.registerAbstraction(image.GL_SamplerCube, SamplerCube_1.default);\n\n},{\"./lib/aglsl\":\"awayjs-stagegl/lib/aglsl\",\"./lib/attributes\":\"awayjs-stagegl/lib/attributes\",\"./lib/base\":\"awayjs-stagegl/lib/base\",\"./lib/events\":\"awayjs-stagegl/lib/events\",\"./lib/image\":\"awayjs-stagegl/lib/image\",\"./lib/library\":\"awayjs-stagegl/lib/library\",\"./lib/managers\":\"awayjs-stagegl/lib/managers\",\"awayjs-core/lib/attributes/AttributesBuffer\":undefined,\"awayjs-core/lib/image/BitmapImage2D\":undefined,\"awayjs-core/lib/image/BitmapImageCube\":undefined,\"awayjs-core/lib/image/Image2D\":undefined,\"awayjs-core/lib/image/ImageCube\":undefined,\"awayjs-core/lib/image/Sampler2D\":undefined,\"awayjs-core/lib/image/SamplerCube\":undefined,\"awayjs-core/lib/image/SpecularImage2D\":undefined}],\"awayjs-stagegl/lib/aglsl/AGALTokenizer\":[function(require,module,exports){\n\"use strict\";\nvar Description_1 = require(\"../aglsl/Description\");\nvar Header_1 = require(\"../aglsl/Header\");\nvar Mapping_1 = require(\"../aglsl/Mapping\");\nvar Token_1 = require(\"../aglsl/Token\");\nvar AGALTokenizer = (function () {\n    function AGALTokenizer() {\n    }\n    AGALTokenizer.prototype.decribeAGALByteArray = function (bytes) {\n        var header = new Header_1.default();\n        if (bytes.readUnsignedByte() != 0xa0) {\n            throw \"Bad AGAL: Missing 0xa0 magic byte.\";\n        }\n        header.version = bytes.readUnsignedInt();\n        if (header.version >= 0x10) {\n            bytes.readUnsignedByte();\n            header.version >>= 1;\n        }\n        if (bytes.readUnsignedByte() != 0xa1) {\n            throw \"Bad AGAL: Missing 0xa1 magic byte.\";\n        }\n        header.progid = bytes.readUnsignedByte();\n        switch (header.progid) {\n            case 1:\n                header.type = \"fragment\";\n                break;\n            case 0:\n                header.type = \"vertex\";\n                break;\n            case 2:\n                header.type = \"cpu\";\n                break;\n            default:\n                header.type = \"\";\n                break;\n        }\n        var desc = new Description_1.default();\n        var tokens = [];\n        while (bytes.position < bytes.length) {\n            var token = new Token_1.default();\n            token.opcode = bytes.readUnsignedInt();\n            var lutentry = Mapping_1.default.agal2glsllut[token.opcode];\n            if (!lutentry) {\n                throw \"Opcode not valid or not implemented yet: \" + token.opcode;\n            }\n            if (lutentry.matrixheight) {\n                desc.hasmatrix = true;\n            }\n            if (lutentry.dest) {\n                token.dest.regnum = bytes.readUnsignedShort();\n                token.dest.mask = bytes.readUnsignedByte();\n                token.dest.regtype = bytes.readUnsignedByte();\n                desc.regwrite[token.dest.regtype][token.dest.regnum] |= token.dest.mask;\n            }\n            else {\n                token.dest = null;\n                bytes.readUnsignedInt();\n            }\n            if (lutentry.a) {\n                this.readReg(token.a, 1, desc, bytes);\n            }\n            else {\n                token.a = null;\n                bytes.readUnsignedInt();\n                bytes.readUnsignedInt();\n            }\n            if (lutentry.b) {\n                this.readReg(token.b, lutentry.matrixheight | 0, desc, bytes);\n            }\n            else {\n                token.b = null;\n                bytes.readUnsignedInt();\n                bytes.readUnsignedInt();\n            }\n            tokens.push(token);\n        }\n        desc.header = header;\n        desc.tokens = tokens;\n        return desc;\n    };\n    AGALTokenizer.prototype.readReg = function (s, mh, desc, bytes) {\n        s.regnum = bytes.readUnsignedShort();\n        s.indexoffset = bytes.readByte();\n        s.swizzle = bytes.readUnsignedByte();\n        s.regtype = bytes.readUnsignedByte();\n        desc.regread[s.regtype][s.regnum] = 0xf; // sould be swizzle to mask? should be |=                                                 \n        if (s.regtype == 0x5) {\n            // sampler\n            s.lodbiad = s.indexoffset;\n            s.indexoffset = undefined;\n            s.swizzle = undefined;\n            // sampler \n            s.readmode = bytes.readUnsignedByte();\n            s.dim = s.readmode >> 4;\n            s.readmode &= 0xf;\n            s.special = bytes.readUnsignedByte();\n            s.wrap = s.special >> 4;\n            s.special &= 0xf;\n            s.mipmap = bytes.readUnsignedByte();\n            s.filter = s.mipmap >> 4;\n            s.mipmap &= 0xf;\n            desc.samplers[s.regnum] = s;\n        }\n        else {\n            s.indexregtype = bytes.readUnsignedByte();\n            s.indexselect = bytes.readUnsignedByte();\n            s.indirectflag = bytes.readUnsignedByte();\n        }\n        if (s.indirectflag) {\n            desc.hasindirect = true;\n        }\n        if (!s.indirectflag && mh) {\n            for (var mhi = 0; mhi < mh; mhi++) {\n                desc.regread[s.regtype][s.regnum + mhi] = desc.regread[s.regtype][s.regnum];\n            }\n        }\n    };\n    return AGALTokenizer;\n}());\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.default = AGALTokenizer;\n\n},{\"../aglsl/Description\":\"awayjs-stagegl/lib/aglsl/Description\",\"../aglsl/Header\":\"awayjs-stagegl/lib/aglsl/Header\",\"../aglsl/Mapping\":\"awayjs-stagegl/lib/aglsl/Mapping\",\"../aglsl/Token\":\"awayjs-stagegl/lib/aglsl/Token\"}],\"awayjs-stagegl/lib/aglsl/AGLSLParser\":[function(require,module,exports){\n\"use strict\";\nvar Mapping_1 = require(\"../aglsl/Mapping\");\nvar AGLSLParser = (function () {\n    function AGLSLParser() {\n    }\n    AGLSLParser.prototype.parse = function (desc) {\n        var header = \"\";\n        var body = \"\";\n        header += \"precision highp float;\\n\";\n        var tag = desc.header.type[0]; //TODO\n        // declare uniforms\n        if (desc.header.type == \"vertex\") {\n            header += \"uniform float yflip;\\n\";\n        }\n        if (!desc.hasindirect) {\n            for (var i = 0; i < desc.regread[0x1].length; i++) {\n                if (desc.regread[0x1][i]) {\n                    header += \"uniform vec4 \" + tag + \"c\" + i + \";\\n\";\n                }\n            }\n        }\n        else {\n            header += \"uniform vec4 \" + tag + \"carrr[\" + AGLSLParser.maxvertexconstants + \"];\\n\"; // use max const count instead\n        }\n        // declare temps\n        for (var i = 0; i < desc.regread[0x2].length || i < desc.regwrite[0x2].length; i++) {\n            if (desc.regread[0x2][i] || desc.regwrite[0x2][i]) {\n                header += \"vec4 \" + tag + \"t\" + i + \";\\n\";\n            }\n        }\n        // declare streams\n        for (var i = 0; i < desc.regread[0x0].length; i++) {\n            if (desc.regread[0x0][i]) {\n                header += \"attribute vec4 va\" + i + \";\\n\";\n            }\n        }\n        // declare interpolated\n        for (var i = 0; i < desc.regread[0x4].length || i < desc.regwrite[0x4].length; i++) {\n            if (desc.regread[0x4][i] || desc.regwrite[0x4][i]) {\n                header += \"varying vec4 vi\" + i + \";\\n\";\n            }\n        }\n        // declare samplers\n        var samptype = [\"2D\", \"Cube\", \"3D\", \"\"];\n        for (var i = 0; i < desc.samplers.length; i++) {\n            if (desc.samplers[i]) {\n                header += \"uniform sampler\" + samptype[desc.samplers[i].dim & 3] + \" fs\" + i + \";\\n\";\n            }\n        }\n        // extra gl fluff: setup position and depth adjust temps\n        if (desc.header.type == \"vertex\") {\n            header += \"vec4 outpos;\\n\";\n        }\n        if (desc.writedepth) {\n            header += \"vec4 tmp_FragDepth;\\n\";\n        }\n        //if ( desc.hasmatrix ) \n        //    header += \"vec4 tmp_matrix;\\n\";\n        var derivatives = false;\n        // start body of code\n        body += \"void main() {\\n\";\n        for (var i = 0; i < desc.tokens.length; i++) {\n            var lutentry = Mapping_1.default.agal2glsllut[desc.tokens[i].opcode];\n            if (lutentry.s.indexOf(\"dFdx\") != -1 || lutentry.s.indexOf(\"dFdy\") != -1)\n                derivatives = true;\n            if (!lutentry) {\n                throw \"Opcode not valid or not implemented yet: \";\n            }\n            var sublines = lutentry.matrixheight || 1;\n            for (var sl = 0; sl < sublines; sl++) {\n                var line = \"  \" + lutentry.s;\n                if (desc.tokens[i].dest) {\n                    if (lutentry.matrixheight) {\n                        if (((desc.tokens[i].dest.mask >> sl) & 1) != 1) {\n                            continue;\n                        }\n                        var destregstring = this.regtostring(desc.tokens[i].dest.regtype, desc.tokens[i].dest.regnum, desc, tag);\n                        var destcaststring = \"float\";\n                        var destmaskstring = [\"x\", \"y\", \"z\", \"w\"][sl];\n                        destregstring += \".\" + destmaskstring;\n                    }\n                    else {\n                        var destregstring = this.regtostring(desc.tokens[i].dest.regtype, desc.tokens[i].dest.regnum, desc, tag);\n                        var destcaststring;\n                        var destmaskstring;\n                        if (desc.tokens[i].dest.mask != 0xf) {\n                            var ndest = 0;\n                            destmaskstring = \"\";\n                            if (desc.tokens[i].dest.mask & 1) {\n                                ndest++;\n                                destmaskstring += \"x\";\n                            }\n                            if (desc.tokens[i].dest.mask & 2) {\n                                ndest++;\n                                destmaskstring += \"y\";\n                            }\n                            if (desc.tokens[i].dest.mask & 4) {\n                                ndest++;\n                                destmaskstring += \"z\";\n                            }\n                            if (desc.tokens[i].dest.mask & 8) {\n                                ndest++;\n                                destmaskstring += \"w\";\n                            }\n                            destregstring += \".\" + destmaskstring;\n                            switch (ndest) {\n                                case 1:\n                                    destcaststring = \"float\";\n                                    break;\n                                case 2:\n                                    destcaststring = \"vec2\";\n                                    break;\n                                case 3:\n                                    destcaststring = \"vec3\";\n                                    break;\n                                default:\n                                    throw \"Unexpected destination mask\";\n                            }\n                        }\n                        else {\n                            destcaststring = \"vec4\";\n                            destmaskstring = \"xyzw\";\n                        }\n                    }\n                    line = line.replace(\"%dest\", destregstring);\n                    line = line.replace(\"%cast\", destcaststring);\n                    line = line.replace(\"%dm\", destmaskstring);\n                }\n                var dwm = 0xf;\n                if (!lutentry.ndwm && lutentry.dest && desc.tokens[i].dest) {\n                    dwm = desc.tokens[i].dest.mask;\n                }\n                if (desc.tokens[i].a) {\n                    line = line.replace(\"%a\", this.sourcetostring(desc.tokens[i].a, 0, dwm, lutentry.scalar, desc, tag));\n                }\n                if (desc.tokens[i].b) {\n                    line = line.replace(\"%b\", this.sourcetostring(desc.tokens[i].b, sl, dwm, lutentry.scalar, desc, tag));\n                    if (desc.tokens[i].b.regtype == 0x5) {\n                        // sampler dim\n                        var texdim = [\"2D\", \"Cube\", \"3D\"][desc.tokens[i].b.dim];\n                        var texsize = [\"vec2\", \"vec3\", \"vec3\"][desc.tokens[i].b.dim];\n                        line = line.replace(\"%texdim\", texdim);\n                        line = line.replace(\"%texsize\", texsize);\n                        var texlod = \"\";\n                        line = line.replace(\"%lod\", texlod);\n                    }\n                }\n                body += line;\n            }\n        }\n        // adjust z from opengl range of -1..1 to 0..1 as in d3d, this also enforces a left handed coordinate system\n        if (desc.header.type == \"vertex\") {\n            body += \"  gl_Position = vec4(outpos.x, outpos.y, outpos.z*2.0 - outpos.w, outpos.w);\\n\";\n        }\n        //flag based switch\n        if (derivatives && desc.header.type == \"fragment\") {\n            header = \"#extension GL_OES_standard_derivatives : enable\\n\" + header;\n        }\n        // clamp fragment depth\n        if (desc.writedepth) {\n            body += \"  gl_FragDepth = clamp(tmp_FragDepth,0.0,1.0);\\n\";\n        }\n        // close main\n        body += \"}\\n\";\n        return header + body;\n    };\n    AGLSLParser.prototype.regtostring = function (regtype, regnum, desc, tag) {\n        switch (regtype) {\n            case 0x0:\n                return \"va\" + regnum;\n            case 0x1:\n                if (desc.hasindirect && desc.header.type == \"vertex\") {\n                    return \"vcarrr[\" + regnum + \"]\";\n                }\n                else {\n                    return tag + \"c\" + regnum;\n                }\n            case 0x2:\n                return tag + \"t\" + regnum;\n            case 0x3:\n                return desc.header.type == \"vertex\" ? \"outpos\" : \"gl_FragColor\";\n            case 0x4:\n                return \"vi\" + regnum;\n            case 0x5:\n                return \"fs\" + regnum;\n            case 0x6:\n                return \"tmp_FragDepth\";\n            default:\n                throw \"Unknown register type\";\n        }\n    };\n    AGLSLParser.prototype.sourcetostring = function (s, subline, dwm, isscalar, desc, tag) {\n        var swiz = [\"x\", \"y\", \"z\", \"w\"];\n        var r;\n        if (s.indirectflag) {\n            r = \"vcarrr[int(\" + this.regtostring(s.indexregtype, s.regnum, desc, tag) + \".\" + swiz[s.indexselect] + \")\";\n            var realofs = subline + s.indexoffset;\n            if (realofs < 0)\n                r += realofs.toString();\n            if (realofs > 0)\n                r += \"+\" + realofs.toString();\n            r += \"]\";\n        }\n        else {\n            r = this.regtostring(s.regtype, s.regnum + subline, desc, tag);\n        }\n        // samplers never add swizzle        \n        if (s.regtype == 0x5) {\n            return r;\n        }\n        // scalar, first component only\n        if (isscalar) {\n            return r + \".\" + swiz[(s.swizzle >> 0) & 3];\n        }\n        // identity\n        if (s.swizzle == 0xe4 && dwm == 0xf) {\n            return r;\n        }\n        // with destination write mask folded in\n        r += \".\";\n        if (dwm & 1)\n            r += swiz[(s.swizzle >> 0) & 3];\n        if (dwm & 2)\n            r += swiz[(s.swizzle >> 2) & 3];\n        if (dwm & 4)\n            r += swiz[(s.swizzle >> 4) & 3];\n        if (dwm & 8)\n            r += swiz[(s.swizzle >> 6) & 3];\n        return r;\n    };\n    AGLSLParser.maxvertexconstants = 128;\n    AGLSLParser.maxfragconstants = 28;\n    AGLSLParser.maxtemp = 8;\n    AGLSLParser.maxstreams = 8;\n    AGLSLParser.maxtextures = 8;\n    return AGLSLParser;\n}());\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.default = AGLSLParser;\n\n},{\"../aglsl/Mapping\":\"awayjs-stagegl/lib/aglsl/Mapping\"}],\"awayjs-stagegl/lib/aglsl/Description\":[function(require,module,exports){\n\"use strict\";\nvar Header_1 = require(\"../aglsl/Header\");\nvar Description = (function () {\n    function Description() {\n        this.regread = [\n            [],\n            [],\n            [],\n            [],\n            [],\n            [],\n            []\n        ];\n        this.regwrite = [\n            [],\n            [],\n            [],\n            [],\n            [],\n            [],\n            []\n        ];\n        this.hasindirect = false;\n        this.writedepth = false;\n        this.hasmatrix = false;\n        this.samplers = [];\n        // added due to dynamic assignment 3*0xFFFFFFuuuu\n        this.tokens = [];\n        this.header = new Header_1.default();\n    }\n    return Description;\n}());\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.default = Description;\n\n},{\"../aglsl/Header\":\"awayjs-stagegl/lib/aglsl/Header\"}],\"awayjs-stagegl/lib/aglsl/Destination\":[function(require,module,exports){\n\"use strict\";\nvar Destination = (function () {\n    function Destination() {\n        this.mask = 0;\n        this.regnum = 0;\n        this.regtype = 0;\n        this.dim = 0;\n        this.indexoffset = 0;\n        this.swizzle = 0;\n        this.lodbiad = 0;\n        this.readmode = 0;\n        this.special = 0;\n        this.wrap = 0;\n        this.filter = 0;\n        this.indexregtype = 0;\n        this.indexselect = 0;\n        this.indirectflag = 0;\n    }\n    return Destination;\n}());\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.default = Destination;\n\n},{}],\"awayjs-stagegl/lib/aglsl/Header\":[function(require,module,exports){\n\"use strict\";\nvar Header = (function () {\n    function Header() {\n        this.progid = 0;\n        this.version = 0;\n        this.type = \"\";\n    }\n    return Header;\n}());\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.default = Header;\n\n},{}],\"awayjs-stagegl/lib/aglsl/Mapping\":[function(require,module,exports){\n\"use strict\";\nvar OpLUT_1 = require(\"../aglsl/OpLUT\");\nvar Mapping = (function () {\n    //TODO: get rid of hack that fixes including definition file\n    function Mapping(include) {\n    }\n    Mapping.agal2glsllut = [\n        //         s \t\t\t\t\t\t\t\t\t\t\t\tflags   dest    a     b \t    mw \t  mh    ndwm  scale dm\t  lod\n        new OpLUT_1.default(\"%dest = %cast(%a);\\n\", 0, true, true, false, null, null, null, null, null, null),\n        new OpLUT_1.default(\"%dest = %cast(%a + %b);\\n\", 0, true, true, true, null, null, null, null, null, null),\n        new OpLUT_1.default(\"%dest = %cast(%a - %b);\\n\", 0, true, true, true, null, null, null, null, null, null),\n        new OpLUT_1.default(\"%dest = %cast(%a * %b);\\n\", 0, true, true, true, null, null, null, null, null, null),\n        new OpLUT_1.default(\"%dest = %cast(%a / %b);\\n\", 0, true, true, true, null, null, null, null, null, null),\n        new OpLUT_1.default(\"%dest = %cast(1.0) / %a;\\n\", 0, true, true, false, null, null, null, null, null, null),\n        new OpLUT_1.default(\"%dest = %cast(min(%a,%b));\\n\", 0, true, true, true, null, null, null, null, null, null),\n        new OpLUT_1.default(\"%dest = %cast(max(%a,%b));\\n\", 0, true, true, true, null, null, null, null, null, null),\n        new OpLUT_1.default(\"%dest = %cast(fract(%a));\\n\", 0, true, true, false, null, null, null, null, null, null),\n        new OpLUT_1.default(\"%dest = %cast(sqrt(abs(%a)));\\n\", 0, true, true, false, null, null, null, null, null, null),\n        new OpLUT_1.default(\"%dest = %cast(inversesqrt(abs(%a)));\\n\", 0, true, true, false, null, null, null, null, null, null),\n        new OpLUT_1.default(\"%dest = %cast(pow(abs(%a),%b));\\n\", 0, true, true, true, null, null, null, null, null, null),\n        new OpLUT_1.default(\"%dest = %cast(log2(abs(%a)));\\n\", 0, true, true, false, null, null, null, null, null, null),\n        new OpLUT_1.default(\"%dest = %cast(exp2(%a));\\n\", 0, true, true, false, null, null, null, null, null, null),\n        //         s \t\t\t\t\t\t\t\t\t\t\t\tflags  \tdest    a     b \t    mw \t  mh    ndwm  scale dm\t  lod\n        new OpLUT_1.default(\"%dest = %cast(normalize(vec3( %a ) ));\\n\", 0, true, true, false, null, null, true, null, null, null),\n        new OpLUT_1.default(\"%dest = %cast(sin(%a));\\n\", 0, true, true, false, null, null, null, null, null, null),\n        new OpLUT_1.default(\"%dest = %cast(cos(%a));\\n\", 0, true, true, false, null, null, null, null, null, null),\n        new OpLUT_1.default(\"%dest = %cast(cross(vec3(%a),vec3(%b)));\\n\", 0, true, true, true, null, null, true, null, null, null),\n        new OpLUT_1.default(\"%dest = %cast(dot(vec3(%a),vec3(%b)));\\n\", 0, true, true, true, null, null, true, null, null, null),\n        new OpLUT_1.default(\"%dest = %cast(dot(vec4(%a),vec4(%b)));\\n\", 0, true, true, true, null, null, true, null, null, null),\n        new OpLUT_1.default(\"%dest = %cast(abs(%a));\\n\", 0, true, true, false, null, null, null, null, null, null),\n        new OpLUT_1.default(\"%dest = %cast(%a * -1.0);\\n\", 0, true, true, false, null, null, null, null, null, null),\n        new OpLUT_1.default(\"%dest = %cast(clamp(%a,0.0,1.0));\\n\", 0, true, true, false, null, null, null, null, null, null),\n        new OpLUT_1.default(\"%dest = %cast(dot(vec3(%a),vec3(%b)));\\n\", null, true, true, true, 3, 3, true, null, null, null),\n        new OpLUT_1.default(\"%dest = %cast(dot(vec4(%a),vec4(%b)));\\n\", null, true, true, true, 4, 4, true, null, null, null),\n        new OpLUT_1.default(\"%dest = %cast(dot(vec4(%a),vec4(%b)));\\n\", null, true, true, true, 4, 3, true, null, null, null),\n        //s:string, flags:number, dest:boolean, a:boolean, b:boolean, matrixwidth:number, matrixheight:number, ndwm:boolean, scaler:boolean, dm:boolean, lod:boolean\n        new OpLUT_1.default(\"%dest = %cast(dFdx(%a));\\n\", 0, true, true, false, null, null, null, null, null, null),\n        new OpLUT_1.default(\"%dest = %cast(dFdy(%a));\\n\", 0, true, true, false, null, null, null, null, null, null),\n        new OpLUT_1.default(\"if (float(%a)==float(%b)) {;\\n\", 0, false, true, true, null, null, null, true, null, null), new OpLUT_1.default(\"if (float(%a)!=float(%b)) {;\\n\", 0, false, true, true, null, null, null, true, null, null), new OpLUT_1.default(\"if (float(%a)>=float(%b)) {;\\n\", 0, false, true, true, null, null, null, true, null, null), new OpLUT_1.default(\"if (float(%a)<float(%b)) {;\\n\", 0, false, true, true, null, null, null, true, null, null), new OpLUT_1.default(\"} else {;\\n\", 0, false, false, false, null, null, null, null, null, null), new OpLUT_1.default(\"};\\n\", 0, false, false, false, null, null, null, null, null, null), new OpLUT_1.default(null, null, null, null, false, null, null, null, null, null, null), new OpLUT_1.default(null, null, null, null, false, null, null, null, null, null, null), new OpLUT_1.default(null, null, null, null, false, null, null, null, null, null, null), new OpLUT_1.default(null, null, null, null, false, null, null, null, null, null, null),\n        //         s \t\t\t\t\t\t\t\t\t\t\t\t\t\t\tflags  \tdest    a     b \t    mw \t  mh    ndwm  scale dm\t  lod\n        new OpLUT_1.default(\"%dest = %cast(texture%texdimLod(%b,%texsize(%a)).%dm);\\n\", null, true, true, true, null, null, null, null, true, null), new OpLUT_1.default(\"if ( float(%a)<0.0 ) discard;\\n\", null, false, true, false, null, null, null, true, null, null), new OpLUT_1.default(\"%dest = %cast(texture%texdim(%b,%texsize(%a)%lod).%dm);\\n\", null, true, true, true, null, null, true, null, true, true), new OpLUT_1.default(\"%dest = %cast(greaterThanEqual(%a,%b).%dm);\\n\", 0, true, true, true, null, null, true, null, true, null), new OpLUT_1.default(\"%dest = %cast(lessThan(%a,%b).%dm);\\n\", 0, true, true, true, null, null, true, null, true, null), new OpLUT_1.default(\"%dest = %cast(sign(%a));\\n\", 0, true, true, false, null, null, null, null, null, null), new OpLUT_1.default(\"%dest = %cast(equal(%a,%b).%dm);\\n\", 0, true, true, true, null, null, true, null, true, null), new OpLUT_1.default(\"%dest = %cast(notEqual(%a,%b).%dm);\\n\", 0, true, true, true, null, null, true, null, true, null)\n    ];\n    return Mapping;\n}());\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.default = Mapping;\n\n},{\"../aglsl/OpLUT\":\"awayjs-stagegl/lib/aglsl/OpLUT\"}],\"awayjs-stagegl/lib/aglsl/OpLUT\":[function(require,module,exports){\n\"use strict\";\nvar OpLUT = (function () {\n    function OpLUT(s, flags, dest, a, b, matrixwidth, matrixheight, ndwm, scaler, dm, lod) {\n        this.s = s;\n        this.flags = flags;\n        this.dest = dest;\n        this.a = a;\n        this.b = b;\n        this.matrixwidth = matrixwidth;\n        this.matrixheight = matrixheight;\n        this.ndwm = ndwm;\n        this.scalar = scaler;\n        this.dm = dm;\n        this.lod = lod;\n    }\n    return OpLUT;\n}());\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.default = OpLUT;\n\n},{}],\"awayjs-stagegl/lib/aglsl/Token\":[function(require,module,exports){\n\"use strict\";\nvar Destination_1 = require(\"../aglsl/Destination\");\nvar Token = (function () {\n    function Token() {\n        this.dest = new Destination_1.default();\n        this.opcode = 0;\n        this.a = new Destination_1.default();\n        this.b = new Destination_1.default();\n    }\n    return Token;\n}());\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.default = Token;\n\n},{\"../aglsl/Destination\":\"awayjs-stagegl/lib/aglsl/Destination\"}],\"awayjs-stagegl/lib/aglsl/assembler/AGALMiniAssembler\":[function(require,module,exports){\n\"use strict\";\nvar OpcodeMap_1 = require(\"../../aglsl/assembler/OpcodeMap\");\nvar Part_1 = require(\"../../aglsl/assembler/Part\");\nvar RegMap_1 = require(\"../../aglsl/assembler/RegMap\");\nvar SamplerMap_1 = require(\"../../aglsl/assembler/SamplerMap\");\nvar AGALMiniAssembler = (function () {\n    function AGALMiniAssembler() {\n        this.r = {};\n        this.cur = new Part_1.default();\n    }\n    AGALMiniAssembler.prototype.assemble = function (source, ext_part, ext_version) {\n        if (ext_part === void 0) { ext_part = null; }\n        if (ext_version === void 0) { ext_version = null; }\n        if (!ext_version) {\n            ext_version = 1;\n        }\n        if (ext_part) {\n            this.addHeader(ext_part, ext_version);\n        }\n        var lines = source.replace(/[\\f\\n\\r\\v]+/g, \"\\n\").split(\"\\n\"); // handle breaks, then split into lines\n        for (var i in lines) {\n            this.processLine(lines[i], i);\n        }\n        return this.r;\n    };\n    AGALMiniAssembler.prototype.processLine = function (line, linenr) {\n        var startcomment = line.search(\"//\"); // remove comments\n        if (startcomment != -1) {\n            line = line.slice(0, startcomment);\n        }\n        line = line.replace(/^\\s+|\\s+$/g, \"\"); // remove outer space\n        if (!(line.length > 0)) {\n            return;\n        }\n        var optsi = line.search(/<.*>/g); // split of options part <*> if there\n        var opts = null;\n        if (optsi != -1) {\n            opts = line.slice(optsi).match(/([\\w\\.\\-\\+]+)/gi);\n            line = line.slice(0, optsi);\n        }\n        // get opcode/command\t\t\t\t            \n        var tokens = line.match(/([\\w\\.\\+\\[\\]]+)/gi); // get tokens in line\n        if (!tokens || tokens.length < 1) {\n            if (line.length >= 3) {\n                console.log(\"Warning: bad line \" + linenr + \": \" + line);\n            }\n            return;\n        }\n        //console.log ( linenr, line, cur, tokens ); \n        switch (tokens[0]) {\n            case \"part\":\n                this.addHeader(tokens[1], Number(tokens[2]));\n                break;\n            case \"endpart\":\n                if (!this.cur) {\n                    throw \"Unexpected endpart\";\n                }\n                this.cur.data.position = 0;\n                this.cur = null;\n                return;\n            default:\n                if (!this.cur) {\n                    console.log(\"Warning: bad line \" + linenr + \": \" + line + \" (Outside of any part definition)\");\n                    return;\n                }\n                if (this.cur.name == \"comment\") {\n                    return;\n                }\n                var op = OpcodeMap_1.default.map[tokens[0]];\n                if (!op) {\n                    throw \"Bad opcode \" + tokens[0] + \" \" + linenr + \": \" + line;\n                }\n                // console.log( 'AGALMiniAssembler' , 'op' , op );\n                this.emitOpcode(this.cur, op.opcode);\n                var ti = 1;\n                if (op.dest && op.dest != \"none\") {\n                    if (!this.emitDest(this.cur, tokens[ti++], op.dest)) {\n                        throw \"Bad destination register \" + tokens[ti - 1] + \" \" + linenr + \": \" + line;\n                    }\n                }\n                else {\n                    this.emitZeroDword(this.cur);\n                }\n                if (op.a && op.a.format != \"none\") {\n                    if (!this.emitSource(this.cur, tokens[ti++], op.a))\n                        throw \"Bad source register \" + tokens[ti - 1] + \" \" + linenr + \": \" + line;\n                }\n                else {\n                    this.emitZeroQword(this.cur);\n                }\n                if (op.b && op.b.format != \"none\") {\n                    if (op.b.format == \"sampler\") {\n                        if (!this.emitSampler(this.cur, tokens[ti++], op.b, opts)) {\n                            throw \"Bad sampler register \" + tokens[ti - 1] + \" \" + linenr + \": \" + line;\n                        }\n                    }\n                    else {\n                        if (!this.emitSource(this.cur, tokens[ti++], op.b)) {\n                            throw \"Bad source register \" + tokens[ti - 1] + \" \" + linenr + \": \" + line;\n                        }\n                    }\n                }\n                else {\n                    this.emitZeroQword(this.cur);\n                }\n                break;\n        }\n    };\n    AGALMiniAssembler.prototype.emitHeader = function (pr) {\n        pr.data.writeUnsignedByte(0xa0); // tag version\n        pr.data.writeUnsignedInt(pr.version);\n        if (pr.version >= 0x10) {\n            pr.data.writeUnsignedByte(0); // align, for higher versions\n        }\n        pr.data.writeUnsignedByte(0xa1); // tag program id\n        switch (pr.name) {\n            case \"fragment\":\n                pr.data.writeUnsignedByte(1);\n                break;\n            case \"vertex\":\n                pr.data.writeUnsignedByte(0);\n                break;\n            case \"cpu\":\n                pr.data.writeUnsignedByte(2);\n                break;\n            default:\n                pr.data.writeUnsignedByte(0xff);\n                break; // unknown/comment\n        }\n    };\n    AGALMiniAssembler.prototype.emitOpcode = function (pr, opcode) {\n        pr.data.writeUnsignedInt(opcode);\n        //console.log ( \"Emit opcode: \", opcode ); \n    };\n    AGALMiniAssembler.prototype.emitZeroDword = function (pr) {\n        pr.data.writeUnsignedInt(0);\n    };\n    AGALMiniAssembler.prototype.emitZeroQword = function (pr) {\n        pr.data.writeUnsignedInt(0);\n        pr.data.writeUnsignedInt(0);\n    };\n    AGALMiniAssembler.prototype.emitDest = function (pr, token, opdest) {\n        //console.log( 'AGALMiniAssembler' , 'emitDest' , 'RegMap.map' , RegMap.map);\n        var reg = token.match(/([fov]?[tpocidavs])(\\d*)(\\.[xyzw]{1,4})?/i); // g1: regname, g2:regnum, g3:mask\n        // console.log( 'AGALMiniAssembler' , 'emitDest' , 'reg' , reg , reg[1] , RegMap.map[reg[1]] );\n        // console.log( 'AGALMiniAssembler' , 'emitDest' , 'RegMap.map[reg[1]]' , RegMap.map[reg[1]] , 'bool' , !RegMap.map[reg[1]] ) ;\n        if (!RegMap_1.default.map[reg[1]])\n            return false;\n        var em = { num: reg[2] ? reg[2] : 0, code: RegMap_1.default.map[reg[1]].code, mask: this.stringToMask(reg[3]) };\n        pr.data.writeUnsignedShort(em.num);\n        pr.data.writeUnsignedByte(em.mask);\n        pr.data.writeUnsignedByte(em.code);\n        //console.log ( \"  Emit dest: \", em );\n        return true;\n    };\n    AGALMiniAssembler.prototype.stringToMask = function (s) {\n        if (!s)\n            return 0xf;\n        var r = 0;\n        if (s.indexOf(\"x\") != -1)\n            r |= 1;\n        if (s.indexOf(\"y\") != -1)\n            r |= 2;\n        if (s.indexOf(\"z\") != -1)\n            r |= 4;\n        if (s.indexOf(\"w\") != -1)\n            r |= 8;\n        return r;\n    };\n    AGALMiniAssembler.prototype.stringToSwizzle = function (s) {\n        if (!s) {\n            return 0xe4;\n        }\n        var chartoindex = { x: 0, y: 1, z: 2, w: 3 };\n        var sw = 0;\n        if (s.charAt(0) != \".\") {\n            throw \"Missing . for swizzle\";\n        }\n        if (s.length > 1) {\n            sw |= chartoindex[s.charAt(1)];\n        }\n        if (s.length > 2) {\n            sw |= chartoindex[s.charAt(2)] << 2;\n        }\n        else {\n            sw |= (sw & 3) << 2;\n        }\n        if (s.length > 3) {\n            sw |= chartoindex[s.charAt(3)] << 4;\n        }\n        else {\n            sw |= (sw & (3 << 2)) << 2;\n        }\n        if (s.length > 4) {\n            sw |= chartoindex[s.charAt(4)] << 6;\n        }\n        else {\n            sw |= (sw & (3 << 4)) << 2;\n        }\n        return sw;\n    };\n    AGALMiniAssembler.prototype.emitSampler = function (pr, token, opsrc, opts) {\n        var reg = token.match(/fs(\\d*)/i); // g1:regnum\n        if (!reg || !reg[1]) {\n            return false;\n        }\n        pr.data.writeUnsignedShort(parseInt(reg[1]));\n        pr.data.writeUnsignedByte(0); // bias\n        pr.data.writeUnsignedByte(0);\n        /*\n         pr.data.writeUnsignedByte ( 0x5 );\n         pr.data.writeUnsignedByte ( 0 );   // readmode, dim\n         pr.data.writeUnsignedByte ( 0 );   // special, wrap\n         pr.data.writeUnsignedByte ( 0 );   // mip, filter\n         */\n        var samplerbits = 0x5;\n        var sampleroptset = 0;\n        for (var i = 0; i < opts.length; i++) {\n            var o = SamplerMap_1.default.map[opts[i].toLowerCase()];\n            //console.log( 'AGALMiniAssembler' , 'emitSampler' , 'SampleMap opt:' , o , '<-------- WATCH FOR THIS');\n            if (o) {\n                if (((sampleroptset >> o.shift) & o.mask) != 0) {\n                    console.log(\"Warning, duplicate sampler option\");\n                }\n                sampleroptset |= o.mask << o.shift;\n                samplerbits &= ~(o.mask << o.shift);\n                samplerbits |= o.value << o.shift;\n            }\n            else {\n                console.log(\"Warning, unknown sampler option: \", opts[i]);\n            }\n        }\n        pr.data.writeUnsignedInt(samplerbits);\n        return true;\n    };\n    AGALMiniAssembler.prototype.emitSource = function (pr, token, opsrc) {\n        var indexed = token.match(/vc\\[(v[tcai])(\\d+)\\.([xyzw])([\\+\\-]\\d+)?\\](\\.[xyzw]{1,4})?/i); // g1: indexregname, g2:indexregnum, g3:select, [g4:offset], [g5:swizzle]\n        var reg;\n        if (indexed) {\n            if (!RegMap_1.default.map[indexed[1]]) {\n                return false;\n            }\n            var selindex = { x: 0, y: 1, z: 2, w: 3 };\n            var em = { num: indexed[2] | 0, code: RegMap_1.default.map[indexed[1]].code, swizzle: this.stringToSwizzle(indexed[5]), select: selindex[indexed[3]], offset: indexed[4] | 0 };\n            pr.data.writeUnsignedShort(em.num);\n            pr.data.writeByte(em.offset);\n            pr.data.writeUnsignedByte(em.swizzle);\n            pr.data.writeUnsignedByte(0x1); // constant reg\n            pr.data.writeUnsignedByte(em.code);\n            pr.data.writeUnsignedByte(em.select);\n            pr.data.writeUnsignedByte(1 << 7);\n        }\n        else {\n            reg = token.match(/([fov]?[tpocidavs])(\\d*)(\\.[xyzw]{1,4})?/i); // g1: regname, g2:regnum, g3:swizzle\n            if (!RegMap_1.default.map[reg[1]]) {\n                return false;\n            }\n            var em = { num: reg[2] | 0, code: RegMap_1.default.map[reg[1]].code, swizzle: this.stringToSwizzle(reg[3]) };\n            pr.data.writeUnsignedShort(em.num);\n            pr.data.writeUnsignedByte(0);\n            pr.data.writeUnsignedByte(em.swizzle);\n            pr.data.writeUnsignedByte(em.code);\n            pr.data.writeUnsignedByte(0);\n            pr.data.writeUnsignedByte(0);\n            pr.data.writeUnsignedByte(0);\n        }\n        return true;\n    };\n    AGALMiniAssembler.prototype.addHeader = function (partname, version) {\n        if (!version) {\n            version = 1;\n        }\n        if (this.r[partname] == undefined) {\n            this.r[partname] = new Part_1.default(partname, version);\n            this.emitHeader(this.r[partname]);\n        }\n        else if (this.r[partname].version != version) {\n            throw \"Multiple versions for part \" + partname;\n        }\n        this.cur = this.r[partname];\n    };\n    return AGALMiniAssembler;\n}());\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.default = AGALMiniAssembler;\n\n},{\"../../aglsl/assembler/OpcodeMap\":\"awayjs-stagegl/lib/aglsl/assembler/OpcodeMap\",\"../../aglsl/assembler/Part\":\"awayjs-stagegl/lib/aglsl/assembler/Part\",\"../../aglsl/assembler/RegMap\":\"awayjs-stagegl/lib/aglsl/assembler/RegMap\",\"../../aglsl/assembler/SamplerMap\":\"awayjs-stagegl/lib/aglsl/assembler/SamplerMap\"}],\"awayjs-stagegl/lib/aglsl/assembler/FS\":[function(require,module,exports){\n\"use strict\";\nvar FS = (function () {\n    function FS() {\n    }\n    return FS;\n}());\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.default = FS;\n\n},{}],\"awayjs-stagegl/lib/aglsl/assembler/Flags\":[function(require,module,exports){\n\"use strict\";\nvar Flags = (function () {\n    function Flags() {\n    }\n    return Flags;\n}());\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.default = Flags;\n\n},{}],\"awayjs-stagegl/lib/aglsl/assembler/OpcodeMap\":[function(require,module,exports){\n\"use strict\";\nvar Opcode_1 = require(\"../../aglsl/assembler/Opcode\");\nvar OpcodeMap = (function () {\n    function OpcodeMap() {\n    }\n    Object.defineProperty(OpcodeMap, \"map\", {\n        get: function () {\n            if (!OpcodeMap._map) {\n                OpcodeMap._map = new Array();\n                OpcodeMap._map['mov'] = new Opcode_1.default(\"vector\", \"vector\", 4, \"none\", 0, 0x00, true, null, null, null); //0\n                OpcodeMap._map['add'] = new Opcode_1.default(\"vector\", \"vector\", 4, \"vector\", 4, 0x01, true, null, null, null); //1\n                OpcodeMap._map['sub'] = new Opcode_1.default(\"vector\", \"vector\", 4, \"vector\", 4, 0x02, true, null, null, null); //2\n                OpcodeMap._map['mul'] = new Opcode_1.default(\"vector\", \"vector\", 4, \"vector\", 4, 0x03, true, null, null, null); //3\n                OpcodeMap._map['div'] = new Opcode_1.default(\"vector\", \"vector\", 4, \"vector\", 4, 0x04, true, null, null, null); //4\n                OpcodeMap._map['rcp'] = new Opcode_1.default(\"vector\", \"vector\", 4, \"none\", 0, 0x05, true, null, null, null); //5\n                OpcodeMap._map['min'] = new Opcode_1.default(\"vector\", \"vector\", 4, \"vector\", 4, 0x06, true, null, null, null); //6\n                OpcodeMap._map['max'] = new Opcode_1.default(\"vector\", \"vector\", 4, \"vector\", 4, 0x07, true, null, null, null); //7\n                OpcodeMap._map['frc'] = new Opcode_1.default(\"vector\", \"vector\", 4, \"none\", 0, 0x08, true, null, null, null); //8\n                OpcodeMap._map['sqt'] = new Opcode_1.default(\"vector\", \"vector\", 4, \"none\", 0, 0x09, true, null, null, null); //9\n                OpcodeMap._map['rsq'] = new Opcode_1.default(\"vector\", \"vector\", 4, \"none\", 0, 0x0a, true, null, null, null); //10\n                OpcodeMap._map['pow'] = new Opcode_1.default(\"vector\", \"vector\", 4, \"vector\", 4, 0x0b, true, null, null, null); //11\n                OpcodeMap._map['log'] = new Opcode_1.default(\"vector\", \"vector\", 4, \"none\", 0, 0x0c, true, null, null, null); //12\n                OpcodeMap._map['exp'] = new Opcode_1.default(\"vector\", \"vector\", 4, \"none\", 0, 0x0d, true, null, null, null); //13\n                OpcodeMap._map['nrm'] = new Opcode_1.default(\"vector\", \"vector\", 4, \"none\", 0, 0x0e, true, null, null, null); //14\n                OpcodeMap._map['sin'] = new Opcode_1.default(\"vector\", \"vector\", 4, \"none\", 0, 0x0f, true, null, null, null); //15\n                OpcodeMap._map['cos'] = new Opcode_1.default(\"vector\", \"vector\", 4, \"none\", 0, 0x10, true, null, null, null); //16\n                OpcodeMap._map['crs'] = new Opcode_1.default(\"vector\", \"vector\", 4, \"vector\", 4, 0x11, true, true, null, null); //17\n                OpcodeMap._map['dp3'] = new Opcode_1.default(\"vector\", \"vector\", 4, \"vector\", 4, 0x12, true, true, null, null); //18\n                OpcodeMap._map['dp4'] = new Opcode_1.default(\"vector\", \"vector\", 4, \"vector\", 4, 0x13, true, true, null, null); //19\n                OpcodeMap._map['abs'] = new Opcode_1.default(\"vector\", \"vector\", 4, \"none\", 0, 0x14, true, null, null, null); //20\n                OpcodeMap._map['neg'] = new Opcode_1.default(\"vector\", \"vector\", 4, \"none\", 0, 0x15, true, null, null, null); //21\n                OpcodeMap._map['sat'] = new Opcode_1.default(\"vector\", \"vector\", 4, \"none\", 0, 0x16, true, null, null, null); //22\n                OpcodeMap._map['ted'] = new Opcode_1.default(\"vector\", \"vector\", 4, \"sampler\", 1, 0x26, true, null, true, null); //38\n                OpcodeMap._map['kil'] = new Opcode_1.default(\"none\", \"scalar\", 1, \"none\", 0, 0x27, true, null, true, null); //39\n                OpcodeMap._map['tex'] = new Opcode_1.default(\"vector\", \"vector\", 4, \"sampler\", 1, 0x28, true, null, true, null); //40\n                OpcodeMap._map['m33'] = new Opcode_1.default(\"vector\", \"matrix\", 3, \"vector\", 3, 0x17, true, null, null, true); //23\n                OpcodeMap._map['m44'] = new Opcode_1.default(\"vector\", \"matrix\", 4, \"vector\", 4, 0x18, true, null, null, true); //24\n                OpcodeMap._map['m43'] = new Opcode_1.default(\"vector\", \"matrix\", 3, \"vector\", 4, 0x19, true, null, null, true); //25\n                OpcodeMap._map['ddx'] = new Opcode_1.default(\"vector\", \"vector\", 4, \"none\", 0, 0x1a, true, null, true, null); //26\n                OpcodeMap._map['ddy'] = new Opcode_1.default(\"vector\", \"vector\", 4, \"none\", 0, 0x1b, true, null, true, null); //27\n                OpcodeMap._map['sge'] = new Opcode_1.default(\"vector\", \"vector\", 4, \"vector\", 4, 0x29, true, null, null, null); //41\n                OpcodeMap._map['slt'] = new Opcode_1.default(\"vector\", \"vector\", 4, \"vector\", 4, 0x2a, true, null, null, null); //42\n                OpcodeMap._map['sgn'] = new Opcode_1.default(\"vector\", \"vector\", 4, \"vector\", 4, 0x2b, true, null, null, null); //43\n                OpcodeMap._map['seq'] = new Opcode_1.default(\"vector\", \"vector\", 4, \"vector\", 4, 0x2c, true, null, null, null); //44\n                OpcodeMap._map['sne'] = new Opcode_1.default(\"vector\", \"vector\", 4, \"vector\", 4, 0x2d, true, null, null, null); //45\n            }\n            return OpcodeMap._map;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    return OpcodeMap;\n}());\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.default = OpcodeMap;\n\n},{\"../../aglsl/assembler/Opcode\":\"awayjs-stagegl/lib/aglsl/assembler/Opcode\"}],\"awayjs-stagegl/lib/aglsl/assembler/Opcode\":[function(require,module,exports){\n\"use strict\";\nvar Flags_1 = require(\"../../aglsl/assembler/Flags\");\nvar FS_1 = require(\"../../aglsl/assembler/FS\");\n/**\n *\n */\nvar Opcode = (function () {\n    function Opcode(dest, aformat, asize, bformat, bsize, opcode, simple, horizontal, fragonly, matrix) {\n        this.a = new FS_1.default();\n        this.b = new FS_1.default();\n        this.flags = new Flags_1.default();\n        this.dest = dest;\n        this.a.format = aformat;\n        this.a.size = asize;\n        this.b.format = bformat;\n        this.b.size = bsize;\n        this.opcode = opcode;\n        this.flags.simple = simple;\n        this.flags.horizontal = horizontal;\n        this.flags.fragonly = fragonly;\n        this.flags.matrix = matrix;\n    }\n    return Opcode;\n}());\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.default = Opcode;\n\n},{\"../../aglsl/assembler/FS\":\"awayjs-stagegl/lib/aglsl/assembler/FS\",\"../../aglsl/assembler/Flags\":\"awayjs-stagegl/lib/aglsl/assembler/Flags\"}],\"awayjs-stagegl/lib/aglsl/assembler/Part\":[function(require,module,exports){\n\"use strict\";\nvar ByteArray_1 = require(\"awayjs-core/lib/utils/ByteArray\");\nvar Part = (function () {\n    function Part(name, version) {\n        if (name === void 0) { name = null; }\n        if (version === void 0) { version = null; }\n        this.name = \"\";\n        this.version = 0;\n        this.name = name;\n        this.version = version;\n        this.data = new ByteArray_1.default();\n    }\n    return Part;\n}());\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.default = Part;\n\n},{\"awayjs-core/lib/utils/ByteArray\":undefined}],\"awayjs-stagegl/lib/aglsl/assembler/RegMap\":[function(require,module,exports){\n\"use strict\";\nvar Reg = (function () {\n    function Reg(code, desc) {\n        this.code = code;\n        this.desc = desc;\n    }\n    return Reg;\n}());\nvar RegMap = (function () {\n    /*\n     public static va:Reg = new Reg( 0x00, \"vertex attribute\" );\n     public static fc:Reg = new Reg( 0x01, \"fragment constant\" );\n     public static vc:Reg = new Reg( 0x01, \"vertex constant\" );\n     public static ft:Reg = new Reg( 0x02, \"fragment temporary\" );\n     public static vt:Reg = new Reg( 0x02, \"vertex temporary\" );\n     public static vo:Reg = new Reg( 0x03, \"vertex output\" );\n     public static op:Reg = new Reg( 0x03, \"vertex output\" );\n     public static fd:Reg = new Reg( 0x03, \"fragment depth output\" );\n     public static fo:Reg = new Reg( 0x03, \"fragment output\" );\n     public static oc:Reg = new Reg( 0x03, \"fragment output\" );\n     public static v: Reg = new Reg( 0x04, \"varying\" );\n     public static vi:Reg = new Reg( 0x04, \"varying output\" );\n     public static fi:Reg = new Reg( 0x04, \"varying input\" );\n     public static fs:Reg = new Reg( 0x05, \"sampler\" );\n     */\n    function RegMap() {\n    }\n    Object.defineProperty(RegMap, \"map\", {\n        get: function () {\n            if (!RegMap._map) {\n                RegMap._map = new Array();\n                RegMap._map['va'] = new Reg(0x00, \"vertex attribute\");\n                RegMap._map['fc'] = new Reg(0x01, \"fragment constant\");\n                RegMap._map['vc'] = new Reg(0x01, \"vertex constant\");\n                RegMap._map['ft'] = new Reg(0x02, \"fragment temporary\");\n                RegMap._map['vt'] = new Reg(0x02, \"vertex temporary\");\n                RegMap._map['vo'] = new Reg(0x03, \"vertex output\");\n                RegMap._map['op'] = new Reg(0x03, \"vertex output\");\n                RegMap._map['fd'] = new Reg(0x03, \"fragment depth output\");\n                RegMap._map['fo'] = new Reg(0x03, \"fragment output\");\n                RegMap._map['oc'] = new Reg(0x03, \"fragment output\");\n                RegMap._map['v'] = new Reg(0x04, \"varying\");\n                RegMap._map['vi'] = new Reg(0x04, \"varying output\");\n                RegMap._map['fi'] = new Reg(0x04, \"varying input\");\n                RegMap._map['fs'] = new Reg(0x05, \"sampler\");\n            }\n            return RegMap._map;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    return RegMap;\n}());\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.default = RegMap;\n\n},{}],\"awayjs-stagegl/lib/aglsl/assembler/SamplerMap\":[function(require,module,exports){\n\"use strict\";\nvar Sampler_1 = require(\"../../aglsl/assembler/Sampler\");\nvar SamplerMap = (function () {\n    /*\n     public static map =     [ new Sampler( 8, 0xf, 0 ),\n     new Sampler( 8, 0xf, 5 ),\n     new Sampler( 8, 0xf, 4 ),\n     new Sampler( 8, 0xf, 1 ),\n     new Sampler( 8, 0xf, 2 ),\n     new Sampler( 8, 0xf, 1 ),\n     new Sampler( 8, 0xf, 2 ),\n\n     // dimension\n     new Sampler( 12, 0xf, 0 ),\n     new Sampler( 12, 0xf, 1 ),\n     new Sampler( 12, 0xf, 2 ),\n\n     // special\n     new Sampler( 16, 1, 1 ),\n     new Sampler( 16, 4, 4 ),\n\n     // repeat\n     new Sampler( 20, 0xf, 0 ),\n     new Sampler( 20, 0xf, 1 ),\n     new Sampler( 20, 0xf, 1 ),\n\n     // mip\n     new Sampler( 24, 0xf, 0 ),\n     new Sampler( 24, 0xf, 0 ),\n     new Sampler( 24, 0xf, 1 ),\n     new Sampler( 24, 0xf, 2 ),\n\n     // filter\n     new Sampler( 28, 0xf, 0 ),\n     new Sampler( 28, 0xf, 1 ) ]\n     */\n    /*\n     public static rgba: Sampler = new Sampler( 8, 0xf, 0 );\n     public static rg: Sampler = new Sampler( 8, 0xf, 5 );\n     public static r: Sampler = new Sampler( 8, 0xf, 4 );\n     public static compressed: Sampler = new Sampler( 8, 0xf, 1 );\n     public static compressed_alpha: Sampler = new Sampler( 8, 0xf, 2 );\n     public static dxt1: Sampler = new Sampler( 8, 0xf, 1 );\n     public static dxt5: Sampler = new Sampler( 8, 0xf, 2 );\n\n     // dimension\n     public static sampler2d: Sampler = new Sampler( 12, 0xf, 0 );\n     public static cube: Sampler = new Sampler( 12, 0xf, 1 );\n     public static sampler3d: Sampler = new Sampler( 12, 0xf, 2 );\n\n     // special\n     public static centroid: Sampler = new Sampler( 16, 1, 1 );\n     public static ignoresampler: Sampler = new Sampler( 16, 4, 4 );\n\n     // repeat\n     public static clamp: Sampler = new Sampler( 20, 0xf, 0 );\n     public static repeat: Sampler = new Sampler( 20, 0xf, 1 );\n     public static wrap: Sampler = new Sampler( 20, 0xf, 1 );\n\n     // mip\n     public static nomip: Sampler = new Sampler( 24, 0xf, 0 );\n     public static mipnone: Sampler = new Sampler( 24, 0xf, 0 );\n     public static mipnearest: Sampler = new Sampler( 24, 0xf, 1 );\n     public static miplinear: Sampler = new Sampler( 24, 0xf, 2 );\n\n     // filter\n     public static nearest: Sampler = new Sampler( 28, 0xf, 0 );\n     public static linear: Sampler = new Sampler( 28, 0xf, 1 );\n     */\n    function SamplerMap() {\n    }\n    Object.defineProperty(SamplerMap, \"map\", {\n        get: function () {\n            if (!SamplerMap._map) {\n                SamplerMap._map = new Array();\n                SamplerMap._map['rgba'] = new Sampler_1.default(8, 0xf, 0);\n                SamplerMap._map['rg'] = new Sampler_1.default(8, 0xf, 5);\n                SamplerMap._map['r'] = new Sampler_1.default(8, 0xf, 4);\n                SamplerMap._map['compressed'] = new Sampler_1.default(8, 0xf, 1);\n                SamplerMap._map['compressed_alpha'] = new Sampler_1.default(8, 0xf, 2);\n                SamplerMap._map['dxt1'] = new Sampler_1.default(8, 0xf, 1);\n                SamplerMap._map['dxt5'] = new Sampler_1.default(8, 0xf, 2);\n                // dimension\n                SamplerMap._map['2d'] = new Sampler_1.default(12, 0xf, 0);\n                SamplerMap._map['cube'] = new Sampler_1.default(12, 0xf, 1);\n                SamplerMap._map['3d'] = new Sampler_1.default(12, 0xf, 2);\n                // special\n                SamplerMap._map['centroid'] = new Sampler_1.default(16, 1, 1);\n                SamplerMap._map['ignoresampler'] = new Sampler_1.default(16, 4, 4);\n                // repeat\n                SamplerMap._map['clamp'] = new Sampler_1.default(20, 0xf, 0);\n                SamplerMap._map['repeat'] = new Sampler_1.default(20, 0xf, 1);\n                SamplerMap._map['wrap'] = new Sampler_1.default(20, 0xf, 1);\n                // mip\n                SamplerMap._map['nomip'] = new Sampler_1.default(24, 0xf, 0);\n                SamplerMap._map['mipnone'] = new Sampler_1.default(24, 0xf, 0);\n                SamplerMap._map['mipnearest'] = new Sampler_1.default(24, 0xf, 1);\n                SamplerMap._map['miplinear'] = new Sampler_1.default(24, 0xf, 2);\n                // filter\n                SamplerMap._map['nearest'] = new Sampler_1.default(28, 0xf, 0);\n                SamplerMap._map['linear'] = new Sampler_1.default(28, 0xf, 1);\n            }\n            return SamplerMap._map;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    return SamplerMap;\n}());\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.default = SamplerMap;\n\n},{\"../../aglsl/assembler/Sampler\":\"awayjs-stagegl/lib/aglsl/assembler/Sampler\"}],\"awayjs-stagegl/lib/aglsl/assembler/Sampler\":[function(require,module,exports){\n\"use strict\";\nvar Sampler = (function () {\n    function Sampler(shift, mask, value) {\n        this.shift = shift;\n        this.mask = mask;\n        this.value = value;\n    }\n    return Sampler;\n}());\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.default = Sampler;\n\n},{}],\"awayjs-stagegl/lib/aglsl\":[function(require,module,exports){\n\"use strict\";\nvar AGALMiniAssembler_1 = require(\"./aglsl/assembler/AGALMiniAssembler\");\nexports.AGALMiniAssembler = AGALMiniAssembler_1.default;\nvar Flags_1 = require(\"./aglsl/assembler/Flags\");\nexports.Flags = Flags_1.default;\nvar FS_1 = require(\"./aglsl/assembler/FS\");\nexports.FS = FS_1.default;\nvar Opcode_1 = require(\"./aglsl/assembler/Opcode\");\nexports.Opcode = Opcode_1.default;\nvar OpcodeMap_1 = require(\"./aglsl/assembler/OpcodeMap\");\nexports.OpcodeMap = OpcodeMap_1.default;\nvar Part_1 = require(\"./aglsl/assembler/Part\");\nexports.Part = Part_1.default;\nvar RegMap_1 = require(\"./aglsl/assembler/RegMap\");\nexports.RegMap = RegMap_1.default;\nvar Sampler_1 = require(\"./aglsl/assembler/Sampler\");\nexports.Sampler = Sampler_1.default;\nvar SamplerMap_1 = require(\"./aglsl/assembler/SamplerMap\");\nexports.SamplerMap = SamplerMap_1.default;\nvar AGALTokenizer_1 = require(\"./aglsl/AGALTokenizer\");\nexports.AGALTokenizer = AGALTokenizer_1.default;\nvar AGLSLParser_1 = require(\"./aglsl/AGLSLParser\");\nexports.AGLSLParser = AGLSLParser_1.default;\nvar Description_1 = require(\"./aglsl/Description\");\nexports.Description = Description_1.default;\nvar Destination_1 = require(\"./aglsl/Destination\");\nexports.Destination = Destination_1.default;\nvar Header_1 = require(\"./aglsl/Header\");\nexports.Header = Header_1.default;\nvar Mapping_1 = require(\"./aglsl/Mapping\");\nexports.Mapping = Mapping_1.default;\nvar OpLUT_1 = require(\"./aglsl/OpLUT\");\nexports.OpLUT = OpLUT_1.default;\nvar Token_1 = require(\"./aglsl/Token\");\nexports.Token = Token_1.default;\n\n},{\"./aglsl/AGALTokenizer\":\"awayjs-stagegl/lib/aglsl/AGALTokenizer\",\"./aglsl/AGLSLParser\":\"awayjs-stagegl/lib/aglsl/AGLSLParser\",\"./aglsl/Description\":\"awayjs-stagegl/lib/aglsl/Description\",\"./aglsl/Destination\":\"awayjs-stagegl/lib/aglsl/Destination\",\"./aglsl/Header\":\"awayjs-stagegl/lib/aglsl/Header\",\"./aglsl/Mapping\":\"awayjs-stagegl/lib/aglsl/Mapping\",\"./aglsl/OpLUT\":\"awayjs-stagegl/lib/aglsl/OpLUT\",\"./aglsl/Token\":\"awayjs-stagegl/lib/aglsl/Token\",\"./aglsl/assembler/AGALMiniAssembler\":\"awayjs-stagegl/lib/aglsl/assembler/AGALMiniAssembler\",\"./aglsl/assembler/FS\":\"awayjs-stagegl/lib/aglsl/assembler/FS\",\"./aglsl/assembler/Flags\":\"awayjs-stagegl/lib/aglsl/assembler/Flags\",\"./aglsl/assembler/Opcode\":\"awayjs-stagegl/lib/aglsl/assembler/Opcode\",\"./aglsl/assembler/OpcodeMap\":\"awayjs-stagegl/lib/aglsl/assembler/OpcodeMap\",\"./aglsl/assembler/Part\":\"awayjs-stagegl/lib/aglsl/assembler/Part\",\"./aglsl/assembler/RegMap\":\"awayjs-stagegl/lib/aglsl/assembler/RegMap\",\"./aglsl/assembler/Sampler\":\"awayjs-stagegl/lib/aglsl/assembler/Sampler\",\"./aglsl/assembler/SamplerMap\":\"awayjs-stagegl/lib/aglsl/assembler/SamplerMap\"}],\"awayjs-stagegl/lib/attributes/GL_AttributesBuffer\":[function(require,module,exports){\n\"use strict\";\nvar __extends = (this && this.__extends) || function (d, b) {\n    for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p];\n    function __() { this.constructor = d; }\n    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n};\nvar AbstractionBase_1 = require(\"awayjs-core/lib/library/AbstractionBase\");\n/**\n *\n * @class away.pool.GL_AttributesBuffer\n */\nvar GL_AttributesBuffer = (function (_super) {\n    __extends(GL_AttributesBuffer, _super);\n    function GL_AttributesBuffer(attributesBuffer, stage) {\n        _super.call(this, attributesBuffer, stage);\n        this._stage = stage;\n        this._attributesBuffer = attributesBuffer;\n    }\n    /**\n     *\n     */\n    GL_AttributesBuffer.prototype.onClear = function (event) {\n        _super.prototype.onClear.call(this, event);\n        this._attributesBuffer = null;\n        if (this._indexBuffer) {\n            this._indexBuffer.dispose();\n            this._indexBuffer = null;\n        }\n        if (this._vertexBuffer) {\n            this._vertexBuffer.dispose();\n            this._vertexBuffer = null;\n        }\n    };\n    GL_AttributesBuffer.prototype.activate = function (index, size, dimensions, offset, unsigned) {\n        if (unsigned === void 0) { unsigned = false; }\n        this._stage.setVertexBuffer(index, this._getVertexBuffer(), size, dimensions, offset, unsigned);\n    };\n    GL_AttributesBuffer.prototype.draw = function (mode, firstIndex, numIndices) {\n        this._stage.context.drawIndices(mode, this._getIndexBuffer(), firstIndex, numIndices);\n    };\n    GL_AttributesBuffer.prototype._getIndexBuffer = function () {\n        if (!this._indexBuffer) {\n            this._invalid = true;\n            this._indexBuffer = this._stage.context.createIndexBuffer(this._attributesBuffer.count * this._attributesBuffer.stride / 2); //hardcoded assuming UintArray\n        }\n        if (this._invalid) {\n            this._invalid = false;\n            this._indexBuffer.uploadFromByteArray(this._attributesBuffer.buffer, 0, this._attributesBuffer.length);\n        }\n        return this._indexBuffer;\n    };\n    GL_AttributesBuffer.prototype._getVertexBuffer = function () {\n        if (!this._vertexBuffer) {\n            this._invalid = true;\n            this._vertexBuffer = this._stage.context.createVertexBuffer(this._attributesBuffer.count, this._attributesBuffer.stride);\n        }\n        if (this._invalid) {\n            this._invalid = false;\n            this._vertexBuffer.uploadFromByteArray(this._attributesBuffer.buffer, 0, this._attributesBuffer.count);\n        }\n        return this._vertexBuffer;\n    };\n    return GL_AttributesBuffer;\n}(AbstractionBase_1.default));\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.default = GL_AttributesBuffer;\n\n},{\"awayjs-core/lib/library/AbstractionBase\":undefined}],\"awayjs-stagegl/lib/attributes\":[function(require,module,exports){\n\"use strict\";\nvar GL_AttributesBuffer_1 = require(\"./attributes/GL_AttributesBuffer\");\nexports.GL_AttributesBuffer = GL_AttributesBuffer_1.default;\n\n},{\"./attributes/GL_AttributesBuffer\":\"awayjs-stagegl/lib/attributes/GL_AttributesBuffer\"}],\"awayjs-stagegl/lib/base/ContextGLBlendFactor\":[function(require,module,exports){\n\"use strict\";\nvar ContextGLBlendFactor = (function () {\n    function ContextGLBlendFactor() {\n    }\n    ContextGLBlendFactor.DESTINATION_ALPHA = \"destinationAlpha\";\n    ContextGLBlendFactor.DESTINATION_COLOR = \"destinationColor\";\n    ContextGLBlendFactor.ONE = \"one\";\n    ContextGLBlendFactor.ONE_MINUS_DESTINATION_ALPHA = \"oneMinusDestinationAlpha\";\n    ContextGLBlendFactor.ONE_MINUS_DESTINATION_COLOR = \"oneMinusDestinationColor\";\n    ContextGLBlendFactor.ONE_MINUS_SOURCE_ALPHA = \"oneMinusSourceAlpha\";\n    ContextGLBlendFactor.ONE_MINUS_SOURCE_COLOR = \"oneMinusSourceColor\";\n    ContextGLBlendFactor.SOURCE_ALPHA = \"sourceAlpha\";\n    ContextGLBlendFactor.SOURCE_COLOR = \"sourceColor\";\n    ContextGLBlendFactor.ZERO = \"zero\";\n    return ContextGLBlendFactor;\n}());\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.default = ContextGLBlendFactor;\n\n},{}],\"awayjs-stagegl/lib/base/ContextGLClearMask\":[function(require,module,exports){\n\"use strict\";\nvar ContextGLClearMask = (function () {\n    function ContextGLClearMask() {\n    }\n    ContextGLClearMask.COLOR = 1;\n    ContextGLClearMask.DEPTH = 2;\n    ContextGLClearMask.STENCIL = 4;\n    ContextGLClearMask.ALL = ContextGLClearMask.COLOR | ContextGLClearMask.DEPTH | ContextGLClearMask.STENCIL;\n    return ContextGLClearMask;\n}());\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.default = ContextGLClearMask;\n\n},{}],\"awayjs-stagegl/lib/base/ContextGLCompareMode\":[function(require,module,exports){\n\"use strict\";\nvar ContextGLCompareMode = (function () {\n    function ContextGLCompareMode() {\n    }\n    ContextGLCompareMode.ALWAYS = \"always\";\n    ContextGLCompareMode.EQUAL = \"equal\";\n    ContextGLCompareMode.GREATER = \"greater\";\n    ContextGLCompareMode.GREATER_EQUAL = \"greaterEqual\";\n    ContextGLCompareMode.LESS = \"less\";\n    ContextGLCompareMode.LESS_EQUAL = \"lessEqual\";\n    ContextGLCompareMode.NEVER = \"never\";\n    ContextGLCompareMode.NOT_EQUAL = \"notEqual\";\n    return ContextGLCompareMode;\n}());\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.default = ContextGLCompareMode;\n\n},{}],\"awayjs-stagegl/lib/base/ContextGLDrawMode\":[function(require,module,exports){\n\"use strict\";\nvar ContextGLDrawMode = (function () {\n    function ContextGLDrawMode() {\n    }\n    ContextGLDrawMode.TRIANGLES = \"triangles\";\n    ContextGLDrawMode.LINES = \"lines\";\n    return ContextGLDrawMode;\n}());\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.default = ContextGLDrawMode;\n\n},{}],\"awayjs-stagegl/lib/base/ContextGLMipFilter\":[function(require,module,exports){\n\"use strict\";\nvar ContextGLMipFilter = (function () {\n    function ContextGLMipFilter() {\n    }\n    ContextGLMipFilter.MIPLINEAR = \"miplinear\";\n    ContextGLMipFilter.MIPNEAREST = \"mipnearest\";\n    ContextGLMipFilter.MIPNONE = \"mipnone\";\n    return ContextGLMipFilter;\n}());\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.default = ContextGLMipFilter;\n\n},{}],\"awayjs-stagegl/lib/base/ContextGLProfile\":[function(require,module,exports){\n\"use strict\";\nvar ContextGLProfile = (function () {\n    function ContextGLProfile() {\n    }\n    ContextGLProfile.BASELINE = \"baseline\";\n    ContextGLProfile.BASELINE_CONSTRAINED = \"baselineConstrained\";\n    ContextGLProfile.BASELINE_EXTENDED = \"baselineExtended\";\n    return ContextGLProfile;\n}());\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.default = ContextGLProfile;\n\n},{}],\"awayjs-stagegl/lib/base/ContextGLProgramType\":[function(require,module,exports){\n\"use strict\";\nvar ContextGLProgramType = (function () {\n    function ContextGLProgramType() {\n    }\n    ContextGLProgramType.FRAGMENT = 0;\n    ContextGLProgramType.SAMPLER = 1;\n    ContextGLProgramType.VERTEX = 2;\n    return ContextGLProgramType;\n}());\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.default = ContextGLProgramType;\n\n},{}],\"awayjs-stagegl/lib/base/ContextGLStencilAction\":[function(require,module,exports){\n\"use strict\";\nvar ContextGLStencilAction = (function () {\n    function ContextGLStencilAction() {\n    }\n    ContextGLStencilAction.DECREMENT_SATURATE = \"decrementSaturate\";\n    ContextGLStencilAction.DECREMENT_WRAP = \"decrementWrap\";\n    ContextGLStencilAction.INCREMENT_SATURATE = \"incrementSaturate\";\n    ContextGLStencilAction.INCREMENT_WRAP = \"incrementWrap\";\n    ContextGLStencilAction.INVERT = \"invert\";\n    ContextGLStencilAction.KEEP = \"keep\";\n    ContextGLStencilAction.SET = \"set\";\n    ContextGLStencilAction.ZERO = \"zero\";\n    return ContextGLStencilAction;\n}());\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.default = ContextGLStencilAction;\n\n},{}],\"awayjs-stagegl/lib/base/ContextGLTextureFilter\":[function(require,module,exports){\n\"use strict\";\nvar ContextGLTextureFilter = (function () {\n    function ContextGLTextureFilter() {\n    }\n    ContextGLTextureFilter.LINEAR = \"linear\";\n    ContextGLTextureFilter.NEAREST = \"nearest\";\n    return ContextGLTextureFilter;\n}());\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.default = ContextGLTextureFilter;\n\n},{}],\"awayjs-stagegl/lib/base/ContextGLTextureFormat\":[function(require,module,exports){\n\"use strict\";\nvar ContextGLTextureFormat = (function () {\n    function ContextGLTextureFormat() {\n    }\n    ContextGLTextureFormat.BGRA = \"bgra\";\n    ContextGLTextureFormat.BGRA_PACKED = \"bgraPacked4444\";\n    ContextGLTextureFormat.BGR_PACKED = \"bgrPacked565\";\n    ContextGLTextureFormat.COMPRESSED = \"compressed\";\n    ContextGLTextureFormat.COMPRESSED_ALPHA = \"compressedAlpha\";\n    return ContextGLTextureFormat;\n}());\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.default = ContextGLTextureFormat;\n\n},{}],\"awayjs-stagegl/lib/base/ContextGLTriangleFace\":[function(require,module,exports){\n\"use strict\";\nvar ContextGLTriangleFace = (function () {\n    function ContextGLTriangleFace() {\n    }\n    ContextGLTriangleFace.BACK = \"back\";\n    ContextGLTriangleFace.FRONT = \"front\";\n    ContextGLTriangleFace.FRONT_AND_BACK = \"frontAndBack\";\n    ContextGLTriangleFace.NONE = \"none\";\n    return ContextGLTriangleFace;\n}());\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.default = ContextGLTriangleFace;\n\n},{}],\"awayjs-stagegl/lib/base/ContextGLVertexBufferFormat\":[function(require,module,exports){\n\"use strict\";\nvar ContextGLVertexBufferFormat = (function () {\n    function ContextGLVertexBufferFormat() {\n    }\n    ContextGLVertexBufferFormat.FLOAT_1 = 0;\n    ContextGLVertexBufferFormat.FLOAT_2 = 1;\n    ContextGLVertexBufferFormat.FLOAT_3 = 2;\n    ContextGLVertexBufferFormat.FLOAT_4 = 3;\n    ContextGLVertexBufferFormat.BYTE_1 = 4;\n    ContextGLVertexBufferFormat.BYTE_2 = 5;\n    ContextGLVertexBufferFormat.BYTE_3 = 6;\n    ContextGLVertexBufferFormat.BYTE_4 = 7;\n    ContextGLVertexBufferFormat.UNSIGNED_BYTE_1 = 8;\n    ContextGLVertexBufferFormat.UNSIGNED_BYTE_2 = 9;\n    ContextGLVertexBufferFormat.UNSIGNED_BYTE_3 = 10;\n    ContextGLVertexBufferFormat.UNSIGNED_BYTE_4 = 11;\n    ContextGLVertexBufferFormat.SHORT_1 = 12;\n    ContextGLVertexBufferFormat.SHORT_2 = 13;\n    ContextGLVertexBufferFormat.SHORT_3 = 14;\n    ContextGLVertexBufferFormat.SHORT_4 = 15;\n    ContextGLVertexBufferFormat.UNSIGNED_SHORT_1 = 16;\n    ContextGLVertexBufferFormat.UNSIGNED_SHORT_2 = 17;\n    ContextGLVertexBufferFormat.UNSIGNED_SHORT_3 = 18;\n    ContextGLVertexBufferFormat.UNSIGNED_SHORT_4 = 19;\n    return ContextGLVertexBufferFormat;\n}());\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.default = ContextGLVertexBufferFormat;\n\n},{}],\"awayjs-stagegl/lib/base/ContextGLWrapMode\":[function(require,module,exports){\n\"use strict\";\nvar ContextGLWrapMode = (function () {\n    function ContextGLWrapMode() {\n    }\n    ContextGLWrapMode.CLAMP = \"clamp\";\n    ContextGLWrapMode.REPEAT = \"repeat\";\n    return ContextGLWrapMode;\n}());\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.default = ContextGLWrapMode;\n\n},{}],\"awayjs-stagegl/lib/base/ContextMode\":[function(require,module,exports){\n\"use strict\";\nvar ContextMode = (function () {\n    function ContextMode() {\n    }\n    ContextMode.AUTO = \"auto\";\n    ContextMode.WEBGL = \"webgl\";\n    ContextMode.FLASH = \"flash\";\n    ContextMode.NATIVE = \"native\";\n    ContextMode.SOFTWARE = \"software\";\n    return ContextMode;\n}());\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.default = ContextMode;\n\n},{}],\"awayjs-stagegl/lib/base/ContextSoftware\":[function(require,module,exports){\n\"use strict\";\nvar BitmapImage2D_1 = require(\"awayjs-core/lib/image/BitmapImage2D\");\nvar Matrix3D_1 = require(\"awayjs-core/lib/geom/Matrix3D\");\nvar Matrix_1 = require(\"awayjs-core/lib/geom/Matrix\");\nvar Point_1 = require(\"awayjs-core/lib/geom/Point\");\nvar Vector3D_1 = require(\"awayjs-core/lib/geom/Vector3D\");\nvar Rectangle_1 = require(\"awayjs-core/lib/geom/Rectangle\");\nvar ColorUtils_1 = require(\"awayjs-core/lib/utils/ColorUtils\");\nvar Matrix3DUtils_1 = require(\"awayjs-core/lib/geom/Matrix3DUtils\");\nvar ContextGLBlendFactor_1 = require(\"../base/ContextGLBlendFactor\");\nvar ContextGLClearMask_1 = require(\"../base/ContextGLClearMask\");\nvar ContextGLCompareMode_1 = require(\"../base/ContextGLCompareMode\");\nvar ContextGLProgramType_1 = require(\"../base/ContextGLProgramType\");\nvar ContextGLTriangleFace_1 = require(\"../base/ContextGLTriangleFace\");\nvar IndexBufferSoftware_1 = require(\"../base/IndexBufferSoftware\");\nvar VertexBufferSoftware_1 = require(\"../base/VertexBufferSoftware\");\nvar TextureSoftware_1 = require(\"../base/TextureSoftware\");\nvar ProgramSoftware_1 = require(\"../base/ProgramSoftware\");\nvar SoftwareSamplerState_1 = require(\"../base/SoftwareSamplerState\");\nvar ContextSoftware = (function () {\n    function ContextSoftware(canvas) {\n        this._backBufferRect = new Rectangle_1.default();\n        this._backBufferWidth = 100;\n        this._backBufferHeight = 100;\n        this._zbuffer = [];\n        this._cullingMode = ContextGLTriangleFace_1.default.BACK;\n        this._blendSource = ContextGLBlendFactor_1.default.ONE;\n        this._blendDestination = ContextGLBlendFactor_1.default.ZERO;\n        this._colorMaskR = true;\n        this._colorMaskG = true;\n        this._colorMaskB = true;\n        this._colorMaskA = true;\n        this._writeDepth = true;\n        this._depthCompareMode = ContextGLCompareMode_1.default.LESS;\n        this._screenMatrix = new Matrix3D_1.default();\n        this._frontBufferMatrix = new Matrix_1.default();\n        this._bboxMin = new Point_1.default();\n        this._bboxMax = new Point_1.default();\n        this._clamp = new Point_1.default();\n        this._samplerStates = [];\n        this._textures = [];\n        this._vertexBuffers = [];\n        this._vertexBufferOffsets = [];\n        this._vertexBufferFormats = [];\n        this._fragmentConstants = [];\n        this._vertexConstants = [];\n        //public static _drawCallback:Function = null;\n        this._antialias = 0;\n        this._canvas = canvas;\n        this._backBufferColor = new BitmapImage2D_1.default(this._backBufferWidth, this._backBufferHeight, false, 0, false);\n        this._frontBuffer = new BitmapImage2D_1.default(this._backBufferWidth, this._backBufferHeight, true, 0, false);\n        if (document && document.body) {\n            document.body.appendChild(this._frontBuffer.getCanvas());\n        }\n    }\n    Object.defineProperty(ContextSoftware.prototype, \"frontBuffer\", {\n        get: function () {\n            return this._frontBuffer;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(ContextSoftware.prototype, \"container\", {\n        get: function () {\n            return this._canvas;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    ContextSoftware.prototype.clear = function (red, green, blue, alpha, depth, stencil, mask) {\n        if (red === void 0) { red = 0; }\n        if (green === void 0) { green = 0; }\n        if (blue === void 0) { blue = 0; }\n        if (alpha === void 0) { alpha = 1; }\n        if (depth === void 0) { depth = 1; }\n        if (stencil === void 0) { stencil = 0; }\n        if (mask === void 0) { mask = ContextGLClearMask_1.default.ALL; }\n        console.log(\"clear: \" + red + \", \" + green + \", \" + blue + \", alpha: \" + alpha);\n        if (mask & ContextGLClearMask_1.default.COLOR) {\n            this._backBufferColor.fillRect(this._backBufferRect, ColorUtils_1.default.ARGBtoFloat32(alpha * 0xFF, red * 0xFF, green * 0xFF, blue * 0xFF));\n        }\n        //TODO: mask & ContextGLClearMask.STENCIL\n        if (mask & ContextGLClearMask_1.default.DEPTH) {\n            this._zbuffer.length = 0;\n            var len = this._backBufferWidth * this._backBufferHeight;\n            for (var i = 0; i < len; i++) {\n                this._zbuffer[i] = 10000000;\n            }\n        }\n    };\n    ContextSoftware.prototype.configureBackBuffer = function (width, height, antiAlias, enableDepthAndStencil) {\n        console.log(\"configureBackBuffer antiAlias: \" + antiAlias);\n        this._antialias = antiAlias;\n        if (this._antialias % 2 != 0) {\n            this._antialias = Math.floor(this._antialias - 0.5);\n        }\n        if (this._antialias == 0) {\n            this._antialias = 1;\n        }\n        this._frontBuffer._setSize(width, height);\n        this._backBufferWidth = width * this._antialias;\n        this._backBufferHeight = height * this._antialias;\n        this._backBufferRect.width = this._backBufferWidth;\n        this._backBufferRect.height = this._backBufferHeight;\n        this._backBufferColor._setSize(this._backBufferWidth, this._backBufferHeight);\n        var raw = this._screenMatrix.rawData;\n        raw[0] = (this._backBufferWidth) / 2;\n        raw[1] = 0;\n        raw[2] = 0;\n        raw[3] = (this._backBufferWidth) / 2;\n        raw[4] = 0;\n        raw[5] = -(this._backBufferHeight) / 2;\n        raw[6] = 0;\n        raw[7] = (this._backBufferHeight) / 2;\n        raw[8] = 0;\n        raw[9] = 0;\n        raw[10] = 1;\n        raw[11] = 0;\n        raw[12] = 0;\n        raw[13] = 0;\n        raw[14] = 0;\n        raw[15] = 0;\n        this._screenMatrix.transpose();\n        this._frontBufferMatrix = new Matrix_1.default();\n        this._frontBufferMatrix.scale(1 / this._antialias, 1 / this._antialias);\n    };\n    ContextSoftware.prototype.createCubeTexture = function (size, format, optimizeForRenderToTexture, streamingLevels) {\n        //TODO: impl\n        return undefined;\n    };\n    ContextSoftware.prototype.createIndexBuffer = function (numIndices) {\n        return new IndexBufferSoftware_1.default(numIndices);\n    };\n    ContextSoftware.prototype.createProgram = function () {\n        return new ProgramSoftware_1.default();\n    };\n    ContextSoftware.prototype.createTexture = function (width, height, format, optimizeForRenderToTexture, streamingLevels) {\n        return new TextureSoftware_1.default(width, height);\n    };\n    ContextSoftware.prototype.createVertexBuffer = function (numVertices, dataPerVertex) {\n        return new VertexBufferSoftware_1.default(numVertices, dataPerVertex);\n    };\n    ContextSoftware.prototype.dispose = function () {\n    };\n    ContextSoftware.prototype.setBlendFactors = function (sourceFactor, destinationFactor) {\n        console.log(\"setBlendFactors sourceFactor: \" + sourceFactor + \" destinationFactor: \" + destinationFactor);\n        this._blendSource = sourceFactor;\n        this._blendDestination = destinationFactor;\n    };\n    ContextSoftware.prototype.setColorMask = function (red, green, blue, alpha) {\n        this._colorMaskR = red;\n        this._colorMaskG = green;\n        this._colorMaskB = blue;\n        this._colorMaskA = alpha;\n    };\n    ContextSoftware.prototype.setStencilActions = function (triangleFace, compareMode, actionOnBothPass, actionOnDepthFail, actionOnDepthPassStencilFail, coordinateSystem) {\n        //TODO:\n    };\n    ContextSoftware.prototype.setStencilReferenceValue = function (referenceValue, readMask, writeMask) {\n        //TODO:\n    };\n    ContextSoftware.prototype.setCulling = function (triangleFaceToCull, coordinateSystem) {\n        //TODO: CoordinateSystem.RIGHT_HAND\n        this._cullingMode = triangleFaceToCull;\n    };\n    ContextSoftware.prototype.setDepthTest = function (depthMask, passCompareMode) {\n        console.log(\"setDepthTest: \" + depthMask + \" , \" + passCompareMode);\n        this._writeDepth = depthMask;\n        this._depthCompareMode = passCompareMode;\n    };\n    ContextSoftware.prototype.setProgram = function (program) {\n        this._program = program;\n    };\n    ContextSoftware.prototype.setProgramConstantsFromMatrix = function (programType, firstRegister, matrix, transposedMatrix) {\n        console.log(\"setProgramConstantsFromMatrix: programType\" + programType + \" firstRegister: \" + firstRegister + \" matrix: \" + matrix + \" transposedMatrix: \" + transposedMatrix);\n        var d = matrix.rawData;\n        if (transposedMatrix) {\n            var raw = Matrix3DUtils_1.default.RAW_DATA_CONTAINER;\n            raw[0] = d[0];\n            raw[1] = d[4];\n            raw[2] = d[8];\n            raw[3] = d[12];\n            raw[4] = d[1];\n            raw[5] = d[5];\n            raw[6] = d[9];\n            raw[7] = d[13];\n            raw[8] = d[2];\n            raw[9] = d[6];\n            raw[10] = d[10];\n            raw[11] = d[14];\n            raw[12] = d[3];\n            raw[13] = d[7];\n            raw[14] = d[11];\n            raw[15] = d[15];\n            this.setProgramConstantsFromArray(programType, firstRegister, raw, 4);\n        }\n        else {\n            this.setProgramConstantsFromArray(programType, firstRegister, d, 4);\n        }\n    };\n    ContextSoftware.prototype.setProgramConstantsFromArray = function (programType, firstRegister, data, numRegisters) {\n        console.log(\"setProgramConstantsFromArray: programType\" + programType + \" firstRegister: \" + firstRegister + \" data: \" + data + \" numRegisters: \" + numRegisters);\n        var target;\n        if (programType == ContextGLProgramType_1.default.VERTEX) {\n            target = this._vertexConstants;\n        }\n        else if (programType == ContextGLProgramType_1.default.FRAGMENT) {\n            target = this._fragmentConstants;\n        }\n        var k = 0;\n        for (var i = firstRegister; i < firstRegister + numRegisters; i++) {\n            target[i] = new Vector3D_1.default(data[k++], data[k++], data[k++], data[k++]);\n        }\n    };\n    ContextSoftware.prototype.setTextureAt = function (sampler, texture) {\n        console.log(\"setTextureAt sample: \" + sampler + \" texture: \" + texture);\n        this._textures[sampler] = texture;\n    };\n    ContextSoftware.prototype.setVertexBufferAt = function (index, buffer, bufferOffset, format) {\n        console.log(\"setVertexBufferAt index: \" + index + \" buffer: \" + buffer + \" bufferOffset: \" + bufferOffset + \" format: \" + format);\n        this._vertexBuffers[index] = buffer;\n        this._vertexBufferOffsets[index] = bufferOffset;\n        this._vertexBufferFormats[index] = format;\n    };\n    ContextSoftware.prototype.present = function () {\n        console.log(\"present()\");\n        this._frontBuffer.fillRect(this._frontBuffer.rect, ColorUtils_1.default.ARGBtoFloat32(0, 0, 0, 0));\n        this._frontBuffer.draw(this._backBufferColor, this._frontBufferMatrix);\n    };\n    ContextSoftware.prototype.drawToBitmapImage2D = function (destination) {\n    };\n    ContextSoftware.prototype.drawIndices = function (mode, indexBuffer, firstIndex, numIndices) {\n        console.log(\"drawIndices mode: \" + mode + \" firstIndex: \" + firstIndex + \" numIndices: \" + numIndices);\n        if (!this._program) {\n            return;\n        }\n        this._backBufferColor.lock();\n        var index0;\n        var index1;\n        var index2;\n        var vo0;\n        var vo1;\n        var vo2;\n        if (this._cullingMode == ContextGLTriangleFace_1.default.BACK) {\n            for (var i = firstIndex; i < numIndices; i += 3) {\n                index0 = indexBuffer.data[indexBuffer.startOffset + i];\n                index1 = indexBuffer.data[indexBuffer.startOffset + i + 1];\n                index2 = indexBuffer.data[indexBuffer.startOffset + i + 2];\n                vo0 = this._program.vertex(this, index0);\n                vo1 = this._program.vertex(this, index1);\n                vo2 = this._program.vertex(this, index2);\n                this.triangle(vo0, vo1, vo2);\n            }\n        }\n        else if (this._cullingMode == ContextGLTriangleFace_1.default.FRONT) {\n            for (var i = firstIndex; i < numIndices; i += 3) {\n                index0 = indexBuffer.data[indexBuffer.startOffset + i + 2];\n                index1 = indexBuffer.data[indexBuffer.startOffset + i + 1];\n                index2 = indexBuffer.data[indexBuffer.startOffset + i + 0];\n                vo0 = this._program.vertex(this, index0);\n                vo1 = this._program.vertex(this, index1);\n                vo2 = this._program.vertex(this, index2);\n                this.triangle(vo0, vo1, vo2);\n            }\n        }\n        else if (this._cullingMode == ContextGLTriangleFace_1.default.FRONT_AND_BACK || this._cullingMode == ContextGLTriangleFace_1.default.NONE) {\n            for (var i = firstIndex; i < numIndices; i += 3) {\n                index0 = indexBuffer.data[indexBuffer.startOffset + i + 2];\n                index1 = indexBuffer.data[indexBuffer.startOffset + i + 1];\n                index2 = indexBuffer.data[indexBuffer.startOffset + i + 0];\n                vo0 = this._program.vertex(this, index0);\n                vo1 = this._program.vertex(this, index1);\n                vo2 = this._program.vertex(this, index2);\n                this.triangle(vo0, vo1, vo2);\n                index0 = indexBuffer.data[indexBuffer.startOffset + i];\n                index1 = indexBuffer.data[indexBuffer.startOffset + i + 1];\n                index2 = indexBuffer.data[indexBuffer.startOffset + i + 2];\n                vo0 = this._program.vertex(this, index0);\n                vo1 = this._program.vertex(this, index1);\n                vo2 = this._program.vertex(this, index2);\n                this.triangle(vo0, vo1, vo2);\n            }\n        }\n        //if (ContextSoftware._drawCallback) {\n        //    ContextSoftware._drawCallback(this._backBufferColor);\n        //}\n        this._backBufferColor.unlock();\n    };\n    ContextSoftware.prototype.drawVertices = function (mode, firstVertex, numVertices) {\n        //TODO:\n    };\n    ContextSoftware.prototype.setScissorRectangle = function (rectangle) {\n        //TODO:\n    };\n    ContextSoftware.prototype.setSamplerStateAt = function (sampler, wrap, filter, mipfilter) {\n        //console.log(\"setSamplerStateAt: \"+sampler+\" wrap: \"+wrap+\" filter: \"+filter+\" mipfilter: \"+mipfilter);\n        var state = this._samplerStates[sampler];\n        if (!state) {\n            state = this._samplerStates[sampler] = new SoftwareSamplerState_1.default();\n        }\n        state.wrap = wrap;\n        state.filter = filter;\n        state.mipfilter = mipfilter;\n    };\n    ContextSoftware.prototype.setRenderToTexture = function (target, enableDepthAndStencil, antiAlias, surfaceSelector) {\n        //TODO:\n    };\n    ContextSoftware.prototype.setRenderToBackBuffer = function () {\n        //TODO:\n    };\n    ContextSoftware.prototype.putPixel = function (x, y, color) {\n        var dest = ColorUtils_1.default.float32ColorToARGB(this._backBufferColor.getPixel32(x, y));\n        dest[0] /= 255;\n        dest[1] /= 255;\n        dest[2] /= 255;\n        dest[3] /= 255;\n        var source = ColorUtils_1.default.float32ColorToARGB(color);\n        source[0] /= 255;\n        source[1] /= 255;\n        source[2] /= 255;\n        source[3] /= 255;\n        var destModified = this.applyBlendMode(dest, this._blendDestination, dest, source);\n        var sourceModified = this.applyBlendMode(source, this._blendSource, dest, source);\n        var a = destModified[0] + sourceModified[0];\n        var r = destModified[1] + sourceModified[1];\n        var g = destModified[2] + sourceModified[2];\n        var b = destModified[3] + sourceModified[3];\n        a = Math.max(0, Math.min(a, 1));\n        r = Math.max(0, Math.min(r, 1));\n        g = Math.max(0, Math.min(g, 1));\n        b = Math.max(0, Math.min(b, 1));\n        //\n        //r*=a/255;\n        //g*=a/255;\n        //b*=a/255;\n        //a = 255;\n        this._backBufferColor.setPixel32(x, y, ColorUtils_1.default.ARGBtoFloat32(a * 255, r * 255, g * 255, b * 255));\n    };\n    ContextSoftware.prototype.applyBlendMode = function (argb, blend, dest, source) {\n        var result = [];\n        result[0] = argb[0];\n        result[1] = argb[1];\n        result[2] = argb[2];\n        result[3] = argb[3];\n        if (blend == ContextGLBlendFactor_1.default.DESTINATION_ALPHA) {\n            result[0] *= dest[0];\n            result[1] *= dest[0];\n            result[2] *= dest[0];\n            result[3] *= dest[0];\n        }\n        else if (blend == ContextGLBlendFactor_1.default.DESTINATION_COLOR) {\n            result[0] *= dest[0];\n            result[1] *= dest[1];\n            result[2] *= dest[2];\n            result[3] *= dest[3];\n        }\n        else if (blend == ContextGLBlendFactor_1.default.ZERO) {\n            result[0] = 0;\n            result[1] = 0;\n            result[2] = 0;\n            result[3] = 0;\n        }\n        else if (blend == ContextGLBlendFactor_1.default.ONE_MINUS_DESTINATION_ALPHA) {\n            result[0] *= 1 - dest[0];\n            result[1] *= 1 - dest[0];\n            result[2] *= 1 - dest[0];\n            result[3] *= 1 - dest[0];\n        }\n        else if (blend == ContextGLBlendFactor_1.default.ONE_MINUS_DESTINATION_COLOR) {\n            result[0] *= 1 - dest[0];\n            result[1] *= 1 - dest[1];\n            result[2] *= 1 - dest[2];\n            result[3] *= 1 - dest[3];\n        }\n        else if (blend == ContextGLBlendFactor_1.default.ONE_MINUS_SOURCE_ALPHA) {\n            result[0] *= 1 - source[0];\n            result[1] *= 1 - source[0];\n            result[2] *= 1 - source[0];\n            result[3] *= 1 - source[0];\n        }\n        else if (blend == ContextGLBlendFactor_1.default.ONE_MINUS_SOURCE_COLOR) {\n            result[0] *= 1 - source[0];\n            result[1] *= 1 - source[1];\n            result[2] *= 1 - source[2];\n            result[3] *= 1 - source[3];\n        }\n        else if (blend == ContextGLBlendFactor_1.default.SOURCE_ALPHA) {\n            result[0] *= source[0];\n            result[1] *= source[0];\n            result[2] *= source[0];\n            result[3] *= source[0];\n        }\n        else if (blend == ContextGLBlendFactor_1.default.SOURCE_COLOR) {\n            result[0] *= source[0];\n            result[1] *= source[1];\n            result[2] *= source[2];\n            result[3] *= source[3];\n        }\n        return result;\n    };\n    ContextSoftware.prototype.clamp = function (value, min, max) {\n        if (min === void 0) { min = 0; }\n        if (max === void 0) { max = 1; }\n        return Math.max(min, Math.min(value, max));\n    };\n    ContextSoftware.prototype.interpolate = function (min, max, gradient) {\n        return min + (max - min) * this.clamp(gradient);\n    };\n    ContextSoftware.prototype.triangle = function (vo0, vo1, vo2) {\n        var p0 = vo0.outputPosition[0];\n        if (!p0 || p0.w == 0 || isNaN(p0.w)) {\n            console.error(\"wrong position\");\n            return;\n        }\n        var p1 = vo1.outputPosition[0];\n        var p2 = vo2.outputPosition[0];\n        p0.z = p0.z * 2 - p0.w;\n        p1.z = p1.z * 2 - p1.w;\n        p2.z = p2.z * 2 - p2.w;\n        p0.scaleBy(1 / p0.w);\n        p1.scaleBy(1 / p1.w);\n        p2.scaleBy(1 / p2.w);\n        var project = new Vector3D_1.default(p0.w, p1.w, p2.w);\n        p0 = this._screenMatrix.transformVector(p0);\n        p1 = this._screenMatrix.transformVector(p1);\n        p2 = this._screenMatrix.transformVector(p2);\n        var depth = new Vector3D_1.default(p0.z, p1.z, p2.z);\n        this._bboxMin.x = 1000000;\n        this._bboxMin.y = 1000000;\n        this._bboxMax.x = -1000000;\n        this._bboxMax.y = -1000000;\n        this._clamp.x = this._backBufferWidth - 1;\n        this._clamp.y = this._backBufferHeight - 1;\n        this._bboxMin.x = Math.max(0, Math.min(this._bboxMin.x, p0.x));\n        this._bboxMin.y = Math.max(0, Math.min(this._bboxMin.y, p0.y));\n        this._bboxMin.x = Math.max(0, Math.min(this._bboxMin.x, p1.x));\n        this._bboxMin.y = Math.max(0, Math.min(this._bboxMin.y, p1.y));\n        this._bboxMin.x = Math.max(0, Math.min(this._bboxMin.x, p2.x));\n        this._bboxMin.y = Math.max(0, Math.min(this._bboxMin.y, p2.y));\n        this._bboxMax.x = Math.min(this._clamp.x, Math.max(this._bboxMax.x, p0.x));\n        this._bboxMax.y = Math.min(this._clamp.y, Math.max(this._bboxMax.y, p0.y));\n        this._bboxMax.x = Math.min(this._clamp.x, Math.max(this._bboxMax.x, p1.x));\n        this._bboxMax.y = Math.min(this._clamp.y, Math.max(this._bboxMax.y, p1.y));\n        this._bboxMax.x = Math.min(this._clamp.x, Math.max(this._bboxMax.x, p2.x));\n        this._bboxMax.y = Math.min(this._clamp.y, Math.max(this._bboxMax.y, p2.y));\n        this._bboxMin.x = Math.floor(this._bboxMin.x);\n        this._bboxMin.y = Math.floor(this._bboxMin.y);\n        this._bboxMax.x = Math.floor(this._bboxMax.x);\n        this._bboxMax.y = Math.floor(this._bboxMax.y);\n        for (var x = this._bboxMin.x; x <= this._bboxMax.x; x++) {\n            for (var y = this._bboxMin.y; y <= this._bboxMax.y; y++) {\n                var color = this.calcPixel(x, y, p0, p1, p2, project, depth, vo0, vo1, vo2);\n                if (color) {\n                    this.putPixel(x, y, ColorUtils_1.default.ARGBtoFloat32(color.w, color.x, color.y, color.z));\n                }\n            }\n        }\n    };\n    ContextSoftware.prototype.calcPixel = function (x, y, p0, p1, p2, project, depth, vo0, vo1, vo2) {\n        var screen = this.barycentric(p0, p1, p2, x, y);\n        var screenRight = this.barycentric(p0, p1, p2, x + 1, y);\n        var screenBottom = this.barycentric(p0, p1, p2, x, y + 1);\n        var clip = new Vector3D_1.default(screen.x / project.x, screen.y / project.y, screen.z / project.z);\n        clip.scaleBy(1 / (clip.x + clip.y + clip.z));\n        var clipRight = new Vector3D_1.default(screenRight.x / project.x, screenRight.y / project.y, screenRight.z / project.z);\n        clipRight.scaleBy(1 / (clipRight.x + clipRight.y + clipRight.z));\n        var clipBottom = new Vector3D_1.default(screenBottom.x / project.x, screenBottom.y / project.y, screenBottom.z / project.z);\n        clipBottom.scaleBy(1 / (clipBottom.x + clipBottom.y + clipBottom.z));\n        var index = ((x % this._backBufferWidth) + y * this._backBufferWidth);\n        var fragDepth = depth.x * screen.x + depth.y * screen.y + depth.z * screen.z;\n        if (screen.x < 0 || screen.y < 0 || screen.z < 0) {\n            return null;\n        }\n        var currentDepth = this._zbuffer[index];\n        //< fragDepth\n        var passDepthTest = false;\n        switch (this._depthCompareMode) {\n            case ContextGLCompareMode_1.default.ALWAYS:\n                passDepthTest = true;\n                break;\n            case ContextGLCompareMode_1.default.EQUAL:\n                passDepthTest = fragDepth == currentDepth;\n                break;\n            case ContextGLCompareMode_1.default.GREATER:\n                passDepthTest = fragDepth > currentDepth;\n                break;\n            case ContextGLCompareMode_1.default.GREATER_EQUAL:\n                passDepthTest = fragDepth >= currentDepth;\n                break;\n            case ContextGLCompareMode_1.default.LESS:\n                passDepthTest = fragDepth < currentDepth;\n                break;\n            case ContextGLCompareMode_1.default.LESS_EQUAL:\n                passDepthTest = fragDepth <= currentDepth;\n                break;\n            case ContextGLCompareMode_1.default.NEVER:\n                passDepthTest = false;\n                break;\n            case ContextGLCompareMode_1.default.NOT_EQUAL:\n                passDepthTest = fragDepth != currentDepth;\n                break;\n            default:\n        }\n        if (!passDepthTest) {\n            return null;\n        }\n        var fragmentVO = this._program.fragment(this, clip, clipRight, clipBottom, vo0, vo1, vo2, fragDepth);\n        if (fragmentVO.discard) {\n            return null;\n        }\n        if (this._writeDepth) {\n            this._zbuffer[index] = fragDepth; //todo: fragmentVO.outputDepth?\n        }\n        var color = fragmentVO.outputColor[0];\n        color.x = Math.max(0, Math.min(color.x, 1));\n        color.y = Math.max(0, Math.min(color.y, 1));\n        color.z = Math.max(0, Math.min(color.z, 1));\n        color.w = Math.max(0, Math.min(color.w, 1));\n        color.x *= 255;\n        color.y *= 255;\n        color.z *= 255;\n        color.w *= 255;\n        return color;\n    };\n    ContextSoftware.prototype.barycentric = function (a, b, c, x, y) {\n        var sx = new Vector3D_1.default();\n        sx.x = c.x - a.x;\n        sx.y = b.x - a.x;\n        sx.z = a.x - x;\n        var sy = new Vector3D_1.default();\n        sy.x = c.y - a.y;\n        sy.y = b.y - a.y;\n        sy.z = a.y - y;\n        var u = sx.crossProduct(sy);\n        if (u.z < 0.01) {\n            return new Vector3D_1.default(1 - (u.x + u.y) / u.z, u.y / u.z, u.x / u.z);\n        }\n        return new Vector3D_1.default(-1, 1, 1);\n    };\n    ContextSoftware.MAX_SAMPLERS = 8;\n    return ContextSoftware;\n}());\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.default = ContextSoftware;\nvar VertexBufferProperties = (function () {\n    function VertexBufferProperties(size, type, normalized) {\n        this.size = size;\n        this.type = type;\n        this.normalized = normalized;\n    }\n    return VertexBufferProperties;\n}());\n\n},{\"../base/ContextGLBlendFactor\":\"awayjs-stagegl/lib/base/ContextGLBlendFactor\",\"../base/ContextGLClearMask\":\"awayjs-stagegl/lib/base/ContextGLClearMask\",\"../base/ContextGLCompareMode\":\"awayjs-stagegl/lib/base/ContextGLCompareMode\",\"../base/ContextGLProgramType\":\"awayjs-stagegl/lib/base/ContextGLProgramType\",\"../base/ContextGLTriangleFace\":\"awayjs-stagegl/lib/base/ContextGLTriangleFace\",\"../base/IndexBufferSoftware\":\"awayjs-stagegl/lib/base/IndexBufferSoftware\",\"../base/ProgramSoftware\":\"awayjs-stagegl/lib/base/ProgramSoftware\",\"../base/SoftwareSamplerState\":\"awayjs-stagegl/lib/base/SoftwareSamplerState\",\"../base/TextureSoftware\":\"awayjs-stagegl/lib/base/TextureSoftware\",\"../base/VertexBufferSoftware\":\"awayjs-stagegl/lib/base/VertexBufferSoftware\",\"awayjs-core/lib/geom/Matrix\":undefined,\"awayjs-core/lib/geom/Matrix3D\":undefined,\"awayjs-core/lib/geom/Matrix3DUtils\":undefined,\"awayjs-core/lib/geom/Point\":undefined,\"awayjs-core/lib/geom/Rectangle\":undefined,\"awayjs-core/lib/geom/Vector3D\":undefined,\"awayjs-core/lib/image/BitmapImage2D\":undefined,\"awayjs-core/lib/utils/ColorUtils\":undefined}],\"awayjs-stagegl/lib/base/ContextStage3D\":[function(require,module,exports){\n\"use strict\";\nvar Matrix3DUtils_1 = require(\"awayjs-core/lib/geom/Matrix3DUtils\");\n//import swfobject\t\t\t\t\tfrom \"../swfobject\";\nvar ContextGLClearMask_1 = require(\"../base/ContextGLClearMask\");\nvar ContextGLProgramType_1 = require(\"../base/ContextGLProgramType\");\nvar CubeTextureFlash_1 = require(\"../base/CubeTextureFlash\");\nvar IndexBufferFlash_1 = require(\"../base/IndexBufferFlash\");\nvar OpCodes_1 = require(\"../base/OpCodes\");\nvar ProgramFlash_1 = require(\"../base/ProgramFlash\");\nvar TextureFlash_1 = require(\"../base/TextureFlash\");\nvar VertexBufferFlash_1 = require(\"../base/VertexBufferFlash\");\nvar ContextStage3D = (function () {\n    //TODO: get rid of hack that fixes including definition file\n    function ContextStage3D(container, callback) {\n        this._cmdStream = \"\";\n        this._resources = new Array();\n        var swfVersionStr = \"11.0.0\";\n        // To use express install, set to playerProductInstall.swf, otherwise the empty string.\n        var flashvars = {\n            id: container.id\n        };\n        var params = {\n            quality: \"high\",\n            bgcolor: \"#ffffff\",\n            allowscriptaccess: \"sameDomain\",\n            allowfullscreen: \"true\",\n            wmode: \"direct\"\n        };\n        this._errorCheckingEnabled = false;\n        this._iDriverInfo = \"Unknown\";\n        var attributes = {\n            salign: \"tl\",\n            id: container.id,\n            name: container[\"name\"] //TODO: needed?\n        };\n        this._oldCanvas = container.cloneNode(); // keep the old one to restore on dispose\n        this._oldParent = container.parentNode;\n        var context3dObj = this;\n        ContextStage3D.contexts[container.id] = this;\n        function callbackSWFObject(callbackInfo) {\n            if (!callbackInfo.success)\n                return;\n            context3dObj._container = callbackInfo.ref;\n            context3dObj._iCallback = callback;\n        }\n        //swfobject.embedSWF(\"libs/molehill_js_flashbridge.swf\", container.id, String(container.width), String(container.height), swfVersionStr, \"\", flashvars, params, attributes, callbackSWFObject);\n    }\n    Object.defineProperty(ContextStage3D.prototype, \"container\", {\n        get: function () {\n            return this._container;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(ContextStage3D.prototype, \"driverInfo\", {\n        get: function () {\n            return this._iDriverInfo;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(ContextStage3D.prototype, \"errorCheckingEnabled\", {\n        get: function () {\n            return this._errorCheckingEnabled;\n        },\n        set: function (value) {\n            if (this._errorCheckingEnabled == value)\n                return;\n            this._errorCheckingEnabled = value;\n            this.addStream(String.fromCharCode(OpCodes_1.default.enableErrorChecking, value ? OpCodes_1.default.trueValue : OpCodes_1.default.falseValue));\n            this.execute();\n        },\n        enumerable: true,\n        configurable: true\n    });\n    ContextStage3D.prototype._iAddResource = function (resource) {\n        this._resources.push(resource);\n    };\n    ContextStage3D.prototype._iRemoveResource = function (resource) {\n        this._resources.splice(this._resources.indexOf(resource));\n    };\n    ContextStage3D.prototype.createTexture = function (width, height, format, optimizeForRenderToTexture, streamingLevels) {\n        if (streamingLevels === void 0) { streamingLevels = 0; }\n        //TODO:streaming\n        return new TextureFlash_1.default(this, width, height, format, optimizeForRenderToTexture);\n    };\n    ContextStage3D.prototype.createCubeTexture = function (size, format, optimizeForRenderToTexture, streamingLevels) {\n        if (streamingLevels === void 0) { streamingLevels = 0; }\n        //TODO:streaming\n        return new CubeTextureFlash_1.default(this, size, format, optimizeForRenderToTexture);\n    };\n    ContextStage3D.prototype.setTextureAt = function (sampler, texture) {\n        if (texture) {\n            this.addStream(String.fromCharCode(OpCodes_1.default.setTextureAt) + sampler + \",\" + texture.id + \",\");\n        }\n        else {\n            this.addStream(String.fromCharCode(OpCodes_1.default.clearTextureAt) + sampler.toString() + \",\");\n        }\n        if (ContextStage3D.debug)\n            this.execute();\n    };\n    ContextStage3D.prototype.setSamplerStateAt = function (sampler, wrap, filter, mipfilter) {\n        //nothing to do here\n    };\n    ContextStage3D.prototype.setStencilActions = function (triangleFace, compareMode, actionOnBothPass, actionOnDepthFail, actionOnDepthPassStencilFail, coordinateSystem) {\n        if (triangleFace === void 0) { triangleFace = \"frontAndBack\"; }\n        if (compareMode === void 0) { compareMode = \"always\"; }\n        if (actionOnBothPass === void 0) { actionOnBothPass = \"keep\"; }\n        if (actionOnDepthFail === void 0) { actionOnDepthFail = \"keep\"; }\n        if (actionOnDepthPassStencilFail === void 0) { actionOnDepthPassStencilFail = \"keep\"; }\n        if (coordinateSystem === void 0) { coordinateSystem = \"leftHanded\"; }\n        this.addStream(String.fromCharCode(OpCodes_1.default.setStencilActions) + triangleFace + \"$\" + compareMode + \"$\" + actionOnBothPass + \"$\" + actionOnDepthFail + \"$\" + actionOnDepthPassStencilFail + \"$\");\n        if (ContextStage3D.debug)\n            this.execute();\n    };\n    ContextStage3D.prototype.setStencilReferenceValue = function (referenceValue, readMask, writeMask) {\n        if (readMask === void 0) { readMask = 255; }\n        if (writeMask === void 0) { writeMask = 255; }\n        this.addStream(String.fromCharCode(OpCodes_1.default.setStencilReferenceValue, referenceValue + OpCodes_1.default.intMask, readMask + OpCodes_1.default.intMask, writeMask + OpCodes_1.default.intMask));\n        if (ContextStage3D.debug)\n            this.execute();\n    };\n    ContextStage3D.prototype.setCulling = function (triangleFaceToCull, coordinateSystem) {\n        if (coordinateSystem === void 0) { coordinateSystem = \"leftHanded\"; }\n        //TODO implement coordinateSystem option\n        this.addStream(String.fromCharCode(OpCodes_1.default.setCulling) + triangleFaceToCull + \"$\");\n        if (ContextStage3D.debug)\n            this.execute();\n    };\n    ContextStage3D.prototype.drawIndices = function (mode, indexBuffer, firstIndex, numIndices) {\n        if (firstIndex === void 0) { firstIndex = 0; }\n        if (numIndices === void 0) { numIndices = -1; }\n        firstIndex = firstIndex || 0;\n        if (!numIndices || numIndices < 0)\n            numIndices = indexBuffer.numIndices;\n        //assume triangles\n        this.addStream(String.fromCharCode(OpCodes_1.default.drawTriangles, indexBuffer.id + OpCodes_1.default.intMask) + firstIndex + \",\" + numIndices + \",\");\n        if (ContextStage3D.debug)\n            this.execute();\n    };\n    ContextStage3D.prototype.drawVertices = function (mode, firstVertex, numVertices) {\n        if (firstVertex === void 0) { firstVertex = 0; }\n        if (numVertices === void 0) { numVertices = -1; }\n        //can't be done in Stage3D\n    };\n    ContextStage3D.prototype.setProgramConstantsFromMatrix = function (programType, firstRegister, matrix, transposedMatrix) {\n        //this._gl.uniformMatrix4fv(this._gl.getUniformLocation(this._currentProgram.glProgram, this._uniformLocationNameDictionary[programType]), !transposedMatrix, new Float32Array(matrix.rawData));\n        if (transposedMatrix === void 0) { transposedMatrix = false; }\n        //TODO remove special case for WebGL matrix calls?\n        var d = matrix.rawData;\n        if (transposedMatrix) {\n            var raw = Matrix3DUtils_1.default.RAW_DATA_CONTAINER;\n            raw[0] = d[0];\n            raw[1] = d[4];\n            raw[2] = d[8];\n            raw[3] = d[12];\n            raw[4] = d[1];\n            raw[5] = d[5];\n            raw[6] = d[9];\n            raw[7] = d[13];\n            raw[8] = d[2];\n            raw[9] = d[6];\n            raw[10] = d[10];\n            raw[11] = d[14];\n            raw[12] = d[3];\n            raw[13] = d[7];\n            raw[14] = d[11];\n            raw[15] = d[15];\n            this.setProgramConstantsFromArray(programType, firstRegister, raw, 4);\n        }\n        else {\n            this.setProgramConstantsFromArray(programType, firstRegister, d, 4);\n        }\n    };\n    ContextStage3D.prototype.setProgramConstantsFromArray = function (programType, firstRegister, data, numRegisters) {\n        if (numRegisters === void 0) { numRegisters = -1; }\n        var startIndex;\n        var target = (programType == ContextGLProgramType_1.default.VERTEX) ? OpCodes_1.default.trueValue : OpCodes_1.default.falseValue;\n        for (var i = 0; i < numRegisters; i++) {\n            startIndex = i * 4;\n            this.addStream(String.fromCharCode(OpCodes_1.default.setProgramConstant, target, (firstRegister + i) + OpCodes_1.default.intMask) + data[startIndex] + \",\" + data[startIndex + 1] + \",\" + data[startIndex + 2] + \",\" + data[startIndex + 3] + \",\");\n            if (ContextStage3D.debug)\n                this.execute();\n        }\n    };\n    ContextStage3D.prototype.setProgram = function (program) {\n        this.addStream(String.fromCharCode(OpCodes_1.default.setProgram, program.id + OpCodes_1.default.intMask));\n        if (ContextStage3D.debug)\n            this.execute();\n    };\n    ContextStage3D.prototype.present = function () {\n        this.addStream(String.fromCharCode(OpCodes_1.default.present));\n        this.execute();\n    };\n    ContextStage3D.prototype.clear = function (red, green, blue, alpha, depth, stencil, mask) {\n        if (red === void 0) { red = 0; }\n        if (green === void 0) { green = 0; }\n        if (blue === void 0) { blue = 0; }\n        if (alpha === void 0) { alpha = 1; }\n        if (depth === void 0) { depth = 1; }\n        if (stencil === void 0) { stencil = 0; }\n        if (mask === void 0) { mask = ContextGLClearMask_1.default.ALL; }\n        this.addStream(String.fromCharCode(OpCodes_1.default.clear) + red + \",\" + green + \",\" + blue + \",\" + alpha + \",\" + depth + \",\" + stencil + \",\" + mask + \",\");\n        if (ContextStage3D.debug)\n            this.execute();\n    };\n    ContextStage3D.prototype.createProgram = function () {\n        return new ProgramFlash_1.default(this);\n    };\n    ContextStage3D.prototype.createVertexBuffer = function (numVertices, data32PerVertex) {\n        return new VertexBufferFlash_1.default(this, numVertices, data32PerVertex);\n    };\n    ContextStage3D.prototype.createIndexBuffer = function (numIndices) {\n        return new IndexBufferFlash_1.default(this, numIndices);\n    };\n    ContextStage3D.prototype.configureBackBuffer = function (width, height, antiAlias, enableDepthAndStencil) {\n        if (enableDepthAndStencil === void 0) { enableDepthAndStencil = true; }\n        this._width = width;\n        this._height = height;\n        //TODO: add Anitalias setting\n        this.addStream(String.fromCharCode(OpCodes_1.default.configureBackBuffer) + width + \",\" + height + \",\");\n    };\n    ContextStage3D.prototype.drawToBitmapImage2D = function (destination) {\n        //TODO\n    };\n    ContextStage3D.prototype.setVertexBufferAt = function (index, buffer, bufferOffset, format) {\n        if (bufferOffset === void 0) { bufferOffset = 0; }\n        if (format === void 0) { format = null; }\n        if (buffer) {\n            this.addStream(String.fromCharCode(OpCodes_1.default.setVertexBufferAt, index + OpCodes_1.default.intMask) + buffer.id + \",\" + bufferOffset + \",\" + format + \"$\");\n        }\n        else {\n            this.addStream(String.fromCharCode(OpCodes_1.default.clearVertexBufferAt, index + OpCodes_1.default.intMask));\n        }\n        if (ContextStage3D.debug)\n            this.execute();\n    };\n    ContextStage3D.prototype.setColorMask = function (red, green, blue, alpha) {\n        this.addStream(String.fromCharCode(OpCodes_1.default.setColorMask, red ? OpCodes_1.default.trueValue : OpCodes_1.default.falseValue, green ? OpCodes_1.default.trueValue : OpCodes_1.default.falseValue, blue ? OpCodes_1.default.trueValue : OpCodes_1.default.falseValue, alpha ? OpCodes_1.default.trueValue : OpCodes_1.default.falseValue));\n        if (ContextStage3D.debug)\n            this.execute();\n    };\n    ContextStage3D.prototype.setBlendFactors = function (sourceFactor, destinationFactor) {\n        this.addStream(String.fromCharCode(OpCodes_1.default.setBlendFactors) + sourceFactor + \"$\" + destinationFactor + \"$\");\n        if (ContextStage3D.debug)\n            this.execute();\n    };\n    ContextStage3D.prototype.setRenderToTexture = function (target, enableDepthAndStencil, antiAlias, surfaceSelector) {\n        if (enableDepthAndStencil === void 0) { enableDepthAndStencil = false; }\n        if (antiAlias === void 0) { antiAlias = 0; }\n        if (surfaceSelector === void 0) { surfaceSelector = 0; }\n        if (target === null || target === undefined) {\n            this.addStream(String.fromCharCode(OpCodes_1.default.clearRenderToTexture));\n        }\n        else {\n            this.addStream(String.fromCharCode(OpCodes_1.default.setRenderToTexture, enableDepthAndStencil ? OpCodes_1.default.trueValue : OpCodes_1.default.falseValue) + target.id + \",\" + (antiAlias || 0) + \",\");\n        }\n        if (ContextStage3D.debug)\n            this.execute();\n    };\n    ContextStage3D.prototype.setRenderToBackBuffer = function () {\n        this.addStream(String.fromCharCode(OpCodes_1.default.clearRenderToTexture));\n        if (ContextStage3D.debug)\n            this.execute();\n    };\n    ContextStage3D.prototype.setScissorRectangle = function (rectangle) {\n        if (rectangle) {\n            this.addStream(String.fromCharCode(OpCodes_1.default.setScissorRect) + rectangle.x + \",\" + rectangle.y + \",\" + rectangle.width + \",\" + rectangle.height + \",\");\n        }\n        else {\n            this.addStream(String.fromCharCode(OpCodes_1.default.clearScissorRect));\n        }\n        if (ContextStage3D.debug)\n            this.execute();\n    };\n    ContextStage3D.prototype.setDepthTest = function (depthMask, passCompareMode) {\n        this.addStream(String.fromCharCode(OpCodes_1.default.setDepthTest, depthMask ? OpCodes_1.default.trueValue : OpCodes_1.default.falseValue) + passCompareMode + \"$\");\n        if (ContextStage3D.debug)\n            this.execute();\n    };\n    ContextStage3D.prototype.dispose = function () {\n        if (this._container == null)\n            return;\n        console.log(\"Context3D dispose, releasing \" + this._resources.length + \" resources.\");\n        while (this._resources.length)\n            this._resources[0].dispose();\n        if (this._container) {\n            // encode command\n            this.addStream(String.fromCharCode(OpCodes_1.default.disposeContext));\n            this.execute();\n            //swfobject.removeSWF(this._oldCanvas.id);\n            if (this._oldCanvas && this._oldParent) {\n                this._oldParent.appendChild(this._oldCanvas);\n                this._oldParent = null;\n            }\n            this._container = null;\n        }\n        this._oldCanvas = null;\n    };\n    ContextStage3D.prototype.addStream = function (stream) {\n        this._cmdStream += stream;\n    };\n    ContextStage3D.prototype.execute = function () {\n        if (ContextStage3D.logStream)\n            console.log(this._cmdStream);\n        var result = this._container[\"CallFunction\"](\"<invoke name=\\\"execStage3dOpStream\\\" returntype=\\\"javascript\\\"><arguments><string>\" + this._cmdStream + \"</string></arguments></invoke>\");\n        if (Number(result) <= -3)\n            throw \"Exec stream failed\";\n        this._cmdStream = \"\";\n        return Number(result);\n    };\n    ContextStage3D.contexts = new Object();\n    ContextStage3D.debug = false;\n    ContextStage3D.logStream = false;\n    return ContextStage3D;\n}());\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.default = ContextStage3D;\n/**\n* global function for flash callback\n*/\nfunction mountain_js_context_available(id, driverInfo) {\n    var ctx = ContextStage3D.contexts[id];\n    if (ctx._iCallback) {\n        ctx._iDriverInfo = driverInfo;\n        // get out of the current JS stack frame and call back from flash player\n        var timeOutId = window.setTimeout(function () {\n            window.clearTimeout(timeOutId);\n            try {\n                ctx._iCallback(ctx);\n            }\n            catch (e) {\n                console.log(\"Callback failed during flash initialization with '\" + e.toString() + \"'\");\n            }\n        }, 1);\n    }\n}\n\n},{\"../base/ContextGLClearMask\":\"awayjs-stagegl/lib/base/ContextGLClearMask\",\"../base/ContextGLProgramType\":\"awayjs-stagegl/lib/base/ContextGLProgramType\",\"../base/CubeTextureFlash\":\"awayjs-stagegl/lib/base/CubeTextureFlash\",\"../base/IndexBufferFlash\":\"awayjs-stagegl/lib/base/IndexBufferFlash\",\"../base/OpCodes\":\"awayjs-stagegl/lib/base/OpCodes\",\"../base/ProgramFlash\":\"awayjs-stagegl/lib/base/ProgramFlash\",\"../base/TextureFlash\":\"awayjs-stagegl/lib/base/TextureFlash\",\"../base/VertexBufferFlash\":\"awayjs-stagegl/lib/base/VertexBufferFlash\",\"awayjs-core/lib/geom/Matrix3DUtils\":undefined}],\"awayjs-stagegl/lib/base/ContextWebGL\":[function(require,module,exports){\n\"use strict\";\nvar Matrix3DUtils_1 = require(\"awayjs-core/lib/geom/Matrix3DUtils\");\nvar Rectangle_1 = require(\"awayjs-core/lib/geom/Rectangle\");\nvar ByteArray_1 = require(\"awayjs-core/lib/utils/ByteArray\");\nvar ContextGLBlendFactor_1 = require(\"../base/ContextGLBlendFactor\");\nvar ContextGLDrawMode_1 = require(\"../base/ContextGLDrawMode\");\nvar ContextGLClearMask_1 = require(\"../base/ContextGLClearMask\");\nvar ContextGLCompareMode_1 = require(\"../base/ContextGLCompareMode\");\nvar ContextGLMipFilter_1 = require(\"../base/ContextGLMipFilter\");\nvar ContextGLProgramType_1 = require(\"../base/ContextGLProgramType\");\nvar ContextGLStencilAction_1 = require(\"../base/ContextGLStencilAction\");\nvar ContextGLTextureFilter_1 = require(\"../base/ContextGLTextureFilter\");\nvar ContextGLTriangleFace_1 = require(\"../base/ContextGLTriangleFace\");\nvar ContextGLVertexBufferFormat_1 = require(\"../base/ContextGLVertexBufferFormat\");\nvar ContextGLWrapMode_1 = require(\"../base/ContextGLWrapMode\");\nvar CubeTextureWebGL_1 = require(\"../base/CubeTextureWebGL\");\nvar IndexBufferWebGL_1 = require(\"../base/IndexBufferWebGL\");\nvar ProgramWebGL_1 = require(\"../base/ProgramWebGL\");\nvar TextureWebGL_1 = require(\"../base/TextureWebGL\");\nvar SamplerState_1 = require(\"../base/SamplerState\");\nvar VertexBufferWebGL_1 = require(\"../base/VertexBufferWebGL\");\nvar ContextWebGL = (function () {\n    function ContextWebGL(canvas) {\n        this._blendFactorDictionary = new Object();\n        this._drawModeDictionary = new Object();\n        this._compareModeDictionary = new Object();\n        this._stencilActionDictionary = new Object();\n        this._textureIndexDictionary = new Array(8);\n        this._textureTypeDictionary = new Object();\n        this._wrapDictionary = new Object();\n        this._filterDictionary = new Object();\n        this._mipmapFilterDictionary = new Object();\n        this._vertexBufferPropertiesDictionary = [];\n        this._samplerStates = new Array(8);\n        this._stencilReferenceValue = 0;\n        this._stencilReadMask = 0xff;\n        this._separateStencil = false;\n        this._container = canvas;\n        try {\n            this._gl = canvas.getContext(\"experimental-webgl\", { premultipliedAlpha: false, alpha: false, stencil: true });\n            if (!this._gl)\n                this._gl = canvas.getContext(\"webgl\", { premultipliedAlpha: false, alpha: false, stencil: true });\n        }\n        catch (e) {\n        }\n        if (this._gl) {\n            //this.dispatchEvent( new away.events.AwayEvent( away.events.AwayEvent.INITIALIZE_SUCCESS ) );\n            if (this._gl.getExtension(\"OES_standard_derivatives\")) {\n                this._standardDerivatives = true;\n            }\n            else {\n                this._standardDerivatives = false;\n            }\n            //setup shortcut dictionaries\n            this._blendFactorDictionary[ContextGLBlendFactor_1.default.ONE] = this._gl.ONE;\n            this._blendFactorDictionary[ContextGLBlendFactor_1.default.DESTINATION_ALPHA] = this._gl.DST_ALPHA;\n            this._blendFactorDictionary[ContextGLBlendFactor_1.default.DESTINATION_COLOR] = this._gl.DST_COLOR;\n            this._blendFactorDictionary[ContextGLBlendFactor_1.default.ONE] = this._gl.ONE;\n            this._blendFactorDictionary[ContextGLBlendFactor_1.default.ONE_MINUS_DESTINATION_ALPHA] = this._gl.ONE_MINUS_DST_ALPHA;\n            this._blendFactorDictionary[ContextGLBlendFactor_1.default.ONE_MINUS_DESTINATION_COLOR] = this._gl.ONE_MINUS_DST_COLOR;\n            this._blendFactorDictionary[ContextGLBlendFactor_1.default.ONE_MINUS_SOURCE_ALPHA] = this._gl.ONE_MINUS_SRC_ALPHA;\n            this._blendFactorDictionary[ContextGLBlendFactor_1.default.ONE_MINUS_SOURCE_COLOR] = this._gl.ONE_MINUS_SRC_COLOR;\n            this._blendFactorDictionary[ContextGLBlendFactor_1.default.SOURCE_ALPHA] = this._gl.SRC_ALPHA;\n            this._blendFactorDictionary[ContextGLBlendFactor_1.default.SOURCE_COLOR] = this._gl.SRC_COLOR;\n            this._blendFactorDictionary[ContextGLBlendFactor_1.default.ZERO] = this._gl.ZERO;\n            this._drawModeDictionary[ContextGLDrawMode_1.default.LINES] = this._gl.LINES;\n            this._drawModeDictionary[ContextGLDrawMode_1.default.TRIANGLES] = this._gl.TRIANGLES;\n            this._compareModeDictionary[ContextGLCompareMode_1.default.ALWAYS] = this._gl.ALWAYS;\n            this._compareModeDictionary[ContextGLCompareMode_1.default.EQUAL] = this._gl.EQUAL;\n            this._compareModeDictionary[ContextGLCompareMode_1.default.GREATER] = this._gl.GREATER;\n            this._compareModeDictionary[ContextGLCompareMode_1.default.GREATER_EQUAL] = this._gl.GEQUAL;\n            this._compareModeDictionary[ContextGLCompareMode_1.default.LESS] = this._gl.LESS;\n            this._compareModeDictionary[ContextGLCompareMode_1.default.LESS_EQUAL] = this._gl.LEQUAL;\n            this._compareModeDictionary[ContextGLCompareMode_1.default.NEVER] = this._gl.NEVER;\n            this._compareModeDictionary[ContextGLCompareMode_1.default.NOT_EQUAL] = this._gl.NOTEQUAL;\n            this._stencilActionDictionary[ContextGLStencilAction_1.default.DECREMENT_SATURATE] = this._gl.DECR;\n            this._stencilActionDictionary[ContextGLStencilAction_1.default.DECREMENT_WRAP] = this._gl.DECR_WRAP;\n            this._stencilActionDictionary[ContextGLStencilAction_1.default.INCREMENT_SATURATE] = this._gl.INCR;\n            this._stencilActionDictionary[ContextGLStencilAction_1.default.INCREMENT_WRAP] = this._gl.INCR_WRAP;\n            this._stencilActionDictionary[ContextGLStencilAction_1.default.INVERT] = this._gl.INVERT;\n            this._stencilActionDictionary[ContextGLStencilAction_1.default.KEEP] = this._gl.KEEP;\n            this._stencilActionDictionary[ContextGLStencilAction_1.default.SET] = this._gl.REPLACE;\n            this._stencilActionDictionary[ContextGLStencilAction_1.default.ZERO] = this._gl.ZERO;\n            this._textureIndexDictionary[0] = this._gl.TEXTURE0;\n            this._textureIndexDictionary[1] = this._gl.TEXTURE1;\n            this._textureIndexDictionary[2] = this._gl.TEXTURE2;\n            this._textureIndexDictionary[3] = this._gl.TEXTURE3;\n            this._textureIndexDictionary[4] = this._gl.TEXTURE4;\n            this._textureIndexDictionary[5] = this._gl.TEXTURE5;\n            this._textureIndexDictionary[6] = this._gl.TEXTURE6;\n            this._textureIndexDictionary[7] = this._gl.TEXTURE7;\n            this._textureTypeDictionary[\"texture2d\"] = this._gl.TEXTURE_2D;\n            this._textureTypeDictionary[\"textureCube\"] = this._gl.TEXTURE_CUBE_MAP;\n            this._wrapDictionary[ContextGLWrapMode_1.default.REPEAT] = this._gl.REPEAT;\n            this._wrapDictionary[ContextGLWrapMode_1.default.CLAMP] = this._gl.CLAMP_TO_EDGE;\n            this._filterDictionary[ContextGLTextureFilter_1.default.LINEAR] = this._gl.LINEAR;\n            this._filterDictionary[ContextGLTextureFilter_1.default.NEAREST] = this._gl.NEAREST;\n            this._mipmapFilterDictionary[ContextGLTextureFilter_1.default.LINEAR] = new Object();\n            this._mipmapFilterDictionary[ContextGLTextureFilter_1.default.LINEAR][ContextGLMipFilter_1.default.MIPNEAREST] = this._gl.LINEAR_MIPMAP_NEAREST;\n            this._mipmapFilterDictionary[ContextGLTextureFilter_1.default.LINEAR][ContextGLMipFilter_1.default.MIPLINEAR] = this._gl.LINEAR_MIPMAP_LINEAR;\n            this._mipmapFilterDictionary[ContextGLTextureFilter_1.default.LINEAR][ContextGLMipFilter_1.default.MIPNONE] = this._gl.LINEAR;\n            this._mipmapFilterDictionary[ContextGLTextureFilter_1.default.NEAREST] = new Object();\n            this._mipmapFilterDictionary[ContextGLTextureFilter_1.default.NEAREST][ContextGLMipFilter_1.default.MIPNEAREST] = this._gl.NEAREST_MIPMAP_NEAREST;\n            this._mipmapFilterDictionary[ContextGLTextureFilter_1.default.NEAREST][ContextGLMipFilter_1.default.MIPLINEAR] = this._gl.NEAREST_MIPMAP_LINEAR;\n            this._mipmapFilterDictionary[ContextGLTextureFilter_1.default.NEAREST][ContextGLMipFilter_1.default.MIPNONE] = this._gl.NEAREST;\n            this._vertexBufferPropertiesDictionary[ContextGLVertexBufferFormat_1.default.FLOAT_1] = new VertexBufferProperties(1, this._gl.FLOAT, false);\n            this._vertexBufferPropertiesDictionary[ContextGLVertexBufferFormat_1.default.FLOAT_2] = new VertexBufferProperties(2, this._gl.FLOAT, false);\n            this._vertexBufferPropertiesDictionary[ContextGLVertexBufferFormat_1.default.FLOAT_3] = new VertexBufferProperties(3, this._gl.FLOAT, false);\n            this._vertexBufferPropertiesDictionary[ContextGLVertexBufferFormat_1.default.FLOAT_4] = new VertexBufferProperties(4, this._gl.FLOAT, false);\n            this._vertexBufferPropertiesDictionary[ContextGLVertexBufferFormat_1.default.BYTE_1] = new VertexBufferProperties(1, this._gl.BYTE, true);\n            this._vertexBufferPropertiesDictionary[ContextGLVertexBufferFormat_1.default.BYTE_2] = new VertexBufferProperties(2, this._gl.BYTE, true);\n            this._vertexBufferPropertiesDictionary[ContextGLVertexBufferFormat_1.default.BYTE_3] = new VertexBufferProperties(3, this._gl.BYTE, true);\n            this._vertexBufferPropertiesDictionary[ContextGLVertexBufferFormat_1.default.BYTE_4] = new VertexBufferProperties(4, this._gl.BYTE, true);\n            this._vertexBufferPropertiesDictionary[ContextGLVertexBufferFormat_1.default.UNSIGNED_BYTE_1] = new VertexBufferProperties(1, this._gl.UNSIGNED_BYTE, true);\n            this._vertexBufferPropertiesDictionary[ContextGLVertexBufferFormat_1.default.UNSIGNED_BYTE_2] = new VertexBufferProperties(2, this._gl.UNSIGNED_BYTE, true);\n            this._vertexBufferPropertiesDictionary[ContextGLVertexBufferFormat_1.default.UNSIGNED_BYTE_3] = new VertexBufferProperties(3, this._gl.UNSIGNED_BYTE, true);\n            this._vertexBufferPropertiesDictionary[ContextGLVertexBufferFormat_1.default.UNSIGNED_BYTE_4] = new VertexBufferProperties(4, this._gl.UNSIGNED_BYTE, true);\n            this._vertexBufferPropertiesDictionary[ContextGLVertexBufferFormat_1.default.SHORT_1] = new VertexBufferProperties(1, this._gl.SHORT, true);\n            this._vertexBufferPropertiesDictionary[ContextGLVertexBufferFormat_1.default.SHORT_2] = new VertexBufferProperties(2, this._gl.SHORT, true);\n            this._vertexBufferPropertiesDictionary[ContextGLVertexBufferFormat_1.default.SHORT_3] = new VertexBufferProperties(3, this._gl.SHORT, true);\n            this._vertexBufferPropertiesDictionary[ContextGLVertexBufferFormat_1.default.SHORT_4] = new VertexBufferProperties(4, this._gl.SHORT, true);\n            this._vertexBufferPropertiesDictionary[ContextGLVertexBufferFormat_1.default.UNSIGNED_SHORT_1] = new VertexBufferProperties(1, this._gl.UNSIGNED_SHORT, true);\n            this._vertexBufferPropertiesDictionary[ContextGLVertexBufferFormat_1.default.UNSIGNED_SHORT_2] = new VertexBufferProperties(2, this._gl.UNSIGNED_SHORT, true);\n            this._vertexBufferPropertiesDictionary[ContextGLVertexBufferFormat_1.default.UNSIGNED_SHORT_3] = new VertexBufferProperties(3, this._gl.UNSIGNED_SHORT, true);\n            this._vertexBufferPropertiesDictionary[ContextGLVertexBufferFormat_1.default.UNSIGNED_SHORT_4] = new VertexBufferProperties(4, this._gl.UNSIGNED_SHORT, true);\n            this._stencilCompareMode = this._gl.ALWAYS;\n            this._stencilCompareModeBack = this._gl.ALWAYS;\n            this._stencilCompareModeFront = this._gl.ALWAYS;\n        }\n        else {\n            //this.dispatchEvent( new away.events.AwayEvent( away.events.AwayEvent.INITIALIZE_FAILED, e ) );\n            alert(\"WebGL is not available.\");\n        }\n        //defaults\n        for (var i = 0; i < ContextWebGL.MAX_SAMPLERS; ++i) {\n            this._samplerStates[i] = new SamplerState_1.default();\n            this._samplerStates[i].wrap = this._gl.REPEAT;\n            this._samplerStates[i].filter = this._gl.LINEAR;\n            this._samplerStates[i].mipfilter = this._gl.LINEAR;\n        }\n    }\n    Object.defineProperty(ContextWebGL.prototype, \"container\", {\n        get: function () {\n            return this._container;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(ContextWebGL.prototype, \"standardDerivatives\", {\n        get: function () {\n            return this._standardDerivatives;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    ContextWebGL.prototype.gl = function () {\n        return this._gl;\n    };\n    ContextWebGL.prototype.clear = function (red, green, blue, alpha, depth, stencil, mask) {\n        if (red === void 0) { red = 0; }\n        if (green === void 0) { green = 0; }\n        if (blue === void 0) { blue = 0; }\n        if (alpha === void 0) { alpha = 1; }\n        if (depth === void 0) { depth = 1; }\n        if (stencil === void 0) { stencil = 0; }\n        if (mask === void 0) { mask = ContextGLClearMask_1.default.ALL; }\n        if (!this._drawing) {\n            this.updateBlendStatus();\n            this._drawing = true;\n        }\n        var glmask = 0;\n        if (mask & ContextGLClearMask_1.default.COLOR)\n            glmask |= this._gl.COLOR_BUFFER_BIT;\n        if (mask & ContextGLClearMask_1.default.STENCIL)\n            glmask |= this._gl.STENCIL_BUFFER_BIT;\n        if (mask & ContextGLClearMask_1.default.DEPTH)\n            glmask |= this._gl.DEPTH_BUFFER_BIT;\n        this._gl.clearColor(red, green, blue, alpha);\n        this._gl.clearDepth(depth);\n        this._gl.clearStencil(stencil);\n        this._gl.clear(glmask);\n    };\n    ContextWebGL.prototype.configureBackBuffer = function (width, height, antiAlias, enableDepthAndStencil) {\n        if (enableDepthAndStencil === void 0) { enableDepthAndStencil = true; }\n        this._width = width;\n        this._height = height;\n        if (enableDepthAndStencil) {\n            this._gl.enable(this._gl.STENCIL_TEST);\n            this._gl.enable(this._gl.DEPTH_TEST);\n        }\n        this._gl.viewport['width'] = width;\n        this._gl.viewport['height'] = height;\n        this._gl.viewport(0, 0, width, height);\n    };\n    ContextWebGL.prototype.createCubeTexture = function (size, format, optimizeForRenderToTexture, streamingLevels) {\n        if (streamingLevels === void 0) { streamingLevels = 0; }\n        return new CubeTextureWebGL_1.default(this._gl, size);\n    };\n    ContextWebGL.prototype.createIndexBuffer = function (numIndices) {\n        return new IndexBufferWebGL_1.default(this._gl, numIndices);\n    };\n    ContextWebGL.prototype.createProgram = function () {\n        return new ProgramWebGL_1.default(this._gl);\n    };\n    ContextWebGL.prototype.createTexture = function (width, height, format, optimizeForRenderToTexture, streamingLevels) {\n        if (streamingLevels === void 0) { streamingLevels = 0; }\n        //TODO streaming\n        return new TextureWebGL_1.default(this._gl, width, height);\n    };\n    ContextWebGL.prototype.createVertexBuffer = function (numVertices, dataPerVertex) {\n        return new VertexBufferWebGL_1.default(this._gl, numVertices, dataPerVertex);\n    };\n    ContextWebGL.prototype.dispose = function () {\n        for (var i = 0; i < this._samplerStates.length; ++i)\n            this._samplerStates[i] = null;\n    };\n    ContextWebGL.prototype.drawToBitmapImage2D = function (destination) {\n        var arrayBuffer = new ArrayBuffer(destination.width * destination.height * 4);\n        this._gl.readPixels(0, 0, destination.width, destination.height, this._gl.RGBA, this._gl.UNSIGNED_BYTE, new Uint8Array(arrayBuffer));\n        var byteArray = new ByteArray_1.default();\n        byteArray.setArrayBuffer(arrayBuffer);\n        destination.setPixels(new Rectangle_1.default(0, 0, destination.width, destination.height), byteArray);\n    };\n    ContextWebGL.prototype.drawIndices = function (mode, indexBuffer, firstIndex, numIndices) {\n        if (firstIndex === void 0) { firstIndex = 0; }\n        if (numIndices === void 0) { numIndices = -1; }\n        if (!this._drawing)\n            throw \"Need to clear before drawing if the buffer has not been cleared since the last present() call.\";\n        this._gl.bindBuffer(this._gl.ELEMENT_ARRAY_BUFFER, indexBuffer.glBuffer);\n        this._gl.drawElements(this._drawModeDictionary[mode], (numIndices == -1) ? indexBuffer.numIndices : numIndices, this._gl.UNSIGNED_SHORT, firstIndex * 2);\n    };\n    ContextWebGL.prototype.drawVertices = function (mode, firstVertex, numVertices) {\n        if (firstVertex === void 0) { firstVertex = 0; }\n        if (numVertices === void 0) { numVertices = -1; }\n        if (!this._drawing)\n            throw \"Need to clear before drawing if the buffer has not been cleared since the last present() call.\";\n        this._gl.drawArrays(this._drawModeDictionary[mode], firstVertex, numVertices);\n    };\n    ContextWebGL.prototype.present = function () {\n        this._drawing = false;\n    };\n    ContextWebGL.prototype.setBlendFactors = function (sourceFactor, destinationFactor) {\n        this._blendEnabled = true;\n        this._blendSourceFactor = this._blendFactorDictionary[sourceFactor];\n        this._blendDestinationFactor = this._blendFactorDictionary[destinationFactor];\n        this.updateBlendStatus();\n    };\n    ContextWebGL.prototype.setColorMask = function (red, green, blue, alpha) {\n        this._gl.colorMask(red, green, blue, alpha);\n    };\n    ContextWebGL.prototype.setCulling = function (triangleFaceToCull, coordinateSystem) {\n        if (coordinateSystem === void 0) { coordinateSystem = \"leftHanded\"; }\n        if (triangleFaceToCull == ContextGLTriangleFace_1.default.NONE) {\n            this._gl.disable(this._gl.CULL_FACE);\n        }\n        else {\n            this._gl.enable(this._gl.CULL_FACE);\n            this._gl.cullFace(this.translateTriangleFace(triangleFaceToCull, coordinateSystem));\n        }\n    };\n    // TODO ContextGLCompareMode\n    ContextWebGL.prototype.setDepthTest = function (depthMask, passCompareMode) {\n        this._gl.depthFunc(this._compareModeDictionary[passCompareMode]);\n        this._gl.depthMask(depthMask);\n    };\n    ContextWebGL.prototype.setStencilActions = function (triangleFace, compareMode, actionOnBothPass, actionOnDepthFail, actionOnDepthPassStencilFail, coordinateSystem) {\n        if (triangleFace === void 0) { triangleFace = \"frontAndBack\"; }\n        if (compareMode === void 0) { compareMode = \"always\"; }\n        if (actionOnBothPass === void 0) { actionOnBothPass = \"keep\"; }\n        if (actionOnDepthFail === void 0) { actionOnDepthFail = \"keep\"; }\n        if (actionOnDepthPassStencilFail === void 0) { actionOnDepthPassStencilFail = \"keep\"; }\n        if (coordinateSystem === void 0) { coordinateSystem = \"leftHanded\"; }\n        this._separateStencil = triangleFace != \"frontAndBack\";\n        var compareModeGL = this._compareModeDictionary[compareMode];\n        var fail = this._stencilActionDictionary[actionOnDepthPassStencilFail];\n        var zFail = this._stencilActionDictionary[actionOnDepthFail];\n        var pass = this._stencilActionDictionary[actionOnBothPass];\n        if (!this._separateStencil) {\n            this._stencilCompareMode = compareModeGL;\n            this._gl.stencilFunc(compareModeGL, this._stencilReferenceValue, this._stencilReadMask);\n            this._gl.stencilOp(fail, zFail, pass);\n        }\n        else if (triangleFace == \"back\") {\n            this._stencilCompareModeBack = compareModeGL;\n            this._gl.stencilFuncSeparate(this._gl.BACK, compareModeGL, this._stencilReferenceValue, this._stencilReadMask);\n            this._gl.stencilOpSeparate(this._gl.BACK, fail, zFail, pass);\n        }\n        else if (triangleFace == \"front\") {\n            this._stencilCompareModeFront = compareModeGL;\n            this._gl.stencilFuncSeparate(this._gl.FRONT, compareModeGL, this._stencilReferenceValue, this._stencilReadMask);\n            this._gl.stencilOpSeparate(this._gl.FRONT, fail, zFail, pass);\n        }\n    };\n    ContextWebGL.prototype.setStencilReferenceValue = function (referenceValue, readMask, writeMask) {\n        this._stencilReferenceValue = referenceValue;\n        this._stencilReadMask = readMask;\n        if (this._separateStencil) {\n            this._gl.stencilFuncSeparate(this._gl.FRONT, this._stencilCompareModeFront, referenceValue, readMask);\n            this._gl.stencilFuncSeparate(this._gl.BACK, this._stencilCompareModeBack, referenceValue, readMask);\n        }\n        else {\n            this._gl.stencilFunc(this._stencilCompareMode, referenceValue, readMask);\n        }\n        this._gl.stencilMask(writeMask);\n    };\n    ContextWebGL.prototype.setProgram = function (program) {\n        //TODO decide on construction/reference resposibilities\n        this._currentProgram = program;\n        program.focusProgram();\n    };\n    ContextWebGL.prototype.setProgramConstantsFromMatrix = function (programType, firstRegister, matrix, transposedMatrix) {\n        //this._gl.uniformMatrix4fv(this._gl.getUniformLocation(this._currentProgram.glProgram, this._uniformLocationNameDictionary[programType]), !transposedMatrix, new Float32Array(matrix.rawData));\n        if (transposedMatrix === void 0) { transposedMatrix = false; }\n        //TODO remove special case for WebGL matrix calls?\n        var d = matrix.rawData;\n        if (transposedMatrix) {\n            var raw = Matrix3DUtils_1.default.RAW_DATA_CONTAINER;\n            raw[0] = d[0];\n            raw[1] = d[4];\n            raw[2] = d[8];\n            raw[3] = d[12];\n            raw[4] = d[1];\n            raw[5] = d[5];\n            raw[6] = d[9];\n            raw[7] = d[13];\n            raw[8] = d[2];\n            raw[9] = d[6];\n            raw[10] = d[10];\n            raw[11] = d[14];\n            raw[12] = d[3];\n            raw[13] = d[7];\n            raw[14] = d[11];\n            raw[15] = d[15];\n            this.setProgramConstantsFromArray(programType, firstRegister, raw, 4);\n        }\n        else {\n            this.setProgramConstantsFromArray(programType, firstRegister, d, 4);\n        }\n    };\n    ContextWebGL.prototype.setProgramConstantsFromArray = function (programType, firstRegister, data, numRegisters) {\n        if (numRegisters === void 0) { numRegisters = -1; }\n        var startIndex;\n        for (var i = 0; i < numRegisters; i++) {\n            startIndex = i * 4;\n            this._gl.uniform4f(this._currentProgram.getUniformLocation(programType, (firstRegister + i)), data[startIndex], data[startIndex + 1], data[startIndex + 2], data[startIndex + 3]);\n        }\n    };\n    ContextWebGL.prototype.setScissorRectangle = function (rectangle) {\n        if (!rectangle) {\n            this._gl.disable(this._gl.SCISSOR_TEST);\n            return;\n        }\n        this._gl.enable(this._gl.SCISSOR_TEST);\n        this._gl.scissor(rectangle.x, rectangle.y, rectangle.width, rectangle.height);\n    };\n    ContextWebGL.prototype.setTextureAt = function (sampler, texture) {\n        var samplerState = this._samplerStates[sampler];\n        if (this._activeTexture != sampler && (texture || samplerState.type)) {\n            this._activeTexture = sampler;\n            this._gl.activeTexture(this._textureIndexDictionary[sampler]);\n        }\n        if (!texture) {\n            if (samplerState.type) {\n                this._gl.bindTexture(samplerState.type, null);\n                samplerState.type = null;\n            }\n            return;\n        }\n        var textureType = this._textureTypeDictionary[texture.textureType];\n        samplerState.type = textureType;\n        this._gl.bindTexture(textureType, texture.glTexture);\n        this._gl.uniform1i(this._currentProgram.getUniformLocation(ContextGLProgramType_1.default.SAMPLER, sampler), sampler);\n        this._gl.texParameteri(textureType, this._gl.TEXTURE_WRAP_S, samplerState.wrap);\n        this._gl.texParameteri(textureType, this._gl.TEXTURE_WRAP_T, samplerState.wrap);\n        this._gl.texParameteri(textureType, this._gl.TEXTURE_MAG_FILTER, samplerState.filter);\n        this._gl.texParameteri(textureType, this._gl.TEXTURE_MIN_FILTER, samplerState.mipfilter);\n    };\n    ContextWebGL.prototype.setSamplerStateAt = function (sampler, wrap, filter, mipfilter) {\n        if (0 <= sampler && sampler < ContextWebGL.MAX_SAMPLERS) {\n            this._samplerStates[sampler].wrap = this._wrapDictionary[wrap];\n            this._samplerStates[sampler].filter = this._filterDictionary[filter];\n            this._samplerStates[sampler].mipfilter = this._mipmapFilterDictionary[filter][mipfilter];\n        }\n        else {\n            throw \"Sampler is out of bounds.\";\n        }\n    };\n    ContextWebGL.prototype.setVertexBufferAt = function (index, buffer, bufferOffset, format) {\n        if (bufferOffset === void 0) { bufferOffset = 0; }\n        if (format === void 0) { format = 4; }\n        var location = this._currentProgram ? this._currentProgram.getAttribLocation(index) : -1;\n        if (!buffer) {\n            if (location > -1)\n                this._gl.disableVertexAttribArray(location);\n            return;\n        }\n        //buffer may not have changed if concatenated buffers are being used\n        if (this._currentArrayBuffer != buffer) {\n            this._currentArrayBuffer = buffer;\n            this._gl.bindBuffer(this._gl.ARRAY_BUFFER, buffer ? buffer.glBuffer : null);\n        }\n        var properties = this._vertexBufferPropertiesDictionary[format];\n        this._gl.enableVertexAttribArray(location);\n        this._gl.vertexAttribPointer(location, properties.size, properties.type, properties.normalized, buffer.dataPerVertex, bufferOffset);\n    };\n    ContextWebGL.prototype.setRenderToTexture = function (target, enableDepthAndStencil, antiAlias, surfaceSelector) {\n        if (enableDepthAndStencil === void 0) { enableDepthAndStencil = false; }\n        if (antiAlias === void 0) { antiAlias = 0; }\n        if (surfaceSelector === void 0) { surfaceSelector = 0; }\n        var texture = target;\n        var frameBuffer = texture.frameBuffer;\n        this._gl.bindFramebuffer(this._gl.FRAMEBUFFER, frameBuffer);\n        if (enableDepthAndStencil) {\n            this._gl.enable(this._gl.STENCIL_TEST);\n            this._gl.enable(this._gl.DEPTH_TEST);\n        }\n        this._gl.viewport(0, 0, texture.width, texture.height);\n    };\n    ContextWebGL.prototype.setRenderToBackBuffer = function () {\n        this._gl.bindFramebuffer(this._gl.FRAMEBUFFER, null);\n    };\n    ContextWebGL.prototype.updateBlendStatus = function () {\n        if (this._blendEnabled) {\n            this._gl.enable(this._gl.BLEND);\n            this._gl.blendEquation(this._gl.FUNC_ADD);\n            this._gl.blendFunc(this._blendSourceFactor, this._blendDestinationFactor);\n        }\n        else {\n            this._gl.disable(this._gl.BLEND);\n        }\n    };\n    ContextWebGL.prototype.translateTriangleFace = function (triangleFace, coordinateSystem) {\n        switch (triangleFace) {\n            case ContextGLTriangleFace_1.default.BACK:\n                return (coordinateSystem == \"leftHanded\") ? this._gl.FRONT : this._gl.BACK;\n            case ContextGLTriangleFace_1.default.FRONT:\n                return (coordinateSystem == \"leftHanded\") ? this._gl.BACK : this._gl.FRONT;\n            case ContextGLTriangleFace_1.default.FRONT_AND_BACK:\n                return this._gl.FRONT_AND_BACK;\n            default:\n                throw \"Unknown ContextGLTriangleFace type.\"; // TODO error\n        }\n    };\n    ContextWebGL.MAX_SAMPLERS = 8;\n    ContextWebGL._float4 = new Float32Array(4);\n    ContextWebGL.modulo = 0;\n    return ContextWebGL;\n}());\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.default = ContextWebGL;\nvar VertexBufferProperties = (function () {\n    function VertexBufferProperties(size, type, normalized) {\n        this.size = size;\n        this.type = type;\n        this.normalized = normalized;\n    }\n    return VertexBufferProperties;\n}());\n\n},{\"../base/ContextGLBlendFactor\":\"awayjs-stagegl/lib/base/ContextGLBlendFactor\",\"../base/ContextGLClearMask\":\"awayjs-stagegl/lib/base/ContextGLClearMask\",\"../base/ContextGLCompareMode\":\"awayjs-stagegl/lib/base/ContextGLCompareMode\",\"../base/ContextGLDrawMode\":\"awayjs-stagegl/lib/base/ContextGLDrawMode\",\"../base/ContextGLMipFilter\":\"awayjs-stagegl/lib/base/ContextGLMipFilter\",\"../base/ContextGLProgramType\":\"awayjs-stagegl/lib/base/ContextGLProgramType\",\"../base/ContextGLStencilAction\":\"awayjs-stagegl/lib/base/ContextGLStencilAction\",\"../base/ContextGLTextureFilter\":\"awayjs-stagegl/lib/base/ContextGLTextureFilter\",\"../base/ContextGLTriangleFace\":\"awayjs-stagegl/lib/base/ContextGLTriangleFace\",\"../base/ContextGLVertexBufferFormat\":\"awayjs-stagegl/lib/base/ContextGLVertexBufferFormat\",\"../base/ContextGLWrapMode\":\"awayjs-stagegl/lib/base/ContextGLWrapMode\",\"../base/CubeTextureWebGL\":\"awayjs-stagegl/lib/base/CubeTextureWebGL\",\"../base/IndexBufferWebGL\":\"awayjs-stagegl/lib/base/IndexBufferWebGL\",\"../base/ProgramWebGL\":\"awayjs-stagegl/lib/base/ProgramWebGL\",\"../base/SamplerState\":\"awayjs-stagegl/lib/base/SamplerState\",\"../base/TextureWebGL\":\"awayjs-stagegl/lib/base/TextureWebGL\",\"../base/VertexBufferWebGL\":\"awayjs-stagegl/lib/base/VertexBufferWebGL\",\"awayjs-core/lib/geom/Matrix3DUtils\":undefined,\"awayjs-core/lib/geom/Rectangle\":undefined,\"awayjs-core/lib/utils/ByteArray\":undefined}],\"awayjs-stagegl/lib/base/CubeTextureFlash\":[function(require,module,exports){\n\"use strict\";\nvar __extends = (this && this.__extends) || function (d, b) {\n    for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p];\n    function __() { this.constructor = d; }\n    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n};\nvar ByteArrayBase_1 = require(\"awayjs-core/lib/utils/ByteArrayBase\");\nvar OpCodes_1 = require(\"../base/OpCodes\");\nvar ResourceBaseFlash_1 = require(\"../base/ResourceBaseFlash\");\nvar CubeTextureFlash = (function (_super) {\n    __extends(CubeTextureFlash, _super);\n    function CubeTextureFlash(context, size, format, forRTT, streaming) {\n        if (streaming === void 0) { streaming = false; }\n        _super.call(this);\n        this._context = context;\n        this._size = size;\n        this._context.addStream(String.fromCharCode(OpCodes_1.default.initCubeTexture, (forRTT ? OpCodes_1.default.trueValue : OpCodes_1.default.falseValue)) + size + \",\" + streaming + \",\" + format + \"$\");\n        this._pId = this._context.execute();\n        this._context._iAddResource(this);\n    }\n    Object.defineProperty(CubeTextureFlash.prototype, \"size\", {\n        get: function () {\n            return this._size;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    CubeTextureFlash.prototype.dispose = function () {\n        this._context.addStream(String.fromCharCode(OpCodes_1.default.disposeCubeTexture) + this._pId.toString() + \",\");\n        this._context.execute();\n        this._context._iRemoveResource(this);\n        this._context = null;\n    };\n    CubeTextureFlash.prototype.uploadFromData = function (data, side, miplevel) {\n        if (miplevel === void 0) { miplevel = 0; }\n        if (data instanceof HTMLImageElement) {\n            var can = document.createElement(\"canvas\");\n            var w = data.width;\n            var h = data.height;\n            can.width = w;\n            can.height = h;\n            var ctx = can.getContext(\"2d\");\n            ctx.drawImage(data, 0, 0);\n            data = ctx.getImageData(0, 0, w, h).data;\n        }\n        var pos = 0;\n        var bytes = ByteArrayBase_1.default.internalGetBase64String(data.length, function () {\n            return data[pos++];\n        }, null);\n        this._context.addStream(String.fromCharCode(OpCodes_1.default.uploadBytesCubeTexture) + this._pId + \",\" + miplevel + \",\" + side + \",\" + (this.size >> miplevel) + \",\" + bytes + \"%\");\n        this._context.execute();\n    };\n    CubeTextureFlash.prototype.uploadCompressedTextureFromByteArray = function (data, byteArrayOffset /*uint*/, async) {\n        if (async === void 0) { async = false; }\n    };\n    return CubeTextureFlash;\n}(ResourceBaseFlash_1.default));\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.default = CubeTextureFlash;\n\n},{\"../base/OpCodes\":\"awayjs-stagegl/lib/base/OpCodes\",\"../base/ResourceBaseFlash\":\"awayjs-stagegl/lib/base/ResourceBaseFlash\",\"awayjs-core/lib/utils/ByteArrayBase\":undefined}],\"awayjs-stagegl/lib/base/CubeTextureWebGL\":[function(require,module,exports){\n\"use strict\";\nvar __extends = (this && this.__extends) || function (d, b) {\n    for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p];\n    function __() { this.constructor = d; }\n    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n};\nvar TextureBaseWebGL_1 = require(\"../base/TextureBaseWebGL\");\nvar CubeTextureWebGL = (function (_super) {\n    __extends(CubeTextureWebGL, _super);\n    function CubeTextureWebGL(gl, size) {\n        _super.call(this, gl);\n        this._textureSelectorDictionary = new Array(6);\n        this.textureType = \"textureCube\";\n        this._size = size;\n        this._texture = this._gl.createTexture();\n        this._textureSelectorDictionary[0] = gl.TEXTURE_CUBE_MAP_POSITIVE_X;\n        this._textureSelectorDictionary[1] = gl.TEXTURE_CUBE_MAP_NEGATIVE_X;\n        this._textureSelectorDictionary[2] = gl.TEXTURE_CUBE_MAP_POSITIVE_Y;\n        this._textureSelectorDictionary[3] = gl.TEXTURE_CUBE_MAP_NEGATIVE_Y;\n        this._textureSelectorDictionary[4] = gl.TEXTURE_CUBE_MAP_POSITIVE_Z;\n        this._textureSelectorDictionary[5] = gl.TEXTURE_CUBE_MAP_NEGATIVE_Z;\n    }\n    CubeTextureWebGL.prototype.dispose = function () {\n        this._gl.deleteTexture(this._texture);\n    };\n    CubeTextureWebGL.prototype.uploadFromData = function (data, side, miplevel) {\n        if (miplevel === void 0) { miplevel = 0; }\n        this._gl.bindTexture(this._gl.TEXTURE_CUBE_MAP, this._texture);\n        this._gl.texImage2D(this._textureSelectorDictionary[side], miplevel, this._gl.RGBA, this._gl.RGBA, this._gl.UNSIGNED_BYTE, data);\n        this._gl.bindTexture(this._gl.TEXTURE_CUBE_MAP, null);\n    };\n    CubeTextureWebGL.prototype.uploadCompressedTextureFromByteArray = function (data, byteArrayOffset /*uint*/, async) {\n        if (async === void 0) { async = false; }\n    };\n    Object.defineProperty(CubeTextureWebGL.prototype, \"size\", {\n        get: function () {\n            return this._size;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(CubeTextureWebGL.prototype, \"glTexture\", {\n        get: function () {\n            return this._texture;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    return CubeTextureWebGL;\n}(TextureBaseWebGL_1.default));\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.default = CubeTextureWebGL;\n\n},{\"../base/TextureBaseWebGL\":\"awayjs-stagegl/lib/base/TextureBaseWebGL\"}],\"awayjs-stagegl/lib/base/IContextGL\":[function(require,module,exports){\n\"use strict\";\n\n},{}],\"awayjs-stagegl/lib/base/ICubeTexture\":[function(require,module,exports){\n\"use strict\";\n\n},{}],\"awayjs-stagegl/lib/base/IIndexBuffer\":[function(require,module,exports){\n\"use strict\";\n\n},{}],\"awayjs-stagegl/lib/base/IProgram\":[function(require,module,exports){\n\"use strict\";\n\n},{}],\"awayjs-stagegl/lib/base/ITextureBase\":[function(require,module,exports){\n\"use strict\";\n\n},{}],\"awayjs-stagegl/lib/base/ITexture\":[function(require,module,exports){\n\"use strict\";\n\n},{}],\"awayjs-stagegl/lib/base/IVertexBuffer\":[function(require,module,exports){\n\"use strict\";\n\n},{}],\"awayjs-stagegl/lib/base/IndexBufferFlash\":[function(require,module,exports){\n\"use strict\";\nvar __extends = (this && this.__extends) || function (d, b) {\n    for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p];\n    function __() { this.constructor = d; }\n    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n};\nvar OpCodes_1 = require(\"../base/OpCodes\");\nvar ResourceBaseFlash_1 = require(\"../base/ResourceBaseFlash\");\nvar IndexBufferFlash = (function (_super) {\n    __extends(IndexBufferFlash, _super);\n    function IndexBufferFlash(context, numIndices) {\n        _super.call(this);\n        this._context = context;\n        this._numIndices = numIndices;\n        this._context.addStream(String.fromCharCode(OpCodes_1.default.initIndexBuffer, numIndices + OpCodes_1.default.intMask));\n        this._pId = this._context.execute();\n        this._context._iAddResource(this);\n    }\n    IndexBufferFlash.prototype.uploadFromArray = function (data, startOffset, count) {\n        this._context.addStream(String.fromCharCode(OpCodes_1.default.uploadArrayIndexBuffer, this._pId + OpCodes_1.default.intMask) + data.join() + \"#\" + startOffset + \",\" + count + \",\");\n        this._context.execute();\n    };\n    IndexBufferFlash.prototype.uploadFromByteArray = function (data, startOffset, count) {\n    };\n    IndexBufferFlash.prototype.dispose = function () {\n        this._context.addStream(String.fromCharCode(OpCodes_1.default.disposeIndexBuffer, this._pId + OpCodes_1.default.intMask));\n        this._context.execute();\n        this._context._iRemoveResource(this);\n        this._context = null;\n    };\n    Object.defineProperty(IndexBufferFlash.prototype, \"numIndices\", {\n        get: function () {\n            return this._numIndices;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    return IndexBufferFlash;\n}(ResourceBaseFlash_1.default));\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.default = IndexBufferFlash;\n\n},{\"../base/OpCodes\":\"awayjs-stagegl/lib/base/OpCodes\",\"../base/ResourceBaseFlash\":\"awayjs-stagegl/lib/base/ResourceBaseFlash\"}],\"awayjs-stagegl/lib/base/IndexBufferSoftware\":[function(require,module,exports){\n\"use strict\";\nvar IndexBufferSoftware = (function () {\n    function IndexBufferSoftware(numIndices) {\n        this._numIndices = numIndices;\n    }\n    IndexBufferSoftware.prototype.uploadFromArray = function (data, startOffset, count) {\n        this._startOffset = startOffset * 2;\n        this._data = new Uint16Array(data);\n    };\n    IndexBufferSoftware.prototype.uploadFromByteArray = function (data, startOffset, count) {\n        this._startOffset = startOffset * 2;\n        this._data = new Uint16Array(data);\n    };\n    IndexBufferSoftware.prototype.dispose = function () {\n        this._data = null;\n    };\n    Object.defineProperty(IndexBufferSoftware.prototype, \"numIndices\", {\n        get: function () {\n            return this._numIndices;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(IndexBufferSoftware.prototype, \"data\", {\n        get: function () {\n            return this._data;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(IndexBufferSoftware.prototype, \"startOffset\", {\n        get: function () {\n            return this._startOffset;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    return IndexBufferSoftware;\n}());\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.default = IndexBufferSoftware;\n\n},{}],\"awayjs-stagegl/lib/base/IndexBufferWebGL\":[function(require,module,exports){\n\"use strict\";\nvar IndexBufferWebGL = (function () {\n    function IndexBufferWebGL(gl, numIndices) {\n        this._gl = gl;\n        this._buffer = this._gl.createBuffer();\n        this._numIndices = numIndices;\n    }\n    IndexBufferWebGL.prototype.uploadFromArray = function (data, startOffset, count) {\n        this._gl.bindBuffer(this._gl.ELEMENT_ARRAY_BUFFER, this._buffer);\n        if (startOffset)\n            this._gl.bufferSubData(this._gl.ELEMENT_ARRAY_BUFFER, startOffset * 2, new Uint16Array(data));\n        else\n            this._gl.bufferData(this._gl.ELEMENT_ARRAY_BUFFER, new Uint16Array(data), this._gl.STATIC_DRAW);\n    };\n    IndexBufferWebGL.prototype.uploadFromByteArray = function (data, startOffset, count) {\n        this._gl.bindBuffer(this._gl.ELEMENT_ARRAY_BUFFER, this._buffer);\n        if (startOffset)\n            this._gl.bufferSubData(this._gl.ELEMENT_ARRAY_BUFFER, startOffset * 2, data);\n        else\n            this._gl.bufferData(this._gl.ELEMENT_ARRAY_BUFFER, data, this._gl.STATIC_DRAW);\n    };\n    IndexBufferWebGL.prototype.dispose = function () {\n        this._gl.deleteBuffer(this._buffer);\n    };\n    Object.defineProperty(IndexBufferWebGL.prototype, \"numIndices\", {\n        get: function () {\n            return this._numIndices;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(IndexBufferWebGL.prototype, \"glBuffer\", {\n        get: function () {\n            return this._buffer;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    return IndexBufferWebGL;\n}());\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.default = IndexBufferWebGL;\n\n},{}],\"awayjs-stagegl/lib/base/OpCodes\":[function(require,module,exports){\n\"use strict\";\nvar OpCodes = (function () {\n    function OpCodes() {\n    }\n    OpCodes.trueValue = 32;\n    OpCodes.falseValue = 33;\n    OpCodes.intMask = 63;\n    OpCodes.drawTriangles = 41;\n    OpCodes.setProgramConstant = 42;\n    OpCodes.setProgram = 43;\n    OpCodes.present = 44;\n    OpCodes.clear = 45;\n    OpCodes.initProgram = 46;\n    OpCodes.initVertexBuffer = 47;\n    OpCodes.initIndexBuffer = 48;\n    OpCodes.configureBackBuffer = 49;\n    OpCodes.uploadArrayIndexBuffer = 50;\n    OpCodes.uploadArrayVertexBuffer = 51;\n    OpCodes.uploadAGALBytesProgram = 52;\n    OpCodes.setVertexBufferAt = 53;\n    OpCodes.uploadBytesIndexBuffer = 54;\n    OpCodes.uploadBytesVertexBuffer = 55;\n    OpCodes.setColorMask = 56;\n    OpCodes.setDepthTest = 57;\n    OpCodes.disposeProgram = 58;\n    OpCodes.disposeContext = 59;\n    // must skip 60 '<' as it will invalidate xml being passed over the bridge\n    OpCodes.disposeVertexBuffer = 61;\n    // must skip 62 '>' as it will invalidate xml being passed over the bridge\n    OpCodes.disposeIndexBuffer = 63;\n    OpCodes.initTexture = 64;\n    OpCodes.setTextureAt = 65;\n    OpCodes.uploadBytesTexture = 66;\n    OpCodes.disposeTexture = 67;\n    OpCodes.setCulling = 68;\n    OpCodes.setScissorRect = 69;\n    OpCodes.clearScissorRect = 70;\n    OpCodes.setBlendFactors = 71;\n    OpCodes.setRenderToTexture = 72;\n    OpCodes.clearTextureAt = 73;\n    OpCodes.clearVertexBufferAt = 74;\n    OpCodes.setStencilActions = 75;\n    OpCodes.setStencilReferenceValue = 76;\n    OpCodes.initCubeTexture = 77;\n    OpCodes.disposeCubeTexture = 78;\n    OpCodes.uploadBytesCubeTexture = 79;\n    OpCodes.clearRenderToTexture = 80;\n    OpCodes.enableErrorChecking = 81;\n    return OpCodes;\n}());\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.default = OpCodes;\n\n},{}],\"awayjs-stagegl/lib/base/ProgramFlash\":[function(require,module,exports){\n\"use strict\";\nvar __extends = (this && this.__extends) || function (d, b) {\n    for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p];\n    function __() { this.constructor = d; }\n    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n};\nvar ContextStage3D_1 = require(\"../base/ContextStage3D\");\nvar OpCodes_1 = require(\"../base/OpCodes\");\nvar ResourceBaseFlash_1 = require(\"../base/ResourceBaseFlash\");\nvar ProgramFlash = (function (_super) {\n    __extends(ProgramFlash, _super);\n    function ProgramFlash(context) {\n        _super.call(this);\n        this._context = context;\n        this._context.addStream(String.fromCharCode(OpCodes_1.default.initProgram));\n        this._pId = this._context.execute();\n        this._context._iAddResource(this);\n    }\n    ProgramFlash.prototype.upload = function (vertexProgram, fragmentProgram) {\n        this._context.addStream(String.fromCharCode(OpCodes_1.default.uploadAGALBytesProgram, this._pId + OpCodes_1.default.intMask) + vertexProgram.readBase64String(vertexProgram.length) + \"%\" + fragmentProgram.readBase64String(fragmentProgram.length) + \"%\");\n        if (ContextStage3D_1.default.debug)\n            this._context.execute();\n    };\n    ProgramFlash.prototype.dispose = function () {\n        this._context.addStream(String.fromCharCode(OpCodes_1.default.disposeProgram, this._pId + OpCodes_1.default.intMask));\n        this._context.execute();\n        this._context._iRemoveResource(this);\n        this._context = null;\n    };\n    return ProgramFlash;\n}(ResourceBaseFlash_1.default));\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.default = ProgramFlash;\n\n},{\"../base/ContextStage3D\":\"awayjs-stagegl/lib/base/ContextStage3D\",\"../base/OpCodes\":\"awayjs-stagegl/lib/base/OpCodes\",\"../base/ResourceBaseFlash\":\"awayjs-stagegl/lib/base/ResourceBaseFlash\"}],\"awayjs-stagegl/lib/base/ProgramSoftware\":[function(require,module,exports){\n\"use strict\";\nvar AGALTokenizer_1 = require(\"../aglsl/AGALTokenizer\");\nvar ProgramVOSoftware_1 = require(\"../base/ProgramVOSoftware\");\nvar Matrix3D_1 = require(\"awayjs-core/lib/geom/Matrix3D\");\nvar Vector3D_1 = require(\"awayjs-core/lib/geom/Vector3D\");\nvar ContextGLVertexBufferFormat_1 = require(\"../base/ContextGLVertexBufferFormat\");\nvar SoftwareSamplerState_1 = require(\"../base/SoftwareSamplerState\");\nvar ContextGLTextureFilter_1 = require(\"../base/ContextGLTextureFilter\");\nvar ContextGLMipFilter_1 = require(\"../base/ContextGLMipFilter\");\nvar ContextGLWrapMode_1 = require(\"../base/ContextGLWrapMode\");\nvar ProgramSoftware = (function () {\n    function ProgramSoftware() {\n    }\n    ProgramSoftware.prototype.upload = function (vertexProgram, fragmentProgram) {\n        this._vertexDescr = ProgramSoftware._tokenizer.decribeAGALByteArray(vertexProgram);\n        this._fragmentDescr = ProgramSoftware._tokenizer.decribeAGALByteArray(fragmentProgram);\n    };\n    ProgramSoftware.prototype.dispose = function () {\n        this._vertexDescr = null;\n        this._fragmentDescr = null;\n    };\n    ProgramSoftware.prototype.vertex = function (contextSoftware, vertexIndex) {\n        var vo = new ProgramVOSoftware_1.default();\n        //parse attributes\n        var i;\n        for (i = 0; i < contextSoftware._vertexBuffers.length; i++) {\n            var buffer = contextSoftware._vertexBuffers[i];\n            if (!buffer)\n                continue;\n            var attribute = new Vector3D_1.default(0, 0, 0, 1);\n            var index = contextSoftware._vertexBufferOffsets[i] / 4 + vertexIndex * buffer.attributesPerVertex;\n            if (contextSoftware._vertexBufferFormats[i] == ContextGLVertexBufferFormat_1.default.UNSIGNED_BYTE_4) {\n                attribute.x = buffer.uintData[index * 4];\n                attribute.y = buffer.uintData[index * 4 + 1];\n                attribute.z = buffer.uintData[index * 4 + 2];\n                attribute.w = buffer.uintData[index * 4 + 3];\n            }\n            if (contextSoftware._vertexBufferFormats[i] == ContextGLVertexBufferFormat_1.default.FLOAT_1) {\n                attribute.x = buffer.data[index];\n            }\n            if (contextSoftware._vertexBufferFormats[i] == ContextGLVertexBufferFormat_1.default.FLOAT_2) {\n                attribute.x = buffer.data[index];\n                attribute.y = buffer.data[index + 1];\n            }\n            if (contextSoftware._vertexBufferFormats[i] == ContextGLVertexBufferFormat_1.default.FLOAT_3) {\n                attribute.x = buffer.data[index];\n                attribute.y = buffer.data[index + 1];\n                attribute.z = buffer.data[index + 2];\n            }\n            if (contextSoftware._vertexBufferFormats[i] == ContextGLVertexBufferFormat_1.default.FLOAT_4) {\n                attribute.x = buffer.data[index];\n                attribute.y = buffer.data[index + 1];\n                attribute.z = buffer.data[index + 2];\n                attribute.w = buffer.data[index + 3];\n            }\n            vo.attributes[i] = attribute;\n        }\n        var len = this._vertexDescr.tokens.length;\n        for (var i = 0; i < len; i++) {\n            var token = this._vertexDescr.tokens[i];\n            ProgramSoftware._opCodeFunc[token.opcode](vo, this._vertexDescr, token.dest, token.a, token.b, contextSoftware);\n        }\n        return vo;\n    };\n    ProgramSoftware.prototype.fragment = function (context, clip, clipRight, clipBottom, vo0, vo1, vo2, fragDepth) {\n        var vo = new ProgramVOSoftware_1.default();\n        vo.outputDepth = fragDepth;\n        for (var i = 0; i < vo0.varying.length; i++) {\n            var varying0 = vo0.varying[i];\n            var varying1 = vo1.varying[i];\n            var varying2 = vo2.varying[i];\n            if (!varying0 || !varying1 || !varying2)\n                continue;\n            var result = vo.varying[i] = new Vector3D_1.default(0, 0, 0, 1);\n            result.x = clip.x * varying0.x + clip.y * varying1.x + clip.z * varying2.x;\n            result.y = clip.x * varying0.y + clip.y * varying1.y + clip.z * varying2.y;\n            result.z = clip.x * varying0.z + clip.y * varying1.z + clip.z * varying2.z;\n            result.w = clip.x * varying0.w + clip.y * varying1.w + clip.z * varying2.w;\n            var derivativeX = vo.derivativeX[i] = new Vector3D_1.default();\n            derivativeX.x = clipRight.x * varying0.x + clipRight.y * varying1.x + clipRight.z * varying2.x;\n            derivativeX.y = clipRight.x * varying0.y + clipRight.y * varying1.y + clipRight.z * varying2.y;\n            derivativeX.z = clipRight.x * varying0.z + clipRight.y * varying1.z + clipRight.z * varying2.z;\n            derivativeX.w = clipRight.x * varying0.w + clipRight.y * varying1.w + clipRight.z * varying2.w;\n            derivativeX.x -= result.x;\n            derivativeX.y -= result.y;\n            derivativeX.z -= result.z;\n            derivativeX.w -= result.w;\n            var derivativeY = vo.derivativeY[i] = new Vector3D_1.default();\n            derivativeY.x = clipBottom.x * varying0.x + clipBottom.y * varying1.x + clipBottom.z * varying2.x;\n            derivativeY.y = clipBottom.x * varying0.y + clipBottom.y * varying1.y + clipBottom.z * varying2.y;\n            derivativeY.z = clipBottom.x * varying0.z + clipBottom.y * varying1.z + clipBottom.z * varying2.z;\n            derivativeY.w = clipBottom.x * varying0.w + clipBottom.y * varying1.w + clipBottom.z * varying2.w;\n            derivativeY.x -= result.x;\n            derivativeY.y -= result.y;\n            derivativeY.z -= result.z;\n            derivativeY.w -= result.w;\n        }\n        var len = this._fragmentDescr.tokens.length;\n        for (var i = 0; i < len; i++) {\n            var token = this._fragmentDescr.tokens[i];\n            ProgramSoftware._opCodeFunc[token.opcode](vo, this._fragmentDescr, token.dest, token.a, token.b, context);\n        }\n        return vo;\n    };\n    ProgramSoftware.getDestTarget = function (vo, desc, dest) {\n        var targetType;\n        if (dest.regtype == 0x2) {\n            targetType = vo.temp;\n        }\n        else if (dest.regtype == 0x3) {\n            if (desc.header.type == \"vertex\") {\n                targetType = vo.outputPosition;\n            }\n            else {\n                targetType = vo.outputColor;\n            }\n        }\n        else if (dest.regtype == 0x4) {\n            targetType = vo.varying;\n        }\n        var targetIndex = dest.regnum;\n        var target = targetType[targetIndex];\n        if (!target) {\n            target = targetType[targetIndex] = new Vector3D_1.default(0, 0, 0, 1);\n        }\n        return target;\n    };\n    ProgramSoftware.getSourceTargetType = function (vo, desc, dest, context) {\n        var targetType;\n        if (dest.regtype == 0x0) {\n            targetType = vo.attributes;\n        }\n        else if (dest.regtype == 0x1) {\n            if (desc.header.type == \"vertex\") {\n                targetType = context._vertexConstants;\n            }\n            else {\n                targetType = context._fragmentConstants;\n            }\n        }\n        else if (dest.regtype == 0x2) {\n            targetType = vo.temp;\n        }\n        else if (dest.regtype == 0x4) {\n            targetType = vo.varying;\n        }\n        return targetType;\n    };\n    ProgramSoftware.getSourceTargetByIndex = function (targetType, targetIndex) {\n        var target = targetType[targetIndex];\n        if (!target) {\n            target = targetType[targetIndex] = new Vector3D_1.default(0, 0, 0, 1);\n        }\n        return target;\n    };\n    ProgramSoftware.getSourceTarget = function (vo, desc, dest, context) {\n        var targetType = ProgramSoftware.getSourceTargetType(vo, desc, dest, context);\n        return ProgramSoftware.getSourceTargetByIndex(targetType, dest.regnum);\n    };\n    ProgramSoftware.mov = function (vo, desc, dest, source1, source2, context) {\n        var target = ProgramSoftware.getDestTarget(vo, desc, dest);\n        var source1Target = ProgramSoftware.getSourceTarget(vo, desc, source1, context);\n        var swiz = [\"x\", \"y\", \"z\", \"w\"];\n        if (dest.mask & 1) {\n            target.x = source1Target[swiz[(source1.swizzle >> 0) & 3]];\n        }\n        if (dest.mask & 2) {\n            target.y = source1Target[swiz[(source1.swizzle >> 2) & 3]];\n        }\n        if (dest.mask & 4) {\n            target.z = source1Target[swiz[(source1.swizzle >> 4) & 3]];\n        }\n        if (dest.mask & 8) {\n            target.w = source1Target[swiz[(source1.swizzle >> 6) & 3]];\n        }\n    };\n    ProgramSoftware.m44 = function (vo, desc, dest, source1, source2, context) {\n        var target = ProgramSoftware.getDestTarget(vo, desc, dest);\n        var source1Target = ProgramSoftware.getSourceTarget(vo, desc, source1, context);\n        var source2Type = ProgramSoftware.getSourceTargetType(vo, desc, source2, context);\n        var source2Target0 = ProgramSoftware.getSourceTargetByIndex(source2Type, source2.regnum);\n        var source2Target1 = ProgramSoftware.getSourceTargetByIndex(source2Type, source2.regnum + 1);\n        var source2Target2 = ProgramSoftware.getSourceTargetByIndex(source2Type, source2.regnum + 2);\n        var source2Target3 = ProgramSoftware.getSourceTargetByIndex(source2Type, source2.regnum + 3);\n        var matrix = new Matrix3D_1.default(new Float32Array([\n            source2Target0.x, source2Target1.x, source2Target2.x, source2Target3.x,\n            source2Target0.y, source2Target1.y, source2Target2.y, source2Target3.y,\n            source2Target0.z, source2Target1.z, source2Target2.z, source2Target3.z,\n            source2Target0.w, source2Target1.w, source2Target2.w, source2Target3.w\n        ]));\n        var result = matrix.transformVector(source1Target);\n        if (dest.mask & 1) {\n            target.x = result.x;\n        }\n        if (dest.mask & 2) {\n            target.y = result.y;\n        }\n        if (dest.mask & 4) {\n            target.z = result.z;\n        }\n        if (dest.mask & 8) {\n            target.w = result.w;\n        }\n    };\n    ProgramSoftware.sample = function (vo, context, u, v, textureIndex, dux, dvx, duy, dvy) {\n        if (textureIndex >= context._textures.length || context._textures[textureIndex] == null) {\n            return [1, u, v, 0];\n        }\n        var texture = context._textures[textureIndex];\n        var state = context._samplerStates[textureIndex];\n        if (!state) {\n            state = this._defaultSamplerState;\n        }\n        var repeat = state.wrap == ContextGLWrapMode_1.default.REPEAT;\n        var mipmap = state.mipfilter == ContextGLMipFilter_1.default.MIPLINEAR;\n        if (mipmap && texture.getMipLevelsCount() > 1) {\n            dux = Math.abs(dux);\n            dvx = Math.abs(dvx);\n            duy = Math.abs(duy);\n            dvy = Math.abs(dvy);\n            var lambda = Math.log(Math.max(texture.width * Math.sqrt(dux * dux + dvx * dvx), texture.height * Math.sqrt(duy * duy + dvy * dvy))) / Math.LN2;\n            if (lambda > 0) {\n                var miplevelLow = Math.floor(lambda);\n                var miplevelHigh = Math.ceil(lambda);\n                var maxmiplevel = Math.log(Math.min(texture.width, texture.height)) / Math.LN2;\n                if (miplevelHigh > maxmiplevel) {\n                    miplevelHigh = maxmiplevel;\n                }\n                if (miplevelLow > maxmiplevel) {\n                    miplevelLow = maxmiplevel;\n                }\n                var mipblend = lambda - Math.floor(lambda);\n                var resultLow = [];\n                var resultHigh = [];\n                var dataLow = texture.getData(miplevelLow);\n                var dataLowWidth = texture.width / Math.pow(2, miplevelLow);\n                var dataLowHeight = texture.height / Math.pow(2, miplevelLow);\n                var dataHigh = texture.getData(miplevelHigh);\n                var dataHighWidth = texture.width / Math.pow(2, miplevelHigh);\n                var dataHighHeight = texture.height / Math.pow(2, miplevelHigh);\n                if (state.filter == ContextGLTextureFilter_1.default.LINEAR) {\n                    resultLow = ProgramSoftware.sampleBilinear(u, v, dataLow, dataLowWidth, dataLowHeight, repeat);\n                    resultHigh = ProgramSoftware.sampleBilinear(u, v, dataHigh, dataHighWidth, dataHighHeight, repeat);\n                }\n                else {\n                    resultLow = ProgramSoftware.sampleNearest(u, v, dataLow, dataLowWidth, dataLowHeight, repeat);\n                    resultHigh = ProgramSoftware.sampleNearest(u, v, dataHigh, dataHighWidth, dataHighHeight, repeat);\n                }\n                return ProgramSoftware.interpolateColor(resultLow, resultHigh, mipblend);\n            }\n        }\n        var result;\n        var data = texture.getData(0);\n        if (state.filter == ContextGLTextureFilter_1.default.LINEAR) {\n            result = ProgramSoftware.sampleBilinear(u, v, data, texture.width, texture.height, repeat);\n        }\n        else {\n            result = ProgramSoftware.sampleNearest(u, v, data, texture.width, texture.height, repeat);\n        }\n        return result;\n    };\n    ProgramSoftware.sampleNearest = function (u, v, textureData, textureWidth, textureHeight, repeat) {\n        u *= textureWidth;\n        v *= textureHeight;\n        if (repeat) {\n            u = Math.abs(u % textureWidth);\n            v = Math.abs(v % textureHeight);\n        }\n        else {\n            if (u < 0) {\n                u = 0;\n            }\n            else if (u > textureWidth - 1) {\n                u = textureWidth - 1;\n            }\n            if (v < 0) {\n                v = 0;\n            }\n            else if (v > textureHeight - 1) {\n                v = textureHeight - 1;\n            }\n        }\n        u = Math.floor(u);\n        v = Math.floor(v);\n        var pos = (u + v * textureWidth) * 4;\n        var r = textureData[pos] / 255;\n        var g = textureData[pos + 1] / 255;\n        var b = textureData[pos + 2] / 255;\n        var a = textureData[pos + 3] / 255;\n        return [a, r, g, b];\n    };\n    ProgramSoftware.sampleBilinear = function (u, v, textureData, textureWidth, textureHeight, repeat) {\n        var texelSizeX = 1 / textureWidth;\n        var texelSizeY = 1 / textureHeight;\n        u -= texelSizeX / 2;\n        v -= texelSizeY / 2;\n        var color00 = ProgramSoftware.sampleNearest(u, v, textureData, textureWidth, textureHeight, repeat);\n        var color10 = ProgramSoftware.sampleNearest(u + texelSizeX, v, textureData, textureWidth, textureHeight, repeat);\n        var color01 = ProgramSoftware.sampleNearest(u, v + texelSizeY, textureData, textureWidth, textureHeight, repeat);\n        var color11 = ProgramSoftware.sampleNearest(u + texelSizeX, v + texelSizeY, textureData, textureWidth, textureHeight, repeat);\n        var a = u * textureWidth;\n        a = a - Math.floor(a);\n        var interColor0 = ProgramSoftware.interpolateColor(color00, color10, a);\n        var interColor1 = ProgramSoftware.interpolateColor(color01, color11, a);\n        var b = v * textureHeight;\n        b = b - Math.floor(b);\n        return ProgramSoftware.interpolateColor(interColor0, interColor1, b);\n    };\n    ProgramSoftware.interpolateColor = function (source, target, a) {\n        var result = [];\n        result[0] = source[0] + (target[0] - source[0]) * a;\n        result[1] = source[1] + (target[1] - source[1]) * a;\n        result[2] = source[2] + (target[2] - source[2]) * a;\n        result[3] = source[3] + (target[3] - source[3]) * a;\n        return result;\n    };\n    ProgramSoftware.tex = function (vo, desc, dest, source1, source2, context) {\n        var target = ProgramSoftware.getDestTarget(vo, desc, dest);\n        var source1Target = ProgramSoftware.getSourceTarget(vo, desc, source1, context);\n        var swiz = [\"x\", \"y\", \"z\", \"w\"];\n        var u = source1Target[swiz[(source1.swizzle >> 0) & 3]];\n        var v = source1Target[swiz[(source1.swizzle >> 2) & 3]];\n        var dux = vo.derivativeX[source1.regnum][swiz[(source1.swizzle >> 0) & 3]];\n        var dvx = vo.derivativeX[source1.regnum][swiz[(source1.swizzle >> 2) & 3]];\n        var duy = vo.derivativeY[source1.regnum][swiz[(source1.swizzle >> 0) & 3]];\n        var dvy = vo.derivativeY[source1.regnum][swiz[(source1.swizzle >> 2) & 3]];\n        var color = ProgramSoftware.sample(vo, context, u, v, source2.regnum, dux, dvx, duy, dvy);\n        if (dest.mask & 1) {\n            target.x = color[1];\n        }\n        if (dest.mask & 2) {\n            target.y = color[2];\n        }\n        if (dest.mask & 4) {\n            target.z = color[3];\n        }\n        if (dest.mask & 8) {\n            target.w = color[0];\n        }\n    };\n    ProgramSoftware.add = function (vo, desc, dest, source1, source2, context) {\n        var target = ProgramSoftware.getDestTarget(vo, desc, dest);\n        var source1Target = ProgramSoftware.getSourceTarget(vo, desc, source1, context);\n        var source2Target = ProgramSoftware.getSourceTarget(vo, desc, source2, context);\n        var swiz = [\"x\", \"y\", \"z\", \"w\"];\n        if (dest.mask & 1) {\n            target.x = source1Target[swiz[(source1.swizzle >> 0) & 3]] + source2Target[swiz[(source2.swizzle >> 0) & 3]];\n        }\n        if (dest.mask & 2) {\n            target.y = source1Target[swiz[(source1.swizzle >> 2) & 3]] + source2Target[swiz[(source2.swizzle >> 2) & 3]];\n        }\n        if (dest.mask & 4) {\n            target.z = source1Target[swiz[(source1.swizzle >> 4) & 3]] + source2Target[swiz[(source2.swizzle >> 4) & 3]];\n        }\n        if (dest.mask & 8) {\n            target.w = source1Target[swiz[(source1.swizzle >> 6) & 3]] + source2Target[swiz[(source2.swizzle >> 6) & 3]];\n        }\n    };\n    ProgramSoftware.sub = function (vo, desc, dest, source1, source2, context) {\n        var target = ProgramSoftware.getDestTarget(vo, desc, dest);\n        var source1Target = ProgramSoftware.getSourceTarget(vo, desc, source1, context);\n        var source2Target = ProgramSoftware.getSourceTarget(vo, desc, source2, context);\n        var swiz = [\"x\", \"y\", \"z\", \"w\"];\n        if (dest.mask & 1) {\n            target.x = source1Target[swiz[(source1.swizzle >> 0) & 3]] - source2Target[swiz[(source2.swizzle >> 0) & 3]];\n        }\n        if (dest.mask & 2) {\n            target.y = source1Target[swiz[(source1.swizzle >> 2) & 3]] - source2Target[swiz[(source2.swizzle >> 2) & 3]];\n        }\n        if (dest.mask & 4) {\n            target.z = source1Target[swiz[(source1.swizzle >> 4) & 3]] - source2Target[swiz[(source2.swizzle >> 4) & 3]];\n        }\n        if (dest.mask & 8) {\n            target.w = source1Target[swiz[(source1.swizzle >> 6) & 3]] - source2Target[swiz[(source2.swizzle >> 6) & 3]];\n        }\n    };\n    ProgramSoftware.mul = function (vo, desc, dest, source1, source2, context) {\n        var target = ProgramSoftware.getDestTarget(vo, desc, dest);\n        var source1Target = ProgramSoftware.getSourceTarget(vo, desc, source1, context);\n        var source2Target = ProgramSoftware.getSourceTarget(vo, desc, source2, context);\n        var swiz = [\"x\", \"y\", \"z\", \"w\"];\n        if (dest.mask & 1) {\n            target.x = source1Target[swiz[(source1.swizzle >> 0) & 3]] * source2Target[swiz[(source2.swizzle >> 0) & 3]];\n        }\n        if (dest.mask & 2) {\n            target.y = source1Target[swiz[(source1.swizzle >> 2) & 3]] * source2Target[swiz[(source2.swizzle >> 2) & 3]];\n        }\n        if (dest.mask & 4) {\n            target.z = source1Target[swiz[(source1.swizzle >> 4) & 3]] * source2Target[swiz[(source2.swizzle >> 4) & 3]];\n        }\n        if (dest.mask & 8) {\n            target.w = source1Target[swiz[(source1.swizzle >> 6) & 3]] * source2Target[swiz[(source2.swizzle >> 6) & 3]];\n        }\n    };\n    ProgramSoftware.div = function (vo, desc, dest, source1, source2, context) {\n        var target = ProgramSoftware.getDestTarget(vo, desc, dest);\n        var source1Target = ProgramSoftware.getSourceTarget(vo, desc, source1, context);\n        var source2Target = ProgramSoftware.getSourceTarget(vo, desc, source2, context);\n        var swiz = [\"x\", \"y\", \"z\", \"w\"];\n        if (dest.mask & 1) {\n            target.x = source1Target[swiz[(source1.swizzle >> 0) & 3]] / source2Target[swiz[(source2.swizzle >> 0) & 3]];\n        }\n        if (dest.mask & 2) {\n            target.y = source1Target[swiz[(source1.swizzle >> 2) & 3]] / source2Target[swiz[(source2.swizzle >> 2) & 3]];\n        }\n        if (dest.mask & 4) {\n            target.z = source1Target[swiz[(source1.swizzle >> 4) & 3]] / source2Target[swiz[(source2.swizzle >> 4) & 3]];\n        }\n        if (dest.mask & 8) {\n            target.w = source1Target[swiz[(source1.swizzle >> 6) & 3]] / source2Target[swiz[(source2.swizzle >> 6) & 3]];\n        }\n    };\n    ProgramSoftware.rcp = function (vo, desc, dest, source1, source2, context) {\n        var target = ProgramSoftware.getDestTarget(vo, desc, dest);\n        var source1Target = ProgramSoftware.getSourceTarget(vo, desc, source1, context);\n        var swiz = [\"x\", \"y\", \"z\", \"w\"];\n        if (dest.mask & 1) {\n            target.x = 1 / source1Target[swiz[(source1.swizzle >> 0) & 3]];\n        }\n        if (dest.mask & 2) {\n            target.y = 1 / source1Target[swiz[(source1.swizzle >> 2) & 3]];\n        }\n        if (dest.mask & 4) {\n            target.z = 1 / source1Target[swiz[(source1.swizzle >> 4) & 3]];\n        }\n        if (dest.mask & 8) {\n            target.w = 1 / source1Target[swiz[(source1.swizzle >> 6) & 3]];\n        }\n    };\n    ProgramSoftware.min = function (vo, desc, dest, source1, source2, context) {\n        var target = ProgramSoftware.getDestTarget(vo, desc, dest);\n        var source1Target = ProgramSoftware.getSourceTarget(vo, desc, source1, context);\n        var source2Target = ProgramSoftware.getSourceTarget(vo, desc, source2, context);\n        var swiz = [\"x\", \"y\", \"z\", \"w\"];\n        if (dest.mask & 1) {\n            target.x = Math.min(source1Target[swiz[(source1.swizzle >> 0) & 3]], source2Target[swiz[(source2.swizzle >> 0) & 3]]);\n        }\n        if (dest.mask & 2) {\n            target.y = Math.min(source1Target[swiz[(source1.swizzle >> 2) & 3]], source2Target[swiz[(source2.swizzle >> 2) & 3]]);\n        }\n        if (dest.mask & 4) {\n            target.z = Math.min(source1Target[swiz[(source1.swizzle >> 4) & 3]], source2Target[swiz[(source2.swizzle >> 4) & 3]]);\n        }\n        if (dest.mask & 8) {\n            target.w = Math.min(source1Target[swiz[(source1.swizzle >> 6) & 3]], source2Target[swiz[(source2.swizzle >> 6) & 3]]);\n        }\n    };\n    ProgramSoftware.max = function (vo, desc, dest, source1, source2, context) {\n        var target = ProgramSoftware.getDestTarget(vo, desc, dest);\n        var source1Target = ProgramSoftware.getSourceTarget(vo, desc, source1, context);\n        var source2Target = ProgramSoftware.getSourceTarget(vo, desc, source2, context);\n        var swiz = [\"x\", \"y\", \"z\", \"w\"];\n        if (dest.mask & 1) {\n            target.x = Math.max(source1Target[swiz[(source1.swizzle >> 0) & 3]], source2Target[swiz[(source2.swizzle >> 0) & 3]]);\n        }\n        if (dest.mask & 2) {\n            target.y = Math.max(source1Target[swiz[(source1.swizzle >> 2) & 3]], source2Target[swiz[(source2.swizzle >> 2) & 3]]);\n        }\n        if (dest.mask & 4) {\n            target.z = Math.max(source1Target[swiz[(source1.swizzle >> 4) & 3]], source2Target[swiz[(source2.swizzle >> 4) & 3]]);\n        }\n        if (dest.mask & 8) {\n            target.w = Math.max(source1Target[swiz[(source1.swizzle >> 6) & 3]], source2Target[swiz[(source2.swizzle >> 6) & 3]]);\n        }\n    };\n    ProgramSoftware.frc = function (vo, desc, dest, source1, source2, context) {\n        var target = ProgramSoftware.getDestTarget(vo, desc, dest);\n        var source1Target = ProgramSoftware.getSourceTarget(vo, desc, source1, context);\n        var swiz = [\"x\", \"y\", \"z\", \"w\"];\n        if (dest.mask & 1) {\n            target.x = source1Target[swiz[(source1.swizzle >> 0) & 3]] - Math.floor(source1Target[swiz[(source1.swizzle >> 0) & 3]]);\n        }\n        if (dest.mask & 2) {\n            target.y = source1Target[swiz[(source1.swizzle >> 2) & 3]] - Math.floor(source1Target[swiz[(source1.swizzle >> 2) & 3]]);\n        }\n        if (dest.mask & 4) {\n            target.z = source1Target[swiz[(source1.swizzle >> 4) & 3]] - Math.floor(source1Target[swiz[(source1.swizzle >> 4) & 3]]);\n        }\n        if (dest.mask & 8) {\n            target.w = source1Target[swiz[(source1.swizzle >> 6) & 3]] - Math.floor(source1Target[swiz[(source1.swizzle >> 6) & 3]]);\n        }\n    };\n    ProgramSoftware.sqt = function (vo, desc, dest, source1, source2, context) {\n        var target = ProgramSoftware.getDestTarget(vo, desc, dest);\n        var source1Target = ProgramSoftware.getSourceTarget(vo, desc, source1, context);\n        var swiz = [\"x\", \"y\", \"z\", \"w\"];\n        if (dest.mask & 1) {\n            target.x = Math.sqrt(source1Target[swiz[(source1.swizzle >> 0) & 3]]);\n        }\n        if (dest.mask & 2) {\n            target.y = Math.sqrt(source1Target[swiz[(source1.swizzle >> 2) & 3]]);\n        }\n        if (dest.mask & 4) {\n            target.z = Math.sqrt(source1Target[swiz[(source1.swizzle >> 4) & 3]]);\n        }\n        if (dest.mask & 8) {\n            target.w = Math.sqrt(source1Target[swiz[(source1.swizzle >> 6) & 3]]);\n        }\n    };\n    ProgramSoftware.rsq = function (vo, desc, dest, source1, source2, context) {\n        var target = ProgramSoftware.getDestTarget(vo, desc, dest);\n        var source1Target = ProgramSoftware.getSourceTarget(vo, desc, source1, context);\n        var swiz = [\"x\", \"y\", \"z\", \"w\"];\n        if (dest.mask & 1) {\n            target.x = 1 / Math.sqrt(source1Target[swiz[(source1.swizzle >> 0) & 3]]);\n        }\n        if (dest.mask & 2) {\n            target.y = 1 / Math.sqrt(source1Target[swiz[(source1.swizzle >> 2) & 3]]);\n        }\n        if (dest.mask & 4) {\n            target.z = 1 / Math.sqrt(source1Target[swiz[(source1.swizzle >> 4) & 3]]);\n        }\n        if (dest.mask & 8) {\n            target.w = 1 / Math.sqrt(source1Target[swiz[(source1.swizzle >> 6) & 3]]);\n        }\n    };\n    ProgramSoftware.pow = function (vo, desc, dest, source1, source2, context) {\n        var target = ProgramSoftware.getDestTarget(vo, desc, dest);\n        var source1Target = ProgramSoftware.getSourceTarget(vo, desc, source1, context);\n        var source2Target = ProgramSoftware.getSourceTarget(vo, desc, source2, context);\n        var swiz = [\"x\", \"y\", \"z\", \"w\"];\n        if (dest.mask & 1) {\n            target.x = Math.pow(source1Target[swiz[(source1.swizzle >> 0) & 3]], source2Target[swiz[(source2.swizzle >> 0) & 3]]);\n        }\n        if (dest.mask & 2) {\n            target.y = Math.pow(source1Target[swiz[(source1.swizzle >> 2) & 3]], source2Target[swiz[(source2.swizzle >> 2) & 3]]);\n        }\n        if (dest.mask & 4) {\n            target.z = Math.pow(source1Target[swiz[(source1.swizzle >> 4) & 3]], source2Target[swiz[(source2.swizzle >> 4) & 3]]);\n        }\n        if (dest.mask & 8) {\n            target.w = Math.pow(source1Target[swiz[(source1.swizzle >> 6) & 3]], source2Target[swiz[(source2.swizzle >> 6) & 3]]);\n        }\n    };\n    ProgramSoftware.log = function (vo, desc, dest, source1, source2, context) {\n        var target = ProgramSoftware.getDestTarget(vo, desc, dest);\n        var source1Target = ProgramSoftware.getSourceTarget(vo, desc, source1, context);\n        var swiz = [\"x\", \"y\", \"z\", \"w\"];\n        if (dest.mask & 1) {\n            target.x = Math.log(source1Target[swiz[(source1.swizzle >> 0) & 3]]) / Math.LN2;\n        }\n        if (dest.mask & 2) {\n            target.y = Math.log(source1Target[swiz[(source1.swizzle >> 2) & 3]]) / Math.LN2;\n        }\n        if (dest.mask & 4) {\n            target.z = Math.log(source1Target[swiz[(source1.swizzle >> 4) & 3]]) / Math.LN2;\n        }\n        if (dest.mask & 8) {\n            target.w = Math.log(source1Target[swiz[(source1.swizzle >> 6) & 3]]) / Math.LN2;\n        }\n    };\n    ProgramSoftware.exp = function (vo, desc, dest, source1, source2, context) {\n        var target = ProgramSoftware.getDestTarget(vo, desc, dest);\n        var source1Target = ProgramSoftware.getSourceTarget(vo, desc, source1, context);\n        var swiz = [\"x\", \"y\", \"z\", \"w\"];\n        if (dest.mask & 1) {\n            target.x = Math.exp(source1Target[swiz[(source1.swizzle >> 0) & 3]]);\n        }\n        if (dest.mask & 2) {\n            target.y = Math.exp(source1Target[swiz[(source1.swizzle >> 2) & 3]]);\n        }\n        if (dest.mask & 4) {\n            target.z = Math.exp(source1Target[swiz[(source1.swizzle >> 4) & 3]]);\n        }\n        if (dest.mask & 8) {\n            target.w = Math.exp(source1Target[swiz[(source1.swizzle >> 6) & 3]]);\n        }\n    };\n    ProgramSoftware.nrm = function (vo, desc, dest, source1, source2, context) {\n        var target = ProgramSoftware.getDestTarget(vo, desc, dest);\n        var source1Target = ProgramSoftware.getSourceTarget(vo, desc, source1, context);\n        var swiz = [\"x\", \"y\", \"z\", \"w\"];\n        var x = source1Target[swiz[(source1.swizzle >> 0) & 3]];\n        var y = source1Target[swiz[(source1.swizzle >> 2) & 3]];\n        var z = source1Target[swiz[(source1.swizzle >> 4) & 3]];\n        var len = Math.sqrt(x * x + y * y + z * z);\n        x /= len;\n        y /= len;\n        z /= len;\n        if (dest.mask & 1) {\n            target.x = x;\n        }\n        if (dest.mask & 2) {\n            target.y = y;\n        }\n        if (dest.mask & 4) {\n            target.z = z;\n        }\n    };\n    ProgramSoftware.sin = function (vo, desc, dest, source1, source2, context) {\n        var target = ProgramSoftware.getDestTarget(vo, desc, dest);\n        var source1Target = ProgramSoftware.getSourceTarget(vo, desc, source1, context);\n        var swiz = [\"x\", \"y\", \"z\", \"w\"];\n        if (dest.mask & 1) {\n            target.x = Math.sin(source1Target[swiz[(source1.swizzle >> 0) & 3]]);\n        }\n        if (dest.mask & 2) {\n            target.y = Math.sin(source1Target[swiz[(source1.swizzle >> 2) & 3]]);\n        }\n        if (dest.mask & 4) {\n            target.z = Math.sin(source1Target[swiz[(source1.swizzle >> 4) & 3]]);\n        }\n        if (dest.mask & 8) {\n            target.w = Math.sin(source1Target[swiz[(source1.swizzle >> 6) & 3]]);\n        }\n    };\n    ProgramSoftware.cos = function (vo, desc, dest, source1, source2, context) {\n        var target = ProgramSoftware.getDestTarget(vo, desc, dest);\n        var source1Target = ProgramSoftware.getSourceTarget(vo, desc, source1, context);\n        var swiz = [\"x\", \"y\", \"z\", \"w\"];\n        if (dest.mask & 1) {\n            target.x = Math.cos(source1Target[swiz[(source1.swizzle >> 0) & 3]]);\n        }\n        if (dest.mask & 2) {\n            target.y = Math.cos(source1Target[swiz[(source1.swizzle >> 2) & 3]]);\n        }\n        if (dest.mask & 4) {\n            target.z = Math.cos(source1Target[swiz[(source1.swizzle >> 4) & 3]]);\n        }\n        if (dest.mask & 8) {\n            target.w = Math.cos(source1Target[swiz[(source1.swizzle >> 6) & 3]]);\n        }\n    };\n    ProgramSoftware.crs = function (vo, desc, dest, source1, source2, context) {\n        var target = ProgramSoftware.getDestTarget(vo, desc, dest);\n        var swiz = [\"x\", \"y\", \"z\", \"w\"];\n        var source1Target = ProgramSoftware.getSourceTarget(vo, desc, source1, context);\n        var source1TargetX = source1Target[swiz[(source1.swizzle >> 0) & 3]];\n        var source1TargetY = source1Target[swiz[(source1.swizzle >> 2) & 3]];\n        var source1TargetZ = source1Target[swiz[(source1.swizzle >> 4) & 3]];\n        var source2Target = ProgramSoftware.getSourceTarget(vo, desc, source2, context);\n        var source2TargetX = source2Target[swiz[(source2.swizzle >> 0) & 3]];\n        var source2TargetY = source2Target[swiz[(source2.swizzle >> 2) & 3]];\n        var source2TargetZ = source2Target[swiz[(source2.swizzle >> 4) & 3]];\n        if (dest.mask & 1) {\n            target.x = source1TargetY * source2TargetZ - source1TargetZ * source2TargetY;\n        }\n        if (dest.mask & 2) {\n            target.y = source1TargetZ * source2TargetX - source1TargetX * source2TargetZ;\n        }\n        if (dest.mask & 4) {\n            target.z = source1TargetX * source2TargetY - source1TargetY * source2TargetX;\n        }\n    };\n    ProgramSoftware.dp3 = function (vo, desc, dest, source1, source2, context) {\n        var target = ProgramSoftware.getDestTarget(vo, desc, dest);\n        var swiz = [\"x\", \"y\", \"z\", \"w\"];\n        var source1Target = ProgramSoftware.getSourceTarget(vo, desc, source1, context);\n        var source1TargetX = source1Target[swiz[(source1.swizzle >> 0) & 3]];\n        var source1TargetY = source1Target[swiz[(source1.swizzle >> 2) & 3]];\n        var source1TargetZ = source1Target[swiz[(source1.swizzle >> 4) & 3]];\n        var source2Target = ProgramSoftware.getSourceTarget(vo, desc, source2, context);\n        var source2TargetX = source2Target[swiz[(source2.swizzle >> 0) & 3]];\n        var source2TargetY = source2Target[swiz[(source2.swizzle >> 2) & 3]];\n        var source2TargetZ = source2Target[swiz[(source2.swizzle >> 4) & 3]];\n        if (dest.mask & 1) {\n            target.x = source1TargetX * source2TargetX + source1TargetY * source2TargetY + source1TargetZ * source2TargetZ;\n        }\n        if (dest.mask & 2) {\n            target.y = source1TargetX * source2TargetX + source1TargetY * source2TargetY + source1TargetZ * source2TargetZ;\n        }\n        if (dest.mask & 4) {\n            target.z = source1TargetX * source2TargetX + source1TargetY * source2TargetY + source1TargetZ * source2TargetZ;\n        }\n        if (dest.mask & 8) {\n            target.w = source1TargetX * source2TargetX + source1TargetY * source2TargetY + source1TargetZ * source2TargetZ;\n        }\n    };\n    ProgramSoftware.dp4 = function (vo, desc, dest, source1, source2, context) {\n        var target = ProgramSoftware.getDestTarget(vo, desc, dest);\n        var swiz = [\"x\", \"y\", \"z\", \"w\"];\n        var source1Target = ProgramSoftware.getSourceTarget(vo, desc, source1, context);\n        var source1TargetX = source1Target[swiz[(source1.swizzle >> 0) & 3]];\n        var source1TargetY = source1Target[swiz[(source1.swizzle >> 2) & 3]];\n        var source1TargetZ = source1Target[swiz[(source1.swizzle >> 4) & 3]];\n        var source1TargetW = source1Target[swiz[(source1.swizzle >> 6) & 3]];\n        var source2Target = ProgramSoftware.getSourceTarget(vo, desc, source2, context);\n        var source2TargetX = source2Target[swiz[(source2.swizzle >> 0) & 3]];\n        var source2TargetY = source2Target[swiz[(source2.swizzle >> 2) & 3]];\n        var source2TargetZ = source2Target[swiz[(source2.swizzle >> 4) & 3]];\n        var source2TargetW = source2Target[swiz[(source2.swizzle >> 6) & 3]];\n        if (dest.mask & 1) {\n            target.x = source1TargetX * source2TargetX + source1TargetY * source2TargetY + source1TargetZ * source2TargetZ + source1TargetW * source2TargetW;\n        }\n        if (dest.mask & 2) {\n            target.y = source1TargetX * source2TargetX + source1TargetY * source2TargetY + source1TargetZ * source2TargetZ + source1TargetW * source2TargetW;\n        }\n        if (dest.mask & 4) {\n            target.z = source1TargetX * source2TargetX + source1TargetY * source2TargetY + source1TargetZ * source2TargetZ + source1TargetW * source2TargetW;\n        }\n        if (dest.mask & 8) {\n            target.w = source1TargetX * source2TargetX + source1TargetY * source2TargetY + source1TargetZ * source2TargetZ + source1TargetW * source2TargetW;\n        }\n    };\n    ProgramSoftware.abs = function (vo, desc, dest, source1, source2, context) {\n        var target = ProgramSoftware.getDestTarget(vo, desc, dest);\n        var source1Target = ProgramSoftware.getSourceTarget(vo, desc, source1, context);\n        var swiz = [\"x\", \"y\", \"z\", \"w\"];\n        if (dest.mask & 1) {\n            target.x = Math.abs(source1Target[swiz[(source1.swizzle >> 0) & 3]]);\n        }\n        if (dest.mask & 2) {\n            target.y = Math.abs(source1Target[swiz[(source1.swizzle >> 2) & 3]]);\n        }\n        if (dest.mask & 4) {\n            target.z = Math.abs(source1Target[swiz[(source1.swizzle >> 4) & 3]]);\n        }\n        if (dest.mask & 8) {\n            target.w = Math.abs(source1Target[swiz[(source1.swizzle >> 6) & 3]]);\n        }\n    };\n    ProgramSoftware.neg = function (vo, desc, dest, source1, source2, context) {\n        var target = ProgramSoftware.getDestTarget(vo, desc, dest);\n        var source1Target = ProgramSoftware.getSourceTarget(vo, desc, source1, context);\n        var swiz = [\"x\", \"y\", \"z\", \"w\"];\n        if (dest.mask & 1) {\n            target.x = -source1Target[swiz[(source1.swizzle >> 0) & 3]];\n        }\n        if (dest.mask & 2) {\n            target.y = -source1Target[swiz[(source1.swizzle >> 2) & 3]];\n        }\n        if (dest.mask & 4) {\n            target.z = -source1Target[swiz[(source1.swizzle >> 4) & 3]];\n        }\n        if (dest.mask & 8) {\n            target.w = -source1Target[swiz[(source1.swizzle >> 6) & 3]];\n        }\n    };\n    ProgramSoftware.sat = function (vo, desc, dest, source1, source2, context) {\n        var target = ProgramSoftware.getDestTarget(vo, desc, dest);\n        var source1Target = ProgramSoftware.getSourceTarget(vo, desc, source1, context);\n        var swiz = [\"x\", \"y\", \"z\", \"w\"];\n        if (dest.mask & 1) {\n            target.x = Math.max(0, Math.min(1, source1Target[swiz[(source1.swizzle >> 0) & 3]]));\n        }\n        if (dest.mask & 2) {\n            target.y = Math.max(0, Math.min(1, source1Target[swiz[(source1.swizzle >> 2) & 3]]));\n        }\n        if (dest.mask & 4) {\n            target.z = Math.max(0, Math.min(1, source1Target[swiz[(source1.swizzle >> 4) & 3]]));\n        }\n        if (dest.mask & 8) {\n            target.w = Math.max(0, Math.min(1, source1Target[swiz[(source1.swizzle >> 6) & 3]]));\n        }\n    };\n    ProgramSoftware.m33 = function (vo, desc, dest, source1, source2, context) {\n        var target = ProgramSoftware.getDestTarget(vo, desc, dest);\n        var source1Target = ProgramSoftware.getSourceTarget(vo, desc, source1, context);\n        var source2Type = ProgramSoftware.getSourceTargetType(vo, desc, source2, context);\n        var source2Target0 = ProgramSoftware.getSourceTargetByIndex(source2Type, source2.regnum);\n        var source2Target1 = ProgramSoftware.getSourceTargetByIndex(source2Type, source2.regnum + 1);\n        var source2Target2 = ProgramSoftware.getSourceTargetByIndex(source2Type, source2.regnum + 2);\n        var matrix = new Matrix3D_1.default(new Float32Array([\n            source2Target0.x, source2Target1.x, source2Target2.x, 0,\n            source2Target0.y, source2Target1.y, source2Target2.y, 0,\n            source2Target0.z, source2Target1.z, source2Target2.z, 0,\n            0, 0, 0, 0\n        ]));\n        var result = matrix.transformVector(source1Target);\n        if (dest.mask & 1) {\n            target.x = result.x;\n        }\n        if (dest.mask & 2) {\n            target.y = result.y;\n        }\n        if (dest.mask & 4) {\n            target.z = result.z;\n        }\n    };\n    ProgramSoftware.m34 = function (vo, desc, dest, source1, source2, context) {\n        var target = ProgramSoftware.getDestTarget(vo, desc, dest);\n        var source1Target = ProgramSoftware.getSourceTarget(vo, desc, source1, context);\n        var source2Type = ProgramSoftware.getSourceTargetType(vo, desc, source2, context);\n        var source2Target0 = ProgramSoftware.getSourceTargetByIndex(source2Type, source2.regnum);\n        var source2Target1 = ProgramSoftware.getSourceTargetByIndex(source2Type, source2.regnum + 1);\n        var source2Target2 = ProgramSoftware.getSourceTargetByIndex(source2Type, source2.regnum + 2);\n        var matrix = new Matrix3D_1.default(new Float32Array([\n            source2Target0.x, source2Target1.x, source2Target2.x, 0,\n            source2Target0.y, source2Target1.y, source2Target2.y, 0,\n            source2Target0.z, source2Target1.z, source2Target2.z, 0,\n            source2Target0.w, source2Target1.w, source2Target2.w, 1\n        ]));\n        var result = matrix.transformVector(source1Target);\n        if (dest.mask & 1) {\n            target.x = result.x;\n        }\n        if (dest.mask & 2) {\n            target.y = result.y;\n        }\n        if (dest.mask & 4) {\n            target.z = result.z;\n        }\n        if (dest.mask & 8) {\n            target.w = result.w;\n        }\n    };\n    ProgramSoftware.ddx = function (vo, desc, dest, source1, source2, context) {\n        var target = ProgramSoftware.getDestTarget(vo, desc, dest);\n        var source1Target = vo.derivativeX[source1.regnum];\n        var swiz = [\"x\", \"y\", \"z\", \"w\"];\n        if (dest.mask & 1) {\n            target.x = source1Target[swiz[(source1.swizzle >> 0) & 3]];\n        }\n        if (dest.mask & 2) {\n            target.y = source1Target[swiz[(source1.swizzle >> 2) & 3]];\n        }\n        if (dest.mask & 4) {\n            target.z = source1Target[swiz[(source1.swizzle >> 4) & 3]];\n        }\n        if (dest.mask & 8) {\n            target.w = source1Target[swiz[(source1.swizzle >> 6) & 3]];\n        }\n    };\n    ProgramSoftware.ddy = function (vo, desc, dest, source1, source2, context) {\n        var target = ProgramSoftware.getDestTarget(vo, desc, dest);\n        var source1Target = vo.derivativeY[source1.regnum];\n        var swiz = [\"x\", \"y\", \"z\", \"w\"];\n        if (dest.mask & 1) {\n            target.x = source1Target[swiz[(source1.swizzle >> 0) & 3]];\n        }\n        if (dest.mask & 2) {\n            target.y = source1Target[swiz[(source1.swizzle >> 2) & 3]];\n        }\n        if (dest.mask & 4) {\n            target.z = source1Target[swiz[(source1.swizzle >> 4) & 3]];\n        }\n        if (dest.mask & 8) {\n            target.w = source1Target[swiz[(source1.swizzle >> 6) & 3]];\n        }\n    };\n    ProgramSoftware.sge = function (vo, desc, dest, source1, source2, context) {\n        var target = ProgramSoftware.getDestTarget(vo, desc, dest);\n        var swiz = [\"x\", \"y\", \"z\", \"w\"];\n        var source1Target = ProgramSoftware.getSourceTarget(vo, desc, source1, context);\n        var source1TargetX = source1Target[swiz[(source1.swizzle >> 0) & 3]];\n        var source1TargetY = source1Target[swiz[(source1.swizzle >> 2) & 3]];\n        var source1TargetZ = source1Target[swiz[(source1.swizzle >> 4) & 3]];\n        var source1TargetW = source1Target[swiz[(source1.swizzle >> 6) & 3]];\n        var source2Target = ProgramSoftware.getSourceTarget(vo, desc, source2, context);\n        var source2TargetX = source2Target[swiz[(source2.swizzle >> 0) & 3]];\n        var source2TargetY = source2Target[swiz[(source2.swizzle >> 2) & 3]];\n        var source2TargetZ = source2Target[swiz[(source2.swizzle >> 4) & 3]];\n        var source2TargetW = source2Target[swiz[(source2.swizzle >> 6) & 3]];\n        if (dest.mask & 1) {\n            target.x = source1TargetX >= source2TargetX ? 1 : 0;\n        }\n        if (dest.mask & 2) {\n            target.y = source1TargetY >= source2TargetY ? 1 : 0;\n        }\n        if (dest.mask & 4) {\n            target.z = source1TargetZ >= source2TargetZ ? 1 : 0;\n        }\n        if (dest.mask & 8) {\n            target.w = source1TargetW >= source2TargetW ? 1 : 0;\n        }\n    };\n    ProgramSoftware.slt = function (vo, desc, dest, source1, source2, context) {\n        var target = ProgramSoftware.getDestTarget(vo, desc, dest);\n        var swiz = [\"x\", \"y\", \"z\", \"w\"];\n        var source1Target = ProgramSoftware.getSourceTarget(vo, desc, source1, context);\n        var source1TargetX = source1Target[swiz[(source1.swizzle >> 0) & 3]];\n        var source1TargetY = source1Target[swiz[(source1.swizzle >> 2) & 3]];\n        var source1TargetZ = source1Target[swiz[(source1.swizzle >> 4) & 3]];\n        var source1TargetW = source1Target[swiz[(source1.swizzle >> 6) & 3]];\n        var source2Target = ProgramSoftware.getSourceTarget(vo, desc, source2, context);\n        var source2TargetX = source2Target[swiz[(source2.swizzle >> 0) & 3]];\n        var source2TargetY = source2Target[swiz[(source2.swizzle >> 2) & 3]];\n        var source2TargetZ = source2Target[swiz[(source2.swizzle >> 4) & 3]];\n        var source2TargetW = source2Target[swiz[(source2.swizzle >> 6) & 3]];\n        if (dest.mask & 1) {\n            target.x = source1TargetX < source2TargetX ? 1 : 0;\n        }\n        if (dest.mask & 2) {\n            target.y = source1TargetY < source2TargetY ? 1 : 0;\n        }\n        if (dest.mask & 4) {\n            target.z = source1TargetZ < source2TargetZ ? 1 : 0;\n        }\n        if (dest.mask & 8) {\n            target.w = source1TargetW < source2TargetW ? 1 : 0;\n        }\n    };\n    ProgramSoftware.seq = function (vo, desc, dest, source1, source2, context) {\n        var target = ProgramSoftware.getDestTarget(vo, desc, dest);\n        var swiz = [\"x\", \"y\", \"z\", \"w\"];\n        var source1Target = ProgramSoftware.getSourceTarget(vo, desc, source1, context);\n        var source1TargetX = source1Target[swiz[(source1.swizzle >> 0) & 3]];\n        var source1TargetY = source1Target[swiz[(source1.swizzle >> 2) & 3]];\n        var source1TargetZ = source1Target[swiz[(source1.swizzle >> 4) & 3]];\n        var source1TargetW = source1Target[swiz[(source1.swizzle >> 6) & 3]];\n        var source2Target = ProgramSoftware.getSourceTarget(vo, desc, source2, context);\n        var source2TargetX = source2Target[swiz[(source2.swizzle >> 0) & 3]];\n        var source2TargetY = source2Target[swiz[(source2.swizzle >> 2) & 3]];\n        var source2TargetZ = source2Target[swiz[(source2.swizzle >> 4) & 3]];\n        var source2TargetW = source2Target[swiz[(source2.swizzle >> 6) & 3]];\n        if (dest.mask & 1) {\n            target.x = source1TargetX == source2TargetX ? 1 : 0;\n        }\n        if (dest.mask & 2) {\n            target.y = source1TargetY == source2TargetY ? 1 : 0;\n        }\n        if (dest.mask & 4) {\n            target.z = source1TargetZ == source2TargetZ ? 1 : 0;\n        }\n        if (dest.mask & 8) {\n            target.w = source1TargetW == source2TargetW ? 1 : 0;\n        }\n    };\n    ProgramSoftware.sne = function (vo, desc, dest, source1, source2, context) {\n        var target = ProgramSoftware.getDestTarget(vo, desc, dest);\n        var swiz = [\"x\", \"y\", \"z\", \"w\"];\n        var source1Target = ProgramSoftware.getSourceTarget(vo, desc, source1, context);\n        var source1TargetX = source1Target[swiz[(source1.swizzle >> 0) & 3]];\n        var source1TargetY = source1Target[swiz[(source1.swizzle >> 2) & 3]];\n        var source1TargetZ = source1Target[swiz[(source1.swizzle >> 4) & 3]];\n        var source1TargetW = source1Target[swiz[(source1.swizzle >> 6) & 3]];\n        var source2Target = ProgramSoftware.getSourceTarget(vo, desc, source2, context);\n        var source2TargetX = source2Target[swiz[(source2.swizzle >> 0) & 3]];\n        var source2TargetY = source2Target[swiz[(source2.swizzle >> 2) & 3]];\n        var source2TargetZ = source2Target[swiz[(source2.swizzle >> 4) & 3]];\n        var source2TargetW = source2Target[swiz[(source2.swizzle >> 6) & 3]];\n        if (dest.mask & 1) {\n            target.x = source1TargetX != source2TargetX ? 1 : 0;\n        }\n        if (dest.mask & 2) {\n            target.y = source1TargetY != source2TargetY ? 1 : 0;\n        }\n        if (dest.mask & 4) {\n            target.z = source1TargetZ != source2TargetZ ? 1 : 0;\n        }\n        if (dest.mask & 8) {\n            target.w = source1TargetW != source2TargetW ? 1 : 0;\n        }\n    };\n    ProgramSoftware.sgn = function (vo, desc, dest, source1, source2, context) {\n        var target = ProgramSoftware.getDestTarget(vo, desc, dest);\n        var swiz = [\"x\", \"y\", \"z\", \"w\"];\n        var source1Target = ProgramSoftware.getSourceTarget(vo, desc, source1, context);\n        var source1TargetX = source1Target[swiz[(source1.swizzle >> 0) & 3]];\n        var source1TargetY = source1Target[swiz[(source1.swizzle >> 2) & 3]];\n        var source1TargetZ = source1Target[swiz[(source1.swizzle >> 4) & 3]];\n        var source1TargetW = source1Target[swiz[(source1.swizzle >> 6) & 3]];\n        if (dest.mask & 1) {\n            target.x = 1;\n            if (source1TargetX < 0) {\n                target.x = -1;\n            }\n            else if (source1TargetX == 0) {\n                target.x = 0;\n            }\n        }\n        if (dest.mask & 2) {\n            target.y = 1;\n            if (source1TargetY < 0) {\n                target.y = -1;\n            }\n            else if (source1TargetY == 0) {\n                target.y = 0;\n            }\n        }\n        if (dest.mask & 4) {\n            target.z = 1;\n            if (source1TargetZ < 0) {\n                target.z = -1;\n            }\n            else if (source1TargetZ == 0) {\n                target.z = 0;\n            }\n        }\n        if (dest.mask & 8) {\n            target.w = 1;\n            if (source1TargetW < 0) {\n                target.w = -1;\n            }\n            else if (source1TargetW == 0) {\n                target.w = 0;\n            }\n        }\n    };\n    ProgramSoftware.kil = function (vo, desc, dest, source1, source2, context) {\n        var swiz = [\"x\", \"y\", \"z\", \"w\"];\n        var source1Target = ProgramSoftware.getSourceTarget(vo, desc, source1, context);\n        var source1TargetX = source1Target[swiz[(source1.swizzle >> 0) & 3]];\n        if (source1TargetX < 0) {\n            vo.discard = true;\n        }\n    };\n    ProgramSoftware._defaultSamplerState = new SoftwareSamplerState_1.default();\n    ProgramSoftware._tokenizer = new AGALTokenizer_1.default();\n    ProgramSoftware._opCodeFunc = [\n        ProgramSoftware.mov,\n        ProgramSoftware.add,\n        ProgramSoftware.sub,\n        ProgramSoftware.mul,\n        ProgramSoftware.div,\n        ProgramSoftware.rcp,\n        ProgramSoftware.min,\n        ProgramSoftware.max,\n        ProgramSoftware.frc,\n        ProgramSoftware.sqt,\n        ProgramSoftware.rsq,\n        ProgramSoftware.pow,\n        ProgramSoftware.log,\n        ProgramSoftware.exp,\n        ProgramSoftware.nrm,\n        ProgramSoftware.sin,\n        ProgramSoftware.cos,\n        ProgramSoftware.crs,\n        ProgramSoftware.dp3,\n        ProgramSoftware.dp4,\n        ProgramSoftware.abs,\n        ProgramSoftware.neg,\n        ProgramSoftware.sat,\n        ProgramSoftware.m33,\n        ProgramSoftware.m44,\n        ProgramSoftware.m34,\n        null,\n        null,\n        null,\n        null,\n        null,\n        null,\n        null,\n        null,\n        null,\n        null,\n        null,\n        null,\n        null,\n        ProgramSoftware.kil,\n        ProgramSoftware.tex,\n        ProgramSoftware.sge,\n        ProgramSoftware.slt,\n        ProgramSoftware.sgn,\n        ProgramSoftware.seq,\n        ProgramSoftware.sne\n    ];\n    return ProgramSoftware;\n}());\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.default = ProgramSoftware;\n\n},{\"../aglsl/AGALTokenizer\":\"awayjs-stagegl/lib/aglsl/AGALTokenizer\",\"../base/ContextGLMipFilter\":\"awayjs-stagegl/lib/base/ContextGLMipFilter\",\"../base/ContextGLTextureFilter\":\"awayjs-stagegl/lib/base/ContextGLTextureFilter\",\"../base/ContextGLVertexBufferFormat\":\"awayjs-stagegl/lib/base/ContextGLVertexBufferFormat\",\"../base/ContextGLWrapMode\":\"awayjs-stagegl/lib/base/ContextGLWrapMode\",\"../base/ProgramVOSoftware\":\"awayjs-stagegl/lib/base/ProgramVOSoftware\",\"../base/SoftwareSamplerState\":\"awayjs-stagegl/lib/base/SoftwareSamplerState\",\"awayjs-core/lib/geom/Matrix3D\":undefined,\"awayjs-core/lib/geom/Vector3D\":undefined}],\"awayjs-stagegl/lib/base/ProgramVOSoftware\":[function(require,module,exports){\n\"use strict\";\nvar ProgramVOSoftware = (function () {\n    function ProgramVOSoftware() {\n        this.outputPosition = [];\n        this.outputColor = [];\n        this.varying = [];\n        this.derivativeX = [];\n        this.derivativeY = [];\n        this.temp = [];\n        this.attributes = [];\n        this.discard = false;\n    }\n    return ProgramVOSoftware;\n}());\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.default = ProgramVOSoftware;\n\n},{}],\"awayjs-stagegl/lib/base/ProgramWebGL\":[function(require,module,exports){\n\"use strict\";\nvar AGALTokenizer_1 = require(\"../aglsl/AGALTokenizer\");\nvar AGLSLParser_1 = require(\"../aglsl/AGLSLParser\");\nvar ProgramWebGL = (function () {\n    function ProgramWebGL(gl) {\n        this._uniforms = [[], [], []];\n        this._attribs = [];\n        this._gl = gl;\n        this._program = this._gl.createProgram();\n    }\n    ProgramWebGL.prototype.upload = function (vertexProgram, fragmentProgram) {\n        var vertexString = ProgramWebGL._aglslParser.parse(ProgramWebGL._tokenizer.decribeAGALByteArray(vertexProgram));\n        var fragmentString = ProgramWebGL._aglslParser.parse(ProgramWebGL._tokenizer.decribeAGALByteArray(fragmentProgram));\n        this._vertexShader = this._gl.createShader(this._gl.VERTEX_SHADER);\n        this._fragmentShader = this._gl.createShader(this._gl.FRAGMENT_SHADER);\n        this._gl.shaderSource(this._vertexShader, vertexString);\n        this._gl.compileShader(this._vertexShader);\n        if (!this._gl.getShaderParameter(this._vertexShader, this._gl.COMPILE_STATUS))\n            throw new Error(this._gl.getShaderInfoLog(this._vertexShader));\n        this._gl.shaderSource(this._fragmentShader, fragmentString);\n        this._gl.compileShader(this._fragmentShader);\n        if (!this._gl.getShaderParameter(this._fragmentShader, this._gl.COMPILE_STATUS))\n            throw new Error(this._gl.getShaderInfoLog(this._fragmentShader));\n        this._gl.attachShader(this._program, this._vertexShader);\n        this._gl.attachShader(this._program, this._fragmentShader);\n        this._gl.linkProgram(this._program);\n        if (!this._gl.getProgramParameter(this._program, this._gl.LINK_STATUS))\n            throw new Error(this._gl.getProgramInfoLog(this._program));\n        this._uniforms[0].length = 0;\n        this._uniforms[1].length = 0;\n        this._uniforms[2].length = 0;\n        this._attribs.length = 0;\n    };\n    ProgramWebGL.prototype.getUniformLocation = function (programType, index) {\n        if (this._uniforms[programType][index] != null)\n            return this._uniforms[programType][index];\n        return (this._uniforms[programType][index] = this._gl.getUniformLocation(this._program, ProgramWebGL._uniformLocationNameDictionary[programType] + index));\n    };\n    ProgramWebGL.prototype.getAttribLocation = function (index) {\n        if (this._attribs[index] != null)\n            return this._attribs[index];\n        return (this._attribs[index] = this._gl.getAttribLocation(this._program, \"va\" + index));\n    };\n    ProgramWebGL.prototype.dispose = function () {\n        this._gl.deleteProgram(this._program);\n    };\n    ProgramWebGL.prototype.focusProgram = function () {\n        this._gl.useProgram(this._program);\n    };\n    Object.defineProperty(ProgramWebGL.prototype, \"glProgram\", {\n        get: function () {\n            return this._program;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    ProgramWebGL._tokenizer = new AGALTokenizer_1.default();\n    ProgramWebGL._aglslParser = new AGLSLParser_1.default();\n    ProgramWebGL._uniformLocationNameDictionary = [\"fc\", \"fs\", \"vc\"];\n    return ProgramWebGL;\n}());\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.default = ProgramWebGL;\n\n},{\"../aglsl/AGALTokenizer\":\"awayjs-stagegl/lib/aglsl/AGALTokenizer\",\"../aglsl/AGLSLParser\":\"awayjs-stagegl/lib/aglsl/AGLSLParser\"}],\"awayjs-stagegl/lib/base/ResourceBaseFlash\":[function(require,module,exports){\n\"use strict\";\nvar ResourceBaseFlash = (function () {\n    function ResourceBaseFlash() {\n    }\n    Object.defineProperty(ResourceBaseFlash.prototype, \"id\", {\n        get: function () {\n            return this._pId;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    ResourceBaseFlash.prototype.dispose = function () {\n    };\n    return ResourceBaseFlash;\n}());\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.default = ResourceBaseFlash;\n\n},{}],\"awayjs-stagegl/lib/base/SamplerState\":[function(require,module,exports){\n\"use strict\";\nvar SamplerState = (function () {\n    function SamplerState() {\n    }\n    return SamplerState;\n}());\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.default = SamplerState;\n\n},{}],\"awayjs-stagegl/lib/base/SoftwareSamplerState\":[function(require,module,exports){\n\"use strict\";\nvar ContextGLTextureFilter_1 = require(\"../base/ContextGLTextureFilter\");\nvar ContextGLMipFilter_1 = require(\"../base/ContextGLMipFilter\");\nvar ContextGLWrapMode_1 = require(\"../base/ContextGLWrapMode\");\n/**\n * The same as SamplerState, but with strings\n * TODO: replace two similar classes with one\n */\nvar SoftwareSamplerState = (function () {\n    function SoftwareSamplerState() {\n        this.wrap = ContextGLWrapMode_1.default.REPEAT;\n        this.filter = ContextGLTextureFilter_1.default.LINEAR;\n        this.mipfilter = ContextGLMipFilter_1.default.MIPLINEAR;\n    }\n    return SoftwareSamplerState;\n}());\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.default = SoftwareSamplerState;\n\n},{\"../base/ContextGLMipFilter\":\"awayjs-stagegl/lib/base/ContextGLMipFilter\",\"../base/ContextGLTextureFilter\":\"awayjs-stagegl/lib/base/ContextGLTextureFilter\",\"../base/ContextGLWrapMode\":\"awayjs-stagegl/lib/base/ContextGLWrapMode\"}],\"awayjs-stagegl/lib/base/Stage\":[function(require,module,exports){\n\"use strict\";\nvar __extends = (this && this.__extends) || function (d, b) {\n    for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p];\n    function __() { this.constructor = d; }\n    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n};\nvar EventDispatcher_1 = require(\"awayjs-core/lib/events/EventDispatcher\");\nvar Rectangle_1 = require(\"awayjs-core/lib/geom/Rectangle\");\nvar CSS_1 = require(\"awayjs-core/lib/utils/CSS\");\nvar ContextMode_1 = require(\"../base/ContextMode\");\nvar ContextGLMipFilter_1 = require(\"../base/ContextGLMipFilter\");\nvar ContextGLTextureFilter_1 = require(\"../base/ContextGLTextureFilter\");\nvar ContextGLVertexBufferFormat_1 = require(\"../base/ContextGLVertexBufferFormat\");\nvar ContextGLWrapMode_1 = require(\"../base/ContextGLWrapMode\");\nvar ContextWebGL_1 = require(\"../base/ContextWebGL\");\nvar ContextStage3D_1 = require(\"../base/ContextStage3D\");\nvar ContextSoftware_1 = require(\"../base/ContextSoftware\");\nvar StageEvent_1 = require(\"../events/StageEvent\");\nvar ProgramDataPool_1 = require(\"../image/ProgramDataPool\");\n/**\n * Stage provides a proxy class to handle the creation and attachment of the Context\n * (and in turn the back buffer) it uses. Stage should never be created directly,\n * but requested through StageManager.\n *\n * @see away.managers.StageManager\n *\n */\nvar Stage = (function (_super) {\n    __extends(Stage, _super);\n    function Stage(container, stageIndex, stageManager, forceSoftware, profile) {\n        var _this = this;\n        if (forceSoftware === void 0) { forceSoftware = false; }\n        if (profile === void 0) { profile = \"baseline\"; }\n        _super.call(this);\n        this._abstractionPool = new Object();\n        this._programData = new Array();\n        this._x = 0;\n        this._y = 0;\n        //private static _frameEventDriver:Shape = new Shape(); // TODO: add frame driver / request animation frame\n        this._stageIndex = -1;\n        this._antiAlias = 0;\n        //private var _activeVertexBuffers : Vector.<VertexBuffer> = new Vector.<VertexBuffer>(8, true);\n        //private var _activeTextures : Vector.<TextureBase> = new Vector.<TextureBase>(8, true);\n        this._renderTarget = null;\n        this._renderSurfaceSelector = 0;\n        //private _mouse3DManager:away.managers.Mouse3DManager;\n        //private _touch3DManager:Touch3DManager; //TODO: imeplement dependency Touch3DManager\n        this._initialised = false;\n        this._bufferFormatDictionary = new Array(5);\n        this._programDataPool = new ProgramDataPool_1.default(this);\n        this._container = container;\n        if (this._container) {\n            this._container.addEventListener(\"webglcontextlost\", function (event) { return _this.onContextLost(event); });\n            this._container.addEventListener(\"webglcontextrestored\", function (event) { return _this.onContextRestored(event); });\n        }\n        this._stageIndex = stageIndex;\n        this._stageManager = stageManager;\n        this._viewPort = new Rectangle_1.default();\n        this._enableDepthAndStencil = true;\n        CSS_1.default.setElementX(this._container, 0);\n        CSS_1.default.setElementY(this._container, 0);\n        this._bufferFormatDictionary[1] = new Array(5);\n        this._bufferFormatDictionary[1][1] = ContextGLVertexBufferFormat_1.default.BYTE_1;\n        this._bufferFormatDictionary[1][2] = ContextGLVertexBufferFormat_1.default.BYTE_2;\n        this._bufferFormatDictionary[1][3] = ContextGLVertexBufferFormat_1.default.BYTE_3;\n        this._bufferFormatDictionary[1][4] = ContextGLVertexBufferFormat_1.default.BYTE_4;\n        this._bufferFormatDictionary[2] = new Array(5);\n        this._bufferFormatDictionary[2][1] = ContextGLVertexBufferFormat_1.default.SHORT_1;\n        this._bufferFormatDictionary[2][2] = ContextGLVertexBufferFormat_1.default.SHORT_2;\n        this._bufferFormatDictionary[2][3] = ContextGLVertexBufferFormat_1.default.SHORT_3;\n        this._bufferFormatDictionary[2][4] = ContextGLVertexBufferFormat_1.default.SHORT_4;\n        this._bufferFormatDictionary[4] = new Array(5);\n        this._bufferFormatDictionary[4][1] = ContextGLVertexBufferFormat_1.default.FLOAT_1;\n        this._bufferFormatDictionary[4][2] = ContextGLVertexBufferFormat_1.default.FLOAT_2;\n        this._bufferFormatDictionary[4][3] = ContextGLVertexBufferFormat_1.default.FLOAT_3;\n        this._bufferFormatDictionary[4][4] = ContextGLVertexBufferFormat_1.default.FLOAT_4;\n        this._bufferFormatDictionary[5] = new Array(5);\n        this._bufferFormatDictionary[5][1] = ContextGLVertexBufferFormat_1.default.UNSIGNED_BYTE_1;\n        this._bufferFormatDictionary[5][2] = ContextGLVertexBufferFormat_1.default.UNSIGNED_BYTE_2;\n        this._bufferFormatDictionary[5][3] = ContextGLVertexBufferFormat_1.default.UNSIGNED_BYTE_3;\n        this._bufferFormatDictionary[5][4] = ContextGLVertexBufferFormat_1.default.UNSIGNED_BYTE_4;\n        this._bufferFormatDictionary[6] = new Array(5);\n        this._bufferFormatDictionary[6][1] = ContextGLVertexBufferFormat_1.default.UNSIGNED_SHORT_1;\n        this._bufferFormatDictionary[6][2] = ContextGLVertexBufferFormat_1.default.UNSIGNED_SHORT_2;\n        this._bufferFormatDictionary[6][3] = ContextGLVertexBufferFormat_1.default.UNSIGNED_SHORT_3;\n        this._bufferFormatDictionary[6][4] = ContextGLVertexBufferFormat_1.default.UNSIGNED_SHORT_4;\n        this.visible = true;\n    }\n    Stage.prototype.getProgramData = function (vertexString, fragmentString) {\n        return this._programDataPool.getItem(vertexString, fragmentString);\n    };\n    Stage.prototype.setRenderTarget = function (target, enableDepthAndStencil, surfaceSelector) {\n        if (enableDepthAndStencil === void 0) { enableDepthAndStencil = false; }\n        if (surfaceSelector === void 0) { surfaceSelector = 0; }\n        if (this._renderTarget === target && surfaceSelector == this._renderSurfaceSelector && this._enableDepthAndStencil == enableDepthAndStencil)\n            return;\n        this._renderTarget = target;\n        this._renderSurfaceSelector = surfaceSelector;\n        this._enableDepthAndStencil = enableDepthAndStencil;\n        if (target) {\n            this._context.setRenderToTexture(this.getAbstraction(target).texture, enableDepthAndStencil, this._antiAlias, surfaceSelector);\n        }\n        else {\n            this._context.setRenderToBackBuffer();\n            this.configureBackBuffer(this._width, this._height, this._antiAlias, this._enableDepthAndStencil);\n        }\n    };\n    Stage.prototype.getAbstraction = function (asset) {\n        return (this._abstractionPool[asset.id] || (this._abstractionPool[asset.id] = new Stage._abstractionClassPool[asset.assetType](asset, this)));\n    };\n    /**\n     *\n     * @param image\n     */\n    Stage.prototype.clearAbstraction = function (asset) {\n        this._abstractionPool[asset.id] = null;\n    };\n    /**\n     *\n     * @param imageObjectClass\n     */\n    Stage.registerAbstraction = function (gl_assetClass, assetClass) {\n        Stage._abstractionClassPool[assetClass.assetType] = gl_assetClass;\n    };\n    /**\n     * Requests a Context object to attach to the managed gl canvas.\n     */\n    Stage.prototype.requestContext = function (forceSoftware, profile, mode) {\n        // If forcing software, we can be certain that the\n        // returned Context will be running software mode.\n        // If not, we can't be sure and should stick to the\n        // old value (will likely be same if re-requesting.)\n        var _this = this;\n        if (forceSoftware === void 0) { forceSoftware = false; }\n        if (profile === void 0) { profile = \"baseline\"; }\n        if (mode === void 0) { mode = \"auto\"; }\n        if (this._usesSoftwareRendering != null)\n            this._usesSoftwareRendering = forceSoftware;\n        this._profile = profile;\n        try {\n            if (mode == ContextMode_1.default.FLASH)\n                new ContextStage3D_1.default(this._container, function (context) { return _this._callback(context); });\n            else if (mode == ContextMode_1.default.SOFTWARE)\n                this._context = new ContextSoftware_1.default(this._container);\n            else\n                this._context = new ContextWebGL_1.default(this._container);\n        }\n        catch (e) {\n            try {\n                if (mode == ContextMode_1.default.AUTO)\n                    new ContextStage3D_1.default(this._container, function (context) { return _this._callback(context); });\n                else\n                    this.dispatchEvent(new StageEvent_1.default(StageEvent_1.default.STAGE_ERROR, this));\n            }\n            catch (e) {\n                this.dispatchEvent(new StageEvent_1.default(StageEvent_1.default.STAGE_ERROR, this));\n            }\n        }\n        if (this._context)\n            this._callback(this._context);\n    };\n    Object.defineProperty(Stage.prototype, \"width\", {\n        /**\n         * The width of the gl canvas\n         */\n        get: function () {\n            return this._width;\n        },\n        set: function (val) {\n            if (this._width == val)\n                return;\n            CSS_1.default.setElementWidth(this._container, val);\n            this._width = this._viewPort.width = val;\n            this._backBufferDirty = true;\n            this.notifyViewportUpdated();\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(Stage.prototype, \"height\", {\n        /**\n         * The height of the gl canvas\n         */\n        get: function () {\n            return this._height;\n        },\n        set: function (val) {\n            if (this._height == val)\n                return;\n            CSS_1.default.setElementHeight(this._container, val);\n            this._height = this._viewPort.height = val;\n            this._backBufferDirty = true;\n            this.notifyViewportUpdated();\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(Stage.prototype, \"x\", {\n        /**\n         * The x position of the gl canvas\n         */\n        get: function () {\n            return this._x;\n        },\n        set: function (val) {\n            if (this._x == val)\n                return;\n            CSS_1.default.setElementX(this._container, val);\n            this._x = this._viewPort.x = val;\n            this.notifyViewportUpdated();\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(Stage.prototype, \"y\", {\n        /**\n         * The y position of the gl canvas\n         */\n        get: function () {\n            return this._y;\n        },\n        set: function (val) {\n            if (this._y == val)\n                return;\n            CSS_1.default.setElementY(this._container, val);\n            this._y = this._viewPort.y = val;\n            this.notifyViewportUpdated();\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(Stage.prototype, \"visible\", {\n        get: function () {\n            return CSS_1.default.getElementVisibility(this._container);\n        },\n        set: function (val) {\n            CSS_1.default.setElementVisibility(this._container, val);\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(Stage.prototype, \"container\", {\n        get: function () {\n            return this._container;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(Stage.prototype, \"context\", {\n        /**\n         * The Context object associated with the given stage object.\n         */\n        get: function () {\n            return this._context;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Stage.prototype.notifyViewportUpdated = function () {\n        if (this._viewportDirty)\n            return;\n        this._viewportDirty = true;\n        this.dispatchEvent(new StageEvent_1.default(StageEvent_1.default.VIEWPORT_UPDATED, this));\n    };\n    Object.defineProperty(Stage.prototype, \"profile\", {\n        get: function () {\n            return this._profile;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    /**\n     * Disposes the Stage object, freeing the Context attached to the Stage.\n     */\n    Stage.prototype.dispose = function () {\n        for (var id in this._abstractionPool)\n            this._abstractionPool[id].clear();\n        this._abstractionPool = null;\n        this._stageManager.iRemoveStage(this);\n        this.freeContext();\n        this._stageManager = null;\n        this._stageIndex = -1;\n    };\n    /**\n     * Configures the back buffer associated with the Stage object.\n     * @param backBufferWidth The width of the backbuffer.\n     * @param backBufferHeight The height of the backbuffer.\n     * @param antiAlias The amount of anti-aliasing to use.\n     * @param enableDepthAndStencil Indicates whether the back buffer contains a depth and stencil buffer.\n     */\n    Stage.prototype.configureBackBuffer = function (backBufferWidth, backBufferHeight, antiAlias, enableDepthAndStencil) {\n        this.width = backBufferWidth;\n        this.height = backBufferHeight;\n        this._antiAlias = antiAlias;\n        this._enableDepthAndStencil = enableDepthAndStencil;\n        if (this._context)\n            this._context.configureBackBuffer(backBufferWidth, backBufferHeight, antiAlias, enableDepthAndStencil);\n    };\n    Object.defineProperty(Stage.prototype, \"enableDepthAndStencil\", {\n        /*\n         * Indicates whether the depth and stencil buffer is used\n         */\n        get: function () {\n            return this._enableDepthAndStencil;\n        },\n        set: function (enableDepthAndStencil) {\n            this._enableDepthAndStencil = enableDepthAndStencil;\n            this._backBufferDirty = true;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(Stage.prototype, \"renderTarget\", {\n        get: function () {\n            return this._renderTarget;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(Stage.prototype, \"renderSurfaceSelector\", {\n        get: function () {\n            return this._renderSurfaceSelector;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    /*\n     * Clear and reset the back buffer when using a shared context\n     */\n    Stage.prototype.clear = function () {\n        if (!this._context)\n            return;\n        if (this._backBufferDirty) {\n            this.configureBackBuffer(this._width, this._height, this._antiAlias, this._enableDepthAndStencil);\n            this._backBufferDirty = false;\n        }\n        this._context.clear((this._color & 0xff000000) >>> 24, // <--------- Zero-fill right shift\n        (this._color & 0xff0000) >>> 16, // <-------------|\n        (this._color & 0xff00) >>> 8, // <----------------|\n        this._color & 0xff);\n        this._bufferClear = true;\n    };\n    Object.defineProperty(Stage.prototype, \"scissorRect\", {\n        get: function () {\n            return this._scissorRect;\n        },\n        set: function (value) {\n            this._scissorRect = value;\n            this._context.setScissorRectangle(this._scissorRect);\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(Stage.prototype, \"stageIndex\", {\n        /**\n         * The index of the Stage which is managed by this instance of StageProxy.\n         */\n        get: function () {\n            return this._stageIndex;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(Stage.prototype, \"usesSoftwareRendering\", {\n        /**\n         * Indicates whether the Stage managed by this proxy is running in software mode.\n         * Remember to wait for the CONTEXT_CREATED event before checking this property,\n         * as only then will it be guaranteed to be accurate.\n         */\n        get: function () {\n            return this._usesSoftwareRendering;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(Stage.prototype, \"antiAlias\", {\n        /**\n         * The antiAliasing of the Stage.\n         */\n        get: function () {\n            return this._antiAlias;\n        },\n        set: function (antiAlias) {\n            this._antiAlias = antiAlias;\n            this._backBufferDirty = true;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(Stage.prototype, \"viewPort\", {\n        /**\n         * A viewPort rectangle equivalent of the Stage size and position.\n         */\n        get: function () {\n            this._viewportDirty = false;\n            return this._viewPort;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(Stage.prototype, \"color\", {\n        /**\n         * The background color of the Stage.\n         */\n        get: function () {\n            return this._color;\n        },\n        set: function (color) {\n            this._color = color;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(Stage.prototype, \"bufferClear\", {\n        /**\n         * The freshly cleared state of the backbuffer before any rendering\n         */\n        get: function () {\n            return this._bufferClear;\n        },\n        set: function (newBufferClear) {\n            this._bufferClear = newBufferClear;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Stage.prototype.registerProgram = function (programData) {\n        var i = 0;\n        while (this._programData[i] != null)\n            i++;\n        this._programData[i] = programData;\n        programData.id = i;\n    };\n    Stage.prototype.unRegisterProgram = function (programData) {\n        this._programData[programData.id] = null;\n        programData.id = -1;\n    };\n    /**\n     * Frees the Context associated with this StageProxy.\n     */\n    Stage.prototype.freeContext = function () {\n        if (this._context) {\n            this._context.dispose();\n            this.dispatchEvent(new StageEvent_1.default(StageEvent_1.default.CONTEXT_DISPOSED, this));\n        }\n        this._context = null;\n        this._initialised = false;\n    };\n    Stage.prototype.onContextLost = function (event) {\n    };\n    Stage.prototype.onContextRestored = function (event) {\n    };\n    Stage.prototype.recoverFromDisposal = function () {\n        if (!this._context)\n            return false;\n        //away.Debug.throwPIR( 'StageProxy' , 'recoverFromDisposal' , '' );\n        /*\n         if (this._iContext.driverInfo == \"Disposed\")\n         {\n         this._iContext = null;\n         this.dispatchEvent(new StageEvent(StageEvent.CONTEXT_DISPOSED));\n         return false;\n\n         }\n         */\n        return true;\n    };\n    Stage.prototype._callback = function (context) {\n        this._context = context;\n        this._container = this._context.container;\n        // Only configure back buffer if width and height have been set,\n        // which they may not have been if View.render() has yet to be\n        // invoked for the first time.\n        if (this._width && this._height)\n            this._context.configureBackBuffer(this._width, this._height, this._antiAlias, this._enableDepthAndStencil);\n        // Dispatch the appropriate event depending on whether context was\n        // created for the first time or recreated after a device loss.\n        this.dispatchEvent(new StageEvent_1.default(this._initialised ? StageEvent_1.default.CONTEXT_RECREATED : StageEvent_1.default.CONTEXT_CREATED, this));\n        this._initialised = true;\n    };\n    Stage.prototype.setVertexBuffer = function (index, buffer, size, dimensions, offset, unsigned) {\n        if (unsigned === void 0) { unsigned = false; }\n        this._context.setVertexBufferAt(index, buffer, offset, this._bufferFormatDictionary[unsigned ? size + 4 : size][dimensions]);\n    };\n    Stage.prototype.setSamplerState = function (index, repeat, smooth, mipmap) {\n        var wrap = repeat ? ContextGLWrapMode_1.default.REPEAT : ContextGLWrapMode_1.default.CLAMP;\n        var filter = smooth ? ContextGLTextureFilter_1.default.LINEAR : ContextGLTextureFilter_1.default.NEAREST;\n        var mipfilter = mipmap ? ContextGLMipFilter_1.default.MIPLINEAR : ContextGLMipFilter_1.default.MIPNONE;\n        this._context.setSamplerStateAt(index, wrap, filter, mipfilter);\n    };\n    Stage._abstractionClassPool = new Object();\n    return Stage;\n}(EventDispatcher_1.default));\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.default = Stage;\n\n},{\"../base/ContextGLMipFilter\":\"awayjs-stagegl/lib/base/ContextGLMipFilter\",\"../base/ContextGLTextureFilter\":\"awayjs-stagegl/lib/base/ContextGLTextureFilter\",\"../base/ContextGLVertexBufferFormat\":\"awayjs-stagegl/lib/base/ContextGLVertexBufferFormat\",\"../base/ContextGLWrapMode\":\"awayjs-stagegl/lib/base/ContextGLWrapMode\",\"../base/ContextMode\":\"awayjs-stagegl/lib/base/ContextMode\",\"../base/ContextSoftware\":\"awayjs-stagegl/lib/base/ContextSoftware\",\"../base/ContextStage3D\":\"awayjs-stagegl/lib/base/ContextStage3D\",\"../base/ContextWebGL\":\"awayjs-stagegl/lib/base/ContextWebGL\",\"../events/StageEvent\":\"awayjs-stagegl/lib/events/StageEvent\",\"../image/ProgramDataPool\":\"awayjs-stagegl/lib/image/ProgramDataPool\",\"awayjs-core/lib/events/EventDispatcher\":undefined,\"awayjs-core/lib/geom/Rectangle\":undefined,\"awayjs-core/lib/utils/CSS\":undefined}],\"awayjs-stagegl/lib/base/TextureBaseWebGL\":[function(require,module,exports){\n\"use strict\";\nvar AbstractMethodError_1 = require(\"awayjs-core/lib/errors/AbstractMethodError\");\nvar TextureBaseWebGL = (function () {\n    function TextureBaseWebGL(gl) {\n        this.textureType = \"\";\n        this._gl = gl;\n    }\n    TextureBaseWebGL.prototype.dispose = function () {\n        throw \"Abstract method must be overridden.\";\n    };\n    Object.defineProperty(TextureBaseWebGL.prototype, \"glTexture\", {\n        get: function () {\n            throw new AbstractMethodError_1.default();\n        },\n        enumerable: true,\n        configurable: true\n    });\n    return TextureBaseWebGL;\n}());\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.default = TextureBaseWebGL;\n\n},{\"awayjs-core/lib/errors/AbstractMethodError\":undefined}],\"awayjs-stagegl/lib/base/TextureFlash\":[function(require,module,exports){\n\"use strict\";\nvar __extends = (this && this.__extends) || function (d, b) {\n    for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p];\n    function __() { this.constructor = d; }\n    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n};\nvar ByteArrayBase_1 = require(\"awayjs-core/lib/utils/ByteArrayBase\");\nvar OpCodes_1 = require(\"../base/OpCodes\");\nvar ResourceBaseFlash_1 = require(\"../base/ResourceBaseFlash\");\nvar TextureFlash = (function (_super) {\n    __extends(TextureFlash, _super);\n    function TextureFlash(context, width, height, format, forRTT, streaming) {\n        if (streaming === void 0) { streaming = false; }\n        _super.call(this);\n        this._context = context;\n        this._width = width;\n        this._height = height;\n        this._context.addStream(String.fromCharCode(OpCodes_1.default.initTexture, (forRTT ? OpCodes_1.default.trueValue : OpCodes_1.default.falseValue)) + width + \",\" + height + \",\" + streaming + \",\" + format + \"$\");\n        this._pId = this._context.execute();\n        this._context._iAddResource(this);\n    }\n    Object.defineProperty(TextureFlash.prototype, \"width\", {\n        get: function () {\n            return this._width;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(TextureFlash.prototype, \"height\", {\n        get: function () {\n            return this._height;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    TextureFlash.prototype.dispose = function () {\n        this._context.addStream(String.fromCharCode(OpCodes_1.default.disposeTexture) + this._pId.toString() + \",\");\n        this._context.execute();\n        this._context._iRemoveResource(this);\n        this._context = null;\n    };\n    TextureFlash.prototype.uploadFromData = function (data, miplevel) {\n        if (miplevel === void 0) { miplevel = 0; }\n        if (data instanceof HTMLImageElement) {\n            var can = document.createElement(\"canvas\");\n            var w = data.width;\n            var h = data.height;\n            can.width = w;\n            can.height = h;\n            var ctx = can.getContext(\"2d\");\n            ctx.drawImage(data, 0, 0);\n            data = ctx.getImageData(0, 0, w, h).data;\n        }\n        var pos = 0;\n        var bytes = ByteArrayBase_1.default.internalGetBase64String(data.length, function () {\n            return data[pos++];\n        }, null);\n        this._context.addStream(String.fromCharCode(OpCodes_1.default.uploadBytesTexture) + this._pId + \",\" + miplevel + \",\" + (this._width >> miplevel) + \",\" + (this._height >> miplevel) + \",\" + bytes + \"%\");\n        this._context.execute();\n    };\n    return TextureFlash;\n}(ResourceBaseFlash_1.default));\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.default = TextureFlash;\n\n},{\"../base/OpCodes\":\"awayjs-stagegl/lib/base/OpCodes\",\"../base/ResourceBaseFlash\":\"awayjs-stagegl/lib/base/ResourceBaseFlash\",\"awayjs-core/lib/utils/ByteArrayBase\":undefined}],\"awayjs-stagegl/lib/base/TextureSoftware\":[function(require,module,exports){\n\"use strict\";\nvar TextureSoftware = (function () {\n    function TextureSoftware(width, height) {\n        this.textureType = \"texture2d\";\n        this._mipLevels = [];\n        this._width = width;\n        this._height = height;\n    }\n    TextureSoftware.prototype.dispose = function () {\n        this._mipLevels = null;\n    };\n    Object.defineProperty(TextureSoftware.prototype, \"width\", {\n        get: function () {\n            return this._width;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(TextureSoftware.prototype, \"height\", {\n        get: function () {\n            return this._height;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    TextureSoftware.prototype.uploadFromData = function (data, miplevel) {\n        if (miplevel === void 0) { miplevel = 0; }\n        console.log(\"uploadFromData: \" + data + \" miplevel: \" + miplevel);\n        this._mipLevels[miplevel] = data.data;\n    };\n    TextureSoftware.prototype.getData = function (miplevel) {\n        return this._mipLevels[miplevel];\n    };\n    TextureSoftware.prototype.getMipLevelsCount = function () {\n        return this._mipLevels.length;\n    };\n    return TextureSoftware;\n}());\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.default = TextureSoftware;\n\n},{}],\"awayjs-stagegl/lib/base/TextureWebGL\":[function(require,module,exports){\n\"use strict\";\nvar __extends = (this && this.__extends) || function (d, b) {\n    for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p];\n    function __() { this.constructor = d; }\n    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n};\nvar TextureBaseWebGL_1 = require(\"../base/TextureBaseWebGL\");\nvar TextureWebGL = (function (_super) {\n    __extends(TextureWebGL, _super);\n    function TextureWebGL(gl, width, height) {\n        _super.call(this, gl);\n        this.textureType = \"texture2d\";\n        this._width = width;\n        this._height = height;\n        this._glTexture = this._gl.createTexture();\n    }\n    TextureWebGL.prototype.dispose = function () {\n        this._gl.deleteTexture(this._glTexture);\n    };\n    Object.defineProperty(TextureWebGL.prototype, \"width\", {\n        get: function () {\n            return this._width;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(TextureWebGL.prototype, \"height\", {\n        get: function () {\n            return this._height;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(TextureWebGL.prototype, \"frameBuffer\", {\n        get: function () {\n            if (!this._frameBuffer) {\n                this._frameBuffer = this._gl.createFramebuffer();\n                this._gl.bindFramebuffer(this._gl.FRAMEBUFFER, this._frameBuffer);\n                this._gl.bindTexture(this._gl.TEXTURE_2D, this._glTexture);\n                this._gl.texImage2D(this._gl.TEXTURE_2D, 0, this._gl.RGBA, this._width, this._height, 0, this._gl.RGBA, this._gl.UNSIGNED_BYTE, null);\n                var renderBuffer = this._gl.createRenderbuffer();\n                this._gl.bindRenderbuffer(this._gl.RENDERBUFFER, renderBuffer);\n                this._gl.renderbufferStorage(this._gl.RENDERBUFFER, this._gl.DEPTH_STENCIL, this._width, this._height);\n                this._gl.framebufferTexture2D(this._gl.FRAMEBUFFER, this._gl.COLOR_ATTACHMENT0, this._gl.TEXTURE_2D, this._glTexture, 0);\n                this._gl.framebufferRenderbuffer(this._gl.FRAMEBUFFER, this._gl.DEPTH_STENCIL_ATTACHMENT, this._gl.RENDERBUFFER, renderBuffer);\n                this._gl.bindTexture(this._gl.TEXTURE_2D, null);\n                this._gl.bindRenderbuffer(this._gl.RENDERBUFFER, null);\n                this._gl.bindFramebuffer(this._gl.FRAMEBUFFER, null);\n            }\n            return this._frameBuffer;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    TextureWebGL.prototype.uploadFromData = function (data, miplevel) {\n        if (miplevel === void 0) { miplevel = 0; }\n        this._gl.bindTexture(this._gl.TEXTURE_2D, this._glTexture);\n        this._gl.texImage2D(this._gl.TEXTURE_2D, miplevel, this._gl.RGBA, this._gl.RGBA, this._gl.UNSIGNED_BYTE, data);\n        this._gl.bindTexture(this._gl.TEXTURE_2D, null);\n    };\n    TextureWebGL.prototype.uploadCompressedTextureFromByteArray = function (data, byteArrayOffset /*uint*/, async) {\n        if (async === void 0) { async = false; }\n        var ext = this._gl.getExtension(\"WEBKIT_WEBGL_compressed_texture_s3tc\");\n        //this._gl.compressedTexImage2D(this._gl.TEXTURE_2D, 0, this)\n    };\n    Object.defineProperty(TextureWebGL.prototype, \"glTexture\", {\n        get: function () {\n            return this._glTexture;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    TextureWebGL.prototype.generateMipmaps = function () {\n        //TODO: implement generating mipmaps\n        //this._gl.bindTexture( this._gl.TEXTURE_2D, this._glTexture );\n        //this._gl.generateMipmap(this._gl.TEXTURE_2D);\n        //this._gl.bindTexture( this._gl.TEXTURE_2D, null );\n    };\n    return TextureWebGL;\n}(TextureBaseWebGL_1.default));\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.default = TextureWebGL;\n\n},{\"../base/TextureBaseWebGL\":\"awayjs-stagegl/lib/base/TextureBaseWebGL\"}],\"awayjs-stagegl/lib/base/VertexBufferFlash\":[function(require,module,exports){\n\"use strict\";\nvar __extends = (this && this.__extends) || function (d, b) {\n    for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p];\n    function __() { this.constructor = d; }\n    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n};\nvar OpCodes_1 = require(\"../base/OpCodes\");\nvar ResourceBaseFlash_1 = require(\"../base/ResourceBaseFlash\");\nvar VertexBufferFlash = (function (_super) {\n    __extends(VertexBufferFlash, _super);\n    function VertexBufferFlash(context, numVertices, dataPerVertex) {\n        _super.call(this);\n        this._context = context;\n        this._numVertices = numVertices;\n        this._dataPerVertex = dataPerVertex;\n        this._context.addStream(String.fromCharCode(OpCodes_1.default.initVertexBuffer, dataPerVertex + OpCodes_1.default.intMask) + numVertices.toString() + \",\");\n        this._pId = this._context.execute();\n        this._context._iAddResource(this);\n    }\n    VertexBufferFlash.prototype.uploadFromArray = function (data, startVertex, numVertices) {\n        this._context.addStream(String.fromCharCode(OpCodes_1.default.uploadArrayVertexBuffer, this._pId + OpCodes_1.default.intMask) + data.join() + \"#\" + [startVertex, numVertices].join() + \",\");\n        this._context.execute();\n    };\n    VertexBufferFlash.prototype.uploadFromByteArray = function (data, startVertex, numVertices) {\n    };\n    Object.defineProperty(VertexBufferFlash.prototype, \"numVertices\", {\n        get: function () {\n            return this._numVertices;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(VertexBufferFlash.prototype, \"dataPerVertex\", {\n        get: function () {\n            return this._dataPerVertex;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    VertexBufferFlash.prototype.dispose = function () {\n        this._context.addStream(String.fromCharCode(OpCodes_1.default.disposeVertexBuffer, this._pId + OpCodes_1.default.intMask));\n        this._context.execute();\n        this._context._iRemoveResource(this);\n        this._context = null;\n    };\n    return VertexBufferFlash;\n}(ResourceBaseFlash_1.default));\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.default = VertexBufferFlash;\n\n},{\"../base/OpCodes\":\"awayjs-stagegl/lib/base/OpCodes\",\"../base/ResourceBaseFlash\":\"awayjs-stagegl/lib/base/ResourceBaseFlash\"}],\"awayjs-stagegl/lib/base/VertexBufferSoftware\":[function(require,module,exports){\n\"use strict\";\nvar VertexBufferSoftware = (function () {\n    //private _dataOffset:number;\n    function VertexBufferSoftware(numVertices, dataPerVertex) {\n        this._numVertices = numVertices;\n        this._dataPerVertex = dataPerVertex;\n    }\n    VertexBufferSoftware.prototype.uploadFromArray = function (vertices, startVertex, numVertices) {\n        console.log(\"VertexBufferSoftware.uploadFromArray\");\n        //this._dataOffset = startVertex * this._dataPerVertex;\n        this._floatData = new Float32Array(vertices);\n    };\n    VertexBufferSoftware.prototype.uploadFromByteArray = function (data, startVertex, numVertices) {\n        console.log(\"VertexBufferSoftware.uploadFromByteArray\");\n        //this._dataOffset = startVertex * this._dataPerVertex;\n        this._floatData = new Float32Array(data, startVertex * this._dataPerVertex, numVertices * this._dataPerVertex / 4);\n        this._uintData = new Uint8Array(data);\n    };\n    Object.defineProperty(VertexBufferSoftware.prototype, \"numVertices\", {\n        get: function () {\n            return this._numVertices;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(VertexBufferSoftware.prototype, \"dataPerVertex\", {\n        get: function () {\n            return this._dataPerVertex;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(VertexBufferSoftware.prototype, \"attributesPerVertex\", {\n        get: function () {\n            return this._dataPerVertex / 4;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    VertexBufferSoftware.prototype.dispose = function () {\n        this._floatData = null;\n    };\n    Object.defineProperty(VertexBufferSoftware.prototype, \"data\", {\n        get: function () {\n            return this._floatData;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(VertexBufferSoftware.prototype, \"uintData\", {\n        get: function () {\n            return this._uintData;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    return VertexBufferSoftware;\n}());\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.default = VertexBufferSoftware;\n\n},{}],\"awayjs-stagegl/lib/base/VertexBufferWebGL\":[function(require,module,exports){\n\"use strict\";\nvar VertexBufferWebGL = (function () {\n    function VertexBufferWebGL(gl, numVertices, dataPerVertex) {\n        this._gl = gl;\n        this._buffer = this._gl.createBuffer();\n        this._numVertices = numVertices;\n        this._dataPerVertex = dataPerVertex;\n    }\n    VertexBufferWebGL.prototype.uploadFromArray = function (vertices, startVertex, numVertices) {\n        this._gl.bindBuffer(this._gl.ARRAY_BUFFER, this._buffer);\n        if (startVertex)\n            this._gl.bufferSubData(this._gl.ARRAY_BUFFER, startVertex * this._dataPerVertex, new Float32Array(vertices));\n        else\n            this._gl.bufferData(this._gl.ARRAY_BUFFER, new Float32Array(vertices), this._gl.STATIC_DRAW);\n    };\n    VertexBufferWebGL.prototype.uploadFromByteArray = function (data, startVertex, numVertices) {\n        this._gl.bindBuffer(this._gl.ARRAY_BUFFER, this._buffer);\n        if (startVertex)\n            this._gl.bufferSubData(this._gl.ARRAY_BUFFER, startVertex * this._dataPerVertex, data);\n        else\n            this._gl.bufferData(this._gl.ARRAY_BUFFER, data, this._gl.STATIC_DRAW);\n    };\n    Object.defineProperty(VertexBufferWebGL.prototype, \"numVertices\", {\n        get: function () {\n            return this._numVertices;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(VertexBufferWebGL.prototype, \"dataPerVertex\", {\n        get: function () {\n            return this._dataPerVertex;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(VertexBufferWebGL.prototype, \"glBuffer\", {\n        get: function () {\n            return this._buffer;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    VertexBufferWebGL.prototype.dispose = function () {\n        this._gl.deleteBuffer(this._buffer);\n    };\n    return VertexBufferWebGL;\n}());\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.default = VertexBufferWebGL;\n\n},{}],\"awayjs-stagegl/lib/base\":[function(require,module,exports){\n\"use strict\";\nvar ContextGLBlendFactor_1 = require(\"./base/ContextGLBlendFactor\");\nexports.ContextGLBlendFactor = ContextGLBlendFactor_1.default;\nvar ContextGLClearMask_1 = require(\"./base/ContextGLClearMask\");\nexports.ContextGLClearMask = ContextGLClearMask_1.default;\nvar ContextGLCompareMode_1 = require(\"./base/ContextGLCompareMode\");\nexports.ContextGLCompareMode = ContextGLCompareMode_1.default;\nvar ContextGLDrawMode_1 = require(\"./base/ContextGLDrawMode\");\nexports.ContextGLDrawMode = ContextGLDrawMode_1.default;\nvar ContextGLMipFilter_1 = require(\"./base/ContextGLMipFilter\");\nexports.ContextGLMipFilter = ContextGLMipFilter_1.default;\nvar ContextGLProfile_1 = require(\"./base/ContextGLProfile\");\nexports.ContextGLProfile = ContextGLProfile_1.default;\nvar ContextGLProgramType_1 = require(\"./base/ContextGLProgramType\");\nexports.ContextGLProgramType = ContextGLProgramType_1.default;\nvar ContextGLStencilAction_1 = require(\"./base/ContextGLStencilAction\");\nexports.ContextGLStencilAction = ContextGLStencilAction_1.default;\nvar ContextGLTextureFilter_1 = require(\"./base/ContextGLTextureFilter\");\nexports.ContextGLTextureFilter = ContextGLTextureFilter_1.default;\nvar ContextGLTextureFormat_1 = require(\"./base/ContextGLTextureFormat\");\nexports.ContextGLTextureFormat = ContextGLTextureFormat_1.default;\nvar ContextGLTriangleFace_1 = require(\"./base/ContextGLTriangleFace\");\nexports.ContextGLTriangleFace = ContextGLTriangleFace_1.default;\nvar ContextGLVertexBufferFormat_1 = require(\"./base/ContextGLVertexBufferFormat\");\nexports.ContextGLVertexBufferFormat = ContextGLVertexBufferFormat_1.default;\nvar ContextGLWrapMode_1 = require(\"./base/ContextGLWrapMode\");\nexports.ContextGLWrapMode = ContextGLWrapMode_1.default;\nvar ContextMode_1 = require(\"./base/ContextMode\");\nexports.ContextMode = ContextMode_1.default;\nvar ContextSoftware_1 = require(\"./base/ContextSoftware\");\nexports.ContextSoftware = ContextSoftware_1.default;\nvar ContextStage3D_1 = require(\"./base/ContextStage3D\");\nexports.ContextStage3D = ContextStage3D_1.default;\nvar ContextWebGL_1 = require(\"./base/ContextWebGL\");\nexports.ContextWebGL = ContextWebGL_1.default;\nvar CubeTextureFlash_1 = require(\"./base/CubeTextureFlash\");\nexports.CubeTextureFlash = CubeTextureFlash_1.default;\nvar CubeTextureWebGL_1 = require(\"./base/CubeTextureWebGL\");\nexports.CubeTextureWebGL = CubeTextureWebGL_1.default;\nvar IndexBufferFlash_1 = require(\"./base/IndexBufferFlash\");\nexports.IndexBufferFlash = IndexBufferFlash_1.default;\nvar IndexBufferSoftware_1 = require(\"./base/IndexBufferSoftware\");\nexports.IndexBufferSoftware = IndexBufferSoftware_1.default;\nvar IndexBufferWebGL_1 = require(\"./base/IndexBufferWebGL\");\nexports.IndexBufferWebGL = IndexBufferWebGL_1.default;\nvar OpCodes_1 = require(\"./base/OpCodes\");\nexports.OpCodes = OpCodes_1.default;\nvar ProgramFlash_1 = require(\"./base/ProgramFlash\");\nexports.ProgramFlash = ProgramFlash_1.default;\nvar ProgramSoftware_1 = require(\"./base/ProgramSoftware\");\nexports.ProgramSoftware = ProgramSoftware_1.default;\nvar ProgramVOSoftware_1 = require(\"./base/ProgramVOSoftware\");\nexports.ProgramVOSoftware = ProgramVOSoftware_1.default;\nvar ProgramWebGL_1 = require(\"./base/ProgramWebGL\");\nexports.ProgramWebGL = ProgramWebGL_1.default;\nvar ResourceBaseFlash_1 = require(\"./base/ResourceBaseFlash\");\nexports.ResourceBaseFlash = ResourceBaseFlash_1.default;\nvar SamplerState_1 = require(\"./base/SamplerState\");\nexports.SamplerState = SamplerState_1.default;\nvar SoftwareSamplerState_1 = require(\"./base/SoftwareSamplerState\");\nexports.SoftwareSamplerState = SoftwareSamplerState_1.default;\nvar Stage_1 = require(\"./base/Stage\");\nexports.Stage = Stage_1.default;\nvar TextureBaseWebGL_1 = require(\"./base/TextureBaseWebGL\");\nexports.TextureBaseWebGL = TextureBaseWebGL_1.default;\nvar TextureFlash_1 = require(\"./base/TextureFlash\");\nexports.TextureFlash = TextureFlash_1.default;\nvar TextureSoftware_1 = require(\"./base/TextureSoftware\");\nexports.TextureSoftware = TextureSoftware_1.default;\nvar TextureWebGL_1 = require(\"./base/TextureWebGL\");\nexports.TextureWebGL = TextureWebGL_1.default;\nvar VertexBufferFlash_1 = require(\"./base/VertexBufferFlash\");\nexports.VertexBufferFlash = VertexBufferFlash_1.default;\nvar VertexBufferSoftware_1 = require(\"./base/VertexBufferSoftware\");\nexports.VertexBufferSoftware = VertexBufferSoftware_1.default;\nvar VertexBufferWebGL_1 = require(\"./base/VertexBufferWebGL\");\nexports.VertexBufferWebGL = VertexBufferWebGL_1.default;\n\n},{\"./base/ContextGLBlendFactor\":\"awayjs-stagegl/lib/base/ContextGLBlendFactor\",\"./base/ContextGLClearMask\":\"awayjs-stagegl/lib/base/ContextGLClearMask\",\"./base/ContextGLCompareMode\":\"awayjs-stagegl/lib/base/ContextGLCompareMode\",\"./base/ContextGLDrawMode\":\"awayjs-stagegl/lib/base/ContextGLDrawMode\",\"./base/ContextGLMipFilter\":\"awayjs-stagegl/lib/base/ContextGLMipFilter\",\"./base/ContextGLProfile\":\"awayjs-stagegl/lib/base/ContextGLProfile\",\"./base/ContextGLProgramType\":\"awayjs-stagegl/lib/base/ContextGLProgramType\",\"./base/ContextGLStencilAction\":\"awayjs-stagegl/lib/base/ContextGLStencilAction\",\"./base/ContextGLTextureFilter\":\"awayjs-stagegl/lib/base/ContextGLTextureFilter\",\"./base/ContextGLTextureFormat\":\"awayjs-stagegl/lib/base/ContextGLTextureFormat\",\"./base/ContextGLTriangleFace\":\"awayjs-stagegl/lib/base/ContextGLTriangleFace\",\"./base/ContextGLVertexBufferFormat\":\"awayjs-stagegl/lib/base/ContextGLVertexBufferFormat\",\"./base/ContextGLWrapMode\":\"awayjs-stagegl/lib/base/ContextGLWrapMode\",\"./base/ContextMode\":\"awayjs-stagegl/lib/base/ContextMode\",\"./base/ContextSoftware\":\"awayjs-stagegl/lib/base/ContextSoftware\",\"./base/ContextStage3D\":\"awayjs-stagegl/lib/base/ContextStage3D\",\"./base/ContextWebGL\":\"awayjs-stagegl/lib/base/ContextWebGL\",\"./base/CubeTextureFlash\":\"awayjs-stagegl/lib/base/CubeTextureFlash\",\"./base/CubeTextureWebGL\":\"awayjs-stagegl/lib/base/CubeTextureWebGL\",\"./base/IndexBufferFlash\":\"awayjs-stagegl/lib/base/IndexBufferFlash\",\"./base/IndexBufferSoftware\":\"awayjs-stagegl/lib/base/IndexBufferSoftware\",\"./base/IndexBufferWebGL\":\"awayjs-stagegl/lib/base/IndexBufferWebGL\",\"./base/OpCodes\":\"awayjs-stagegl/lib/base/OpCodes\",\"./base/ProgramFlash\":\"awayjs-stagegl/lib/base/ProgramFlash\",\"./base/ProgramSoftware\":\"awayjs-stagegl/lib/base/ProgramSoftware\",\"./base/ProgramVOSoftware\":\"awayjs-stagegl/lib/base/ProgramVOSoftware\",\"./base/ProgramWebGL\":\"awayjs-stagegl/lib/base/ProgramWebGL\",\"./base/ResourceBaseFlash\":\"awayjs-stagegl/lib/base/ResourceBaseFlash\",\"./base/SamplerState\":\"awayjs-stagegl/lib/base/SamplerState\",\"./base/SoftwareSamplerState\":\"awayjs-stagegl/lib/base/SoftwareSamplerState\",\"./base/Stage\":\"awayjs-stagegl/lib/base/Stage\",\"./base/TextureBaseWebGL\":\"awayjs-stagegl/lib/base/TextureBaseWebGL\",\"./base/TextureFlash\":\"awayjs-stagegl/lib/base/TextureFlash\",\"./base/TextureSoftware\":\"awayjs-stagegl/lib/base/TextureSoftware\",\"./base/TextureWebGL\":\"awayjs-stagegl/lib/base/TextureWebGL\",\"./base/VertexBufferFlash\":\"awayjs-stagegl/lib/base/VertexBufferFlash\",\"./base/VertexBufferSoftware\":\"awayjs-stagegl/lib/base/VertexBufferSoftware\",\"./base/VertexBufferWebGL\":\"awayjs-stagegl/lib/base/VertexBufferWebGL\"}],\"awayjs-stagegl/lib/events/StageEvent\":[function(require,module,exports){\n\"use strict\";\nvar __extends = (this && this.__extends) || function (d, b) {\n    for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p];\n    function __() { this.constructor = d; }\n    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n};\nvar EventBase_1 = require(\"awayjs-core/lib/events/EventBase\");\nvar StageEvent = (function (_super) {\n    __extends(StageEvent, _super);\n    function StageEvent(type, stage) {\n        _super.call(this, type);\n        this._stage = stage;\n    }\n    Object.defineProperty(StageEvent.prototype, \"stage\", {\n        /**\n         *\n         */\n        get: function () {\n            return this._stage;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    /**\n     *\n     */\n    StageEvent.prototype.clone = function () {\n        return new StageEvent(this.type, this._stage);\n    };\n    /**\n     *\n     */\n    StageEvent.STAGE_ERROR = \"stageError\";\n    /**\n     *\n     */\n    StageEvent.CONTEXT_CREATED = \"contextCreated\";\n    /**\n     *\n     */\n    StageEvent.CONTEXT_DISPOSED = \"contextDisposed\";\n    /**\n     *\n     */\n    StageEvent.CONTEXT_RECREATED = \"contextRecreated\";\n    /**\n     *\n     */\n    StageEvent.VIEWPORT_UPDATED = \"viewportUpdated\";\n    return StageEvent;\n}(EventBase_1.default));\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.default = StageEvent;\n\n},{\"awayjs-core/lib/events/EventBase\":undefined}],\"awayjs-stagegl/lib/events\":[function(require,module,exports){\n\"use strict\";\nvar StageEvent_1 = require(\"./events/StageEvent\");\nexports.StageEvent = StageEvent_1.default;\n\n},{\"./events/StageEvent\":\"awayjs-stagegl/lib/events/StageEvent\"}],\"awayjs-stagegl/lib/image/GL_BitmapImage2D\":[function(require,module,exports){\n\"use strict\";\nvar __extends = (this && this.__extends) || function (d, b) {\n    for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p];\n    function __() { this.constructor = d; }\n    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n};\nvar MipmapGenerator_1 = require(\"awayjs-core/lib/utils/MipmapGenerator\");\nvar GL_Image2D_1 = require(\"../image/GL_Image2D\");\n/**\n *\n * @class away.pool.ImageObjectBase\n */\nvar GL_BitmapImage2D = (function (_super) {\n    __extends(GL_BitmapImage2D, _super);\n    function GL_BitmapImage2D() {\n        _super.apply(this, arguments);\n    }\n    GL_BitmapImage2D.prototype.activate = function (index, mipmap) {\n        if (!this._texture) {\n            this._createTexture();\n            this._invalid = true;\n        }\n        if (!this._mipmap && mipmap) {\n            this._mipmap = true;\n            this._invalid = true;\n        }\n        if (this._invalid) {\n            this._invalid = false;\n            if (mipmap) {\n                var mipmapData = this._mipmapData || (this._mipmapData = new Array());\n                MipmapGenerator_1.default._generateMipMaps(this._asset.getCanvas(), mipmapData, true);\n                var len = mipmapData.length;\n                for (var i = 0; i < len; i++)\n                    this._texture.uploadFromData(mipmapData[i].getImageData(), i);\n            }\n            else {\n                this._texture.uploadFromData(this._asset.getImageData(), 0);\n            }\n        }\n        _super.prototype.activate.call(this, index, mipmap);\n    };\n    /**\n     *\n     */\n    GL_BitmapImage2D.prototype.onClear = function (event) {\n        _super.prototype.onClear.call(this, event);\n        if (this._mipmapData) {\n            var len = this._mipmapData.length;\n            for (var i = 0; i < len; i++)\n                MipmapGenerator_1.default._freeMipMapHolder(this._mipmapData[i]);\n        }\n    };\n    return GL_BitmapImage2D;\n}(GL_Image2D_1.default));\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.default = GL_BitmapImage2D;\n\n},{\"../image/GL_Image2D\":\"awayjs-stagegl/lib/image/GL_Image2D\",\"awayjs-core/lib/utils/MipmapGenerator\":undefined}],\"awayjs-stagegl/lib/image/GL_BitmapImageCube\":[function(require,module,exports){\n\"use strict\";\nvar __extends = (this && this.__extends) || function (d, b) {\n    for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p];\n    function __() { this.constructor = d; }\n    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n};\nvar MipmapGenerator_1 = require(\"awayjs-core/lib/utils/MipmapGenerator\");\nvar GL_ImageCube_1 = require(\"../image/GL_ImageCube\");\n/**\n *\n * @class away.pool.ImageObjectBase\n */\nvar GL_BitmapImageCube = (function (_super) {\n    __extends(GL_BitmapImageCube, _super);\n    function GL_BitmapImageCube() {\n        _super.apply(this, arguments);\n        this._mipmapDataArray = new Array(6);\n    }\n    GL_BitmapImageCube.prototype.activate = function (index, mipmap) {\n        if (!this._texture) {\n            this._createTexture();\n            this._invalid = true;\n        }\n        if (!this._mipmap && mipmap) {\n            this._mipmap = true;\n            this._invalid = true;\n        }\n        if (this._invalid) {\n            this._invalid = false;\n            for (var i = 0; i < 6; ++i) {\n                if (mipmap) {\n                    var mipmapData = this._mipmapDataArray[i] || (this._mipmapDataArray[i] = new Array());\n                    MipmapGenerator_1.default._generateMipMaps(this._asset.getCanvas(i), mipmapData, true);\n                    var len = mipmapData.length;\n                    for (var j = 0; j < len; j++)\n                        this._texture.uploadFromData(mipmapData[j].getImageData(), i, j);\n                }\n                else {\n                    this._texture.uploadFromData(this._asset.getImageData(i), i, 0);\n                }\n            }\n        }\n        _super.prototype.activate.call(this, index, mipmap);\n    };\n    /**\n     *\n     */\n    GL_BitmapImageCube.prototype.onClear = function (event) {\n        _super.prototype.onClear.call(this, event);\n        for (var i = 0; i < 6; i++) {\n            var mipmapData = this._mipmapDataArray[i];\n            if (mipmapData) {\n                var len = mipmapData.length;\n                for (var j = 0; j < len; i++)\n                    MipmapGenerator_1.default._freeMipMapHolder(mipmapData[j]);\n            }\n        }\n    };\n    return GL_BitmapImageCube;\n}(GL_ImageCube_1.default));\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.default = GL_BitmapImageCube;\n\n},{\"../image/GL_ImageCube\":\"awayjs-stagegl/lib/image/GL_ImageCube\",\"awayjs-core/lib/utils/MipmapGenerator\":undefined}],\"awayjs-stagegl/lib/image/GL_Image2D\":[function(require,module,exports){\n\"use strict\";\nvar __extends = (this && this.__extends) || function (d, b) {\n    for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p];\n    function __() { this.constructor = d; }\n    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n};\nvar ContextGLTextureFormat_1 = require(\"../base/ContextGLTextureFormat\");\nvar GL_ImageBase_1 = require(\"../image/GL_ImageBase\");\n/**\n *\n * @class away.pool.GL_ImageBase\n */\nvar GL_Image2D = (function (_super) {\n    __extends(GL_Image2D, _super);\n    function GL_Image2D() {\n        _super.apply(this, arguments);\n    }\n    /**\n     *\n     * @param context\n     * @returns {ITexture}\n     */\n    GL_Image2D.prototype._createTexture = function () {\n        this._texture = this._stage.context.createTexture(this._asset.width, this._asset.height, ContextGLTextureFormat_1.default.BGRA, true);\n    };\n    return GL_Image2D;\n}(GL_ImageBase_1.default));\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.default = GL_Image2D;\n\n},{\"../base/ContextGLTextureFormat\":\"awayjs-stagegl/lib/base/ContextGLTextureFormat\",\"../image/GL_ImageBase\":\"awayjs-stagegl/lib/image/GL_ImageBase\"}],\"awayjs-stagegl/lib/image/GL_ImageBase\":[function(require,module,exports){\n\"use strict\";\nvar __extends = (this && this.__extends) || function (d, b) {\n    for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p];\n    function __() { this.constructor = d; }\n    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n};\nvar AbstractMethodError_1 = require(\"awayjs-core/lib/errors/AbstractMethodError\");\nvar AbstractionBase_1 = require(\"awayjs-core/lib/library/AbstractionBase\");\n/**\n *\n * @class away.pool.GL_ImageBase\n */\nvar GL_ImageBase = (function (_super) {\n    __extends(GL_ImageBase, _super);\n    function GL_ImageBase(asset, stage) {\n        _super.call(this, asset, stage);\n        this.usages = 0;\n        this._stage = stage;\n    }\n    Object.defineProperty(GL_ImageBase.prototype, \"texture\", {\n        get: function () {\n            if (!this._texture) {\n                this._createTexture();\n                this._invalid = true;\n            }\n            return this._texture;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    /**\n     *\n     */\n    GL_ImageBase.prototype.onClear = function (event) {\n        _super.prototype.onClear.call(this, event);\n        if (this._texture) {\n            this._texture.dispose();\n            this._texture = null;\n        }\n    };\n    GL_ImageBase.prototype.activate = function (index, mipmap) {\n        this._stage.context.setTextureAt(index, this._texture);\n    };\n    GL_ImageBase.prototype._createTexture = function () {\n        throw new AbstractMethodError_1.default();\n    };\n    return GL_ImageBase;\n}(AbstractionBase_1.default));\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.default = GL_ImageBase;\n\n},{\"awayjs-core/lib/errors/AbstractMethodError\":undefined,\"awayjs-core/lib/library/AbstractionBase\":undefined}],\"awayjs-stagegl/lib/image/GL_ImageCube\":[function(require,module,exports){\n\"use strict\";\nvar __extends = (this && this.__extends) || function (d, b) {\n    for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p];\n    function __() { this.constructor = d; }\n    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n};\nvar ContextGLTextureFormat_1 = require(\"../base/ContextGLTextureFormat\");\nvar GL_ImageBase_1 = require(\"../image/GL_ImageBase\");\n/**\n *\n * @class away.pool.GL_ImageCubeBase\n */\nvar GL_ImageCube = (function (_super) {\n    __extends(GL_ImageCube, _super);\n    function GL_ImageCube() {\n        _super.apply(this, arguments);\n    }\n    /**\n     *\n     * @param context\n     * @returns {ITexture}\n     */\n    GL_ImageCube.prototype._createTexture = function () {\n        this._texture = this._stage.context.createCubeTexture(this._asset.size, ContextGLTextureFormat_1.default.BGRA, false);\n    };\n    return GL_ImageCube;\n}(GL_ImageBase_1.default));\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.default = GL_ImageCube;\n\n},{\"../base/ContextGLTextureFormat\":\"awayjs-stagegl/lib/base/ContextGLTextureFormat\",\"../image/GL_ImageBase\":\"awayjs-stagegl/lib/image/GL_ImageBase\"}],\"awayjs-stagegl/lib/image/GL_RenderImage2D\":[function(require,module,exports){\n\"use strict\";\nvar __extends = (this && this.__extends) || function (d, b) {\n    for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p];\n    function __() { this.constructor = d; }\n    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n};\nvar GL_Image2D_1 = require(\"../image/GL_Image2D\");\n/**\n *\n * @class away.pool.ImageObjectBase\n */\nvar GL_RenderImage2D = (function (_super) {\n    __extends(GL_RenderImage2D, _super);\n    function GL_RenderImage2D() {\n        _super.apply(this, arguments);\n    }\n    GL_RenderImage2D.prototype.activate = function (index, mipmap) {\n        _super.prototype.activate.call(this, index, false);\n        //TODO: allow automatic mipmap generation\n    };\n    return GL_RenderImage2D;\n}(GL_Image2D_1.default));\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.default = GL_RenderImage2D;\n\n},{\"../image/GL_Image2D\":\"awayjs-stagegl/lib/image/GL_Image2D\"}],\"awayjs-stagegl/lib/image/GL_RenderImageCube\":[function(require,module,exports){\n\"use strict\";\nvar __extends = (this && this.__extends) || function (d, b) {\n    for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p];\n    function __() { this.constructor = d; }\n    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n};\nvar GL_ImageCube_1 = require(\"../image/GL_ImageCube\");\n/**\n *\n * @class away.pool.ImageObjectBase\n */\nvar GL_RenderImageCube = (function (_super) {\n    __extends(GL_RenderImageCube, _super);\n    function GL_RenderImageCube() {\n        _super.apply(this, arguments);\n    }\n    GL_RenderImageCube.prototype.activate = function (index, mipmap) {\n        _super.prototype.activate.call(this, index, false);\n        //TODO: allow automatic mipmap generation\n    };\n    return GL_RenderImageCube;\n}(GL_ImageCube_1.default));\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.default = GL_RenderImageCube;\n\n},{\"../image/GL_ImageCube\":\"awayjs-stagegl/lib/image/GL_ImageCube\"}],\"awayjs-stagegl/lib/image/GL_Sampler2D\":[function(require,module,exports){\n\"use strict\";\nvar __extends = (this && this.__extends) || function (d, b) {\n    for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p];\n    function __() { this.constructor = d; }\n    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n};\nvar GL_SamplerBase_1 = require(\"../image/GL_SamplerBase\");\n/**\n *\n * @class away.pool.GL_SamplerBase\n */\nvar GL_Sampler2D = (function (_super) {\n    __extends(GL_Sampler2D, _super);\n    function GL_Sampler2D(sampler, stage) {\n        _super.call(this, sampler, stage);\n        this._sampler = sampler;\n    }\n    GL_Sampler2D.prototype.activate = function (index) {\n        this._stage.setSamplerState(index, this._sampler.repeat, this._sampler.smooth, this._sampler.mipmap);\n    };\n    return GL_Sampler2D;\n}(GL_SamplerBase_1.default));\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.default = GL_Sampler2D;\n\n},{\"../image/GL_SamplerBase\":\"awayjs-stagegl/lib/image/GL_SamplerBase\"}],\"awayjs-stagegl/lib/image/GL_SamplerBase\":[function(require,module,exports){\n\"use strict\";\nvar __extends = (this && this.__extends) || function (d, b) {\n    for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p];\n    function __() { this.constructor = d; }\n    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n};\nvar AbstractMethodError_1 = require(\"awayjs-core/lib/errors/AbstractMethodError\");\nvar AbstractionBase_1 = require(\"awayjs-core/lib/library/AbstractionBase\");\n/**\n *\n * @class away.pool.GL_SamplerBase\n */\nvar GL_SamplerBase = (function (_super) {\n    __extends(GL_SamplerBase, _super);\n    function GL_SamplerBase(asset, stage) {\n        _super.call(this, asset, stage);\n        this._stage = stage;\n    }\n    GL_SamplerBase.prototype.activate = function (index) {\n        throw new AbstractMethodError_1.default();\n    };\n    return GL_SamplerBase;\n}(AbstractionBase_1.default));\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.default = GL_SamplerBase;\n\n},{\"awayjs-core/lib/errors/AbstractMethodError\":undefined,\"awayjs-core/lib/library/AbstractionBase\":undefined}],\"awayjs-stagegl/lib/image/GL_SamplerCube\":[function(require,module,exports){\n\"use strict\";\nvar __extends = (this && this.__extends) || function (d, b) {\n    for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p];\n    function __() { this.constructor = d; }\n    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n};\nvar GL_SamplerBase_1 = require(\"../image/GL_SamplerBase\");\n/**\n *\n * @class away.pool.GL_SamplerBase\n */\nvar GL_SamplerCube = (function (_super) {\n    __extends(GL_SamplerCube, _super);\n    function GL_SamplerCube(sampler, stage) {\n        _super.call(this, sampler, stage);\n        this._sampler = sampler;\n    }\n    GL_SamplerCube.prototype.activate = function (index) {\n        this._stage.setSamplerState(index, false, this._sampler.smooth, this._sampler.mipmap);\n    };\n    return GL_SamplerCube;\n}(GL_SamplerBase_1.default));\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.default = GL_SamplerCube;\n\n},{\"../image/GL_SamplerBase\":\"awayjs-stagegl/lib/image/GL_SamplerBase\"}],\"awayjs-stagegl/lib/image/ProgramDataPool\":[function(require,module,exports){\n\"use strict\";\nvar ProgramData_1 = require(\"../image/ProgramData\");\n/**\n * @class away.pool.ProgramDataPool\n */\nvar ProgramDataPool = (function () {\n    /**\n     * //TODO\n     *\n     * @param textureDataClass\n     */\n    function ProgramDataPool(stage) {\n        this._pool = new Object();\n        this._stage = stage;\n    }\n    /**\n     * //TODO\n     *\n     * @param materialOwner\n     * @returns ITexture\n     */\n    ProgramDataPool.prototype.getItem = function (vertexString, fragmentString) {\n        var key = vertexString + fragmentString;\n        return this._pool[key] || (this._pool[key] = new ProgramData_1.default(this, this._stage, vertexString, fragmentString));\n    };\n    /**\n     * //TODO\n     *\n     * @param materialOwner\n     */\n    ProgramDataPool.prototype.disposeItem = function (key) {\n        this._pool[key] = null;\n    };\n    return ProgramDataPool;\n}());\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.default = ProgramDataPool;\n\n},{\"../image/ProgramData\":\"awayjs-stagegl/lib/image/ProgramData\"}],\"awayjs-stagegl/lib/image/ProgramData\":[function(require,module,exports){\n\"use strict\";\n/**\n *\n * @class away.pool.ProgramDataBase\n */\nvar ProgramData = (function () {\n    function ProgramData(pool, context, vertexString, fragmentString) {\n        this.usages = 0;\n        this._pool = pool;\n        this.stage = context;\n        this.vertexString = vertexString;\n        this.fragmentString = fragmentString;\n        this.stage.registerProgram(this);\n    }\n    /**\n     *\n     */\n    ProgramData.prototype.dispose = function () {\n        this.usages--;\n        if (!this.usages) {\n            this._pool.disposeItem(this.vertexString + this.fragmentString);\n            this.stage.unRegisterProgram(this);\n            if (this.program) {\n                this.program.dispose();\n                this.program = null;\n            }\n        }\n    };\n    ProgramData.PROGRAMDATA_ID_COUNT = 0;\n    return ProgramData;\n}());\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.default = ProgramData;\n\n},{}],\"awayjs-stagegl/lib/image\":[function(require,module,exports){\n\"use strict\";\nvar GL_BitmapImage2D_1 = require(\"./image/GL_BitmapImage2D\");\nexports.GL_BitmapImage2D = GL_BitmapImage2D_1.default;\nvar GL_BitmapImageCube_1 = require(\"./image/GL_BitmapImageCube\");\nexports.GL_BitmapImageCube = GL_BitmapImageCube_1.default;\nvar GL_Image2D_1 = require(\"./image/GL_Image2D\");\nexports.GL_Image2D = GL_Image2D_1.default;\nvar GL_ImageBase_1 = require(\"./image/GL_ImageBase\");\nexports.GL_ImageBase = GL_ImageBase_1.default;\nvar GL_ImageCube_1 = require(\"./image/GL_ImageCube\");\nexports.GL_ImageCube = GL_ImageCube_1.default;\nvar GL_RenderImage2D_1 = require(\"./image/GL_RenderImage2D\");\nexports.GL_RenderImage2D = GL_RenderImage2D_1.default;\nvar GL_RenderImageCube_1 = require(\"./image/GL_RenderImageCube\");\nexports.GL_RenderImageCube = GL_RenderImageCube_1.default;\nvar GL_Sampler2D_1 = require(\"./image/GL_Sampler2D\");\nexports.GL_Sampler2D = GL_Sampler2D_1.default;\nvar GL_SamplerBase_1 = require(\"./image/GL_SamplerBase\");\nexports.GL_SamplerBase = GL_SamplerBase_1.default;\nvar GL_SamplerCube_1 = require(\"./image/GL_SamplerCube\");\nexports.GL_SamplerCube = GL_SamplerCube_1.default;\nvar ProgramData_1 = require(\"./image/ProgramData\");\nexports.ProgramData = ProgramData_1.default;\nvar ProgramDataPool_1 = require(\"./image/ProgramDataPool\");\nexports.ProgramDataPool = ProgramDataPool_1.default;\n\n},{\"./image/GL_BitmapImage2D\":\"awayjs-stagegl/lib/image/GL_BitmapImage2D\",\"./image/GL_BitmapImageCube\":\"awayjs-stagegl/lib/image/GL_BitmapImageCube\",\"./image/GL_Image2D\":\"awayjs-stagegl/lib/image/GL_Image2D\",\"./image/GL_ImageBase\":\"awayjs-stagegl/lib/image/GL_ImageBase\",\"./image/GL_ImageCube\":\"awayjs-stagegl/lib/image/GL_ImageCube\",\"./image/GL_RenderImage2D\":\"awayjs-stagegl/lib/image/GL_RenderImage2D\",\"./image/GL_RenderImageCube\":\"awayjs-stagegl/lib/image/GL_RenderImageCube\",\"./image/GL_Sampler2D\":\"awayjs-stagegl/lib/image/GL_Sampler2D\",\"./image/GL_SamplerBase\":\"awayjs-stagegl/lib/image/GL_SamplerBase\",\"./image/GL_SamplerCube\":\"awayjs-stagegl/lib/image/GL_SamplerCube\",\"./image/ProgramData\":\"awayjs-stagegl/lib/image/ProgramData\",\"./image/ProgramDataPool\":\"awayjs-stagegl/lib/image/ProgramDataPool\"}],\"awayjs-stagegl/lib/library/GL_IAssetClass\":[function(require,module,exports){\n\"use strict\";\n\n},{}],\"awayjs-stagegl/lib/library\":[function(require,module,exports){\n\"use strict\";\n\n},{}],\"awayjs-stagegl/lib/managers/StageManager\":[function(require,module,exports){\n\"use strict\";\nvar __extends = (this && this.__extends) || function (d, b) {\n    for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p];\n    function __() { this.constructor = d; }\n    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n};\nvar EventDispatcher_1 = require(\"awayjs-core/lib/events/EventDispatcher\");\nvar ArgumentError_1 = require(\"awayjs-core/lib/errors/ArgumentError\");\nvar Stage_1 = require(\"../base/Stage\");\nvar StageEvent_1 = require(\"../events/StageEvent\");\n/**\n * The StageManager class provides a multiton object that handles management for Stage objects.\n *\n * @see away.base.Stage\n */\nvar StageManager = (function (_super) {\n    __extends(StageManager, _super);\n    /**\n     * Creates a new StageManager class.\n     * @param stage The Stage object that contains the Stage objects to be managed.\n     * @private\n     */\n    function StageManager() {\n        var _this = this;\n        _super.call(this);\n        this._stages = new Array(StageManager.STAGE_MAX_QUANTITY);\n        this._onContextCreatedDelegate = function (event) { return _this.onContextCreated(event); };\n    }\n    /**\n     * Gets a StageManager instance for the given Stage object.\n     * @param stage The Stage object that contains the Stage objects to be managed.\n     * @return The StageManager instance for the given Stage object.\n     */\n    StageManager.getInstance = function () {\n        if (this._instance == null)\n            this._instance = new StageManager();\n        return this._instance;\n    };\n    /**\n     * Requests the Stage for the given index.\n     *\n     * @param index The index of the requested Stage.\n     * @param forceSoftware Whether to force software mode even if hardware acceleration is available.\n     * @param profile The compatibility profile, an enumeration of ContextProfile\n     * @return The Stage for the given index.\n     */\n    StageManager.prototype.getStageAt = function (index, forceSoftware, profile, mode) {\n        if (forceSoftware === void 0) { forceSoftware = false; }\n        if (profile === void 0) { profile = \"baseline\"; }\n        if (mode === void 0) { mode = \"auto\"; }\n        if (index < 0 || index >= StageManager.STAGE_MAX_QUANTITY)\n            throw new ArgumentError_1.default(\"Index is out of bounds [0..\" + StageManager.STAGE_MAX_QUANTITY + \"]\");\n        if (!this._stages[index]) {\n            StageManager._numStages++;\n            if (document) {\n                var canvas = document.createElement(\"canvas\");\n                canvas.id = \"stage\" + index;\n                document.body.appendChild(canvas);\n            }\n            var stage = this._stages[index] = new Stage_1.default(canvas, index, this, forceSoftware, profile);\n            stage.addEventListener(StageEvent_1.default.CONTEXT_CREATED, this._onContextCreatedDelegate);\n            stage.requestContext(forceSoftware, profile, mode);\n        }\n        return stage;\n    };\n    /**\n     * Removes a Stage from the manager.\n     * @param stage\n     * @private\n     */\n    StageManager.prototype.iRemoveStage = function (stage) {\n        StageManager._numStages--;\n        stage.removeEventListener(StageEvent_1.default.CONTEXT_CREATED, this._onContextCreatedDelegate);\n        this._stages[stage.stageIndex] = null;\n    };\n    /**\n     * Get the next available stage. An error is thrown if there are no StageProxies available\n     * @param forceSoftware Whether to force software mode even if hardware acceleration is available.\n     * @param profile The compatibility profile, an enumeration of ContextProfile\n     * @return The allocated stage\n     */\n    StageManager.prototype.getFreeStage = function (forceSoftware, profile, mode) {\n        if (forceSoftware === void 0) { forceSoftware = false; }\n        if (profile === void 0) { profile = \"baseline\"; }\n        if (mode === void 0) { mode = \"auto\"; }\n        var i = 0;\n        var len = this._stages.length;\n        while (i < len) {\n            if (!this._stages[i])\n                return this.getStageAt(i, forceSoftware, profile, mode);\n            ++i;\n        }\n        return null;\n    };\n    Object.defineProperty(StageManager.prototype, \"hasFreeStage\", {\n        /**\n         * Checks if a new stage can be created and managed by the class.\n         * @return true if there is one slot free for a new stage\n         */\n        get: function () {\n            return StageManager._numStages < StageManager.STAGE_MAX_QUANTITY ? true : false;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(StageManager.prototype, \"numSlotsFree\", {\n        /**\n         * Returns the amount of stage objects that can be created and managed by the class\n         * @return the amount of free slots\n         */\n        get: function () {\n            return StageManager.STAGE_MAX_QUANTITY - StageManager._numStages;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(StageManager.prototype, \"numSlotsUsed\", {\n        /**\n         * Returns the amount of Stage objects currently managed by the class.\n         * @return the amount of slots used\n         */\n        get: function () {\n            return StageManager._numStages;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(StageManager.prototype, \"numSlotsTotal\", {\n        /**\n         * The maximum amount of Stage objects that can be managed by the class\n         */\n        get: function () {\n            return this._stages.length;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    StageManager.prototype.onContextCreated = function (event) {\n        //var stage:Stage = <Stage> e.target;\n        //document.body.appendChild(stage.canvas)\n    };\n    StageManager.STAGE_MAX_QUANTITY = 8;\n    StageManager._numStages = 0;\n    return StageManager;\n}(EventDispatcher_1.default));\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.default = StageManager;\n\n},{\"../base/Stage\":\"awayjs-stagegl/lib/base/Stage\",\"../events/StageEvent\":\"awayjs-stagegl/lib/events/StageEvent\",\"awayjs-core/lib/errors/ArgumentError\":undefined,\"awayjs-core/lib/events/EventDispatcher\":undefined}],\"awayjs-stagegl/lib/managers\":[function(require,module,exports){\n\"use strict\";\nvar StageManager_1 = require(\"./managers/StageManager\");\nexports.StageManager = StageManager_1.default;\n\n},{\"./managers/StageManager\":\"awayjs-stagegl/lib/managers/StageManager\"}]},{},[1])\n\n",
    "import * as aglsl\t\t\t\t\tfrom \"./lib/aglsl\";\nimport * as attributes\t\t\t\tfrom \"./lib/attributes\";\nimport * as base\t\t\t\t\tfrom \"./lib/base\";\nimport * as events\t\t\t\t\tfrom \"./lib/events\";\nimport * as image\t\t\t\t\tfrom \"./lib/image\";\nimport * as library\t\t\t\t\tfrom \"./lib/library\";\nimport * as managers\t\t\t\tfrom \"./lib/managers\";\n\nimport AttributesBuffer\t\t\t\tfrom \"awayjs-core/lib/attributes/AttributesBuffer\";\nimport BitmapImage2D\t\t\t\tfrom \"awayjs-core/lib/image/BitmapImage2D\";\nimport BitmapImageCube\t\t\t\tfrom \"awayjs-core/lib/image/BitmapImageCube\";\nimport Image2D\t\t\t\t\t\tfrom \"awayjs-core/lib/image/Image2D\";\nimport ImageCube\t\t\t\t\tfrom \"awayjs-core/lib/image/ImageCube\";\nimport SpecularImage2D\t\t\t\tfrom \"awayjs-core/lib/image/SpecularImage2D\";\nimport Sampler2D\t\t\t\t\tfrom \"awayjs-core/lib/image/Sampler2D\";\nimport SamplerCube\t\t\t\t\tfrom \"awayjs-core/lib/image/SamplerCube\";\n\nbase.Stage.registerAbstraction(attributes.GL_AttributesBuffer, AttributesBuffer);\nbase.Stage.registerAbstraction(image.GL_RenderImage2D, Image2D);\nbase.Stage.registerAbstraction(image.GL_RenderImageCube, ImageCube);\nbase.Stage.registerAbstraction(image.GL_BitmapImage2D, BitmapImage2D);\nbase.Stage.registerAbstraction(image.GL_BitmapImageCube, BitmapImageCube);\nbase.Stage.registerAbstraction(image.GL_BitmapImage2D, SpecularImage2D);\nbase.Stage.registerAbstraction(image.GL_Sampler2D, Sampler2D);\nbase.Stage.registerAbstraction(image.GL_SamplerCube, SamplerCube);\n\nexport {\n\taglsl,\n\tattributes,\n\tbase,\n\tevents,\n\timage,\n\tlibrary,\n\tmanagers\n}",
    "import ByteArray\t\t\t\tfrom \"awayjs-core/lib/utils/ByteArray\";\n\nimport Description\t\t\t\tfrom \"../aglsl/Description\";\nimport Header\t\t\t\t\tfrom \"../aglsl/Header\";\nimport Mapping\t\t\t\t\tfrom \"../aglsl/Mapping\";\nimport Token\t\t\t\t\tfrom \"../aglsl/Token\";\n\nclass AGALTokenizer\n{\n\tconstructor()\n\t{\n\t}\n\n\tpublic decribeAGALByteArray(bytes:ByteArray)\n\t{\n\t\tvar header:Header = new Header();\n\n\t\tif (bytes.readUnsignedByte() != 0xa0) {\n\t\t\tthrow \"Bad AGAL: Missing 0xa0 magic byte.\";\n\t\t}\n\n\t\theader.version = bytes.readUnsignedInt();\n\t\tif (header.version >= 0x10) {\n\t\t\tbytes.readUnsignedByte();\n\t\t\theader.version >>= 1;\n\t\t}\n\t\tif (bytes.readUnsignedByte() != 0xa1) {\n\t\t\tthrow \"Bad AGAL: Missing 0xa1 magic byte.\";\n\t\t}\n\n\t\theader.progid = bytes.readUnsignedByte();\n\t\tswitch (header.progid) {\n\t\t\tcase 1:\n\t\t\t\theader.type = \"fragment\";\n\t\t\t\tbreak;\n\t\t\tcase 0:\n\t\t\t\theader.type = \"vertex\";\n\t\t\t\tbreak;\n\t\t\tcase 2:\n\t\t\t\theader.type = \"cpu\";\n\t\t\t\tbreak;\n\t\t\tdefault:\n\t\t\t\theader.type = \"\";\n\t\t\t\tbreak;\n\t\t}\n\n\t\tvar desc:Description = new Description();\n\t\tvar tokens:Token[] = [];\n\t\twhile (bytes.position < bytes.length) {\n\t\t\tvar token:Token = new Token();\n\n\t\t\ttoken.opcode = bytes.readUnsignedInt();\n\t\t\tvar lutentry = Mapping.agal2glsllut[token.opcode];\n\t\t\tif (!lutentry) {\n\t\t\t\tthrow \"Opcode not valid or not implemented yet: \" + token.opcode;\n\t\t\t}\n\t\t\tif (lutentry.matrixheight) {\n\t\t\t\tdesc.hasmatrix = true;\n\t\t\t}\n\t\t\tif (lutentry.dest) {\n\t\t\t\ttoken.dest.regnum = bytes.readUnsignedShort();\n\t\t\t\ttoken.dest.mask = bytes.readUnsignedByte();\n\t\t\t\ttoken.dest.regtype = bytes.readUnsignedByte();\n\t\t\t\tdesc.regwrite[token.dest.regtype][token.dest.regnum] |= token.dest.mask;\n\t\t\t} else {\n\t\t\t\ttoken.dest = null;\n\t\t\t\tbytes.readUnsignedInt();\n\t\t\t}\n\t\t\tif (lutentry.a) {\n\t\t\t\tthis.readReg(token.a, 1, desc, bytes);\n\t\t\t} else {\n\t\t\t\ttoken.a = null;\n\t\t\t\tbytes.readUnsignedInt();\n\t\t\t\tbytes.readUnsignedInt();\n\t\t\t}\n\t\t\tif (lutentry.b) {\n\t\t\t\tthis.readReg(token.b, lutentry.matrixheight | 0, desc, bytes);\n\t\t\t} else {\n\t\t\t\ttoken.b = null;\n\t\t\t\tbytes.readUnsignedInt();\n\t\t\t\tbytes.readUnsignedInt();\n\t\t\t}\n\t\t\ttokens.push(token);\n\t\t}\n\t\tdesc.header = header;\n\t\tdesc.tokens = tokens;\n\n\t\treturn desc;\n\t}\n\n\tpublic readReg(s, mh, desc, bytes)\n\t{\n\t\ts.regnum = bytes.readUnsignedShort();\n\t\ts.indexoffset = bytes.readByte();\n\t\ts.swizzle = bytes.readUnsignedByte();\n\t\ts.regtype = bytes.readUnsignedByte();\n\t\tdesc.regread[s.regtype][s.regnum] = 0xf; // sould be swizzle to mask? should be |=                                                 \n\t\tif (s.regtype == 0x5) {\n\t\t\t// sampler\n\t\t\ts.lodbiad = s.indexoffset;\n\t\t\ts.indexoffset = undefined;\n\t\t\ts.swizzle = undefined;\n\n\t\t\t// sampler \n\t\t\ts.readmode = bytes.readUnsignedByte();\n\t\t\ts.dim = s.readmode >> 4;\n\t\t\ts.readmode &= 0xf;\n\t\t\ts.special = bytes.readUnsignedByte();\n\t\t\ts.wrap = s.special >> 4;\n\t\t\ts.special &= 0xf;\n\t\t\ts.mipmap = bytes.readUnsignedByte();\n\t\t\ts.filter = s.mipmap >> 4;\n\t\t\ts.mipmap &= 0xf;\n\t\t\tdesc.samplers[s.regnum] = s;\n\t\t} else {\n\t\t\ts.indexregtype = bytes.readUnsignedByte();\n\t\t\ts.indexselect = bytes.readUnsignedByte();\n\t\t\ts.indirectflag = bytes.readUnsignedByte();\n\t\t}\n\t\tif (s.indirectflag) {\n\t\t\tdesc.hasindirect = true;\n\t\t}\n\t\tif (!s.indirectflag && mh) {\n\t\t\tfor (var mhi:number = 0; mhi < mh; mhi++) //TODO wrong, should be |=\n\t\t\t{\n\t\t\t\tdesc.regread[s.regtype][s.regnum + mhi] = desc.regread[s.regtype][s.regnum];\n\t\t\t}\n\t\t}\n\t}\n}\n\nexport default AGALTokenizer;",
    "import Description\t\t\t\tfrom \"../aglsl/Description\";\nimport Mapping\t\t\t\t\tfrom \"../aglsl/Mapping\";\n\nclass AGLSLParser\n{\n\tpublic static maxvertexconstants:number = 128;\n\tpublic static maxfragconstants:number = 28;\n\tpublic static maxtemp:number = 8;\n\tpublic static maxstreams:number = 8;\n\tpublic static maxtextures:number = 8;\n\t\n\tpublic parse(desc:Description)\n\t{\n\t\tvar header:string = \"\";\n\t\tvar body:string = \"\";\n\n\t\theader += \"precision highp float;\\n\";\n\t\tvar tag = desc.header.type[0]; //TODO\n\n\t\t// declare uniforms\n\t\tif (desc.header.type == \"vertex\") {\n\t\t\theader += \"uniform float yflip;\\n\";\n\t\t}\n\t\tif (!desc.hasindirect) {\n\t\t\tfor (var i:number = 0; i < desc.regread[0x1].length; i++) {\n\t\t\t\tif (desc.regread[0x1][i]) {\n\t\t\t\t\theader += \"uniform vec4 \" + tag + \"c\" + i + \";\\n\";\n\t\t\t\t}\n\t\t\t}\n\t\t} else {\n\t\t\theader += \"uniform vec4 \" + tag + \"carrr[\" + AGLSLParser.maxvertexconstants + \"];\\n\";                // use max const count instead\n\t\t}\n\n\t\t// declare temps\n\t\tfor (var i = 0; i < desc.regread[0x2].length || i < desc.regwrite[0x2].length; i++) {\n\t\t\tif (desc.regread[0x2][i] || desc.regwrite[0x2][i]) // duh, have to check write only also...\n\t\t\t{\n\t\t\t\theader += \"vec4 \" + tag + \"t\" + i + \";\\n\";\n\t\t\t}\n\t\t}\n\n\t\t// declare streams\n\t\tfor (var i:number = 0; i < desc.regread[0x0].length; i++) {\n\t\t\tif (desc.regread[0x0][i]) {\n\t\t\t\theader += \"attribute vec4 va\" + i + \";\\n\";\n\t\t\t}\n\t\t}\n\n\t\t// declare interpolated\n\t\tfor (var i:number = 0; i < desc.regread[0x4].length || i < desc.regwrite[0x4].length; i++) {\n\t\t\tif (desc.regread[0x4][i] || desc.regwrite[0x4][i]) {\n\t\t\t\theader += \"varying vec4 vi\" + i + \";\\n\";\n\t\t\t}\n\t\t}\n\n\t\t// declare samplers\n\t\tvar samptype:Array<string> = [\"2D\", \"Cube\", \"3D\", \"\"];\n\t\tfor (var i:number = 0; i < desc.samplers.length; i++) {\n\t\t\tif (desc.samplers[i]) {\n\t\t\t\theader += \"uniform sampler\" + samptype[ desc.samplers[i].dim & 3 ] + \" fs\" + i + \";\\n\";\n\t\t\t}\n\t\t}\n\n\t\t// extra gl fluff: setup position and depth adjust temps\n\t\tif (desc.header.type == \"vertex\") {\n\t\t\theader += \"vec4 outpos;\\n\";\n\t\t}\n\t\tif (desc.writedepth) {\n\t\t\theader += \"vec4 tmp_FragDepth;\\n\";\n\t\t}\n\t\t//if ( desc.hasmatrix ) \n\t\t//    header += \"vec4 tmp_matrix;\\n\";\n\n\t\tvar derivatives:boolean = false;\n\n\t\t// start body of code\n\t\tbody += \"void main() {\\n\";\n\n\t\tfor (var i:number = 0; i < desc.tokens.length; i++) {\n\n\t\t\tvar lutentry = Mapping.agal2glsllut[desc.tokens[i].opcode];\n\n\t\t\tif(lutentry.s.indexOf(\"dFdx\") != -1 || lutentry.s.indexOf(\"dFdy\") != -1) derivatives = true;\n\t\t\tif (!lutentry) {\n\t\t\t\tthrow \"Opcode not valid or not implemented yet: \"\n\t\t\t\t/*+token.opcode;*/\n\t\t\t}\n\t\t\tvar sublines = lutentry.matrixheight || 1;\n\n\t\t\tfor (var sl:number = 0; sl < sublines; sl++) {\n\t\t\t\tvar line:string = \"  \" + lutentry.s;\n\t\t\t\tif (desc.tokens[i].dest) {\n\t\t\t\t\tif (lutentry.matrixheight) {\n\t\t\t\t\t\tif (((desc.tokens[i].dest.mask >> sl) & 1) != 1) {\n\t\t\t\t\t\t\tcontinue;\n\t\t\t\t\t\t}\n\t\t\t\t\t\tvar destregstring:string = this.regtostring(desc.tokens[i].dest.regtype, desc.tokens[i].dest.regnum, desc, tag);\n\t\t\t\t\t\tvar destcaststring:string = \"float\";\n\t\t\t\t\t\tvar destmaskstring = [\"x\", \"y\", \"z\", \"w\"][sl];\n\t\t\t\t\t\tdestregstring += \".\" + destmaskstring;\n\t\t\t\t\t} else {\n\t\t\t\t\t\tvar destregstring:string = this.regtostring(desc.tokens[i].dest.regtype, desc.tokens[i].dest.regnum, desc, tag);\n\t\t\t\t\t\tvar destcaststring:string;\n\t\t\t\t\t\tvar destmaskstring:string;\n\t\t\t\t\t\tif (desc.tokens[i].dest.mask != 0xf) {\n\t\t\t\t\t\t\tvar ndest:number = 0;\n\t\t\t\t\t\t\tdestmaskstring = \"\";\n\t\t\t\t\t\t\tif (desc.tokens[i].dest.mask & 1) {\n\t\t\t\t\t\t\t\tndest++;\n\t\t\t\t\t\t\t\tdestmaskstring += \"x\";\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\tif (desc.tokens[i].dest.mask & 2) {\n\t\t\t\t\t\t\t\tndest++;\n\t\t\t\t\t\t\t\tdestmaskstring += \"y\";\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\tif (desc.tokens[i].dest.mask & 4) {\n\t\t\t\t\t\t\t\tndest++;\n\t\t\t\t\t\t\t\tdestmaskstring += \"z\";\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\tif (desc.tokens[i].dest.mask & 8) {\n\t\t\t\t\t\t\t\tndest++;\n\t\t\t\t\t\t\t\tdestmaskstring += \"w\";\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\tdestregstring += \".\" + destmaskstring;\n\t\t\t\t\t\t\tswitch (ndest) {\n\t\t\t\t\t\t\t\tcase 1:\n\t\t\t\t\t\t\t\t\tdestcaststring = \"float\";\n\t\t\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\t\t\tcase 2:\n\t\t\t\t\t\t\t\t\tdestcaststring = \"vec2\";\n\t\t\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\t\t\tcase 3:\n\t\t\t\t\t\t\t\t\tdestcaststring = \"vec3\";\n\t\t\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\t\t\tdefault:\n\t\t\t\t\t\t\t\t\tthrow \"Unexpected destination mask\";\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\tdestcaststring = \"vec4\";\n\t\t\t\t\t\t\tdestmaskstring = \"xyzw\";\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t\tline = line.replace(\"%dest\", destregstring);\n\t\t\t\t\tline = line.replace(\"%cast\", destcaststring);\n\t\t\t\t\tline = line.replace(\"%dm\", destmaskstring);\n\t\t\t\t}\n\t\t\t\tvar dwm:number = 0xf;\n\t\t\t\tif (!lutentry.ndwm && lutentry.dest && desc.tokens[i].dest) {\n\t\t\t\t\tdwm = desc.tokens[i].dest.mask;\n\t\t\t\t}\n\t\t\t\tif (desc.tokens[i].a) {\n\t\t\t\t\tline = line.replace(\"%a\", this.sourcetostring(desc.tokens[i].a, 0, dwm, lutentry.scalar, desc, tag));\n\t\t\t\t}\n\t\t\t\tif (desc.tokens[i].b) {\n\t\t\t\t\tline = line.replace(\"%b\", this.sourcetostring(desc.tokens[i].b, sl, dwm, lutentry.scalar, desc, tag));\n\t\t\t\t\tif (desc.tokens[i].b.regtype == 0x5) {\n\t\t\t\t\t\t// sampler dim\n\t\t\t\t\t\tvar texdim = [\"2D\", \"Cube\", \"3D\"][desc.tokens[i].b.dim];\n\t\t\t\t\t\tvar texsize = [\"vec2\", \"vec3\", \"vec3\"][desc.tokens[i].b.dim];\n\t\t\t\t\t\tline = line.replace(\"%texdim\", texdim);\n\t\t\t\t\t\tline = line.replace(\"%texsize\", texsize);\n\t\t\t\t\t\tvar texlod:string = \"\";\n\t\t\t\t\t\tline = line.replace(\"%lod\", texlod);\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\tbody += line;\n\t\t\t}\n\t\t}\n\n\t\t// adjust z from opengl range of -1..1 to 0..1 as in d3d, this also enforces a left handed coordinate system\n\t\tif (desc.header.type == \"vertex\") {\n\t\t\tbody += \"  gl_Position = vec4(outpos.x, outpos.y, outpos.z*2.0 - outpos.w, outpos.w);\\n\";\n\t\t}\n\n\t\t//flag based switch\n\t\tif (derivatives && desc.header.type == \"fragment\") {\n\t\t\theader = \"#extension GL_OES_standard_derivatives : enable\\n\" + header;\n\t\t}\n\n\t\t// clamp fragment depth\n\t\tif (desc.writedepth) {\n\t\t\tbody += \"  gl_FragDepth = clamp(tmp_FragDepth,0.0,1.0);\\n\";\n\t\t}\n\n\t\t// close main\n\t\tbody += \"}\\n\";\n\n\t\treturn header + body;\n\t}\n\n\tpublic regtostring(regtype:number, regnum:number, desc:Description, tag)\n\t{\n\t\tswitch (regtype) {\n\t\t\tcase 0x0:\n\t\t\t\treturn \"va\" + regnum;\n\t\t\tcase 0x1:\n\t\t\t\tif (desc.hasindirect && desc.header.type == \"vertex\") {\n\t\t\t\t\treturn \"vcarrr[\" + regnum + \"]\";\n\t\t\t\t} else {\n\t\t\t\t\treturn tag + \"c\" + regnum;\n\t\t\t\t}\n\t\t\tcase 0x2:\n\t\t\t\treturn tag + \"t\" + regnum;\n\t\t\tcase 0x3:\n\t\t\t\treturn desc.header.type == \"vertex\"? \"outpos\" : \"gl_FragColor\";\n\t\t\tcase 0x4:\n\t\t\t\treturn \"vi\" + regnum;\n\t\t\tcase 0x5:\n\t\t\t\treturn \"fs\" + regnum;\n\t\t\tcase 0x6:\n\t\t\t\treturn \"tmp_FragDepth\";\n\t\t\tdefault:\n\t\t\t\tthrow \"Unknown register type\";\n\t\t}\n\t}\n\n\tpublic sourcetostring(s, subline, dwm, isscalar, desc, tag):string\n\t{\n\t\tvar swiz = [ \"x\", \"y\", \"z\", \"w\" ];\n\t\tvar r;\n\n\t\tif (s.indirectflag) {\n\t\t\tr = \"vcarrr[int(\" + this.regtostring(s.indexregtype, s.regnum, desc, tag) + \".\" + swiz[s.indexselect] + \")\";\n\t\t\tvar realofs = subline + s.indexoffset;\n\t\t\tif (realofs < 0) r += realofs.toString();\n\t\t\tif (realofs > 0) r += \"+\" + realofs.toString();\n\t\t\tr += \"]\";\n\t\t} else {\n\t\t\tr = this.regtostring(s.regtype, s.regnum + subline, desc, tag);\n\t\t}\n\n\t\t// samplers never add swizzle        \n\t\tif (s.regtype == 0x5) {\n\t\t\treturn r;\n\t\t}\n\n\t\t// scalar, first component only\n\t\tif (isscalar) {\n\t\t\treturn r + \".\" + swiz[(s.swizzle >> 0) & 3];\n\t\t}\n\n\t\t// identity\n\t\tif (s.swizzle == 0xe4 && dwm == 0xf) {\n\t\t\treturn r;\n\t\t}\n\n\t\t// with destination write mask folded in\n\t\tr += \".\";\n\t\tif (dwm & 1) r += swiz[(s.swizzle >> 0) & 3];\n\t\tif (dwm & 2) r += swiz[(s.swizzle >> 2) & 3];\n\t\tif (dwm & 4) r += swiz[(s.swizzle >> 4) & 3];\n\t\tif (dwm & 8) r += swiz[(s.swizzle >> 6) & 3];\n\t\treturn r;\n\t}\n}\n\nexport default AGLSLParser;",
    "import Header\t\t\t\t\tfrom \"../aglsl/Header\";\nimport Token\t\t\t\t\tfrom \"../aglsl/Token\";\n\nclass Description\n{\n\tpublic regread:any[] = [\n\t\t[],\n\t\t[],\n\t\t[],\n\t\t[],\n\t\t[],\n\t\t[],\n\t\t[]\n\t];\n\tpublic regwrite:any[] = [\n\t\t[],\n\t\t[],\n\t\t[],\n\t\t[],\n\t\t[],\n\t\t[],\n\t\t[]\n\t];\n\tpublic hasindirect:boolean = false;\n\tpublic writedepth:boolean = false;\n\tpublic hasmatrix:boolean = false;\n\tpublic samplers:any[] = [];\n\n\t// added due to dynamic assignment 3*0xFFFFFFuuuu\n\tpublic tokens:Token[] = [];\n\tpublic header:Header = new Header();\n\n\tconstructor()\n\t{\n\t}\n}\n\nexport default Description;",
    "class Destination\n{\n\tpublic mask:number = 0;\n\tpublic regnum:number = 0;\n\tpublic regtype:number = 0;\n\tpublic dim:number = 0;\n\n\tpublic indexoffset:number = 0;\n\tpublic swizzle:number = 0;\n\tpublic lodbiad:number = 0;\n\tpublic readmode:number = 0;\n\tpublic special:number = 0;\n\tpublic wrap:number = 0;\n\tpublic filter:number = 0;\n\n\tpublic indexregtype:number = 0;\n\tpublic indexselect:number = 0;\n\tpublic indirectflag:number = 0;\n\n\tconstructor()\n\t{\n\t}\n}\n\nexport default Destination;",
    "class Header\n{\n\tpublic progid:number = 0;\n\tpublic version:number = 0;\n\tpublic type:string = \"\";\n\n\tconstructor()\n\t{\n\t}\n}\n\nexport default Header;",
    "import OpLUT\t\t\t\t\tfrom \"../aglsl/OpLUT\";\n\nclass Mapping\n{\n\tstatic agal2glsllut:Array<OpLUT> = [\n\n\t\t//         s \t\t\t\t\t\t\t\t\t\t\t\tflags   dest    a     b \t    mw \t  mh    ndwm  scale dm\t  lod\n\t\tnew OpLUT(\"%dest = %cast(%a);\\n\", 0, true, true, false, null, null, null, null, null, null), //mov                          //0\n\t\tnew OpLUT(\"%dest = %cast(%a + %b);\\n\", 0, true, true, true, null, null, null, null, null, null), //add                      //1\n\t\tnew OpLUT(\"%dest = %cast(%a - %b);\\n\", 0, true, true, true, null, null, null, null, null, null), //sub                      //2\n\t\tnew OpLUT(\"%dest = %cast(%a * %b);\\n\", 0, true, true, true, null, null, null, null, null, null), //mul                      //3\n\t\tnew OpLUT(\"%dest = %cast(%a / %b);\\n\", 0, true, true, true, null, null, null, null, null, null), //div                      //4\n\t\tnew OpLUT(\"%dest = %cast(1.0) / %a;\\n\", 0, true, true, false, null, null, null, null, null, null), //rcp                    //5\n\t\tnew OpLUT(\"%dest = %cast(min(%a,%b));\\n\", 0, true, true, true, null, null, null, null, null, null), //min                   //6\n\t\tnew OpLUT(\"%dest = %cast(max(%a,%b));\\n\", 0, true, true, true, null, null, null, null, null, null), //max                   //7\n\t\tnew OpLUT(\"%dest = %cast(fract(%a));\\n\", 0, true, true, false, null, null, null, null, null, null), //frc                   //8\n\t\tnew OpLUT(\"%dest = %cast(sqrt(abs(%a)));\\n\", 0, true, true, false, null, null, null, null, null, null), //sqt               //9\n\t\tnew OpLUT(\"%dest = %cast(inversesqrt(abs(%a)));\\n\", 0, true, true, false, null, null, null, null, null, null), //rsq        //10\n\t\tnew OpLUT(\"%dest = %cast(pow(abs(%a),%b));\\n\", 0, true, true, true, null, null, null, null, null, null), //pow              //11\n\t\tnew OpLUT(\"%dest = %cast(log2(abs(%a)));\\n\", 0, true, true, false, null, null, null, null, null, null), //log               //12\n\t\tnew OpLUT(\"%dest = %cast(exp2(%a));\\n\", 0, true, true, false, null, null, null, null, null, null), //exp                    //13\n\n\t\t//         s \t\t\t\t\t\t\t\t\t\t\t\tflags  \tdest    a     b \t    mw \t  mh    ndwm  scale dm\t  lod\n\t\tnew OpLUT(\"%dest = %cast(normalize(vec3( %a ) ));\\n\", 0, true, true, false, null, null, true, null, null, null), //nrm      //14\n\t\tnew OpLUT(\"%dest = %cast(sin(%a));\\n\", 0, true, true, false, null, null, null, null, null, null), //sin                     //15\n\t\tnew OpLUT(\"%dest = %cast(cos(%a));\\n\", 0, true, true, false, null, null, null, null, null, null), //cos                     //16\n\t\tnew OpLUT(\"%dest = %cast(cross(vec3(%a),vec3(%b)));\\n\", 0, true, true, true, null, null, true, null, null, null), //crs     //17\n\t\tnew OpLUT(\"%dest = %cast(dot(vec3(%a),vec3(%b)));\\n\", 0, true, true, true, null, null, true, null, null, null), //dp3       //18\n\t\tnew OpLUT(\"%dest = %cast(dot(vec4(%a),vec4(%b)));\\n\", 0, true, true, true, null, null, true, null, null, null), //dp4       //19\n\t\tnew OpLUT(\"%dest = %cast(abs(%a));\\n\", 0, true, true, false, null, null, null, null, null, null), //abs                     //20\n\t\tnew OpLUT(\"%dest = %cast(%a * -1.0);\\n\", 0, true, true, false, null, null, null, null, null, null), //neg                   //21\n\t\tnew OpLUT(\"%dest = %cast(clamp(%a,0.0,1.0));\\n\", 0, true, true, false, null, null, null, null, null, null), //sat           //22\n\t\tnew OpLUT(\"%dest = %cast(dot(vec3(%a),vec3(%b)));\\n\", null, true, true, true, 3, 3, true, null, null, null), //m33          //23\n\t\tnew OpLUT(\"%dest = %cast(dot(vec4(%a),vec4(%b)));\\n\", null, true, true, true, 4, 4, true, null, null, null), //m44          //24\n\t\tnew OpLUT(\"%dest = %cast(dot(vec4(%a),vec4(%b)));\\n\", null, true, true, true, 4, 3, true, null, null, null), //m43          //25\n\t\t//s:string, flags:number, dest:boolean, a:boolean, b:boolean, matrixwidth:number, matrixheight:number, ndwm:boolean, scaler:boolean, dm:boolean, lod:boolean\n\t\tnew OpLUT(\"%dest = %cast(dFdx(%a));\\n\", 0, true, true, false, null, null, null, null, null, null), //dFdx                   //26\n\t\tnew OpLUT(\"%dest = %cast(dFdy(%a));\\n\", 0, true, true, false, null, null, null, null, null, null), //dFdy                   //27\n\t\tnew OpLUT(\"if (float(%a)==float(%b)) {;\\n\", 0, false, true, true, null, null, null, true, null, null), new OpLUT(\"if (float(%a)!=float(%b)) {;\\n\", 0, false, true, true, null, null, null, true, null, null), new OpLUT(\"if (float(%a)>=float(%b)) {;\\n\", 0, false, true, true, null, null, null, true, null, null), new OpLUT(\"if (float(%a)<float(%b)) {;\\n\", 0, false, true, true, null, null, null, true, null, null), new OpLUT(\"} else {;\\n\", 0, false, false, false, null, null, null, null, null, null), new OpLUT(\"};\\n\", 0, false, false, false, null, null, null, null, null, null), new OpLUT(null, null, null, null, false, null, null, null, null, null, null), new OpLUT(null, null, null, null, false, null, null, null, null, null, null), new OpLUT(null, null, null, null, false, null, null, null, null, null, null), new OpLUT(null, null, null, null, false, null, null, null, null, null, null),\n\n\t\t//         s \t\t\t\t\t\t\t\t\t\t\t\t\t\t\tflags  \tdest    a     b \t    mw \t  mh    ndwm  scale dm\t  lod\n\t\tnew OpLUT(\"%dest = %cast(texture%texdimLod(%b,%texsize(%a)).%dm);\\n\", null, true, true, true, null, null, null, null, true, null), new OpLUT(\"if ( float(%a)<0.0 ) discard;\\n\", null, false, true, false, null, null, null, true, null, null), new OpLUT(\"%dest = %cast(texture%texdim(%b,%texsize(%a)%lod).%dm);\\n\", null, true, true, true, null, null, true, null, true, true), new OpLUT(\"%dest = %cast(greaterThanEqual(%a,%b).%dm);\\n\", 0, true, true, true, null, null, true, null, true, null), new OpLUT(\"%dest = %cast(lessThan(%a,%b).%dm);\\n\", 0, true, true, true, null, null, true, null, true, null), new OpLUT(\"%dest = %cast(sign(%a));\\n\", 0, true, true, false, null, null, null, null, null, null), new OpLUT(\"%dest = %cast(equal(%a,%b).%dm);\\n\", 0, true, true, true, null, null, true, null, true, null), new OpLUT(\"%dest = %cast(notEqual(%a,%b).%dm);\\n\", 0, true, true, true, null, null, true, null, true, null)\n\n\t];\n\n\t//TODO: get rid of hack that fixes including definition file\n\tconstructor(include?:OpLUT)\n\t{\n\n\t}\n}\n\nexport default Mapping;",
    "class OpLUT\n{\n\n\tpublic s:string;\n\tpublic flags:number;\n\tpublic dest:boolean;\n\tpublic a:boolean;\n\tpublic b:boolean;\n\tpublic matrixwidth:number;\n\tpublic matrixheight:number;\n\tpublic ndwm:boolean;\n\tpublic scalar:boolean;\n\tpublic dm:boolean;\n\tpublic lod:boolean;\n\n\tconstructor(s:string, flags:number, dest:boolean, a:boolean, b:boolean, matrixwidth:number, matrixheight:number, ndwm:boolean, scaler:boolean, dm:boolean, lod:boolean)\n\t{\n\t\tthis.s = s;\n\t\tthis.flags = flags;\n\t\tthis.dest = dest;\n\t\tthis.a = a;\n\t\tthis.b = b;\n\t\tthis.matrixwidth = matrixwidth;\n\t\tthis.matrixheight = matrixheight;\n\t\tthis.ndwm = ndwm;\n\t\tthis.scalar = scaler;\n\t\tthis.dm = dm;\n\t\tthis.lod = lod;\n\t}\n}\n\nexport default OpLUT;",
    "import Destination\t\t\t\tfrom \"../aglsl/Destination\";\n\nclass Token\n{\n\tpublic dest:Destination = new Destination();\n\tpublic opcode:number = 0;\n\tpublic a:Destination = new Destination();\n\tpublic b:Destination = new Destination();\n\n\tconstructor()\n\t{\n\t}\n}\n\nexport default Token;",
    "import Sampler\t\t\t\t\tfrom \"../../aglsl/assembler/Sampler\";\nimport Opcode\t\t\t\t\tfrom \"../../aglsl/assembler/Opcode\";\nimport OpcodeMap\t\t\t\tfrom \"../../aglsl/assembler/OpcodeMap\";\nimport Part\t\t\t\t\t\tfrom \"../../aglsl/assembler/Part\";\nimport RegMap\t\t\t\t\tfrom \"../../aglsl/assembler/RegMap\";\nimport SamplerMap\t\t\t\tfrom \"../../aglsl/assembler/SamplerMap\";\n\n\nclass AGALMiniAssembler\n{\n\tpublic r:Object;\n\tpublic cur:Part;\n\n\tconstructor()\n\t{\n\t\tthis.r = {};\n\t\tthis.cur = new Part();\n\t}\n\n\tpublic assemble(source:string, ext_part = null, ext_version = null)\n\t{\n\t\tif (!ext_version) {\n\t\t\text_version = 1;\n\t\t}\n\n\t\tif (ext_part) {\n\t\t\tthis.addHeader(ext_part, ext_version);\n\t\t}\n\n\t\tvar lines = source.replace(/[\\f\\n\\r\\v]+/g, \"\\n\").split(\"\\n\"); // handle breaks, then split into lines\n\n\t\tfor (var i in lines) {\n\t\t\tthis.processLine(lines[i], i);\n\t\t}\n\n\t\treturn this.r;\n\t}\n\n\tprivate processLine(line, linenr)\n\t{\n\t\tvar startcomment:number = line.search(\"//\");  // remove comments\n\t\tif (startcomment != -1) {\n\t\t\tline = line.slice(0, startcomment);\n\t\t}\n\t\tline = line.replace(/^\\s+|\\s+$/g, \"\"); // remove outer space\n\t\tif (!(line.length > 0 )) {\n\t\t\treturn;\n\t\t}\n\t\tvar optsi:number = line.search(/<.*>/g); // split of options part <*> if there\n\t\tvar opts:string[] = null;\n\t\tif (optsi != -1) {\n\t\t\topts = line.slice(optsi).match(/([\\w\\.\\-\\+]+)/gi);\n\t\t\tline = line.slice(0, optsi);\n\t\t}\n\n\t\t// get opcode/command\t\t\t\t            \n\t\tvar tokens = line.match(/([\\w\\.\\+\\[\\]]+)/gi); // get tokens in line\n\t\tif (!tokens || tokens.length < 1) {\n\t\t\tif (line.length >= 3) {\n\t\t\t\tconsole.log(\"Warning: bad line \" + linenr + \": \" + line);\n\t\t\t}\n\t\t\treturn;\n\t\t}\n\n\t\t//console.log ( linenr, line, cur, tokens ); \n\t\tswitch (tokens[0]) {\n\t\t\tcase \"part\":\n\t\t\t\tthis.addHeader(tokens[1], Number(tokens[2]));\n\t\t\t\tbreak;\n\t\t\tcase \"endpart\":\n\t\t\t\tif (!this.cur) {\n\t\t\t\t\tthrow \"Unexpected endpart\";\n\t\t\t\t}\n\t\t\t\tthis.cur.data.position = 0;\n\t\t\t\tthis.cur = null;\n\t\t\t\treturn;\n\t\t\tdefault:\n\t\t\t\tif (!this.cur) {\n\t\t\t\t\tconsole.log(\"Warning: bad line \" + linenr + \": \" + line + \" (Outside of any part definition)\");\n\t\t\t\t\treturn;\n\t\t\t\t}\n\t\t\t\tif (this.cur.name == \"comment\") {\n\t\t\t\t\treturn;\n\t\t\t\t}\n\t\t\t\tvar op:Opcode = <Opcode> OpcodeMap.map[tokens[0]];\n\t\t\t\tif (!op) {\n\t\t\t\t\tthrow \"Bad opcode \" + tokens[0] + \" \" + linenr + \": \" + line;\n\t\t\t\t}\n\t\t\t\t// console.log( 'AGALMiniAssembler' , 'op' , op );\n\n\t\t\t\tthis.emitOpcode(this.cur, op.opcode);\n\t\t\t\tvar ti:number = 1;\n\t\t\t\tif (op.dest && op.dest != \"none\") {\n\t\t\t\t\tif (!this.emitDest(this.cur, tokens[ti++], op.dest)) {\n\t\t\t\t\t\tthrow \"Bad destination register \" + tokens[ti - 1] + \" \" + linenr + \": \" + line;\n\t\t\t\t\t}\n\t\t\t\t} else {\n\t\t\t\t\tthis.emitZeroDword(this.cur);\n\t\t\t\t}\n\n\t\t\t\tif (op.a && op.a.format != \"none\") {\n\t\t\t\t\tif (!this.emitSource(this.cur, tokens[ti++], op.a)) throw \"Bad source register \" + tokens[ti - 1] + \" \" + linenr + \": \" + line;\n\t\t\t\t} else {\n\t\t\t\t\tthis.emitZeroQword(this.cur);\n\t\t\t\t}\n\n\t\t\t\tif (op.b && op.b.format != \"none\") {\n\t\t\t\t\tif (op.b.format == \"sampler\") {\n\t\t\t\t\t\tif (!this.emitSampler(this.cur, tokens[ti++], op.b, opts)) {\n\t\t\t\t\t\t\tthrow \"Bad sampler register \" + tokens[ti - 1] + \" \" + linenr + \": \" + line;\n\t\t\t\t\t\t}\n\t\t\t\t\t} else {\n\t\t\t\t\t\tif (!this.emitSource(this.cur, tokens[ti++], op.b)) {\n\t\t\t\t\t\t\tthrow \"Bad source register \" + tokens[ti - 1] + \" \" + linenr + \": \" + line;\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t} else {\n\t\t\t\t\tthis.emitZeroQword(this.cur);\n\t\t\t\t}\n\t\t\t\tbreak;\n\t\t}\n\t}\n\n\tpublic emitHeader(pr:Part)\n\t{\n\t\tpr.data.writeUnsignedByte(0xa0); \t// tag version\n\t\tpr.data.writeUnsignedInt(pr.version);\n\t\tif (pr.version >= 0x10) {\n\t\t\tpr.data.writeUnsignedByte(0); // align, for higher versions\n\t\t}\n\t\tpr.data.writeUnsignedByte(0xa1);\t\t// tag program id\n\t\tswitch (pr.name) {\n\t\t\tcase \"fragment\" :\n\t\t\t\tpr.data.writeUnsignedByte(1);\n\t\t\t\tbreak;\n\t\t\tcase \"vertex\" :\n\t\t\t\tpr.data.writeUnsignedByte(0);\n\t\t\t\tbreak;\n\t\t\tcase \"cpu\" :\n\t\t\t\tpr.data.writeUnsignedByte(2);\n\t\t\t\tbreak;\n\t\t\tdefault :\n\t\t\t\tpr.data.writeUnsignedByte(0xff);\n\t\t\t\tbreak; // unknown/comment\n\t\t}\n\t}\n\n\tpublic emitOpcode(pr:Part, opcode)\n\t{\n\t\tpr.data.writeUnsignedInt(opcode);\n\t\t//console.log ( \"Emit opcode: \", opcode ); \n\t}\n\n\tpublic emitZeroDword(pr:Part)\n\t{\n\t\tpr.data.writeUnsignedInt(0);\n\t}\n\n\tpublic emitZeroQword(pr)\n\t{\n\t\tpr.data.writeUnsignedInt(0);\n\t\tpr.data.writeUnsignedInt(0);\n\t}\n\n\tpublic emitDest(pr, token, opdest)\n\t{\n\n\t\t//console.log( 'AGALMiniAssembler' , 'emitDest' , 'RegMap.map' , RegMap.map);\n\t\tvar reg = token.match(/([fov]?[tpocidavs])(\\d*)(\\.[xyzw]{1,4})?/i); // g1: regname, g2:regnum, g3:mask\n\n\t\t// console.log( 'AGALMiniAssembler' , 'emitDest' , 'reg' , reg , reg[1] , RegMap.map[reg[1]] );\n\t\t// console.log( 'AGALMiniAssembler' , 'emitDest' , 'RegMap.map[reg[1]]' , RegMap.map[reg[1]] , 'bool' , !RegMap.map[reg[1]] ) ;\n\n\t\tif (!RegMap.map[reg[1]]) return false;\n\t\tvar em = { num:reg[2]? reg[2] : 0, code:RegMap.map[reg[1]].code, mask:this.stringToMask(reg[3]) };\n\t\tpr.data.writeUnsignedShort(em.num);\n\t\tpr.data.writeUnsignedByte(em.mask);\n\t\tpr.data.writeUnsignedByte(em.code);\n\t\t//console.log ( \"  Emit dest: \", em );\n\t\treturn true;\n\t}\n\n\tpublic stringToMask(s:string):number\n\t{\n\t\tif (!s) return 0xf;\n\t\tvar r = 0;\n\t\tif (s.indexOf(\"x\") != -1) r |= 1;\n\t\tif (s.indexOf(\"y\") != -1) r |= 2;\n\t\tif (s.indexOf(\"z\") != -1) r |= 4;\n\t\tif (s.indexOf(\"w\") != -1) r |= 8;\n\t\treturn r;\n\t}\n\n\tpublic stringToSwizzle(s)\n\t{\n\t\tif (!s) {\n\t\t\treturn 0xe4;\n\t\t}\n\t\tvar chartoindex = { x:0, y:1, z:2, w:3 };\n\t\tvar sw = 0;\n\n\t\tif (s.charAt(0) != \".\") {\n\t\t\tthrow \"Missing . for swizzle\";\n\t\t}\n\n\t\tif (s.length > 1) {\n\t\t\tsw |= chartoindex[s.charAt(1)];\n\t\t}\n\n\t\tif (s.length > 2) {\n\t\t\tsw |= chartoindex[s.charAt(2)] << 2;\n\t\t} else {\n\t\t\tsw |= (sw & 3) << 2;\n\t\t}\n\n\t\tif (s.length > 3) {\n\t\t\tsw |= chartoindex[s.charAt(3)] << 4;\n\t\t} else {\n\t\t\tsw |= (sw & (3 << 2)) << 2;\n\t\t}\n\n\t\tif (s.length > 4) {\n\t\t\tsw |= chartoindex[s.charAt(4)] << 6;\n\t\t} else {\n\t\t\tsw |= (sw & (3 << 4)) << 2;\n\t\t}\n\n\t\treturn sw;\n\t}\n\n\tpublic emitSampler(pr:Part, token, opsrc, opts)\n\t{\n\t\tvar reg:string[] = token.match(/fs(\\d*)/i); // g1:regnum\n\t\tif (!reg || !reg[1]) {\n\t\t\treturn false;\n\t\t}\n\t\tpr.data.writeUnsignedShort(parseInt(reg[1]));\n\t\tpr.data.writeUnsignedByte(0);   // bias\n\t\tpr.data.writeUnsignedByte(0);\n\t\t/*\n\t\t pr.data.writeUnsignedByte ( 0x5 );\n\t\t pr.data.writeUnsignedByte ( 0 );   // readmode, dim\n\t\t pr.data.writeUnsignedByte ( 0 );   // special, wrap\n\t\t pr.data.writeUnsignedByte ( 0 );   // mip, filter\n\t\t */\n\t\tvar samplerbits:number = 0x5;\n\t\tvar sampleroptset:number = 0;\n\t\tfor (var i:number = 0; i < opts.length; i++) {\n\t\t\tvar o:Sampler = <Sampler> SamplerMap.map[ opts[i].toLowerCase() ];\n\n\t\t\t//console.log( 'AGALMiniAssembler' , 'emitSampler' , 'SampleMap opt:' , o , '<-------- WATCH FOR THIS');\n\n\t\t\tif (o) {\n\t\t\t\tif (((sampleroptset >> o.shift) & o.mask) != 0) {\n\t\t\t\t\tconsole.log(\"Warning, duplicate sampler option\");\n\t\t\t\t}\n\t\t\t\tsampleroptset |= o.mask << o.shift;\n\t\t\t\tsamplerbits &= ~(o.mask << o.shift);\n\t\t\t\tsamplerbits |= o.value << o.shift;\n\t\t\t} else {\n\t\t\t\tconsole.log(\"Warning, unknown sampler option: \", opts[i]);\n\t\t\t\t// todo bias\n\t\t\t}\n\t\t}\n\t\tpr.data.writeUnsignedInt(samplerbits);\n\t\treturn true;\n\t}\n\n\tpublic emitSource(pr, token, opsrc)\n\t{\n\t\tvar indexed = token.match(/vc\\[(v[tcai])(\\d+)\\.([xyzw])([\\+\\-]\\d+)?\\](\\.[xyzw]{1,4})?/i); // g1: indexregname, g2:indexregnum, g3:select, [g4:offset], [g5:swizzle]\n\t\tvar reg;\n\t\tif (indexed) {\n\t\t\tif (!RegMap.map[indexed[1]]) {\n\t\t\t\treturn false;\n\t\t\t}\n\t\t\tvar selindex = { x:0, y:1, z:2, w:3 };\n\t\t\tvar em:any = { num:indexed[2] | 0, code:RegMap.map[indexed[1]].code, swizzle:this.stringToSwizzle(indexed[5]), select:selindex[indexed[3]], offset:indexed[4] | 0 };\n\t\t\tpr.data.writeUnsignedShort(em.num);\n\t\t\tpr.data.writeByte(em.offset);\n\t\t\tpr.data.writeUnsignedByte(em.swizzle);\n\t\t\tpr.data.writeUnsignedByte(0x1); // constant reg\n\t\t\tpr.data.writeUnsignedByte(em.code);\n\t\t\tpr.data.writeUnsignedByte(em.select);\n\t\t\tpr.data.writeUnsignedByte(1 << 7);\n\t\t} else {\n\t\t\treg = token.match(/([fov]?[tpocidavs])(\\d*)(\\.[xyzw]{1,4})?/i); // g1: regname, g2:regnum, g3:swizzle\n\t\t\tif (!RegMap.map[reg[1]]) {\n\t\t\t\treturn false;\n\t\t\t}\n\t\t\tvar em:any = { num:reg[2] | 0, code:RegMap.map[reg[1]].code, swizzle:this.stringToSwizzle(reg[3]) };\n\t\t\tpr.data.writeUnsignedShort(em.num);\n\t\t\tpr.data.writeUnsignedByte(0);\n\t\t\tpr.data.writeUnsignedByte(em.swizzle);\n\t\t\tpr.data.writeUnsignedByte(em.code);\n\t\t\tpr.data.writeUnsignedByte(0);\n\t\t\tpr.data.writeUnsignedByte(0);\n\t\t\tpr.data.writeUnsignedByte(0);\n\t\t\t//console.log ( \"  Emit source: \", em, pr.data.length );\n\t\t}\n\t\treturn true;\n\t}\n\n\tpublic addHeader(partname, version)\n\t{\n\t\tif (!version) {\n\t\t\tversion = 1;\n\t\t}\n\t\tif (this.r[partname] == undefined) {\n\t\t\tthis.r[partname] = new Part(partname, version);\n\t\t\tthis.emitHeader(this.r[ partname ]);\n\t\t} else if (this.r[partname].version != version) {\n\t\t\tthrow \"Multiple versions for part \" + partname;\n\t\t}\n\t\tthis.cur = this.r[partname];\n\t}\n}\n\nexport default AGALMiniAssembler;",
    "class FS\n{\n\tpublic format:string;\n\tpublic size:number;\n}\n\nexport default FS;\n",
    "class Flags\n{\n\tpublic simple:boolean;\n\tpublic horizontal:boolean;\n\tpublic fragonly:boolean;\n\tpublic matrix:boolean;\n}\n\nexport default Flags;\n",
    "import Opcode\t\t\t\t\tfrom \"../../aglsl/assembler/Opcode\";\n\nclass OpcodeMap\n{\n\t// dest:\t\t\t\t\t  \t\t\t\t\t   string,  aformat, asize, bformat,   bsize, opcode, simple, horizontal, fragonly   matrix\n\t/*\n\t public static mov:Opcode = new Opcode( \"vector\", \"vector\", 4,    \"none\",    0,     0x00,   true,   null,       null,      null );\n\t public static add:Opcode = new Opcode( \"vector\", \"vector\", 4,    \"none\",    0,     0x01,   true,   null,       null,      null );\n\n\t public static sub:Opcode = new Opcode( \"vector\", \"vector\", 4,    \"vector\",  4,     0x02,   true,   null,       null,      null );\n\t public static mul:Opcode = new Opcode( \"vector\", \"vector\", 4,    \"vector\",  4,     0x03,   true,   null,       null,      null );\n\t public static div:Opcode = new Opcode( \"vector\", \"vector\", 4,    \"vector\",  4,     0x04,   true,   null,       null,      null );\n\t public static rcp:Opcode = new Opcode( \"vector\", \"vector\", 4,    \"none\",    0,     0x05,   true,   null,       null,      null );\n\t public static min:Opcode = new Opcode( \"vector\", \"vector\", 4,    \"vector\",  4,     0x06,   true,   null,       null,      null );\n\t public static max:Opcode = new Opcode( \"vector\", \"vector\", 4,    \"vector\",  4,     0x07,   true,   null,       null,      null );\n\t public static frc:Opcode = new Opcode( \"vector\", \"vector\", 4,    \"none\",    0,     0x08,   true,   null,       null,      null );\n\t public static sqt:Opcode = new Opcode( \"vector\", \"vector\", 4,    \"none\",    0,     0x09,   true,   null,       null,      null );\n\t public static rsq:Opcode = new Opcode( \"vector\", \"vector\", 4,    \"none\",    0,     0x0a,   true,   null,       null,      null );\n\t public static pow:Opcode = new Opcode( \"vector\", \"vector\", 4,    \"vector\",  4,     0x0b,   true,   null,       null,      null );\n\t public static log:Opcode = new Opcode( \"vector\", \"vector\", 4,    \"none\",    0,     0x0c,   true,   null,       null,      null );\n\t public static exp:Opcode = new Opcode( \"vector\", \"vector\", 4,    \"none\",    0,     0x0d,   true,   null,       null,      null );\n\t public static nrm:Opcode = new Opcode( \"vector\", \"vector\", 4,    \"none\",    0,     0x0e,   true,   null,       null,      null );\n\t public static sin:Opcode = new Opcode( \"vector\", \"vector\", 4,    \"none\",    0,     0x0f,   true,   null,       null,      null );\n\t public static cos:Opcode = new Opcode( \"vector\", \"vector\", 4,    \"none\",    0,     0x10,   true,   null,       null,      null );\n\t public static crs:Opcode = new Opcode( \"vector\", \"vector\", 4,    \"vector\",  4,     0x11,   true,   true,       null,      null );\n\t public static dp3:Opcode = new Opcode( \"vector\", \"vector\", 4,    \"vector\",  4,     0x12,   true,   true,       null,      null );\n\t public static dp4:Opcode = new Opcode( \"vector\", \"vector\", 4,    \"vector\",  4,     0x13,   true,   true,       null,      null );\n\t public static abs:Opcode = new Opcode( \"vector\", \"vector\", 4,    \"none\",    0,     0x14,   true,   null,       null,      null );\n\t public static neg:Opcode = new Opcode( \"vector\", \"vector\", 4,    \"none\",    0,     0x15,   true,   null,       null,      null );\n\t public static sat:Opcode = new Opcode( \"vector\", \"vector\", 4,    \"none\",    0,     0x16,   true,   null,       null,      null );\n\n\t public static ted:Opcode = new Opcode( \"vector\", \"vector\", 4,    \"sampler\", 1,     0x26,   true,   null,       true,      null );\n\t public static kil:Opcode = new Opcode( \"none\",   \"scalar\", 1,    \"none\",    0,     0x27,   true,   null,       true,      null );\n\t public static tex:Opcode = new Opcode( \"vector\", \"vector\", 4,    \"sampler\", 1,     0x28,   true,   null,       true,      null );\n\n\t public static m33:Opcode = new Opcode( \"vector\", \"matrix\", 3,    \"vector\",  3,     0x17,   true,   null,       null,      true );\n\t public static m44:Opcode = new Opcode( \"vector\", \"matrix\", 4,    \"vector\",  4,     0x18,   true,   null,       null,      true );\n\t public static m43:Opcode = new Opcode( \"vector\", \"matrix\", 3,    \"vector\",  4,     0x19,   true,   null,       null,      true );\n\n\t public static sge:Opcode = new Opcode( \"vector\", \"vector\", 4,    \"vector\",  4,     0x29,   true,   null,       null,      null );\n\t public static slt:Opcode = new Opcode( \"vector\", \"vector\", 4,    \"vector\",  4,     0x2a,   true,   null,       null,      null );\n\t public static sgn:Opcode = new Opcode( \"vector\", \"vector\", 4,    \"vector\",  4,     0x2b,   true,   null,       null,      null );\n\t public static seq:Opcode = new Opcode( \"vector\", \"vector\", 4,    \"vector\",  4,     0x2c,   true,   null,       null,      null );\n\t public static sne:Opcode = new Opcode( \"vector\", \"vector\", 4,    \"vector\",  4,     0x2d,   true,   null,       null,      null );\n\t */\n\n\n\tprivate static _map:Object[];\n\n\tpublic static get map():Object[]\n\t{\n\n\t\tif (!OpcodeMap._map) {\n\n\t\t\tOpcodeMap._map = new Array<Object>();\n\t\t\tOpcodeMap._map['mov'] = new Opcode(\"vector\", \"vector\", 4, \"none\", 0, 0x00, true, null, null, null);     //0\n\t\t\tOpcodeMap._map['add'] = new Opcode(\"vector\", \"vector\", 4, \"vector\", 4, 0x01, true, null, null, null);   //1\n\t\t\tOpcodeMap._map['sub'] = new Opcode(\"vector\", \"vector\", 4, \"vector\", 4, 0x02, true, null, null, null);   //2\n\t\t\tOpcodeMap._map['mul'] = new Opcode(\"vector\", \"vector\", 4, \"vector\", 4, 0x03, true, null, null, null);   //3\n\t\t\tOpcodeMap._map['div'] = new Opcode(\"vector\", \"vector\", 4, \"vector\", 4, 0x04, true, null, null, null);   //4\n\t\t\tOpcodeMap._map['rcp'] = new Opcode(\"vector\", \"vector\", 4, \"none\", 0, 0x05, true, null, null, null);     //5\n\t\t\tOpcodeMap._map['min'] = new Opcode(\"vector\", \"vector\", 4, \"vector\", 4, 0x06, true, null, null, null);   //6\n\t\t\tOpcodeMap._map['max'] = new Opcode(\"vector\", \"vector\", 4, \"vector\", 4, 0x07, true, null, null, null);   //7\n\t\t\tOpcodeMap._map['frc'] = new Opcode(\"vector\", \"vector\", 4, \"none\", 0, 0x08, true, null, null, null);     //8\n\t\t\tOpcodeMap._map['sqt'] = new Opcode(\"vector\", \"vector\", 4, \"none\", 0, 0x09, true, null, null, null);     //9\n\t\t\tOpcodeMap._map['rsq'] = new Opcode(\"vector\", \"vector\", 4, \"none\", 0, 0x0a, true, null, null, null);     //10\n\t\t\tOpcodeMap._map['pow'] = new Opcode(\"vector\", \"vector\", 4, \"vector\", 4, 0x0b, true, null, null, null);   //11\n\t\t\tOpcodeMap._map['log'] = new Opcode(\"vector\", \"vector\", 4, \"none\", 0, 0x0c, true, null, null, null);     //12\n\t\t\tOpcodeMap._map['exp'] = new Opcode(\"vector\", \"vector\", 4, \"none\", 0, 0x0d, true, null, null, null);     //13\n\t\t\tOpcodeMap._map['nrm'] = new Opcode(\"vector\", \"vector\", 4, \"none\", 0, 0x0e, true, null, null, null);     //14\n\t\t\tOpcodeMap._map['sin'] = new Opcode(\"vector\", \"vector\", 4, \"none\", 0, 0x0f, true, null, null, null);     //15\n\t\t\tOpcodeMap._map['cos'] = new Opcode(\"vector\", \"vector\", 4, \"none\", 0, 0x10, true, null, null, null);     //16\n\t\t\tOpcodeMap._map['crs'] = new Opcode(\"vector\", \"vector\", 4, \"vector\", 4, 0x11, true, true, null, null);   //17\n\t\t\tOpcodeMap._map['dp3'] = new Opcode(\"vector\", \"vector\", 4, \"vector\", 4, 0x12, true, true, null, null);   //18\n\t\t\tOpcodeMap._map['dp4'] = new Opcode(\"vector\", \"vector\", 4, \"vector\", 4, 0x13, true, true, null, null);   //19\n\t\t\tOpcodeMap._map['abs'] = new Opcode(\"vector\", \"vector\", 4, \"none\", 0, 0x14, true, null, null, null);     //20\n\t\t\tOpcodeMap._map['neg'] = new Opcode(\"vector\", \"vector\", 4, \"none\", 0, 0x15, true, null, null, null);     //21\n\t\t\tOpcodeMap._map['sat'] = new Opcode(\"vector\", \"vector\", 4, \"none\", 0, 0x16, true, null, null, null);     //22\n\n\t\t\tOpcodeMap._map['ted'] = new Opcode(\"vector\", \"vector\", 4, \"sampler\", 1, 0x26, true, null, true, null);  //38\n\t\t\tOpcodeMap._map['kil'] = new Opcode(\"none\", \"scalar\", 1, \"none\", 0, 0x27, true, null, true, null);       //39\n\t\t\tOpcodeMap._map['tex'] = new Opcode(\"vector\", \"vector\", 4, \"sampler\", 1, 0x28, true, null, true, null);  //40\n\n\t\t\tOpcodeMap._map['m33'] = new Opcode(\"vector\", \"matrix\", 3, \"vector\", 3, 0x17, true, null, null, true);   //23\n\t\t\tOpcodeMap._map['m44'] = new Opcode(\"vector\", \"matrix\", 4, \"vector\", 4, 0x18, true, null, null, true);   //24\n\t\t\tOpcodeMap._map['m43'] = new Opcode(\"vector\", \"matrix\", 3, \"vector\", 4, 0x19, true, null, null, true);   //25\n\n            OpcodeMap._map['ddx'] = new Opcode(\"vector\", \"vector\", 4, \"none\", 0, 0x1a, true, null, true, null);   //26\n            OpcodeMap._map['ddy'] = new Opcode(\"vector\", \"vector\", 4, \"none\", 0, 0x1b, true, null, true, null);   //27\n\n\t\t\tOpcodeMap._map['sge'] = new Opcode(\"vector\", \"vector\", 4, \"vector\", 4, 0x29, true, null, null, null);   //41\n\t\t\tOpcodeMap._map['slt'] = new Opcode(\"vector\", \"vector\", 4, \"vector\", 4, 0x2a, true, null, null, null);   //42\n\t\t\tOpcodeMap._map['sgn'] = new Opcode(\"vector\", \"vector\", 4, \"vector\", 4, 0x2b, true, null, null, null);   //43\n\t\t\tOpcodeMap._map['seq'] = new Opcode(\"vector\", \"vector\", 4, \"vector\", 4, 0x2c, true, null, null, null);   //44\n\t\t\tOpcodeMap._map['sne'] = new Opcode(\"vector\", \"vector\", 4, \"vector\", 4, 0x2d, true, null, null, null);   //45\n\n\n\t\t}\n\n\t\treturn OpcodeMap._map;\n\n\t}\n\n\n\tconstructor()\n\t{\n\t}\n}\n\nexport default OpcodeMap;",
    "import Flags\t\t\t\tfrom \"../../aglsl/assembler/Flags\";\nimport FS\t\t\t\t\tfrom \"../../aglsl/assembler/FS\";\n\n/**\n *\n */\nclass Opcode\n{\n\tpublic dest:string;\n\tpublic a:FS;\n\tpublic b:FS;\n\tpublic opcode:number;\n\tpublic flags:Flags;\n\n\tconstructor(dest:string, aformat:string, asize:number, bformat:string, bsize:number, opcode:number, simple:boolean, horizontal:boolean, fragonly:boolean, matrix:boolean)\n\t{\n\t\tthis.a = new FS();\n\t\tthis.b = new FS();\n\t\tthis.flags = new Flags();\n\n\t\tthis.dest = dest;\n\t\tthis.a.format = aformat;\n\t\tthis.a.size = asize;\n\t\tthis.b.format = bformat;\n\t\tthis.b.size = bsize;\n\t\tthis.opcode = opcode;\n\t\tthis.flags.simple = simple;\n\t\tthis.flags.horizontal = horizontal;\n\t\tthis.flags.fragonly = fragonly;\n\t\tthis.flags.matrix = matrix;\n\t}\n}\n\nexport default Opcode;\n",
    "import ByteArray\t\t\t\tfrom \"awayjs-core/lib/utils/ByteArray\";\n\nclass Part\n{\n\tpublic name:string = \"\";\n\tpublic version:number = 0;\n\tpublic data:ByteArray;\n\n\tconstructor(name:string = null, version:number = null)\n\t{\n\t\tthis.name = name;\n\t\tthis.version = version;\n\t\tthis.data = new ByteArray();\n\t}\n}\n\nexport default Part;",
    "\nclass Reg\n{\n\n\tpublic code:number;\n\tpublic desc:string;\n\n\tconstructor(code:number, desc:string)\n\t{\n\t\tthis.code = code;\n\t\tthis.desc = desc;\n\t}\n}\n\nclass RegMap\n{\n\n\t/*\n\t public static map = [ new Reg( 0x00, \"vertex attribute\" ),\n\t new Reg( 0x01, \"fragment constant\" ),\n\t new Reg( 0x01, \"vertex constant\" ),\n\t new Reg( 0x02, \"fragment temporary\" ),\n\t new Reg( 0x02, \"vertex temporary\" ),\n\t new Reg( 0x03, \"vertex output\" ),\n\t new Reg( 0x03, \"vertex output\" ),\n\t new Reg( 0x03, \"fragment depth output\" ),\n\t new Reg( 0x03, \"fragment output\" ),\n\t new Reg( 0x03, \"fragment output\" ),\n\t new Reg( 0x04, \"varying\" ),\n\t new Reg( 0x04, \"varying output\" ),\n\t new Reg( 0x04, \"varying input\" ),\n\t new Reg( 0x05, \"sampler\" ) ];\n\t */\n\n\tprivate static _map:any[];\n\tpublic static get map():any[]\n\t{\n\n\t\tif (!RegMap._map) {\n\n\t\t\tRegMap._map = new Array<Object>();\n\t\t\tRegMap._map['va'] = new Reg(0x00, \"vertex attribute\");\n\t\t\tRegMap._map['fc'] = new Reg(0x01, \"fragment constant\");\n\t\t\tRegMap._map['vc'] = new Reg(0x01, \"vertex constant\");\n\t\t\tRegMap._map['ft'] = new Reg(0x02, \"fragment temporary\");\n\t\t\tRegMap._map['vt'] = new Reg(0x02, \"vertex temporary\");\n\t\t\tRegMap._map['vo'] = new Reg(0x03, \"vertex output\");\n\t\t\tRegMap._map['op'] = new Reg(0x03, \"vertex output\");\n\t\t\tRegMap._map['fd'] = new Reg(0x03, \"fragment depth output\");\n\t\t\tRegMap._map['fo'] = new Reg(0x03, \"fragment output\");\n\t\t\tRegMap._map['oc'] = new Reg(0x03, \"fragment output\");\n\t\t\tRegMap._map['v'] = new Reg(0x04, \"varying\");\n\t\t\tRegMap._map['vi'] = new Reg(0x04, \"varying output\");\n\t\t\tRegMap._map['fi'] = new Reg(0x04, \"varying input\");\n\t\t\tRegMap._map['fs'] = new Reg(0x05, \"sampler\");\n\n\n\t\t}\n\n\t\treturn RegMap._map;\n\n\t}\n\n\t/*\n\t public static va:Reg = new Reg( 0x00, \"vertex attribute\" );\n\t public static fc:Reg = new Reg( 0x01, \"fragment constant\" );\n\t public static vc:Reg = new Reg( 0x01, \"vertex constant\" );\n\t public static ft:Reg = new Reg( 0x02, \"fragment temporary\" );\n\t public static vt:Reg = new Reg( 0x02, \"vertex temporary\" );\n\t public static vo:Reg = new Reg( 0x03, \"vertex output\" );\n\t public static op:Reg = new Reg( 0x03, \"vertex output\" );\n\t public static fd:Reg = new Reg( 0x03, \"fragment depth output\" );\n\t public static fo:Reg = new Reg( 0x03, \"fragment output\" );\n\t public static oc:Reg = new Reg( 0x03, \"fragment output\" );\n\t public static v: Reg = new Reg( 0x04, \"varying\" );\n\t public static vi:Reg = new Reg( 0x04, \"varying output\" );\n\t public static fi:Reg = new Reg( 0x04, \"varying input\" );\n\t public static fs:Reg = new Reg( 0x05, \"sampler\" );\n\t */\n\tconstructor()\n\t{\n\t}\n}\n\nexport default RegMap;",
    "import Sampler\t\t\t\tfrom \"../../aglsl/assembler/Sampler\";\n\nclass SamplerMap\n{\n\n\tprivate static _map:Object[];\n\n\tpublic static get map():Object[]\n\t{\n\n\t\tif (!SamplerMap._map) {\n\n\t\t\tSamplerMap._map = new Array<Object>();\n\t\t\tSamplerMap._map['rgba'] = new Sampler(8, 0xf, 0);\n\t\t\tSamplerMap._map['rg'] = new Sampler(8, 0xf, 5);\n\t\t\tSamplerMap._map['r'] = new Sampler(8, 0xf, 4);\n\t\t\tSamplerMap._map['compressed'] = new Sampler(8, 0xf, 1);\n\t\t\tSamplerMap._map['compressed_alpha'] = new Sampler(8, 0xf, 2);\n\t\t\tSamplerMap._map['dxt1'] = new Sampler(8, 0xf, 1);\n\t\t\tSamplerMap._map['dxt5'] = new Sampler(8, 0xf, 2);\n\n\t\t\t// dimension\n\t\t\tSamplerMap._map['2d'] = new Sampler(12, 0xf, 0);\n\t\t\tSamplerMap._map['cube'] = new Sampler(12, 0xf, 1);\n\t\t\tSamplerMap._map['3d'] = new Sampler(12, 0xf, 2);\n\n\t\t\t// special\n\t\t\tSamplerMap._map['centroid'] = new Sampler(16, 1, 1);\n\t\t\tSamplerMap._map['ignoresampler'] = new Sampler(16, 4, 4);\n\n\t\t\t// repeat\n\t\t\tSamplerMap._map['clamp'] = new Sampler(20, 0xf, 0);\n\t\t\tSamplerMap._map['repeat'] = new Sampler(20, 0xf, 1);\n\t\t\tSamplerMap._map['wrap'] = new Sampler(20, 0xf, 1);\n\n\t\t\t// mip\n\t\t\tSamplerMap._map['nomip'] = new Sampler(24, 0xf, 0);\n\t\t\tSamplerMap._map['mipnone'] = new Sampler(24, 0xf, 0);\n\t\t\tSamplerMap._map['mipnearest'] = new Sampler(24, 0xf, 1);\n\t\t\tSamplerMap._map['miplinear'] = new Sampler(24, 0xf, 2);\n\n\t\t\t// filter\n\t\t\tSamplerMap._map['nearest'] = new Sampler(28, 0xf, 0);\n\t\t\tSamplerMap._map['linear'] = new Sampler(28, 0xf, 1);\n\n\t\t}\n\n\t\treturn SamplerMap._map;\n\n\t}\n\n\t/*\n\t public static map =     [ new Sampler( 8, 0xf, 0 ),\n\t new Sampler( 8, 0xf, 5 ),\n\t new Sampler( 8, 0xf, 4 ),\n\t new Sampler( 8, 0xf, 1 ),\n\t new Sampler( 8, 0xf, 2 ),\n\t new Sampler( 8, 0xf, 1 ),\n\t new Sampler( 8, 0xf, 2 ),\n\n\t // dimension\n\t new Sampler( 12, 0xf, 0 ),\n\t new Sampler( 12, 0xf, 1 ),\n\t new Sampler( 12, 0xf, 2 ),\n\n\t // special\n\t new Sampler( 16, 1, 1 ),\n\t new Sampler( 16, 4, 4 ),\n\n\t // repeat\n\t new Sampler( 20, 0xf, 0 ),\n\t new Sampler( 20, 0xf, 1 ),\n\t new Sampler( 20, 0xf, 1 ),\n\n\t // mip\n\t new Sampler( 24, 0xf, 0 ),\n\t new Sampler( 24, 0xf, 0 ),\n\t new Sampler( 24, 0xf, 1 ),\n\t new Sampler( 24, 0xf, 2 ),\n\n\t // filter\n\t new Sampler( 28, 0xf, 0 ),\n\t new Sampler( 28, 0xf, 1 ) ]\n\t */\n\t/*\n\t public static rgba: Sampler = new Sampler( 8, 0xf, 0 );\n\t public static rg: Sampler = new Sampler( 8, 0xf, 5 );\n\t public static r: Sampler = new Sampler( 8, 0xf, 4 );\n\t public static compressed: Sampler = new Sampler( 8, 0xf, 1 );\n\t public static compressed_alpha: Sampler = new Sampler( 8, 0xf, 2 );\n\t public static dxt1: Sampler = new Sampler( 8, 0xf, 1 );\n\t public static dxt5: Sampler = new Sampler( 8, 0xf, 2 );\n\n\t // dimension\n\t public static sampler2d: Sampler = new Sampler( 12, 0xf, 0 );\n\t public static cube: Sampler = new Sampler( 12, 0xf, 1 );\n\t public static sampler3d: Sampler = new Sampler( 12, 0xf, 2 );\n\n\t // special\n\t public static centroid: Sampler = new Sampler( 16, 1, 1 );\n\t public static ignoresampler: Sampler = new Sampler( 16, 4, 4 );\n\n\t // repeat\n\t public static clamp: Sampler = new Sampler( 20, 0xf, 0 );\n\t public static repeat: Sampler = new Sampler( 20, 0xf, 1 );\n\t public static wrap: Sampler = new Sampler( 20, 0xf, 1 );\n\n\t // mip\n\t public static nomip: Sampler = new Sampler( 24, 0xf, 0 );\n\t public static mipnone: Sampler = new Sampler( 24, 0xf, 0 );\n\t public static mipnearest: Sampler = new Sampler( 24, 0xf, 1 );\n\t public static miplinear: Sampler = new Sampler( 24, 0xf, 2 );\n\n\t // filter\n\t public static nearest: Sampler = new Sampler( 28, 0xf, 0 );\n\t public static linear: Sampler = new Sampler( 28, 0xf, 1 );\n\t */\n\tconstructor()\n\t{\n\t}\n}\n\nexport default SamplerMap;",
    "class Sampler\n{\n\tpublic shift:number;\n\tpublic mask:number;\n\tpublic value:number;\n\n\tconstructor(shift:number, mask:number, value:number)\n\t{\n\t\tthis.shift = shift;\n\t\tthis.mask = mask;\n\t\tthis.value = value;\n\t}\n}\n\nexport default Sampler;",
    "export {default as AGALMiniAssembler}\t\t\t\tfrom \"./aglsl/assembler/AGALMiniAssembler\";\nexport {default as Flags}\t\t\t\t\t\t\tfrom \"./aglsl/assembler/Flags\";\nexport {default as FS}\t\t\t\t\t\t\t\tfrom \"./aglsl/assembler/FS\";\nexport {default as Opcode}\t\t\t\t\t\t\tfrom \"./aglsl/assembler/Opcode\";\nexport {default as OpcodeMap}\t\t\t\t\t\tfrom \"./aglsl/assembler/OpcodeMap\";\nexport {default as Part}\t\t\t\t\t\t\tfrom \"./aglsl/assembler/Part\";\nexport {default as RegMap}\t\t\t\t\t\t\tfrom \"./aglsl/assembler/RegMap\";\nexport {default as Sampler}\t\t\t\t\t\t\tfrom \"./aglsl/assembler/Sampler\";\nexport {default as SamplerMap}\t\t\t\t\t\tfrom \"./aglsl/assembler/SamplerMap\";\nexport {default as AGALTokenizer}\t\t\t\t\tfrom \"./aglsl/AGALTokenizer\";\nexport {default as AGLSLParser}\t\t\t\t\t\tfrom \"./aglsl/AGLSLParser\";\nexport {default as Description}\t\t\t\t\t\tfrom \"./aglsl/Description\";\nexport {default as Destination}\t\t\t\t\t\tfrom \"./aglsl/Destination\";\nexport {default as Header}\t\t\t\t\t\t\tfrom \"./aglsl/Header\";\nexport {default as Mapping}\t\t\t\t\t\t\tfrom \"./aglsl/Mapping\";\nexport {default as OpLUT}\t\t\t\t\t\t\tfrom \"./aglsl/OpLUT\";\nexport {default as Token}\t\t\t\t\t\t\tfrom \"./aglsl/Token\";",
    "import AttributesBuffer\t\t\t\tfrom \"awayjs-core/lib/attributes/AttributesBuffer\";\nimport AssetEvent\t\t\t\t\tfrom \"awayjs-core/lib/events/AssetEvent\";\nimport AbstractionBase\t\t\t\tfrom \"awayjs-core/lib/library/AbstractionBase\";\n\nimport Stage\t\t\t\t\t\tfrom \"../base/Stage\";\nimport IIndexBuffer\t\t\t\t\tfrom \"../base/IIndexBuffer\";\nimport IVertexBuffer\t\t\t\tfrom \"../base/IVertexBuffer\";\n\n/**\n *\n * @class away.pool.GL_AttributesBuffer\n */\nclass GL_AttributesBuffer extends AbstractionBase\n{\n\tpublic _indexBuffer:IIndexBuffer;\n\n\tpublic _vertexBuffer:IVertexBuffer;\n\n\tpublic _stage:Stage;\n\n\tpublic _attributesBuffer:AttributesBuffer;\n\n\tpublic _mipmap:boolean;\n\n\tpublic _invalid:boolean;\n\n\tconstructor(attributesBuffer:AttributesBuffer, stage:Stage)\n\t{\n\t\tsuper(attributesBuffer, stage);\n\n\t\tthis._stage = stage;\n\n\t\tthis._attributesBuffer = attributesBuffer;\n\t}\n\n\t/**\n\t *\n\t */\n\tpublic onClear(event:AssetEvent)\n\t{\n\t\tsuper.onClear(event);\n\n\t\tthis._attributesBuffer = null;\n\n\t\tif (this._indexBuffer) {\n\t\t\tthis._indexBuffer.dispose();\n\t\t\tthis._indexBuffer = null;\n\t\t}\n\n\t\tif (this._vertexBuffer) {\n\t\t\tthis._vertexBuffer.dispose();\n\t\t\tthis._vertexBuffer = null;\n\t\t}\n\t}\n\n\tpublic activate(index:number, size:number, dimensions:number, offset:number, unsigned:boolean = false)\n\t{\n\t\tthis._stage.setVertexBuffer(index, this._getVertexBuffer(), size, dimensions, offset, unsigned);\n\t}\n\n\tpublic draw(mode:string, firstIndex:number, numIndices:number)\n\t{\n\t\tthis._stage.context.drawIndices(mode, this._getIndexBuffer(), firstIndex, numIndices);\n\t}\n\n\tpublic _getIndexBuffer():IIndexBuffer\n\t{\n\t\tif (!this._indexBuffer) {\n\t\t\tthis._invalid = true;\n\t\t\tthis._indexBuffer = this._stage.context.createIndexBuffer(this._attributesBuffer.count*this._attributesBuffer.stride/2); //hardcoded assuming UintArray\n\t\t}\n\n\t\tif (this._invalid) {\n\t\t\tthis._invalid = false;\n\t\t\tthis._indexBuffer.uploadFromByteArray(this._attributesBuffer.buffer, 0, this._attributesBuffer.length);\n\t\t}\n\n\t\treturn this._indexBuffer;\n\t}\n\n\tpublic _getVertexBuffer():IVertexBuffer\n\t{\n\t\tif (!this._vertexBuffer) {\n\t\t\tthis._invalid = true;\n\t\t\tthis._vertexBuffer = this._stage.context.createVertexBuffer(this._attributesBuffer.count, this._attributesBuffer.stride);\n\t\t}\n\n\t\tif (this._invalid) {\n\t\t\tthis._invalid = false;\n\t\t\tthis._vertexBuffer.uploadFromByteArray(this._attributesBuffer.buffer, 0, this._attributesBuffer.count);\n\t\t}\n\n\t\treturn this._vertexBuffer;\n\t}\n}\n\nexport default GL_AttributesBuffer;",
    "export {default as GL_AttributesBuffer}\t\t\t\tfrom \"./attributes/GL_AttributesBuffer\";",
    "class ContextGLBlendFactor\n{\n\tpublic static DESTINATION_ALPHA:string = \"destinationAlpha\";\n\tpublic static DESTINATION_COLOR:string = \"destinationColor\";\n\tpublic static ONE:string = \"one\";\n\tpublic static ONE_MINUS_DESTINATION_ALPHA:string = \"oneMinusDestinationAlpha\";\n\tpublic static ONE_MINUS_DESTINATION_COLOR:string = \"oneMinusDestinationColor\";\n\tpublic static ONE_MINUS_SOURCE_ALPHA:string = \"oneMinusSourceAlpha\";\n\tpublic static ONE_MINUS_SOURCE_COLOR:string = \"oneMinusSourceColor\";\n\tpublic static SOURCE_ALPHA:string = \"sourceAlpha\";\n\tpublic static SOURCE_COLOR:string = \"sourceColor\";\n\tpublic static ZERO:string = \"zero\";\n}\n\nexport default ContextGLBlendFactor;",
    "class ContextGLClearMask\n{\n\tstatic COLOR:number = 1;\n\tstatic DEPTH:number = 2;\n\tstatic STENCIL:number = 4;\n\tstatic ALL:number = ContextGLClearMask.COLOR | ContextGLClearMask.DEPTH | ContextGLClearMask.STENCIL;\n}\n\nexport default ContextGLClearMask;",
    "class ContextGLCompareMode\n{\n\tpublic static ALWAYS:string = \"always\";\n\tpublic static EQUAL:string = \"equal\";\n\tpublic static GREATER:string = \"greater\";\n\tpublic static GREATER_EQUAL:string = \"greaterEqual\";\n\tpublic static LESS:string = \"less\";\n\tpublic static LESS_EQUAL:string = \"lessEqual\";\n\tpublic static NEVER:string = \"never\";\n\tpublic static NOT_EQUAL:string = \"notEqual\";\n}\n\nexport default ContextGLCompareMode;",
    "class ContextGLDrawMode\n{\n\tpublic static TRIANGLES:string = \"triangles\";\n\tpublic static LINES:string = \"lines\";\n}\n\nexport default ContextGLDrawMode;",
    "class ContextGLMipFilter\n{\n\tpublic static MIPLINEAR:string = \"miplinear\";\n\tpublic static MIPNEAREST:string = \"mipnearest\";\n\tpublic static MIPNONE:string = \"mipnone\";\n}\n\nexport default ContextGLMipFilter;",
    "class ContextGLProfile\n{\n\tpublic static BASELINE:string = \"baseline\";\n\tpublic static BASELINE_CONSTRAINED:string = \"baselineConstrained\";\n\tpublic static BASELINE_EXTENDED:string = \"baselineExtended\";\n}\nexport default ContextGLProfile;",
    "class ContextGLProgramType\n{\n\tstatic FRAGMENT:number = 0;\n\tstatic SAMPLER:number = 1;\n\tstatic VERTEX:number = 2;\n}\n\nexport default ContextGLProgramType;",
    "class ContextGLStencilAction\n{\n\tpublic static DECREMENT_SATURATE:string = \"decrementSaturate\";\n\tpublic static DECREMENT_WRAP:string = \"decrementWrap\";\n\tpublic static INCREMENT_SATURATE:string = \"incrementSaturate\";\n\tpublic static INCREMENT_WRAP:string = \"incrementWrap\";\n\tpublic static INVERT:string = \"invert\";\n\tpublic static KEEP:string = \"keep\";\n\tpublic static SET:string = \"set\";\n\tpublic static ZERO:string = \"zero\";\n}\n\nexport default ContextGLStencilAction;",
    "class ContextGLTextureFilter\n{\n\tpublic static LINEAR:string = \"linear\";\n\tpublic static NEAREST:string = \"nearest\";\n}\n\nexport default ContextGLTextureFilter;",
    "class ContextGLTextureFormat\n{\n\tstatic BGRA:string = \"bgra\";\n\tstatic BGRA_PACKED:string = \"bgraPacked4444\";\n\tstatic BGR_PACKED:string = \"bgrPacked565\";\n\tstatic COMPRESSED:string = \"compressed\";\n\tstatic COMPRESSED_ALPHA:string = \"compressedAlpha\";\n}\n\nexport default ContextGLTextureFormat;",
    "class ContextGLTriangleFace\n{\n\tstatic BACK:string = \"back\";\n\tstatic FRONT:string = \"front\";\n\tstatic FRONT_AND_BACK:string = \"frontAndBack\";\n\tstatic NONE:string = \"none\";\n}\n\nexport default ContextGLTriangleFace;",
    "class ContextGLVertexBufferFormat\n{\n\tstatic FLOAT_1:number = 0;\n\tstatic FLOAT_2:number = 1;\n\tstatic FLOAT_3:number = 2;\n\tstatic FLOAT_4:number = 3;\n\tstatic BYTE_1:number = 4;\n\tstatic BYTE_2:number = 5;\n\tstatic BYTE_3:number = 6;\n\tstatic BYTE_4:number = 7;\n\tstatic UNSIGNED_BYTE_1:number = 8;\n\tstatic UNSIGNED_BYTE_2:number = 9;\n\tstatic UNSIGNED_BYTE_3:number = 10;\n\tstatic UNSIGNED_BYTE_4:number = 11;\n\tstatic SHORT_1:number = 12;\n\tstatic SHORT_2:number = 13;\n\tstatic SHORT_3:number = 14;\n\tstatic SHORT_4:number = 15;\n\tstatic UNSIGNED_SHORT_1:number = 16;\n\tstatic UNSIGNED_SHORT_2:number = 17;\n\tstatic UNSIGNED_SHORT_3:number = 18;\n\tstatic UNSIGNED_SHORT_4:number = 19;\n}\n\nexport default ContextGLVertexBufferFormat;",
    "class ContextGLWrapMode\n{\n\tpublic static CLAMP:string = \"clamp\";\n\tpublic static REPEAT:string = \"repeat\";\n}\n\nexport default ContextGLWrapMode;",
    "class ContextMode\n{\n\tstatic AUTO:string = \"auto\";\n\tstatic WEBGL:string = \"webgl\";\n\tstatic FLASH:string = \"flash\";\n\tstatic NATIVE:string = \"native\";\n\tstatic SOFTWARE:string = \"software\";\n}\n\nexport default ContextMode;",
    "import BitmapImage2D                from \"awayjs-core/lib/image/BitmapImage2D\";\nimport Matrix3D                        from \"awayjs-core/lib/geom/Matrix3D\";\nimport Matrix                        from \"awayjs-core/lib/geom/Matrix\";\nimport Point                        from \"awayjs-core/lib/geom/Point\";\nimport Vector3D                        from \"awayjs-core/lib/geom/Vector3D\";\nimport Rectangle                    from \"awayjs-core/lib/geom/Rectangle\";\nimport ByteArray                    from \"awayjs-core/lib/utils/ByteArray\";\nimport ColorUtils                    from \"awayjs-core/lib/utils/ColorUtils\";\n\nimport Matrix3DUtils                from \"awayjs-core/lib/geom/Matrix3DUtils\";\nimport ContextGLBlendFactor            from \"../base/ContextGLBlendFactor\";\nimport ContextGLDrawMode            from \"../base/ContextGLDrawMode\";\nimport ContextGLClearMask            from \"../base/ContextGLClearMask\";\nimport ContextGLCompareMode            from \"../base/ContextGLCompareMode\";\nimport ContextGLMipFilter            from \"../base/ContextGLMipFilter\";\nimport ContextGLProgramType            from \"../base/ContextGLProgramType\";\nimport ContextGLStencilAction        from \"../base/ContextGLStencilAction\";\nimport ContextGLTextureFilter        from \"../base/ContextGLTextureFilter\";\nimport ContextGLTriangleFace        from \"../base/ContextGLTriangleFace\";\nimport ContextGLVertexBufferFormat    from \"../base/ContextGLVertexBufferFormat\";\nimport ContextGLWrapMode            from \"../base/ContextGLWrapMode\";\nimport CubeTextureWebGL                from \"../base/CubeTextureWebGL\";\nimport IContextGL                    from \"../base/IContextGL\";\nimport IIndexBuffer                    from \"../base/IIndexBuffer\";\nimport ICubeTexture                    from \"../base/ICubeTexture\";\nimport ITexture                        from \"../base/ITexture\";\nimport IVertexBuffer                from \"../base/IVertexBuffer\";\nimport IProgram                        from \"../base/IProgram\";\nimport ITextureBase                    from \"../base/ITextureBase\";\nimport IndexBufferSoftware                    from \"../base/IndexBufferSoftware\";\nimport VertexBufferSoftware                    from \"../base/VertexBufferSoftware\";\nimport TextureSoftware                    from \"../base/TextureSoftware\";\nimport ProgramSoftware                    from \"../base/ProgramSoftware\";\nimport ProgramVOSoftware                        from \"../base/ProgramVOSoftware\";\nimport SoftwareSamplerState                     from \"../base/SoftwareSamplerState\";\n\nclass ContextSoftware implements IContextGL {\n\n    private _canvas:HTMLCanvasElement;\n\n    public static MAX_SAMPLERS:number = 8;\n\n    private _backBufferRect:Rectangle = new Rectangle();\n    private _backBufferWidth:number = 100;\n    private _backBufferHeight:number = 100;\n    private _backBufferColor:BitmapImage2D;\n    private _frontBuffer:BitmapImage2D;\n\n    private _zbuffer:number[] = [];\n    private _cullingMode:string = ContextGLTriangleFace.BACK;\n    private _blendSource:string = ContextGLBlendFactor.ONE;\n    private _blendDestination:string = ContextGLBlendFactor.ZERO;\n    private _colorMaskR:boolean = true;\n    private _colorMaskG:boolean = true;\n    private _colorMaskB:boolean = true;\n    private _colorMaskA:boolean = true;\n    private _writeDepth:boolean = true;\n    private _depthCompareMode:string = ContextGLCompareMode.LESS;\n    private _program:ProgramSoftware;\n\n    private _screenMatrix:Matrix3D = new Matrix3D();\n    private _frontBufferMatrix:Matrix = new Matrix();\n\n    private _bboxMin:Point = new Point();\n    private _bboxMax:Point = new Point();\n    private _clamp:Point = new Point();\n\n    public _samplerStates:SoftwareSamplerState[] = [];\n    public _textures:Array<TextureSoftware> = [];\n    public _vertexBuffers:Array<VertexBufferSoftware> = [];\n    public _vertexBufferOffsets:Array<number> = [];\n    public _vertexBufferFormats:Array<number> = [];\n\n    public _fragmentConstants:Array<Vector3D> = [];\n    public _vertexConstants:Array<Vector3D> = [];\n\n    //public static _drawCallback:Function = null;\n\n    private _antialias:number = 0;\n\n    constructor(canvas:HTMLCanvasElement) {\n        this._canvas = canvas;\n\n        this._backBufferColor = new BitmapImage2D(this._backBufferWidth, this._backBufferHeight, false, 0, false);\n        this._frontBuffer = new BitmapImage2D(this._backBufferWidth, this._backBufferHeight, true, 0, false);\n\n        if (document && document.body) {\n            document.body.appendChild(this._frontBuffer.getCanvas());\n        }\n    }\n\n    public get frontBuffer():BitmapImage2D {\n        return this._frontBuffer;\n    }\n\n    public get container():HTMLElement {\n        return this._canvas;\n    }\n\n    public clear(red:number = 0, green:number = 0, blue:number = 0, alpha:number = 1, depth:number = 1, stencil:number = 0, mask:number = ContextGLClearMask.ALL) {\n        console.log(\"clear: \" + red + \", \" + green + \", \" + blue + \", alpha: \" + alpha);\n        if (mask & ContextGLClearMask.COLOR) {\n            this._backBufferColor.fillRect(this._backBufferRect, ColorUtils.ARGBtoFloat32(alpha * 0xFF, red * 0xFF, green * 0xFF, blue * 0xFF));\n        }\n\n        //TODO: mask & ContextGLClearMask.STENCIL\n\n        if (mask & ContextGLClearMask.DEPTH) {\n            this._zbuffer.length = 0;\n            var len:number = this._backBufferWidth * this._backBufferHeight;\n            for (var i:number = 0; i < len; i++) {\n                this._zbuffer[i] = 10000000;\n            }\n        }\n    }\n\n    public configureBackBuffer(width:number, height:number, antiAlias:number, enableDepthAndStencil:boolean) {\n        console.log(\"configureBackBuffer antiAlias: \" + antiAlias);\n\n        this._antialias = antiAlias;\n\n        if (this._antialias % 2 != 0) {\n            this._antialias = Math.floor(this._antialias - 0.5);\n        }\n\n        if (this._antialias == 0) {\n            this._antialias = 1;\n        }\n\n        this._frontBuffer._setSize(width, height);\n\n        this._backBufferWidth = width * this._antialias;\n        this._backBufferHeight = height * this._antialias;\n\n        this._backBufferRect.width = this._backBufferWidth;\n        this._backBufferRect.height = this._backBufferHeight;\n\n        this._backBufferColor._setSize(this._backBufferWidth, this._backBufferHeight);\n\n        var raw:Float32Array = this._screenMatrix.rawData;\n\n        raw[0] = (this._backBufferWidth ) / 2;\n        raw[1] = 0;\n        raw[2] = 0;\n        raw[3] = (this._backBufferWidth ) / 2;\n\n        raw[4] = 0;\n        raw[5] = -(this._backBufferHeight ) / 2;\n        raw[6] = 0;\n        raw[7] = (this._backBufferHeight ) / 2;\n\n        raw[8] = 0;\n        raw[9] = 0;\n        raw[10] = 1;\n        raw[11] = 0;\n\n        raw[12] = 0;\n        raw[13] = 0;\n        raw[14] = 0;\n        raw[15] = 0;\n\n        this._screenMatrix.transpose();\n\n        this._frontBufferMatrix = new Matrix();\n        this._frontBufferMatrix.scale(1 / this._antialias, 1 / this._antialias);\n    }\n\n    public createCubeTexture(size:number, format:string, optimizeForRenderToTexture:boolean, streamingLevels:number):ICubeTexture {\n        //TODO: impl\n        return undefined;\n    }\n\n    public createIndexBuffer(numIndices:number):IIndexBuffer {\n        return new IndexBufferSoftware(numIndices);\n    }\n\n    public createProgram():ProgramSoftware {\n        return new ProgramSoftware();\n    }\n\n    public createTexture(width:number, height:number, format:string, optimizeForRenderToTexture:boolean, streamingLevels:number):TextureSoftware {\n        return new TextureSoftware(width, height);\n    }\n\n    public createVertexBuffer(numVertices:number, dataPerVertex:number):VertexBufferSoftware {\n        return new VertexBufferSoftware(numVertices, dataPerVertex);\n    }\n\n    public dispose() {\n    }\n\n    public setBlendFactors(sourceFactor:string, destinationFactor:string) {\n        console.log(\"setBlendFactors sourceFactor: \" + sourceFactor + \" destinationFactor: \" + destinationFactor);\n        this._blendSource = sourceFactor;\n        this._blendDestination = destinationFactor;\n    }\n\n    public setColorMask(red:boolean, green:boolean, blue:boolean, alpha:boolean) {\n        this._colorMaskR = red;\n        this._colorMaskG = green;\n        this._colorMaskB = blue;\n        this._colorMaskA = alpha;\n    }\n\n    public setStencilActions(triangleFace:string, compareMode:string, actionOnBothPass:string, actionOnDepthFail:string, actionOnDepthPassStencilFail:string, coordinateSystem:string) {\n        //TODO:\n    }\n\n    public setStencilReferenceValue(referenceValue:number, readMask:number, writeMask:number) {\n        //TODO:\n    }\n\n    public setCulling(triangleFaceToCull:string, coordinateSystem:string) {\n        //TODO: CoordinateSystem.RIGHT_HAND\n        this._cullingMode = triangleFaceToCull;\n    }\n\n    public setDepthTest(depthMask:boolean, passCompareMode:string) {\n        console.log(\"setDepthTest: \" + depthMask + \" , \" + passCompareMode);\n        this._writeDepth = depthMask;\n        this._depthCompareMode = passCompareMode;\n    }\n\n    public setProgram(program:ProgramSoftware) {\n        this._program = program;\n    }\n\n    public setProgramConstantsFromMatrix(programType:number, firstRegister:number, matrix:Matrix3D, transposedMatrix:boolean) {\n        console.log(\"setProgramConstantsFromMatrix: programType\" + programType + \" firstRegister: \" + firstRegister + \" matrix: \" + matrix + \" transposedMatrix: \" + transposedMatrix);\n\n        var d:Float32Array = matrix.rawData;\n        if (transposedMatrix) {\n            var raw:Float32Array = Matrix3DUtils.RAW_DATA_CONTAINER;\n            raw[0] = d[0];\n            raw[1] = d[4];\n            raw[2] = d[8];\n            raw[3] = d[12];\n            raw[4] = d[1];\n            raw[5] = d[5];\n            raw[6] = d[9];\n            raw[7] = d[13];\n            raw[8] = d[2];\n            raw[9] = d[6];\n            raw[10] = d[10];\n            raw[11] = d[14];\n            raw[12] = d[3];\n            raw[13] = d[7];\n            raw[14] = d[11];\n            raw[15] = d[15];\n\n            this.setProgramConstantsFromArray(programType, firstRegister, raw, 4);\n        } else {\n            this.setProgramConstantsFromArray(programType, firstRegister, d, 4);\n        }\n    }\n\n    public setProgramConstantsFromArray(programType:number, firstRegister:number, data:Float32Array, numRegisters:number) {\n        console.log(\"setProgramConstantsFromArray: programType\" + programType + \" firstRegister: \" + firstRegister + \" data: \" + data + \" numRegisters: \" + numRegisters);\n        var target:Array<Vector3D>;\n        if (programType == ContextGLProgramType.VERTEX) {\n            target = this._vertexConstants;\n        } else if (programType == ContextGLProgramType.FRAGMENT) {\n            target = this._fragmentConstants;\n        }\n\n        var k:number = 0;\n        for (var i:number = firstRegister; i < firstRegister + numRegisters; i++) {\n            target[i] = new Vector3D(data[k++], data[k++], data[k++], data[k++]);\n        }\n    }\n\n    public setTextureAt(sampler:number, texture:TextureSoftware) {\n        console.log(\"setTextureAt sample: \" + sampler + \" texture: \" + texture);\n        this._textures[sampler] = texture;\n    }\n\n    public setVertexBufferAt(index:number, buffer:VertexBufferSoftware, bufferOffset:number, format:number) {\n        console.log(\"setVertexBufferAt index: \" + index + \" buffer: \" + buffer + \" bufferOffset: \" + bufferOffset + \" format: \" + format);\n        this._vertexBuffers[index] = buffer;\n        this._vertexBufferOffsets[index] = bufferOffset;\n        this._vertexBufferFormats[index] = format;\n    }\n\n    public present() {\n        console.log(\"present()\");\n        this._frontBuffer.fillRect(this._frontBuffer.rect, ColorUtils.ARGBtoFloat32(0, 0, 0, 0));\n        this._frontBuffer.draw(this._backBufferColor, this._frontBufferMatrix);\n    }\n\n    public drawToBitmapImage2D(destination:BitmapImage2D) {\n    }\n\n    public drawIndices(mode:string, indexBuffer:IndexBufferSoftware, firstIndex:number, numIndices:number) {\n        console.log(\"drawIndices mode: \" + mode + \" firstIndex: \" + firstIndex + \" numIndices: \" + numIndices);\n\n        if (!this._program) {\n            return;\n        }\n\n        this._backBufferColor.lock();\n\n        var index0:number;\n        var index1:number;\n        var index2:number;\n\n        var vo0:ProgramVOSoftware;\n        var vo1:ProgramVOSoftware;\n        var vo2:ProgramVOSoftware;\n\n        if (this._cullingMode == ContextGLTriangleFace.BACK) {\n            for (var i:number = firstIndex; i < numIndices; i += 3) {\n                index0 = indexBuffer.data[indexBuffer.startOffset + i];\n                index1 = indexBuffer.data[indexBuffer.startOffset + i + 1];\n                index2 = indexBuffer.data[indexBuffer.startOffset + i + 2];\n\n                vo0 = this._program.vertex(this, index0);\n                vo1 = this._program.vertex(this, index1);\n                vo2 = this._program.vertex(this, index2);\n\n                this.triangle(vo0, vo1, vo2);\n            }\n        } else if (this._cullingMode == ContextGLTriangleFace.FRONT) {\n            for (var i:number = firstIndex; i < numIndices; i += 3) {\n                index0 = indexBuffer.data[indexBuffer.startOffset + i + 2];\n                index1 = indexBuffer.data[indexBuffer.startOffset + i + 1];\n                index2 = indexBuffer.data[indexBuffer.startOffset + i + 0];\n\n                vo0 = this._program.vertex(this, index0);\n                vo1 = this._program.vertex(this, index1);\n                vo2 = this._program.vertex(this, index2);\n\n                this.triangle(vo0, vo1, vo2);\n            }\n        } else if (this._cullingMode == ContextGLTriangleFace.FRONT_AND_BACK || this._cullingMode == ContextGLTriangleFace.NONE) {\n            for (var i:number = firstIndex; i < numIndices; i += 3) {\n                index0 = indexBuffer.data[indexBuffer.startOffset + i + 2];\n                index1 = indexBuffer.data[indexBuffer.startOffset + i + 1];\n                index2 = indexBuffer.data[indexBuffer.startOffset + i + 0];\n\n                vo0 = this._program.vertex(this, index0);\n                vo1 = this._program.vertex(this, index1);\n                vo2 = this._program.vertex(this, index2);\n\n                this.triangle(vo0, vo1, vo2);\n\n                index0 = indexBuffer.data[indexBuffer.startOffset + i];\n                index1 = indexBuffer.data[indexBuffer.startOffset + i + 1];\n                index2 = indexBuffer.data[indexBuffer.startOffset + i + 2];\n\n                vo0 = this._program.vertex(this, index0);\n                vo1 = this._program.vertex(this, index1);\n                vo2 = this._program.vertex(this, index2);\n                this.triangle(vo0, vo1, vo2);\n            }\n        }\n\n        //if (ContextSoftware._drawCallback) {\n        //    ContextSoftware._drawCallback(this._backBufferColor);\n        //}\n        this._backBufferColor.unlock();\n    }\n\n    public drawVertices(mode:string, firstVertex:number, numVertices:number) {\n        //TODO:\n    }\n\n    public setScissorRectangle(rectangle:Rectangle) {\n        //TODO:\n    }\n\n    public setSamplerStateAt(sampler:number, wrap:string, filter:string, mipfilter:string) {\n        //console.log(\"setSamplerStateAt: \"+sampler+\" wrap: \"+wrap+\" filter: \"+filter+\" mipfilter: \"+mipfilter);\n        var state:SoftwareSamplerState = this._samplerStates[sampler];\n        if (!state) {\n            state = this._samplerStates[sampler] = new SoftwareSamplerState();\n        }\n        state.wrap = wrap;\n        state.filter = filter;\n        state.mipfilter = mipfilter;\n    }\n\n    public setRenderToTexture(target:ITextureBase, enableDepthAndStencil:boolean, antiAlias:number, surfaceSelector:number) {\n        //TODO:\n    }\n\n    public setRenderToBackBuffer() {\n        //TODO:\n    }\n\n    public putPixel(x:number, y:number, color:number):void {\n        var dest:number[] = ColorUtils.float32ColorToARGB(this._backBufferColor.getPixel32(x, y));\n        dest[0] /= 255;\n        dest[1] /= 255;\n        dest[2] /= 255;\n        dest[3] /= 255;\n\n        var source:number[] = ColorUtils.float32ColorToARGB(color);\n        source[0] /= 255;\n        source[1] /= 255;\n        source[2] /= 255;\n        source[3] /= 255;\n\n        var destModified:number[] = this.applyBlendMode(dest, this._blendDestination, dest, source);\n        var sourceModified:number[] = this.applyBlendMode(source, this._blendSource, dest, source);\n\n        var a:number = destModified[0] + sourceModified[0];\n        var r:number = destModified[1] + sourceModified[1];\n        var g:number = destModified[2] + sourceModified[2];\n        var b:number = destModified[3] + sourceModified[3];\n\n        a = Math.max(0, Math.min(a, 1));\n        r = Math.max(0, Math.min(r, 1));\n        g = Math.max(0, Math.min(g, 1));\n        b = Math.max(0, Math.min(b, 1));\n        //\n        //r*=a/255;\n        //g*=a/255;\n        //b*=a/255;\n        //a = 255;\n\n        this._backBufferColor.setPixel32(x, y, ColorUtils.ARGBtoFloat32(a * 255, r * 255, g * 255, b * 255));\n    }\n\n    private applyBlendMode(argb:number[], blend:string, dest:number[], source:number[]):number[] {\n        var result:number[] = [];\n\n        result[0] = argb[0];\n        result[1] = argb[1];\n        result[2] = argb[2];\n        result[3] = argb[3];\n\n        if (blend == ContextGLBlendFactor.DESTINATION_ALPHA) {\n            result[0] *= dest[0];\n            result[1] *= dest[0];\n            result[2] *= dest[0];\n            result[3] *= dest[0];\n        } else if (blend == ContextGLBlendFactor.DESTINATION_COLOR) {\n            result[0] *= dest[0];\n            result[1] *= dest[1];\n            result[2] *= dest[2];\n            result[3] *= dest[3];\n        } else if (blend == ContextGLBlendFactor.ZERO) {\n            result[0] = 0;\n            result[1] = 0;\n            result[2] = 0;\n            result[3] = 0;\n        } else if (blend == ContextGLBlendFactor.ONE_MINUS_DESTINATION_ALPHA) {\n            result[0] *= 1 - dest[0];\n            result[1] *= 1 - dest[0];\n            result[2] *= 1 - dest[0];\n            result[3] *= 1 - dest[0];\n        } else if (blend == ContextGLBlendFactor.ONE_MINUS_DESTINATION_COLOR) {\n            result[0] *= 1 - dest[0];\n            result[1] *= 1 - dest[1];\n            result[2] *= 1 - dest[2];\n            result[3] *= 1 - dest[3];\n        } else if (blend == ContextGLBlendFactor.ONE_MINUS_SOURCE_ALPHA) {\n            result[0] *= 1 - source[0];\n            result[1] *= 1 - source[0];\n            result[2] *= 1 - source[0];\n            result[3] *= 1 - source[0];\n        } else if (blend == ContextGLBlendFactor.ONE_MINUS_SOURCE_COLOR) {\n            result[0] *= 1 - source[0];\n            result[1] *= 1 - source[1];\n            result[2] *= 1 - source[2];\n            result[3] *= 1 - source[3];\n        } else if (blend == ContextGLBlendFactor.SOURCE_ALPHA) {\n            result[0] *= source[0];\n            result[1] *= source[0];\n            result[2] *= source[0];\n            result[3] *= source[0];\n        } else if (blend == ContextGLBlendFactor.SOURCE_COLOR) {\n            result[0] *= source[0];\n            result[1] *= source[1];\n            result[2] *= source[2];\n            result[3] *= source[3];\n        }\n\n        return result;\n    }\n\n    public clamp(value:number, min:number = 0, max:number = 1):number {\n        return Math.max(min, Math.min(value, max));\n    }\n\n    public interpolate(min:number, max:number, gradient:number) {\n        return min + (max - min) * this.clamp(gradient);\n    }\n\n    public triangle(vo0:ProgramVOSoftware, vo1:ProgramVOSoftware, vo2:ProgramVOSoftware):void {\n        var p0:Vector3D = vo0.outputPosition[0];\n        if (!p0 || p0.w == 0 || isNaN(p0.w)) {\n            console.error(\"wrong position\");\n            return;\n        }\n        var p1:Vector3D = vo1.outputPosition[0];\n        var p2:Vector3D = vo2.outputPosition[0];\n\n        p0.z = p0.z * 2 - p0.w;\n        p1.z = p1.z * 2 - p1.w;\n        p2.z = p2.z * 2 - p2.w;\n\n        p0.scaleBy(1 / p0.w);\n        p1.scaleBy(1 / p1.w);\n        p2.scaleBy(1 / p2.w);\n\n        var project:Vector3D = new Vector3D(p0.w, p1.w, p2.w);\n        p0 = this._screenMatrix.transformVector(p0);\n        p1 = this._screenMatrix.transformVector(p1);\n        p2 = this._screenMatrix.transformVector(p2);\n        var depth:Vector3D = new Vector3D(p0.z, p1.z, p2.z);\n\n        this._bboxMin.x = 1000000;\n        this._bboxMin.y = 1000000;\n        this._bboxMax.x = -1000000;\n        this._bboxMax.y = -1000000;\n\n        this._clamp.x = this._backBufferWidth - 1;\n        this._clamp.y = this._backBufferHeight - 1;\n\n        this._bboxMin.x = Math.max(0, Math.min(this._bboxMin.x, p0.x));\n        this._bboxMin.y = Math.max(0, Math.min(this._bboxMin.y, p0.y));\n\n        this._bboxMin.x = Math.max(0, Math.min(this._bboxMin.x, p1.x));\n        this._bboxMin.y = Math.max(0, Math.min(this._bboxMin.y, p1.y));\n\n        this._bboxMin.x = Math.max(0, Math.min(this._bboxMin.x, p2.x));\n        this._bboxMin.y = Math.max(0, Math.min(this._bboxMin.y, p2.y));\n\n        this._bboxMax.x = Math.min(this._clamp.x, Math.max(this._bboxMax.x, p0.x));\n        this._bboxMax.y = Math.min(this._clamp.y, Math.max(this._bboxMax.y, p0.y));\n\n        this._bboxMax.x = Math.min(this._clamp.x, Math.max(this._bboxMax.x, p1.x));\n        this._bboxMax.y = Math.min(this._clamp.y, Math.max(this._bboxMax.y, p1.y));\n\n        this._bboxMax.x = Math.min(this._clamp.x, Math.max(this._bboxMax.x, p2.x));\n        this._bboxMax.y = Math.min(this._clamp.y, Math.max(this._bboxMax.y, p2.y));\n\n        this._bboxMin.x = Math.floor(this._bboxMin.x);\n        this._bboxMin.y = Math.floor(this._bboxMin.y);\n        this._bboxMax.x = Math.floor(this._bboxMax.x);\n        this._bboxMax.y = Math.floor(this._bboxMax.y);\n\n        for (var x:number = this._bboxMin.x; x <= this._bboxMax.x; x++) {\n            for (var y:number = this._bboxMin.y; y <= this._bboxMax.y; y++) {\n                var color:Vector3D = this.calcPixel(x, y, p0, p1, p2, project, depth, vo0, vo1, vo2);\n                if (color) {\n                    this.putPixel(x, y, ColorUtils.ARGBtoFloat32(color.w, color.x, color.y, color.z));\n                }\n            }\n        }\n    }\n\n    public calcPixel(x:number, y:number, p0:Vector3D, p1:Vector3D, p2:Vector3D, project:Vector3D, depth:Vector3D, vo0:ProgramVOSoftware, vo1:ProgramVOSoftware, vo2:ProgramVOSoftware):Vector3D {\n        var screen:Vector3D = this.barycentric(p0, p1, p2, x, y);\n        var screenRight:Vector3D = this.barycentric(p0, p1, p2, x + 1, y);\n        var screenBottom:Vector3D = this.barycentric(p0, p1, p2, x, y + 1);\n\n        var clip:Vector3D = new Vector3D(screen.x / project.x, screen.y / project.y, screen.z / project.z);\n        clip.scaleBy(1 / (clip.x + clip.y + clip.z));\n\n        var clipRight:Vector3D = new Vector3D(screenRight.x / project.x, screenRight.y / project.y, screenRight.z / project.z);\n        clipRight.scaleBy(1 / (clipRight.x + clipRight.y + clipRight.z));\n\n        var clipBottom:Vector3D = new Vector3D(screenBottom.x / project.x, screenBottom.y / project.y, screenBottom.z / project.z);\n        clipBottom.scaleBy(1 / (clipBottom.x + clipBottom.y + clipBottom.z));\n\n        var index:number = ((x % this._backBufferWidth) + y * this._backBufferWidth);\n\n        var fragDepth:number = depth.x * screen.x + depth.y * screen.y + depth.z * screen.z;\n\n        if (screen.x < 0 || screen.y < 0 || screen.z < 0) {\n            return null;\n        }\n\n        var currentDepth:number = this._zbuffer[index];\n        //< fragDepth\n        var passDepthTest:boolean = false;\n        switch (this._depthCompareMode) {\n            case ContextGLCompareMode.ALWAYS:\n                passDepthTest = true;\n                break;\n            case ContextGLCompareMode.EQUAL:\n                passDepthTest = fragDepth == currentDepth;\n                break;\n            case ContextGLCompareMode.GREATER:\n                passDepthTest = fragDepth > currentDepth;\n                break;\n            case ContextGLCompareMode.GREATER_EQUAL:\n                passDepthTest = fragDepth >= currentDepth;\n                break;\n            case ContextGLCompareMode.LESS:\n                passDepthTest = fragDepth < currentDepth;\n                break;\n            case ContextGLCompareMode.LESS_EQUAL:\n                passDepthTest = fragDepth <= currentDepth;\n                break;\n            case ContextGLCompareMode.NEVER:\n                passDepthTest = false;\n                break;\n            case ContextGLCompareMode.NOT_EQUAL:\n                passDepthTest = fragDepth != currentDepth;\n                break;\n            default:\n        }\n\n        if (!passDepthTest) {\n            return null;\n        }\n\n        var fragmentVO:ProgramVOSoftware = this._program.fragment(this, clip, clipRight, clipBottom, vo0, vo1, vo2, fragDepth);\n        if (fragmentVO.discard) {\n            return null;\n        }\n\n        if (this._writeDepth) {\n            this._zbuffer[index] = fragDepth;//todo: fragmentVO.outputDepth?\n        }\n\n        var color:Vector3D = fragmentVO.outputColor[0];\n\n        color.x = Math.max(0, Math.min(color.x, 1));\n        color.y = Math.max(0, Math.min(color.y, 1));\n        color.z = Math.max(0, Math.min(color.z, 1));\n        color.w = Math.max(0, Math.min(color.w, 1));\n\n        color.x *= 255;\n        color.y *= 255;\n        color.z *= 255;\n        color.w *= 255;\n        return color;\n    }\n\n    public barycentric(a:Vector3D, b:Vector3D, c:Vector3D, x:number, y:number):Vector3D {\n        var sx:Vector3D = new Vector3D();\n        sx.x = c.x - a.x;\n        sx.y = b.x - a.x;\n        sx.z = a.x - x;\n\n        var sy:Vector3D = new Vector3D();\n        sy.x = c.y - a.y;\n        sy.y = b.y - a.y;\n        sy.z = a.y - y;\n\n        var u:Vector3D = sx.crossProduct(sy);\n        if (u.z < 0.01) {\n            return new Vector3D(1 - (u.x + u.y) / u.z, u.y / u.z, u.x / u.z);\n        }\n        return new Vector3D(-1, 1, 1);\n    }\n}\n\nexport default ContextSoftware;\n\nclass VertexBufferProperties {\n    public size:number;\n\n    public type:number;\n\n    public normalized:boolean;\n\n    constructor(size:number, type:number, normalized:boolean) {\n        this.size = size;\n        this.type = type;\n        this.normalized = normalized;\n    }\n}\n",
    "import BitmapImage2D\t\t\t\tfrom \"awayjs-core/lib/image/BitmapImage2D\";\nimport Matrix3D\t\t\t\t\t\tfrom \"awayjs-core/lib/geom/Matrix3D\";\nimport Matrix3DUtils\t\t\t\tfrom \"awayjs-core/lib/geom/Matrix3DUtils\";\nimport Rectangle\t\t\t\t\tfrom \"awayjs-core/lib/geom/Rectangle\";\n\n//import swfobject\t\t\t\t\tfrom \"../swfobject\";\nimport ContextGLClearMask\t\t\tfrom \"../base/ContextGLClearMask\";\nimport ContextGLProgramType\t\t\tfrom \"../base/ContextGLProgramType\";\nimport CubeTextureFlash\t\t\t\tfrom \"../base/CubeTextureFlash\";\nimport IContextGL\t\t\t\t\tfrom \"../base/IContextGL\";\nimport IndexBufferFlash\t\t\t\tfrom \"../base/IndexBufferFlash\";\nimport OpCodes\t\t\t\t\t\tfrom \"../base/OpCodes\";\nimport ProgramFlash\t\t\t\t\tfrom \"../base/ProgramFlash\";\nimport TextureFlash\t\t\t\t\tfrom \"../base/TextureFlash\";\nimport ResourceBaseFlash\t\t\tfrom \"../base/ResourceBaseFlash\";\nimport VertexBufferFlash\t\t\tfrom \"../base/VertexBufferFlash\";\n\nclass ContextStage3D implements IContextGL\n{\n\tpublic static contexts:Object = new Object();\n\n\tpublic _iDriverInfo;\n\n\tprivate _container:HTMLElement;\n\tprivate _width:number;\n\tprivate _height:number;\n\tprivate _cmdStream:string = \"\";\n\tprivate _errorCheckingEnabled:boolean;\n\tprivate _resources:Array<ResourceBaseFlash>;\n\tprivate _oldCanvas:HTMLCanvasElement;\n\tprivate _oldParent:HTMLElement;\n\n\n\tpublic static debug:boolean = false;\n\tpublic static logStream:boolean = false;\n\n\tpublic _iCallback:(context:IContextGL) => void;\n\n\tpublic get container():HTMLElement\n\t{\n\t\treturn this._container;\n\t}\n\n\tpublic get driverInfo()\n\t{\n\t\treturn this._iDriverInfo;\n\t}\n\n\tpublic get errorCheckingEnabled():boolean\n\t{\n\t\treturn this._errorCheckingEnabled;\n\t}\n\n\tpublic set errorCheckingEnabled(value:boolean)\n\t{\n\t\tif (this._errorCheckingEnabled == value)\n\t\t\treturn;\n\n\t\tthis._errorCheckingEnabled = value;\n\n\t\tthis.addStream(String.fromCharCode(OpCodes.enableErrorChecking, value? OpCodes.trueValue : OpCodes.falseValue));\n\t\tthis.execute();\n\t}\n\n\t//TODO: get rid of hack that fixes including definition file\n\tconstructor(container:HTMLCanvasElement, callback:(context:IContextGL) => void)\n\t{\n\t\tthis._resources = new Array<ResourceBaseFlash>();\n\n\t\tvar swfVersionStr = \"11.0.0\";\n\n\t\t// To use express install, set to playerProductInstall.swf, otherwise the empty string.\n\t\tvar flashvars = {\n\t\t\tid:container.id\n\t\t};\n\n\t\tvar params = {\n\t\t\tquality:\"high\",\n\t\t\tbgcolor:\"#ffffff\",\n\t\t\tallowscriptaccess:\"sameDomain\",\n\t\t\tallowfullscreen:\"true\",\n\t\t\twmode:\"direct\"\n\t\t};\n\n\t\tthis._errorCheckingEnabled = false;\n\t\tthis._iDriverInfo = \"Unknown\";\n\n\t\tvar attributes = {\n\t\t\tsalign:\"tl\",\n\t\t\tid:container.id,\n\t\t\tname:container[\"name\"] //TODO: needed?\n\t\t};\n\n\t\tthis._oldCanvas = <HTMLCanvasElement> container.cloneNode(); // keep the old one to restore on dispose\n\t\tthis._oldParent = <HTMLElement> container.parentNode;\n\n\t\tvar context3dObj = this;\n\t\tContextStage3D.contexts[container.id] = this;\n\n\t\tfunction callbackSWFObject(callbackInfo)\n\t\t{\n\t\t\tif (!callbackInfo.success)\n\t\t\t\treturn;\n\n\t\t\tcontext3dObj._container = callbackInfo.ref;\n\t\t\tcontext3dObj._iCallback = callback;\n\t\t}\n\n\t\t//swfobject.embedSWF(\"libs/molehill_js_flashbridge.swf\", container.id, String(container.width), String(container.height), swfVersionStr, \"\", flashvars, params, attributes, callbackSWFObject);\n\t}\n\n\tpublic _iAddResource(resource:ResourceBaseFlash)\n\t{\n\t\tthis._resources.push(resource);\n\t}\n\n\tpublic _iRemoveResource(resource:ResourceBaseFlash)\n\t{\n\t\tthis._resources.splice(this._resources.indexOf(resource));\n\t}\n\n\tpublic createTexture(width:number, height:number, format:string, optimizeForRenderToTexture:boolean, streamingLevels:number = 0):TextureFlash\n\t{\n\t\t//TODO:streaming\n\t\treturn new TextureFlash(this, width, height, format, optimizeForRenderToTexture);\n\t}\n\n\tpublic createCubeTexture(size:number, format:string, optimizeForRenderToTexture:boolean, streamingLevels:number = 0):CubeTextureFlash\n\t{\n\t\t//TODO:streaming\n\t\treturn new CubeTextureFlash(this, size, format, optimizeForRenderToTexture);\n\t}\n\n\n\tpublic setTextureAt(sampler:number, texture:ResourceBaseFlash)\n\t{\n\t\tif (texture) {\n\t\t\tthis.addStream(String.fromCharCode(OpCodes.setTextureAt) + sampler + \",\" + texture.id + \",\");\n\t\t} else {\n\t\t\tthis.addStream(String.fromCharCode(OpCodes.clearTextureAt) + sampler.toString() + \",\");\n\t\t}\n\n\t\tif (ContextStage3D.debug)\n\t\t\tthis.execute();\n\t}\n\n\tpublic setSamplerStateAt(sampler:number, wrap:string, filter:string, mipfilter:string):void\n\t{\n\t\t//nothing to do here\n\t}\n\n\tpublic setStencilActions(triangleFace:string = \"frontAndBack\", compareMode:string = \"always\", actionOnBothPass:string = \"keep\", actionOnDepthFail:string = \"keep\", actionOnDepthPassStencilFail:string = \"keep\", coordinateSystem:string = \"leftHanded\")\n\t{\n\t\tthis.addStream(String.fromCharCode(OpCodes.setStencilActions) + triangleFace + \"$\" + compareMode + \"$\" + actionOnBothPass + \"$\" + actionOnDepthFail + \"$\" + actionOnDepthPassStencilFail + \"$\");\n\n\t\tif (ContextStage3D.debug)\n\t\t\tthis.execute();\n\t}\n\n\tpublic setStencilReferenceValue(referenceValue:number, readMask:number = 255, writeMask:number = 255)\n\t{\n\t\tthis.addStream(String.fromCharCode(OpCodes.setStencilReferenceValue, referenceValue + OpCodes.intMask, readMask + OpCodes.intMask, writeMask + OpCodes.intMask));\n\n\t\tif (ContextStage3D.debug)\n\t\t\tthis.execute();\n\t}\n\n\tpublic setCulling(triangleFaceToCull:string, coordinateSystem:string = \"leftHanded\")\n\t{\n\t\t//TODO implement coordinateSystem option\n\t\tthis.addStream(String.fromCharCode(OpCodes.setCulling) + triangleFaceToCull + \"$\");\n\n\t\tif (ContextStage3D.debug)\n\t\t\tthis.execute();\n\t}\n\n\tpublic drawIndices(mode:string, indexBuffer:IndexBufferFlash, firstIndex:number = 0, numIndices:number = -1)\n\t{\n\t\tfirstIndex = firstIndex || 0;\n\t\tif (!numIndices || numIndices < 0)\n\t\t\tnumIndices = indexBuffer.numIndices;\n\n\t\t//assume triangles\n\t\tthis.addStream(String.fromCharCode(OpCodes.drawTriangles, indexBuffer.id + OpCodes.intMask) + firstIndex + \",\" + numIndices + \",\");\n\n\t\tif (ContextStage3D.debug)\n\t\t\tthis.execute();\n\t}\n\n\tpublic drawVertices(mode:string, firstVertex:number = 0, numVertices:number = -1)\n\t{\n\t\t//can't be done in Stage3D\n\t}\n\n\n\tpublic setProgramConstantsFromMatrix(programType:number, firstRegister:number, matrix:Matrix3D, transposedMatrix:boolean = false)\n\t{\n\t\t//this._gl.uniformMatrix4fv(this._gl.getUniformLocation(this._currentProgram.glProgram, this._uniformLocationNameDictionary[programType]), !transposedMatrix, new Float32Array(matrix.rawData));\n\n\t\t//TODO remove special case for WebGL matrix calls?\n\t\tvar d:Float32Array = matrix.rawData;\n\t\tif (transposedMatrix) {\n\t\t\tvar raw:Float32Array = Matrix3DUtils.RAW_DATA_CONTAINER;\n\t\t\traw[0] = d[0];\n\t\t\traw[1] = d[4];\n\t\t\traw[2] = d[8];\n\t\t\traw[3] = d[12];\n\t\t\traw[4] = d[1];\n\t\t\traw[5] = d[5];\n\t\t\traw[6] = d[9];\n\t\t\traw[7] = d[13];\n\t\t\traw[8] = d[2];\n\t\t\traw[9] = d[6];\n\t\t\traw[10] = d[10];\n\t\t\traw[11] = d[14];\n\t\t\traw[12] = d[3];\n\t\t\traw[13] = d[7];\n\t\t\traw[14] = d[11];\n\t\t\traw[15] = d[15];\n\n\t\t\tthis.setProgramConstantsFromArray(programType, firstRegister, raw, 4);\n\t\t} else {\n\t\t\tthis.setProgramConstantsFromArray(programType, firstRegister, d, 4);\n\t\t}\n\t}\n\n\tpublic setProgramConstantsFromArray(programType:number, firstRegister:number, data:Float32Array, numRegisters:number = -1)\n\t{\n\t\tvar startIndex:number;\n\t\tvar target:number = (programType == ContextGLProgramType.VERTEX)? OpCodes.trueValue : OpCodes.falseValue;\n\t\tfor (var i:number = 0; i < numRegisters; i++) {\n\t\t\tstartIndex = i*4;\n\t\t\tthis.addStream(String.fromCharCode(OpCodes.setProgramConstant, target, (firstRegister + i) + OpCodes.intMask) + data[startIndex] + \",\" + data[startIndex + 1] + \",\" + data[startIndex + 2] + \",\" + data[startIndex + 3] + \",\");\n\n\t\t\tif (ContextStage3D.debug)\n\t\t\t\tthis.execute();\n\t\t}\n\t}\n\n\tpublic setProgram(program:ProgramFlash)\n\t{\n\t\tthis.addStream(String.fromCharCode(OpCodes.setProgram, program.id + OpCodes.intMask));\n\n\t\tif (ContextStage3D.debug)\n\t\t\tthis.execute();\n\t}\n\n\tpublic present()\n\t{\n\t\tthis.addStream(String.fromCharCode(OpCodes.present));\n\t\tthis.execute();\n\t}\n\n\tpublic clear(red:number = 0, green:number = 0, blue:number = 0, alpha:number = 1, depth:number = 1, stencil:number = 0, mask:number = ContextGLClearMask.ALL)\n\t{\n\t\tthis.addStream(String.fromCharCode(OpCodes.clear) + red + \",\" + green + \",\" + blue + \",\" + alpha + \",\" + depth + \",\" + stencil + \",\" + mask + \",\");\n\n\t\tif (ContextStage3D.debug)\n\t\t\tthis.execute();\n\t}\n\n\tpublic createProgram():ProgramFlash\n\t{\n\t\treturn new ProgramFlash(this);\n\t}\n\n\tpublic createVertexBuffer(numVertices:number, data32PerVertex:number):VertexBufferFlash\n\t{\n\t\treturn new VertexBufferFlash(this, numVertices, data32PerVertex);\n\t}\n\n\tpublic createIndexBuffer(numIndices:number):IndexBufferFlash\n\t{\n\t\treturn new IndexBufferFlash(this, numIndices);\n\t}\n\n\tpublic configureBackBuffer(width:number, height:number, antiAlias:number, enableDepthAndStencil:boolean = true)\n\t{\n\t\tthis._width = width;\n\t\tthis._height = height;\n\n\t\t//TODO: add Anitalias setting\n\t\tthis.addStream(String.fromCharCode(OpCodes.configureBackBuffer) + width + \",\" + height + \",\");\n\t}\n\n\tpublic drawToBitmapImage2D(destination:BitmapImage2D)\n\t{\n\t\t//TODO\n\t}\n\n\tpublic setVertexBufferAt(index:number, buffer:VertexBufferFlash, bufferOffset:number = 0, format:number = null)\n\t{\n\t\tif (buffer) {\n\t\t\tthis.addStream(String.fromCharCode(OpCodes.setVertexBufferAt, index + OpCodes.intMask) + buffer.id + \",\" + bufferOffset + \",\" + format + \"$\");\n\t\t} else {\n\t\t\tthis.addStream(String.fromCharCode(OpCodes.clearVertexBufferAt, index + OpCodes.intMask));\n\t\t}\n\n\t\tif (ContextStage3D.debug)\n\t\t\tthis.execute();\n\t}\n\n\tpublic setColorMask(red:boolean, green:boolean, blue:boolean, alpha:boolean)\n\t{\n\t\tthis.addStream(String.fromCharCode(OpCodes.setColorMask, red? OpCodes.trueValue : OpCodes.falseValue, green? OpCodes.trueValue : OpCodes.falseValue, blue? OpCodes.trueValue : OpCodes.falseValue, alpha? OpCodes.trueValue : OpCodes.falseValue));\n\n\t\tif (ContextStage3D.debug)\n\t\t\tthis.execute();\n\t}\n\n\tpublic setBlendFactors(sourceFactor:string, destinationFactor:string)\n\t{\n\t\tthis.addStream(String.fromCharCode(OpCodes.setBlendFactors) + sourceFactor + \"$\" + destinationFactor + \"$\");\n\n\t\tif (ContextStage3D.debug)\n\t\t\tthis.execute();\n\t}\n\n\tpublic setRenderToTexture(target:ResourceBaseFlash, enableDepthAndStencil:boolean = false, antiAlias:number = 0, surfaceSelector:number = 0)\n\t{\n\t\tif (target === null || target === undefined) {\n\t\t\tthis.addStream(String.fromCharCode(OpCodes.clearRenderToTexture));\n\t\t} else {\n\t\t\tthis.addStream(String.fromCharCode(OpCodes.setRenderToTexture, enableDepthAndStencil? OpCodes.trueValue : OpCodes.falseValue) + target.id + \",\" + (antiAlias || 0) + \",\");\n\t\t}\n\n\t\tif (ContextStage3D.debug)\n\t\t\tthis.execute();\n\t}\n\n\n\tpublic setRenderToBackBuffer()\n\t{\n\t\tthis.addStream(String.fromCharCode(OpCodes.clearRenderToTexture));\n\n\t\tif (ContextStage3D.debug)\n\t\t\tthis.execute();\n\t}\n\n\tpublic setScissorRectangle(rectangle:Rectangle)\n\t{\n\t\tif (rectangle) {\n\t\t\tthis.addStream(String.fromCharCode(OpCodes.setScissorRect) + rectangle.x + \",\" + rectangle.y + \",\" + rectangle.width + \",\" + rectangle.height + \",\");\n\t\t} else {\n\t\t\tthis.addStream(String.fromCharCode(OpCodes.clearScissorRect));\n\t\t}\n\n\t\tif (ContextStage3D.debug)\n\t\t\tthis.execute();\n\t}\n\n\tpublic setDepthTest(depthMask:boolean, passCompareMode:string)\n\t{\n\t\tthis.addStream(String.fromCharCode(OpCodes.setDepthTest, depthMask? OpCodes.trueValue : OpCodes.falseValue) + passCompareMode + \"$\");\n\n\t\tif (ContextStage3D.debug)\n\t\t\tthis.execute();\n\t}\n\n\tpublic dispose()\n\t{\n\t\tif (this._container == null)\n\t\t\treturn;\n\n\t\tconsole.log(\"Context3D dispose, releasing \" + this._resources.length + \" resources.\");\n\n\t\twhile (this._resources.length)\n\t\t\tthis._resources[0].dispose();\n\n\t\tif (this._container) {\n\t\t\t// encode command\n\t\t\tthis.addStream(String.fromCharCode(OpCodes.disposeContext));\n\t\t\tthis.execute();\n\t\t\t//swfobject.removeSWF(this._oldCanvas.id);\n\t\t\tif (this._oldCanvas && this._oldParent) {\n\t\t\t\tthis._oldParent.appendChild(this._oldCanvas);\n\t\t\t\tthis._oldParent = null;\n\t\t\t}\n\t\t\tthis._container = null;\n\t\t}\n\n\t\tthis._oldCanvas = null;\n\t}\n\n\tpublic addStream(stream:string)\n\t{\n\t\tthis._cmdStream += stream;\n\t}\n\n\tpublic execute():number\n\t{\n\t\tif (ContextStage3D.logStream)\n\t\t\tconsole.log(this._cmdStream);\n\n\t\tvar result:number = this._container[\"CallFunction\"](\"<invoke name=\\\"execStage3dOpStream\\\" returntype=\\\"javascript\\\"><arguments><string>\" + this._cmdStream + \"</string></arguments></invoke>\");\n\n\t\tif (Number(result) <= -3)\n\t\t\tthrow \"Exec stream failed\";\n\n\t\tthis._cmdStream = \"\";\n\n\t\treturn Number(result);\n\t}\n}\n\nexport default ContextStage3D;\n\n/**\n* global function for flash callback\n*/\nfunction mountain_js_context_available(id, driverInfo)\n{\n\tvar ctx:ContextStage3D = ContextStage3D.contexts[id];\n\tif (ctx._iCallback) {\n\t\tctx._iDriverInfo = driverInfo;\n\t\t// get out of the current JS stack frame and call back from flash player\n\t\tvar timeOutId = window.setTimeout(function ()\n\t\t{\n\t\t\twindow.clearTimeout(timeOutId);\n\t\t\ttry {\n\t\t\t\tctx._iCallback(ctx);\n\t\t\t} catch (e) {\n\t\t\t\tconsole.log(\"Callback failed during flash initialization with '\" + e.toString() + \"'\");\n\t\t\t}\n\t\t}, 1);\n\t}\n}\n",
    "import BitmapImage2D\t\t\t\tfrom \"awayjs-core/lib/image/BitmapImage2D\";\nimport Matrix3D\t\t\t\t\t\tfrom \"awayjs-core/lib/geom/Matrix3D\";\nimport Matrix3DUtils\t\t\t\tfrom \"awayjs-core/lib/geom/Matrix3DUtils\";\nimport Rectangle\t\t\t\t\tfrom \"awayjs-core/lib/geom/Rectangle\";\nimport ByteArray\t\t\t\t\tfrom \"awayjs-core/lib/utils/ByteArray\";\n\nimport ContextGLBlendFactor\t\t\tfrom \"../base/ContextGLBlendFactor\";\nimport ContextGLDrawMode\t\t\tfrom \"../base/ContextGLDrawMode\";\nimport ContextGLClearMask\t\t\tfrom \"../base/ContextGLClearMask\";\nimport ContextGLCompareMode\t\t\tfrom \"../base/ContextGLCompareMode\";\nimport ContextGLMipFilter\t\t\tfrom \"../base/ContextGLMipFilter\";\nimport ContextGLProgramType\t\t\tfrom \"../base/ContextGLProgramType\";\nimport ContextGLStencilAction\t\tfrom \"../base/ContextGLStencilAction\";\nimport ContextGLTextureFilter\t\tfrom \"../base/ContextGLTextureFilter\";\nimport ContextGLTriangleFace\t\tfrom \"../base/ContextGLTriangleFace\";\nimport ContextGLVertexBufferFormat\tfrom \"../base/ContextGLVertexBufferFormat\";\nimport ContextGLWrapMode\t\t\tfrom \"../base/ContextGLWrapMode\";\nimport CubeTextureWebGL\t\t\t\tfrom \"../base/CubeTextureWebGL\";\nimport IContextGL\t\t\t\t    from \"../base/IContextGL\";\nimport IndexBufferWebGL\t\t\t\tfrom \"../base/IndexBufferWebGL\";\nimport ProgramWebGL\t\t\t\t\tfrom \"../base/ProgramWebGL\";\nimport TextureBaseWebGL\t\t\t\tfrom \"../base/TextureBaseWebGL\";\nimport TextureWebGL\t\t\t\t\tfrom \"../base/TextureWebGL\";\nimport SamplerState\t\t\t\t\tfrom \"../base/SamplerState\";\nimport VertexBufferWebGL\t\t\tfrom \"../base/VertexBufferWebGL\";\n\nclass ContextWebGL implements IContextGL\n{\n\tprivate _blendFactorDictionary:Object = new Object();\n\tprivate _drawModeDictionary:Object = new Object();\n\tprivate _compareModeDictionary:Object = new Object();\n\tprivate _stencilActionDictionary:Object = new Object();\n\tprivate _textureIndexDictionary:Array<number> = new Array<number>(8);\n\tprivate _textureTypeDictionary:Object = new Object();\n\tprivate _wrapDictionary:Object = new Object();\n\tprivate _filterDictionary:Object = new Object();\n\tprivate _mipmapFilterDictionary:Object = new Object();\n\tprivate _vertexBufferPropertiesDictionary:Array<VertexBufferProperties> = [];\n\n\tprivate _container:HTMLElement;\n\tprivate _width:number;\n\tprivate _height:number;\n\tprivate _drawing:boolean;\n\tprivate _blendEnabled:boolean;\n\tprivate _blendSourceFactor:number;\n\tprivate _blendDestinationFactor:number;\n\n\tprivate _standardDerivatives:boolean;\n\n\tprivate _samplerStates:Array<SamplerState> = new Array<SamplerState>(8);\n\n\tpublic static MAX_SAMPLERS:number = 8;\n\n\t//@protected\n\tpublic _gl:WebGLRenderingContext;\n\n\t//@protected\n\tpublic _currentProgram:ProgramWebGL;\n\tprivate _currentArrayBuffer:VertexBufferWebGL;\n\tprivate _activeTexture:number;\n\n    private _stencilCompareMode:number;\n    private _stencilCompareModeBack:number;\n    private _stencilCompareModeFront:number;\n    private _stencilReferenceValue : number = 0;\n    private _stencilReadMask : number = 0xff;\n    private _separateStencil : boolean = false;\n\n\n\tpublic get container():HTMLElement\n\t{\n\t\treturn this._container;\n\t}\n\tpublic get standardDerivatives():boolean\n\t{\n\t\treturn this._standardDerivatives;\n\t}\n\tconstructor(canvas:HTMLCanvasElement)\n\t{\n\t\tthis._container = canvas;\n\n\t\ttry {\n\t\t\tthis._gl = <WebGLRenderingContext> canvas.getContext(\"experimental-webgl\", { premultipliedAlpha:false, alpha:false, stencil:true });\n\n\t\t\tif (!this._gl)\n\t\t\t\tthis._gl = <WebGLRenderingContext> canvas.getContext(\"webgl\", { premultipliedAlpha:false, alpha:false, stencil:true });\n\t\t} catch (e) {\n\t\t\t//this.dispatchEvent( new away.events.AwayEvent( away.events.AwayEvent.INITIALIZE_FAILED, e ) );\n\t\t}\n\n\t\tif (this._gl) {\n\t\t\t//this.dispatchEvent( new away.events.AwayEvent( away.events.AwayEvent.INITIALIZE_SUCCESS ) );\n\n\t\t\tif(this._gl.getExtension(\"OES_standard_derivatives\"))\n\t\t\t{\n\t\t\t\tthis._standardDerivatives = true;\n\t\t\t}else{\n\t\t\t\tthis._standardDerivatives = false;\n\t\t\t}\n\n\t\t\t//setup shortcut dictionaries\n\t\t\tthis._blendFactorDictionary[ContextGLBlendFactor.ONE] = this._gl.ONE;\n\t\t\tthis._blendFactorDictionary[ContextGLBlendFactor.DESTINATION_ALPHA] = this._gl.DST_ALPHA;\n\t\t\tthis._blendFactorDictionary[ContextGLBlendFactor.DESTINATION_COLOR] = this._gl.DST_COLOR;\n\t\t\tthis._blendFactorDictionary[ContextGLBlendFactor.ONE] = this._gl.ONE;\n\t\t\tthis._blendFactorDictionary[ContextGLBlendFactor.ONE_MINUS_DESTINATION_ALPHA] = this._gl.ONE_MINUS_DST_ALPHA;\n\t\t\tthis._blendFactorDictionary[ContextGLBlendFactor.ONE_MINUS_DESTINATION_COLOR] = this._gl.ONE_MINUS_DST_COLOR;\n\t\t\tthis._blendFactorDictionary[ContextGLBlendFactor.ONE_MINUS_SOURCE_ALPHA] = this._gl.ONE_MINUS_SRC_ALPHA;\n\t\t\tthis._blendFactorDictionary[ContextGLBlendFactor.ONE_MINUS_SOURCE_COLOR] = this._gl.ONE_MINUS_SRC_COLOR;\n\t\t\tthis._blendFactorDictionary[ContextGLBlendFactor.SOURCE_ALPHA] = this._gl.SRC_ALPHA;\n\t\t\tthis._blendFactorDictionary[ContextGLBlendFactor.SOURCE_COLOR] = this._gl.SRC_COLOR;\n\t\t\tthis._blendFactorDictionary[ContextGLBlendFactor.ZERO] = this._gl.ZERO;\n\n\t\t\tthis._drawModeDictionary[ContextGLDrawMode.LINES] = this._gl.LINES;\n\t\t\tthis._drawModeDictionary[ContextGLDrawMode.TRIANGLES] = this._gl.TRIANGLES;\n\n            this._compareModeDictionary[ContextGLCompareMode.ALWAYS] = this._gl.ALWAYS;\n            this._compareModeDictionary[ContextGLCompareMode.EQUAL] = this._gl.EQUAL;\n            this._compareModeDictionary[ContextGLCompareMode.GREATER] = this._gl.GREATER;\n\t\t\tthis._compareModeDictionary[ContextGLCompareMode.GREATER_EQUAL] = this._gl.GEQUAL;\n\t\t\tthis._compareModeDictionary[ContextGLCompareMode.LESS] = this._gl.LESS;\n\t\t\tthis._compareModeDictionary[ContextGLCompareMode.LESS_EQUAL] = this._gl.LEQUAL;\n\t\t\tthis._compareModeDictionary[ContextGLCompareMode.NEVER] = this._gl.NEVER;\n\t\t\tthis._compareModeDictionary[ContextGLCompareMode.NOT_EQUAL] = this._gl.NOTEQUAL;\n\n            this._stencilActionDictionary[ContextGLStencilAction.DECREMENT_SATURATE] = this._gl.DECR;\n            this._stencilActionDictionary[ContextGLStencilAction.DECREMENT_WRAP] = this._gl.DECR_WRAP;\n            this._stencilActionDictionary[ContextGLStencilAction.INCREMENT_SATURATE] = this._gl.INCR;\n            this._stencilActionDictionary[ContextGLStencilAction.INCREMENT_WRAP] = this._gl.INCR_WRAP;\n            this._stencilActionDictionary[ContextGLStencilAction.INVERT] = this._gl.INVERT;\n            this._stencilActionDictionary[ContextGLStencilAction.KEEP] = this._gl.KEEP;\n            this._stencilActionDictionary[ContextGLStencilAction.SET] = this._gl.REPLACE;\n            this._stencilActionDictionary[ContextGLStencilAction.ZERO] = this._gl.ZERO;\n\n\t\t\tthis._textureIndexDictionary[0] = this._gl.TEXTURE0;\n\t\t\tthis._textureIndexDictionary[1] = this._gl.TEXTURE1;\n\t\t\tthis._textureIndexDictionary[2] = this._gl.TEXTURE2;\n\t\t\tthis._textureIndexDictionary[3] = this._gl.TEXTURE3;\n\t\t\tthis._textureIndexDictionary[4] = this._gl.TEXTURE4;\n\t\t\tthis._textureIndexDictionary[5] = this._gl.TEXTURE5;\n\t\t\tthis._textureIndexDictionary[6] = this._gl.TEXTURE6;\n\t\t\tthis._textureIndexDictionary[7] = this._gl.TEXTURE7;\n\n\t\t\tthis._textureTypeDictionary[\"texture2d\"] = this._gl.TEXTURE_2D;\n\t\t\tthis._textureTypeDictionary[\"textureCube\"] = this._gl.TEXTURE_CUBE_MAP;\n\n\t\t\tthis._wrapDictionary[ContextGLWrapMode.REPEAT] = this._gl.REPEAT;\n\t\t\tthis._wrapDictionary[ContextGLWrapMode.CLAMP] = this._gl.CLAMP_TO_EDGE;\n\n\t\t\tthis._filterDictionary[ContextGLTextureFilter.LINEAR] = this._gl.LINEAR;\n\t\t\tthis._filterDictionary[ContextGLTextureFilter.NEAREST] = this._gl.NEAREST;\n\n\t\t\tthis._mipmapFilterDictionary[ContextGLTextureFilter.LINEAR] = new Object();\n\t\t\tthis._mipmapFilterDictionary[ContextGLTextureFilter.LINEAR][ContextGLMipFilter.MIPNEAREST] = this._gl.LINEAR_MIPMAP_NEAREST;\n\t\t\tthis._mipmapFilterDictionary[ContextGLTextureFilter.LINEAR][ContextGLMipFilter.MIPLINEAR] = this._gl.LINEAR_MIPMAP_LINEAR;\n\t\t\tthis._mipmapFilterDictionary[ContextGLTextureFilter.LINEAR][ContextGLMipFilter.MIPNONE] = this._gl.LINEAR;\n\t\t\tthis._mipmapFilterDictionary[ContextGLTextureFilter.NEAREST] = new Object();\n\t\t\tthis._mipmapFilterDictionary[ContextGLTextureFilter.NEAREST][ContextGLMipFilter.MIPNEAREST] = this._gl.NEAREST_MIPMAP_NEAREST;\n\t\t\tthis._mipmapFilterDictionary[ContextGLTextureFilter.NEAREST][ContextGLMipFilter.MIPLINEAR] = this._gl.NEAREST_MIPMAP_LINEAR;\n\t\t\tthis._mipmapFilterDictionary[ContextGLTextureFilter.NEAREST][ContextGLMipFilter.MIPNONE] = this._gl.NEAREST;\n\n\t\t\tthis._vertexBufferPropertiesDictionary[ContextGLVertexBufferFormat.FLOAT_1] = new VertexBufferProperties(1, this._gl.FLOAT, false);\n\t\t\tthis._vertexBufferPropertiesDictionary[ContextGLVertexBufferFormat.FLOAT_2] = new VertexBufferProperties(2, this._gl.FLOAT, false);\n\t\t\tthis._vertexBufferPropertiesDictionary[ContextGLVertexBufferFormat.FLOAT_3] = new VertexBufferProperties(3, this._gl.FLOAT, false);\n\t\t\tthis._vertexBufferPropertiesDictionary[ContextGLVertexBufferFormat.FLOAT_4] = new VertexBufferProperties(4, this._gl.FLOAT, false);\n\t\t\tthis._vertexBufferPropertiesDictionary[ContextGLVertexBufferFormat.BYTE_1] = new VertexBufferProperties(1, this._gl.BYTE, true);\n\t\t\tthis._vertexBufferPropertiesDictionary[ContextGLVertexBufferFormat.BYTE_2] = new VertexBufferProperties(2, this._gl.BYTE, true);\n\t\t\tthis._vertexBufferPropertiesDictionary[ContextGLVertexBufferFormat.BYTE_3] = new VertexBufferProperties(3, this._gl.BYTE, true);\n\t\t\tthis._vertexBufferPropertiesDictionary[ContextGLVertexBufferFormat.BYTE_4] = new VertexBufferProperties(4, this._gl.BYTE, true);\n\t\t\tthis._vertexBufferPropertiesDictionary[ContextGLVertexBufferFormat.UNSIGNED_BYTE_1] = new VertexBufferProperties(1, this._gl.UNSIGNED_BYTE, true);\n\t\t\tthis._vertexBufferPropertiesDictionary[ContextGLVertexBufferFormat.UNSIGNED_BYTE_2] = new VertexBufferProperties(2, this._gl.UNSIGNED_BYTE, true);\n\t\t\tthis._vertexBufferPropertiesDictionary[ContextGLVertexBufferFormat.UNSIGNED_BYTE_3] = new VertexBufferProperties(3, this._gl.UNSIGNED_BYTE, true);\n\t\t\tthis._vertexBufferPropertiesDictionary[ContextGLVertexBufferFormat.UNSIGNED_BYTE_4] = new VertexBufferProperties(4, this._gl.UNSIGNED_BYTE, true);\n\t\t\tthis._vertexBufferPropertiesDictionary[ContextGLVertexBufferFormat.SHORT_1] = new VertexBufferProperties(1, this._gl.SHORT, true);\n\t\t\tthis._vertexBufferPropertiesDictionary[ContextGLVertexBufferFormat.SHORT_2] = new VertexBufferProperties(2, this._gl.SHORT, true);\n\t\t\tthis._vertexBufferPropertiesDictionary[ContextGLVertexBufferFormat.SHORT_3] = new VertexBufferProperties(3, this._gl.SHORT, true);\n\t\t\tthis._vertexBufferPropertiesDictionary[ContextGLVertexBufferFormat.SHORT_4] = new VertexBufferProperties(4, this._gl.SHORT, true);\n\t\t\tthis._vertexBufferPropertiesDictionary[ContextGLVertexBufferFormat.UNSIGNED_SHORT_1] = new VertexBufferProperties(1, this._gl.UNSIGNED_SHORT, true);\n\t\t\tthis._vertexBufferPropertiesDictionary[ContextGLVertexBufferFormat.UNSIGNED_SHORT_2] = new VertexBufferProperties(2, this._gl.UNSIGNED_SHORT, true);\n\t\t\tthis._vertexBufferPropertiesDictionary[ContextGLVertexBufferFormat.UNSIGNED_SHORT_3] = new VertexBufferProperties(3, this._gl.UNSIGNED_SHORT, true);\n\t\t\tthis._vertexBufferPropertiesDictionary[ContextGLVertexBufferFormat.UNSIGNED_SHORT_4] = new VertexBufferProperties(4, this._gl.UNSIGNED_SHORT, true);\n\n            this._stencilCompareMode = this._gl.ALWAYS;\n            this._stencilCompareModeBack = this._gl.ALWAYS;\n            this._stencilCompareModeFront = this._gl.ALWAYS;\n\t\t} else {\n\t\t\t//this.dispatchEvent( new away.events.AwayEvent( away.events.AwayEvent.INITIALIZE_FAILED, e ) );\n\t\t\talert(\"WebGL is not available.\");\n\t\t}\n\n\t\t//defaults\n\t\tfor (var i:number = 0; i < ContextWebGL.MAX_SAMPLERS; ++i) {\n\t\t\tthis._samplerStates[i] = new SamplerState();\n\t\t\tthis._samplerStates[i].wrap = this._gl.REPEAT;\n\t\t\tthis._samplerStates[i].filter = this._gl.LINEAR;\n\t\t\tthis._samplerStates[i].mipfilter = this._gl.LINEAR;\n\t\t}\n\t}\n\n\tpublic gl():WebGLRenderingContext\n\t{\n\t\treturn this._gl;\n\t}\n\n\tpublic clear(red:number = 0, green:number = 0, blue:number = 0, alpha:number = 1, depth:number = 1, stencil:number = 0, mask:number = ContextGLClearMask.ALL)\n\t{\n\t\tif (!this._drawing) {\n\t\t\tthis.updateBlendStatus();\n\t\t\tthis._drawing = true;\n\t\t}\n\n\t\tvar glmask:number = 0;\n\t\tif (mask & ContextGLClearMask.COLOR) glmask |= this._gl.COLOR_BUFFER_BIT;\n\t\tif (mask & ContextGLClearMask.STENCIL) glmask |= this._gl.STENCIL_BUFFER_BIT;\n\t\tif (mask & ContextGLClearMask.DEPTH) glmask |= this._gl.DEPTH_BUFFER_BIT;\n\n\t\tthis._gl.clearColor(red, green, blue, alpha);\n\t\tthis._gl.clearDepth(depth);\n\t\tthis._gl.clearStencil(stencil);\n\t\tthis._gl.clear(glmask);\n\t}\n\n\tpublic configureBackBuffer(width:number, height:number, antiAlias:number, enableDepthAndStencil:boolean = true)\n\t{\n\t\tthis._width = width;\n\t\tthis._height = height;\n\n\t\tif (enableDepthAndStencil) {\n\t\t\tthis._gl.enable(this._gl.STENCIL_TEST);\n\t\t\tthis._gl.enable(this._gl.DEPTH_TEST);\n\t\t}\n\n\t\tthis._gl.viewport['width'] = width;\n\t\tthis._gl.viewport['height'] = height;\n\n\t\tthis._gl.viewport(0, 0, width, height);\n\t}\n\n\tpublic createCubeTexture(size:number, format:string, optimizeForRenderToTexture:boolean, streamingLevels:number = 0):CubeTextureWebGL\n\t{\n\t\treturn new CubeTextureWebGL(this._gl, size);\n\t}\n\n\tpublic createIndexBuffer(numIndices:number):IndexBufferWebGL\n\t{\n\t\treturn new IndexBufferWebGL(this._gl, numIndices);\n\t}\n\n\tpublic createProgram():ProgramWebGL\n\t{\n\t\treturn new ProgramWebGL(this._gl);\n\t}\n\n\tpublic createTexture(width:number, height:number, format:string, optimizeForRenderToTexture:boolean, streamingLevels:number = 0):TextureWebGL\n\t{\n\t\t//TODO streaming\n\t\treturn new TextureWebGL(this._gl, width, height);\n\t}\n\n\tpublic createVertexBuffer(numVertices:number, dataPerVertex:number):VertexBufferWebGL\n\t{\n\t\treturn new VertexBufferWebGL(this._gl, numVertices, dataPerVertex);\n\t}\n\n\tpublic dispose()\n\t{\n\t\tfor (var i:number = 0; i < this._samplerStates.length; ++i)\n\t\t\tthis._samplerStates[i] = null;\n\t}\n\n\tpublic drawToBitmapImage2D(destination:BitmapImage2D)\n\t{\n\t\tvar arrayBuffer:ArrayBuffer = new ArrayBuffer(destination.width*destination.height*4);\n\n\t\tthis._gl.readPixels(0, 0, destination.width, destination.height, this._gl.RGBA, this._gl.UNSIGNED_BYTE, new Uint8Array(arrayBuffer));\n\n\t\tvar byteArray:ByteArray = new ByteArray();\n\t\tbyteArray.setArrayBuffer(arrayBuffer);\n\n\t\tdestination.setPixels(new Rectangle(0, 0, destination.width, destination.height), byteArray);\n\t}\n\n\tpublic drawIndices(mode:string, indexBuffer:IndexBufferWebGL, firstIndex:number = 0, numIndices:number = -1)\n\t{\n\t\tif (!this._drawing)\n\t\t\tthrow \"Need to clear before drawing if the buffer has not been cleared since the last present() call.\";\n\n\n\t\tthis._gl.bindBuffer(this._gl.ELEMENT_ARRAY_BUFFER, indexBuffer.glBuffer);\n\t\tthis._gl.drawElements(this._drawModeDictionary[mode], (numIndices == -1)? indexBuffer.numIndices : numIndices, this._gl.UNSIGNED_SHORT, firstIndex*2);\n\t}\n\n\tpublic drawVertices(mode:string, firstVertex:number = 0, numVertices:number = -1)\n\t{\n\t\tif (!this._drawing)\n\t\t\tthrow \"Need to clear before drawing if the buffer has not been cleared since the last present() call.\";\n\n\t\tthis._gl.drawArrays(this._drawModeDictionary[mode], firstVertex, numVertices);\n\t}\n\n\tpublic present()\n\t{\n\t\tthis._drawing = false;\n\t}\n\n\tpublic setBlendFactors(sourceFactor:string, destinationFactor:string)\n\t{\n\t\tthis._blendEnabled = true;\n\n\t\tthis._blendSourceFactor = this._blendFactorDictionary[sourceFactor];\n\n\t\tthis._blendDestinationFactor = this._blendFactorDictionary[destinationFactor];\n\n\t\tthis.updateBlendStatus();\n\t}\n\n\tpublic setColorMask(red:boolean, green:boolean, blue:boolean, alpha:boolean)\n\t{\n\t\tthis._gl.colorMask(red, green, blue, alpha);\n\t}\n\n\tpublic setCulling(triangleFaceToCull:string, coordinateSystem:string = \"leftHanded\")\n\t{\n\t\tif (triangleFaceToCull == ContextGLTriangleFace.NONE) {\n\t\t\tthis._gl.disable(this._gl.CULL_FACE);\n\t\t} else {\n\t\t\tthis._gl.enable(this._gl.CULL_FACE);\n            this._gl.cullFace(this.translateTriangleFace(triangleFaceToCull, coordinateSystem));\n\t\t}\n\t}\n\n\t// TODO ContextGLCompareMode\n\tpublic setDepthTest(depthMask:boolean, passCompareMode:string)\n\t{\n\t\tthis._gl.depthFunc(this._compareModeDictionary[passCompareMode]);\n\n\t\tthis._gl.depthMask(depthMask);\n\t}\n\n    public setStencilActions(triangleFace:string = \"frontAndBack\", compareMode:string = \"always\", actionOnBothPass:string = \"keep\", actionOnDepthFail:string = \"keep\", actionOnDepthPassStencilFail:string = \"keep\", coordinateSystem:string = \"leftHanded\")\n    {\n        this._separateStencil = triangleFace != \"frontAndBack\";\n\n        var compareModeGL = this._compareModeDictionary[compareMode];\n\n        var fail = this._stencilActionDictionary[actionOnDepthPassStencilFail];\n        var zFail = this._stencilActionDictionary[actionOnDepthFail];\n        var pass = this._stencilActionDictionary[actionOnBothPass];\n\n        if (!this._separateStencil) {\n            this._stencilCompareMode = compareModeGL;\n            this._gl.stencilFunc(compareModeGL, this._stencilReferenceValue, this._stencilReadMask);\n            this._gl.stencilOp(fail, zFail, pass);\n        }\n        else if (triangleFace == \"back\") {\n            this._stencilCompareModeBack = compareModeGL;\n            this._gl.stencilFuncSeparate(this._gl.BACK, compareModeGL, this._stencilReferenceValue, this._stencilReadMask);\n            this._gl.stencilOpSeparate(this._gl.BACK, fail, zFail, pass);\n        }\n        else if (triangleFace == \"front\") {\n            this._stencilCompareModeFront = compareModeGL;\n            this._gl.stencilFuncSeparate(this._gl.FRONT, compareModeGL, this._stencilReferenceValue, this._stencilReadMask);\n            this._gl.stencilOpSeparate(this._gl.FRONT, fail, zFail, pass);\n        }\n    }\n\n    public setStencilReferenceValue(referenceValue:number, readMask:number, writeMask:number)\n    {\n        this._stencilReferenceValue = referenceValue;\n        this._stencilReadMask = readMask;\n\n        if (this._separateStencil) {\n            this._gl.stencilFuncSeparate(this._gl.FRONT, this._stencilCompareModeFront, referenceValue, readMask);\n            this._gl.stencilFuncSeparate(this._gl.BACK, this._stencilCompareModeBack, referenceValue, readMask);\n        }\n        else {\n            this._gl.stencilFunc(this._stencilCompareMode, referenceValue, readMask);\n        }\n\n        this._gl.stencilMask(writeMask);\n    }\n\n\tpublic setProgram(program:ProgramWebGL)\n\t{\n\t\t//TODO decide on construction/reference resposibilities\n\t\tthis._currentProgram = program;\n\t\tprogram.focusProgram();\n\t}\n\n\tprivate static _float4:Float32Array = new Float32Array(4);\n\n\tpublic setProgramConstantsFromMatrix(programType:number, firstRegister:number, matrix:Matrix3D, transposedMatrix:boolean = false)\n\t{\n\t\t//this._gl.uniformMatrix4fv(this._gl.getUniformLocation(this._currentProgram.glProgram, this._uniformLocationNameDictionary[programType]), !transposedMatrix, new Float32Array(matrix.rawData));\n\n\t\t//TODO remove special case for WebGL matrix calls?\n\t\tvar d:Float32Array = matrix.rawData;\n\t\tif (transposedMatrix) {\n\t\t\tvar raw:Float32Array = Matrix3DUtils.RAW_DATA_CONTAINER;\n\t\t\traw[0] = d[0];\n\t\t\traw[1] = d[4];\n\t\t\traw[2] = d[8];\n\t\t\traw[3] = d[12];\n\t\t\traw[4] = d[1];\n\t\t\traw[5] = d[5];\n\t\t\traw[6] = d[9];\n\t\t\traw[7] = d[13];\n\t\t\traw[8] = d[2];\n\t\t\traw[9] = d[6];\n\t\t\traw[10] = d[10];\n\t\t\traw[11] = d[14];\n\t\t\traw[12] = d[3];\n\t\t\traw[13] = d[7];\n\t\t\traw[14] = d[11];\n\t\t\traw[15] = d[15];\n\n\t\t\tthis.setProgramConstantsFromArray(programType, firstRegister, raw, 4);\n\t\t} else {\n\t\t\tthis.setProgramConstantsFromArray(programType, firstRegister, d, 4);\n\t\t}\n\t}\n\n\tpublic static modulo:number = 0;\n\n\tpublic setProgramConstantsFromArray(programType:number, firstRegister:number, data:Float32Array, numRegisters:number = -1)\n\t{\n\t\tvar startIndex:number;\n\t\tfor (var i:number = 0; i < numRegisters; i++) {\n\t\t\tstartIndex = i*4;\n\t\t\tthis._gl.uniform4f(this._currentProgram.getUniformLocation(programType, (firstRegister + i)), data[startIndex], data[startIndex + 1], data[startIndex + 2], data[startIndex + 3]);\n\t\t}\n\t}\n\n\tpublic setScissorRectangle(rectangle:Rectangle)\n\t{\n\t\tif (!rectangle) {\n\t\t\tthis._gl.disable(this._gl.SCISSOR_TEST);\n\t\t\treturn;\n\t\t}\n\n\t\tthis._gl.enable(this._gl.SCISSOR_TEST);\n\t\tthis._gl.scissor(rectangle.x, rectangle.y, rectangle.width, rectangle.height);\n\t}\n\n\tpublic setTextureAt(sampler:number, texture:TextureBaseWebGL)\n\t{\n\t\tvar samplerState:SamplerState = this._samplerStates[sampler];\n\n\t\tif (this._activeTexture != sampler && (texture || samplerState.type)) {\n\t\t\tthis._activeTexture = sampler;\n\t\t\tthis._gl.activeTexture(this._textureIndexDictionary[sampler]);\n\t\t}\n\n\t\tif (!texture) {\n\t\t\tif (samplerState.type) {\n\t\t\t\tthis._gl.bindTexture(samplerState.type, null);\n\t\t\t\tsamplerState.type = null;\n\t\t\t}\n\n\t\t\treturn;\n\t\t}\n\n\t\tvar textureType:number = this._textureTypeDictionary[texture.textureType];\n\t\tsamplerState.type = textureType;\n\n\t\tthis._gl.bindTexture(textureType, texture.glTexture);\n\n\t\tthis._gl.uniform1i(this._currentProgram.getUniformLocation(ContextGLProgramType.SAMPLER, sampler), sampler);\n\n\t\tthis._gl.texParameteri(textureType, this._gl.TEXTURE_WRAP_S, samplerState.wrap);\n\t\tthis._gl.texParameteri(textureType, this._gl.TEXTURE_WRAP_T, samplerState.wrap);\n\n\t\tthis._gl.texParameteri(textureType, this._gl.TEXTURE_MAG_FILTER, samplerState.filter);\n\t\tthis._gl.texParameteri(textureType, this._gl.TEXTURE_MIN_FILTER, samplerState.mipfilter);\n\t}\n\n\tpublic setSamplerStateAt(sampler:number, wrap:string, filter:string, mipfilter:string):void\n\t{\n\t\tif (0 <= sampler && sampler < ContextWebGL.MAX_SAMPLERS) {\n\t\t\tthis._samplerStates[sampler].wrap = this._wrapDictionary[wrap];\n\t\t\tthis._samplerStates[sampler].filter = this._filterDictionary[filter];\n\t\t\tthis._samplerStates[sampler].mipfilter = this._mipmapFilterDictionary[filter][mipfilter];\n\t\t} else {\n\t\t\tthrow \"Sampler is out of bounds.\";\n\t\t}\n\t}\n\n\tpublic setVertexBufferAt(index:number, buffer:VertexBufferWebGL, bufferOffset:number = 0, format:number = 4)\n\t{\n\t\tvar location:number = this._currentProgram? this._currentProgram.getAttribLocation(index) : -1;\n\n\t\tif (!buffer) {\n\t\t\tif (location > -1)\n\t\t\t\tthis._gl.disableVertexAttribArray(location);\n\n\t\t\treturn;\n\t\t}\n\n\t\t//buffer may not have changed if concatenated buffers are being used\n\t\tif (this._currentArrayBuffer != buffer) {\n\t\t\tthis._currentArrayBuffer = buffer;\n\t\t\tthis._gl.bindBuffer(this._gl.ARRAY_BUFFER, buffer? buffer.glBuffer : null);\n\t\t}\n\n\t\tvar properties:VertexBufferProperties = this._vertexBufferPropertiesDictionary[format];\n\n\t\tthis._gl.enableVertexAttribArray(location);\n\t\tthis._gl.vertexAttribPointer(location, properties.size, properties.type, properties.normalized, buffer.dataPerVertex, bufferOffset);\n\t}\n\n\tpublic setRenderToTexture(target:TextureBaseWebGL, enableDepthAndStencil:boolean = false, antiAlias:number = 0, surfaceSelector:number = 0)\n\t{\n\t\tvar texture:TextureWebGL = <TextureWebGL> target;\n\t\tvar frameBuffer:WebGLFramebuffer = texture.frameBuffer;\n\t\tthis._gl.bindFramebuffer(this._gl.FRAMEBUFFER, frameBuffer);\n\n\t\tif (enableDepthAndStencil) {\n\t\t\tthis._gl.enable(this._gl.STENCIL_TEST);\n\t\t\tthis._gl.enable(this._gl.DEPTH_TEST);\n\t\t}\n\n\t\tthis._gl.viewport(0, 0, texture.width, texture.height );\n\t}\n\n\tpublic setRenderToBackBuffer()\n\t{\n\t\tthis._gl.bindFramebuffer(this._gl.FRAMEBUFFER, null);\n\t}\n\n\tprivate updateBlendStatus()\n\t{\n\t\tif (this._blendEnabled) {\n\t\t\tthis._gl.enable(this._gl.BLEND);\n\t\t\tthis._gl.blendEquation(this._gl.FUNC_ADD);\n\t\t\tthis._gl.blendFunc(this._blendSourceFactor, this._blendDestinationFactor);\n\t\t} else {\n\t\t\tthis._gl.disable(this._gl.BLEND);\n\t\t}\n\t}\n\n    private translateTriangleFace(triangleFace:string, coordinateSystem:string)\n    {\n        switch (triangleFace) {\n            case ContextGLTriangleFace.BACK:\n                return (coordinateSystem == \"leftHanded\")? this._gl.FRONT : this._gl.BACK;\n            case ContextGLTriangleFace.FRONT:\n                return (coordinateSystem == \"leftHanded\")? this._gl.BACK : this._gl.FRONT;\n            case ContextGLTriangleFace.FRONT_AND_BACK:\n                return this._gl.FRONT_AND_BACK;\n            default:\n                throw \"Unknown ContextGLTriangleFace type.\"; // TODO error\n        }\n    }\n}\n\nexport default ContextWebGL;\n\n\nclass VertexBufferProperties\n{\n\tpublic size:number;\n\n\tpublic type:number;\n\n\tpublic normalized:boolean;\n\n\tconstructor(size:number, type:number, normalized:boolean)\n\t{\n\t\tthis.size = size;\n\t\tthis.type = type;\n\t\tthis.normalized = normalized;\n\t}\n}",
    "import ByteArray\t\t\t\t\tfrom \"awayjs-core/lib/utils/ByteArray\";\nimport ByteArrayBase\t\t\t\tfrom \"awayjs-core/lib/utils/ByteArrayBase\";\n\nimport ContextStage3D\t\t\t\tfrom \"../base/ContextStage3D\";\nimport ICubeTexture\t\t\t\t\tfrom \"../base/ICubeTexture\";\nimport OpCodes\t\t\t\t\t\tfrom \"../base/OpCodes\";\nimport ResourceBaseFlash\t\t\tfrom \"../base/ResourceBaseFlash\";\n\nclass CubeTextureFlash extends ResourceBaseFlash implements ICubeTexture\n{\n\tprivate _context:ContextStage3D;\n\tprivate _size:number;\n\n\tpublic get size():number\n\t{\n\t\treturn this._size;\n\t}\n\n\tconstructor(context:ContextStage3D, size:number, format:string, forRTT:boolean, streaming:boolean = false)\n\t{\n\t\tsuper();\n\n\t\tthis._context = context;\n\t\tthis._size = size;\n\n\t\tthis._context.addStream(String.fromCharCode(OpCodes.initCubeTexture, (forRTT? OpCodes.trueValue : OpCodes.falseValue)) + size + \",\" + streaming + \",\" + format + \"$\");\n\t\tthis._pId = this._context.execute();\n\t\tthis._context._iAddResource(this);\n\t}\n\n\tpublic dispose()\n\t{\n\t\tthis._context.addStream(String.fromCharCode(OpCodes.disposeCubeTexture) + this._pId.toString() + \",\");\n\t\tthis._context.execute();\n\t\tthis._context._iRemoveResource(this);\n\n\t\tthis._context = null;\n\t}\n\n\tpublic uploadFromData(image:HTMLImageElement, side:number, miplevel?:number);\n\tpublic uploadFromData(imageData:ImageData, side:number, miplevel?:number);\n\tpublic uploadFromData(data:any, side:number, miplevel:number = 0)\n\t{\n\t\tif (data instanceof HTMLImageElement) {\n\t\t\tvar can = document.createElement(\"canvas\");\n\t\t\tvar w = data.width;\n\t\t\tvar h = data.height;\n\t\t\tcan.width = w;\n\t\t\tcan.height = h;\n\t\t\tvar ctx = can.getContext(\"2d\");\n\t\t\tctx.drawImage(data, 0, 0);\n\t\t\tdata = ctx.getImageData(0, 0, w, h).data;\n\t\t}\n\n\t\tvar pos = 0;\n\t\tvar bytes = ByteArrayBase.internalGetBase64String(data.length, function () {\n\t\t\treturn data[pos++];\n\t\t}, null);\n\n\t\tthis._context.addStream(String.fromCharCode(OpCodes.uploadBytesCubeTexture) + this._pId + \",\" + miplevel + \",\" + side + \",\" + (this.size >> miplevel) + \",\" + bytes + \"%\");\n\t\tthis._context.execute();\n\t}\n\n\tpublic uploadCompressedTextureFromByteArray(data:ByteArray, byteArrayOffset:number /*uint*/, async:boolean = false)\n\t{\n\n\t}\n}\n\nexport default CubeTextureFlash;",
    "import ByteArray\t\t\t\t\tfrom \"awayjs-core/lib/utils/ByteArray\";\n\nimport ICubeTexture\t\t\t\t\tfrom \"../base/ICubeTexture\";\nimport TextureBaseWebGL\t\t\t\tfrom \"../base/TextureBaseWebGL\";\n\nclass CubeTextureWebGL extends TextureBaseWebGL implements ICubeTexture\n{\n\n\tprivate _textureSelectorDictionary:Array<number> = new Array<number>(6);\n\n\tpublic textureType:string = \"textureCube\";\n\tprivate _texture:WebGLTexture;\n\tprivate _size:number;\n\n\tconstructor(gl:WebGLRenderingContext, size:number)\n\t{\n\t\tsuper(gl);\n\t\tthis._size = size;\n\t\tthis._texture = this._gl.createTexture();\n\n\t\tthis._textureSelectorDictionary[0] = gl.TEXTURE_CUBE_MAP_POSITIVE_X;\n\t\tthis._textureSelectorDictionary[1] = gl.TEXTURE_CUBE_MAP_NEGATIVE_X;\n\t\tthis._textureSelectorDictionary[2] = gl.TEXTURE_CUBE_MAP_POSITIVE_Y;\n\t\tthis._textureSelectorDictionary[3] = gl.TEXTURE_CUBE_MAP_NEGATIVE_Y;\n\t\tthis._textureSelectorDictionary[4] = gl.TEXTURE_CUBE_MAP_POSITIVE_Z;\n\t\tthis._textureSelectorDictionary[5] = gl.TEXTURE_CUBE_MAP_NEGATIVE_Z;\n\t}\n\n\tpublic dispose()\n\t{\n\t\tthis._gl.deleteTexture(this._texture);\n\t}\n\n\tpublic uploadFromData(image:HTMLImageElement, side:number, miplevel?:number);\n\tpublic uploadFromData(imageData:ImageData, side:number, miplevel?:number);\n\tpublic uploadFromData(data:any, side:number, miplevel:number = 0)\n\t{\n\t\tthis._gl.bindTexture(this._gl.TEXTURE_CUBE_MAP, this._texture);\n\t\tthis._gl.texImage2D(this._textureSelectorDictionary[side], miplevel, this._gl.RGBA, this._gl.RGBA, this._gl.UNSIGNED_BYTE, data);\n\t\tthis._gl.bindTexture(this._gl.TEXTURE_CUBE_MAP, null);\n\t}\n\n\tpublic uploadCompressedTextureFromByteArray(data:ByteArray, byteArrayOffset:number /*uint*/, async:boolean = false)\n\t{\n\n\t}\n\n\tpublic get size():number\n\t{\n\t\treturn this._size;\n\t}\n\n\tpublic get glTexture():WebGLTexture\n\t{\n\t\treturn this._texture;\n\t}\n}\n\nexport default CubeTextureWebGL;",
    "import ContextStage3D\t\t\t\tfrom \"../base/ContextStage3D\";\nimport IIndexBuffer\t\t\t\t\tfrom \"../base/IIndexBuffer\";\nimport OpCodes\t\t\t\t\t\tfrom \"../base/OpCodes\";\nimport ResourceBaseFlash\t\t\tfrom \"../base/ResourceBaseFlash\";\n\nclass IndexBufferFlash extends ResourceBaseFlash implements IIndexBuffer\n{\n\tprivate _context:ContextStage3D;\n\tprivate _numIndices:number;\n\n\tconstructor(context:ContextStage3D, numIndices:number)\n\t{\n\t\tsuper();\n\n\t\tthis._context = context;\n\t\tthis._numIndices = numIndices;\n\t\tthis._context.addStream(String.fromCharCode(OpCodes.initIndexBuffer, numIndices + OpCodes.intMask));\n\t\tthis._pId = this._context.execute();\n\t\tthis._context._iAddResource(this);\n\t}\n\tpublic uploadFromArray(data:number[], startOffset:number, count:number):void\n\t{\n\t\tthis._context.addStream(String.fromCharCode(OpCodes.uploadArrayIndexBuffer, this._pId + OpCodes.intMask) + data.join() + \"#\" + startOffset + \",\" + count + \",\");\n\t\tthis._context.execute();\n\t}\n\n\tpublic uploadFromByteArray(data:ArrayBuffer, startOffset:number, count:number)\n\t{\n\n\t}\n\n\tpublic dispose():void\n\t{\n\t\tthis._context.addStream(String.fromCharCode(OpCodes.disposeIndexBuffer, this._pId + OpCodes.intMask));\n\t\tthis._context.execute();\n\t\tthis._context._iRemoveResource(this);\n\n\t\tthis._context = null;\n\t}\n\n\tpublic get numIndices():number\n\t{\n\t\treturn this._numIndices;\n\t}\n}\n\nexport default IndexBufferFlash;",
    "import IIndexBuffer                    from \"../base/IIndexBuffer\";\n\nclass IndexBufferSoftware implements IIndexBuffer {\n    private _numIndices:number;\n    private _data:Uint16Array;\n    private _startOffset:number;\n\n    constructor(numIndices:number) {\n        this._numIndices = numIndices;\n    }\n\n    public uploadFromArray(data:number[], startOffset:number, count:number):void {\n        this._startOffset = startOffset * 2;\n        this._data = new Uint16Array(data);\n    }\n\n    public uploadFromByteArray(data:ArrayBuffer, startOffset:number, count:number) {\n        this._startOffset = startOffset * 2;\n        this._data = new Uint16Array(data);\n    }\n\n    public dispose():void {\n        this._data = null;\n    }\n\n    public get numIndices():number {\n        return this._numIndices;\n    }\n\n    public get data():Uint16Array {\n        return this._data;\n    }\n\n    public get startOffset():number {\n        return this._startOffset;\n    }\n\n}\n\nexport default IndexBufferSoftware;",
    "import IIndexBuffer\t\t\t\t\tfrom \"../base/IIndexBuffer\";\n\nclass IndexBufferWebGL implements IIndexBuffer\n{\n\n\tprivate _gl:WebGLRenderingContext;\n\tprivate _numIndices:number;\n\tprivate _buffer:WebGLBuffer;\n\n\tconstructor(gl:WebGLRenderingContext, numIndices:number)\n\t{\n\t\tthis._gl = gl;\n\t\tthis._buffer = this._gl.createBuffer();\n\t\tthis._numIndices = numIndices;\n\t}\n\n\tpublic uploadFromArray(data:number[], startOffset:number, count:number):void\n\t{\n\t\tthis._gl.bindBuffer(this._gl.ELEMENT_ARRAY_BUFFER, this._buffer);\n\n\t\tif (startOffset)\n\t\t\tthis._gl.bufferSubData(this._gl.ELEMENT_ARRAY_BUFFER, startOffset*2, new Uint16Array(data));\n\t\telse\n\t\t\tthis._gl.bufferData(this._gl.ELEMENT_ARRAY_BUFFER, new Uint16Array(data), this._gl.STATIC_DRAW);\n\t}\n\n\tpublic uploadFromByteArray(data:ArrayBuffer, startOffset:number, count:number)\n\t{\n\t\tthis._gl.bindBuffer(this._gl.ELEMENT_ARRAY_BUFFER, this._buffer);\n\n\t\tif (startOffset)\n\t\t\tthis._gl.bufferSubData(this._gl.ELEMENT_ARRAY_BUFFER, startOffset*2, data);\n\t\telse\n\t\t\tthis._gl.bufferData(this._gl.ELEMENT_ARRAY_BUFFER, data, this._gl.STATIC_DRAW);\n\t}\n\n\tpublic dispose():void\n\t{\n\t\tthis._gl.deleteBuffer(this._buffer);\n\t}\n\n\tpublic get numIndices():number\n\t{\n\t\treturn this._numIndices;\n\t}\n\n\tpublic get glBuffer():WebGLBuffer\n\t{\n\t\treturn this._buffer;\n\t}\n}\n\nexport default IndexBufferWebGL;",
    "class OpCodes\n{\n\tpublic static trueValue:number = 32;\n\tpublic static falseValue:number = 33;\n\tpublic static intMask:number = 63;\n\tpublic static drawTriangles:number = 41;\n\tpublic static setProgramConstant:number = 42;\n\tpublic static setProgram:number = 43;\n\tpublic static present:number = 44;\n\tpublic static clear:number = 45;\n\tpublic static initProgram:number = 46;\n\tpublic static initVertexBuffer:number = 47;\n\tpublic static initIndexBuffer:number = 48;\n\tpublic static configureBackBuffer:number = 49;\n\tpublic static uploadArrayIndexBuffer:number = 50;\n\tpublic static uploadArrayVertexBuffer:number = 51;\n\tpublic static uploadAGALBytesProgram:number = 52;\n\tpublic static setVertexBufferAt:number = 53;\n\tpublic static uploadBytesIndexBuffer:number = 54;\n\tpublic static uploadBytesVertexBuffer:number = 55;\n\tpublic static setColorMask:number = 56;\n\tpublic static setDepthTest:number = 57;\n\tpublic static disposeProgram:number = 58;\n\tpublic static disposeContext:number = 59;\n\t// must skip 60 '<' as it will invalidate xml being passed over the bridge\n\tpublic static disposeVertexBuffer:number = 61;\n\t// must skip 62 '>' as it will invalidate xml being passed over the bridge\n\tpublic static disposeIndexBuffer:number = 63;\n\tpublic static initTexture:number = 64;\n\tpublic static setTextureAt:number = 65;\n\tpublic static uploadBytesTexture:number = 66;\n\tpublic static disposeTexture:number = 67;\n\tpublic static setCulling:number = 68;\n\tpublic static setScissorRect:number = 69;\n\tpublic static clearScissorRect:number = 70;\n\tpublic static setBlendFactors:number = 71;\n\tpublic static setRenderToTexture:number = 72;\n\tpublic static clearTextureAt:number = 73;\n\tpublic static clearVertexBufferAt:number = 74;\n\tpublic static setStencilActions:number = 75;\n\tpublic static setStencilReferenceValue:number = 76;\n\tpublic static initCubeTexture:number = 77;\n\tpublic static disposeCubeTexture:number = 78;\n\tpublic static uploadBytesCubeTexture:number = 79;\n\tpublic static clearRenderToTexture:number = 80;\n\tpublic static enableErrorChecking:number = 81;\n}\n\nexport default OpCodes;",
    "import ByteArray\t\t\t\t\tfrom \"awayjs-core/lib/utils/ByteArray\";\n\nimport ContextStage3D\t\t\t\tfrom \"../base/ContextStage3D\";\nimport IProgram\t\t\t\t\t\tfrom \"../base/IProgram\";\nimport OpCodes\t\t\t\t\t\tfrom \"../base/OpCodes\";\nimport ResourceBaseFlash\t\t\tfrom \"../base/ResourceBaseFlash\";\n\nclass ProgramFlash extends ResourceBaseFlash implements IProgram\n{\n\tprivate _context:ContextStage3D;\n\n\tconstructor(context:ContextStage3D)\n\t{\n\t\tsuper();\n\n\t\tthis._context = context;\n\t\tthis._context.addStream(String.fromCharCode(OpCodes.initProgram));\n\t\tthis._pId = this._context.execute();\n\t\tthis._context._iAddResource(this);\n\t}\n\n\tpublic upload(vertexProgram:ByteArray, fragmentProgram:ByteArray)\n\t{\n\t\tthis._context.addStream(String.fromCharCode(OpCodes.uploadAGALBytesProgram, this._pId + OpCodes.intMask) + vertexProgram.readBase64String(vertexProgram.length) + \"%\" + fragmentProgram.readBase64String(fragmentProgram.length) + \"%\");\n\n\t\tif (ContextStage3D.debug)\n\t\t\tthis._context.execute();\n\t}\n\n\tpublic dispose()\n\t{\n\t\tthis._context.addStream(String.fromCharCode(OpCodes.disposeProgram, this._pId + OpCodes.intMask));\n\t\tthis._context.execute();\n\t\tthis._context._iRemoveResource(this);\n\n\t\tthis._context = null;\n\t}\n}\n\nexport default ProgramFlash;",
    "import ByteArray                    from \"awayjs-core/lib/utils/ByteArray\";\n\nimport AGALTokenizer                from \"../aglsl/AGALTokenizer\";\nimport AGLSLParser                    from \"../aglsl/AGLSLParser\";\nimport IProgram                        from \"../base/IProgram\";\nimport ProgramVOSoftware                        from \"../base/ProgramVOSoftware\";\nimport ContextSoftware                        from \"../base/ContextSoftware\";\nimport Description                from \"../aglsl/Description\";\nimport Header                    from \"../aglsl/Header\";\nimport Mapping                    from \"../aglsl/Mapping\";\nimport Token                    from \"../aglsl/Token\";\nimport Matrix3D                        from \"awayjs-core/lib/geom/Matrix3D\";\nimport Point                        from \"awayjs-core/lib/geom/Point\";\nimport Vector3D                        from \"awayjs-core/lib/geom/Vector3D\";\nimport Destination                from \"../aglsl/Destination\";\nimport AGALMiniAssembler            from \"../aglsl/assembler/AGALMiniAssembler\";\nimport VertexBufferSoftware                    from \"../base/VertexBufferSoftware\";\nimport ContextGLVertexBufferFormat    from \"../base/ContextGLVertexBufferFormat\";\nimport TextureSoftware                    from \"../base/TextureSoftware\";\nimport SoftwareSamplerState from \"../base/SoftwareSamplerState\";\nimport SamplerBase from \"awayjs-core/lib/image/SamplerBase\";\nimport Sampler2D from \"awayjs-core/lib/image/Sampler2D\";\nimport SamplerCube from \"awayjs-core/lib/image/SamplerCube\";\nimport ContextGLTextureFilter from \"../base/ContextGLTextureFilter\";\nimport ContextGLMipFilter from \"../base/ContextGLMipFilter\";\nimport ContextGLWrapMode from \"../base/ContextGLWrapMode\";\n\nclass ProgramSoftware implements IProgram {\n    private static _defaultSamplerState:SoftwareSamplerState = new SoftwareSamplerState();\n    private static _tokenizer:AGALTokenizer = new AGALTokenizer();\n    private static _opCodeFunc:{(vo:ProgramVOSoftware, desc:Description, dest:Destination, source1:Destination, source2:Destination, context:ContextSoftware):void}[] = [\n        ProgramSoftware.mov,\n        ProgramSoftware.add,\n        ProgramSoftware.sub,\n        ProgramSoftware.mul,\n        ProgramSoftware.div,\n        ProgramSoftware.rcp,\n        ProgramSoftware.min,\n        ProgramSoftware.max,\n        ProgramSoftware.frc,\n        ProgramSoftware.sqt,\n        ProgramSoftware.rsq,\n        ProgramSoftware.pow,\n        ProgramSoftware.log,\n        ProgramSoftware.exp,\n        ProgramSoftware.nrm,\n        ProgramSoftware.sin,\n        ProgramSoftware.cos,\n        ProgramSoftware.crs,\n        ProgramSoftware.dp3,\n        ProgramSoftware.dp4,\n        ProgramSoftware.abs,\n        ProgramSoftware.neg,\n        ProgramSoftware.sat,\n        ProgramSoftware.m33,\n        ProgramSoftware.m44,\n        ProgramSoftware.m34,//25\n        null,//26\n        null,//27\n        null,//28\n        null,//29\n        null,//30\n        null,//31\n        null,//32\n        null,//33\n        null,//34\n        null,//35\n        null,//36\n        null,//37\n        null,//38\n        ProgramSoftware.kil,\n        ProgramSoftware.tex,\n        ProgramSoftware.sge,\n        ProgramSoftware.slt,\n        ProgramSoftware.sgn,\n        ProgramSoftware.seq,\n        ProgramSoftware.sne\n    ];\n\n    private _vertexDescr:Description;\n    private _fragmentDescr:Description;\n\n    constructor() {\n\n    }\n\n    public upload(vertexProgram:ByteArray, fragmentProgram:ByteArray) {\n        this._vertexDescr = ProgramSoftware._tokenizer.decribeAGALByteArray(vertexProgram);\n        this._fragmentDescr = ProgramSoftware._tokenizer.decribeAGALByteArray(fragmentProgram);\n    }\n\n    public dispose() {\n        this._vertexDescr = null;\n        this._fragmentDescr = null;\n    }\n\n    public vertex(contextSoftware:ContextSoftware, vertexIndex:number):ProgramVOSoftware {\n        var vo:ProgramVOSoftware = new ProgramVOSoftware();\n        //parse attributes\n        var i:number;\n        for (i = 0; i < contextSoftware._vertexBuffers.length; i++) {\n            var buffer:VertexBufferSoftware = contextSoftware._vertexBuffers[i];\n            if (!buffer) continue;\n\n            var attribute:Vector3D = new Vector3D(0, 0, 0, 1);\n\n            var index:number = contextSoftware._vertexBufferOffsets[i] / 4 + vertexIndex * buffer.attributesPerVertex;\n            if (contextSoftware._vertexBufferFormats[i] == ContextGLVertexBufferFormat.UNSIGNED_BYTE_4) {\n                attribute.x = buffer.uintData[index*4];\n                attribute.y = buffer.uintData[index*4+1];\n                attribute.z = buffer.uintData[index*4+2];\n                attribute.w = buffer.uintData[index*4+3];\n            }\n\n            if (contextSoftware._vertexBufferFormats[i] == ContextGLVertexBufferFormat.FLOAT_1) {\n                attribute.x = buffer.data[index];\n            }\n\n            if (contextSoftware._vertexBufferFormats[i] == ContextGLVertexBufferFormat.FLOAT_2) {\n                attribute.x = buffer.data[index];\n                attribute.y = buffer.data[index + 1];\n            }\n\n            if (contextSoftware._vertexBufferFormats[i] == ContextGLVertexBufferFormat.FLOAT_3) {\n                attribute.x = buffer.data[index];\n                attribute.y = buffer.data[index + 1];\n                attribute.z = buffer.data[index + 2];\n            }\n\n            if (contextSoftware._vertexBufferFormats[i] == ContextGLVertexBufferFormat.FLOAT_4) {\n                attribute.x = buffer.data[index];\n                attribute.y = buffer.data[index + 1];\n                attribute.z = buffer.data[index + 2];\n                attribute.w = buffer.data[index + 3];\n            }\n            vo.attributes[i] = attribute;\n        }\n\n        var len:number = this._vertexDescr.tokens.length;\n        for (var i:number = 0; i < len; i++) {\n            var token:Token = this._vertexDescr.tokens[i];\n            ProgramSoftware._opCodeFunc[token.opcode](vo, this._vertexDescr, token.dest, token.a, token.b, contextSoftware);\n        }\n\n        return vo;\n    }\n\n    public fragment(context:ContextSoftware, clip:Vector3D, clipRight:Vector3D, clipBottom:Vector3D, vo0:ProgramVOSoftware, vo1:ProgramVOSoftware, vo2:ProgramVOSoftware, fragDepth:number):ProgramVOSoftware {\n        var vo:ProgramVOSoftware = new ProgramVOSoftware();\n        vo.outputDepth = fragDepth;\n\n        for (var i:number = 0; i < vo0.varying.length; i++) {\n            var varying0:Vector3D = vo0.varying[i];\n            var varying1:Vector3D = vo1.varying[i];\n            var varying2:Vector3D = vo2.varying[i];\n            if (!varying0 || !varying1 || !varying2) continue;\n\n            var result:Vector3D = vo.varying[i] = new Vector3D(0, 0, 0, 1);\n            result.x = clip.x * varying0.x + clip.y * varying1.x + clip.z * varying2.x;\n            result.y = clip.x * varying0.y + clip.y * varying1.y + clip.z * varying2.y;\n            result.z = clip.x * varying0.z + clip.y * varying1.z + clip.z * varying2.z;\n            result.w = clip.x * varying0.w + clip.y * varying1.w + clip.z * varying2.w;\n\n            var derivativeX:Vector3D = vo.derivativeX[i] = new Vector3D();\n            derivativeX.x = clipRight.x * varying0.x + clipRight.y * varying1.x + clipRight.z * varying2.x;\n            derivativeX.y = clipRight.x * varying0.y + clipRight.y * varying1.y + clipRight.z * varying2.y;\n            derivativeX.z = clipRight.x * varying0.z + clipRight.y * varying1.z + clipRight.z * varying2.z;\n            derivativeX.w = clipRight.x * varying0.w + clipRight.y * varying1.w + clipRight.z * varying2.w;\n            derivativeX.x -= result.x;\n            derivativeX.y -= result.y;\n            derivativeX.z -= result.z;\n            derivativeX.w -= result.w;\n\n            var derivativeY:Vector3D = vo.derivativeY[i] = new Vector3D();\n            derivativeY.x = clipBottom.x * varying0.x + clipBottom.y * varying1.x + clipBottom.z * varying2.x;\n            derivativeY.y = clipBottom.x * varying0.y + clipBottom.y * varying1.y + clipBottom.z * varying2.y;\n            derivativeY.z = clipBottom.x * varying0.z + clipBottom.y * varying1.z + clipBottom.z * varying2.z;\n            derivativeY.w = clipBottom.x * varying0.w + clipBottom.y * varying1.w + clipBottom.z * varying2.w;\n            derivativeY.x -= result.x;\n            derivativeY.y -= result.y;\n            derivativeY.z -= result.z;\n            derivativeY.w -= result.w;\n        }\n\n        var len:number = this._fragmentDescr.tokens.length;\n        for (var i:number = 0; i < len; i++) {\n            var token:Token = this._fragmentDescr.tokens[i];\n            ProgramSoftware._opCodeFunc[token.opcode](vo, this._fragmentDescr, token.dest, token.a, token.b, context);\n        }\n\n        return vo;\n    }\n\n    private static getDestTarget(vo:ProgramVOSoftware, desc:Description, dest:Destination):Vector3D {\n        var targetType:Vector3D[];\n\n        if (dest.regtype == 0x2) {\n            targetType = vo.temp;\n        } else if (dest.regtype == 0x3) {\n\n            if (desc.header.type == \"vertex\") {\n                targetType = vo.outputPosition;\n            } else {\n                targetType = vo.outputColor;\n            }\n        } else if (dest.regtype == 0x4) {\n            targetType = vo.varying;\n        }\n        var targetIndex:number = dest.regnum;\n        var target:Vector3D = targetType[targetIndex];\n        if (!target) {\n            target = targetType[targetIndex] = new Vector3D(0, 0, 0, 1);\n        }\n        return target;\n    }\n\n    private static getSourceTargetType(vo:ProgramVOSoftware, desc:Description, dest:Destination, context:ContextSoftware):Vector3D[] {\n        var targetType:Vector3D[];\n\n        if (dest.regtype == 0x0) {\n            targetType = vo.attributes;\n        } else if (dest.regtype == 0x1) {\n            if (desc.header.type == \"vertex\") {\n                targetType = context._vertexConstants;\n            } else {\n                targetType = context._fragmentConstants;\n            }\n        } else if (dest.regtype == 0x2) {\n            targetType = vo.temp;\n        } else if (dest.regtype == 0x4) {\n            targetType = vo.varying;\n        }\n        return targetType;\n    }\n\n    private static getSourceTargetByIndex(targetType:Vector3D[], targetIndex:number):Vector3D {\n        var target:Vector3D = targetType[targetIndex];\n        if (!target) {\n            target = targetType[targetIndex] = new Vector3D(0, 0, 0, 1);\n        }\n        return target;\n    }\n\n    private static getSourceTarget(vo:ProgramVOSoftware, desc:Description, dest:Destination, context:ContextSoftware):Vector3D {\n        var targetType:Vector3D[] = ProgramSoftware.getSourceTargetType(vo, desc, dest, context);\n        return ProgramSoftware.getSourceTargetByIndex(targetType, dest.regnum);\n    }\n\n    public static mov(vo:ProgramVOSoftware, desc:Description, dest:Destination, source1:Destination, source2:Destination, context:ContextSoftware):void {\n        var target:Vector3D = ProgramSoftware.getDestTarget(vo, desc, dest);\n\n        var source1Target:Vector3D = ProgramSoftware.getSourceTarget(vo, desc, source1, context);\n\n        var swiz:string[] = [\"x\", \"y\", \"z\", \"w\"];\n\n        if (dest.mask & 1) {\n            target.x = source1Target[swiz[(source1.swizzle >> 0) & 3]];\n        }\n\n        if (dest.mask & 2) {\n            target.y = source1Target[swiz[(source1.swizzle >> 2) & 3]];\n        }\n\n        if (dest.mask & 4) {\n            target.z = source1Target[swiz[(source1.swizzle >> 4) & 3]];\n        }\n\n        if (dest.mask & 8) {\n            target.w = source1Target[swiz[(source1.swizzle >> 6) & 3]];\n        }\n    }\n\n    public static m44(vo:ProgramVOSoftware, desc:Description, dest:Destination, source1:Destination, source2:Destination, context:ContextSoftware):void {\n        var target:Vector3D = ProgramSoftware.getDestTarget(vo, desc, dest);\n\n        var source1Target:Vector3D = ProgramSoftware.getSourceTarget(vo, desc, source1, context);\n\n        var source2Type:Vector3D[] = ProgramSoftware.getSourceTargetType(vo, desc, source2, context);\n\n        var source2Target0:Vector3D = ProgramSoftware.getSourceTargetByIndex(source2Type, source2.regnum);\n        var source2Target1:Vector3D = ProgramSoftware.getSourceTargetByIndex(source2Type, source2.regnum + 1);\n        var source2Target2:Vector3D = ProgramSoftware.getSourceTargetByIndex(source2Type, source2.regnum + 2);\n        var source2Target3:Vector3D = ProgramSoftware.getSourceTargetByIndex(source2Type, source2.regnum + 3);\n\n        var matrix:Matrix3D = new Matrix3D(new Float32Array([\n            source2Target0.x, source2Target1.x, source2Target2.x, source2Target3.x,\n            source2Target0.y, source2Target1.y, source2Target2.y, source2Target3.y,\n            source2Target0.z, source2Target1.z, source2Target2.z, source2Target3.z,\n            source2Target0.w, source2Target1.w, source2Target2.w, source2Target3.w\n        ]));\n\n        var result:Vector3D = matrix.transformVector(source1Target);\n\n        if (dest.mask & 1) {\n            target.x = result.x;\n        }\n\n        if (dest.mask & 2) {\n            target.y = result.y;\n        }\n\n        if (dest.mask & 4) {\n            target.z = result.z;\n        }\n\n        if (dest.mask & 8) {\n            target.w = result.w;\n        }\n    }\n\n    private static sample(vo:ProgramVOSoftware, context:ContextSoftware, u:number, v:number, textureIndex:number, dux:number, dvx:number, duy:number, dvy:number):number[] {\n        if (textureIndex >= context._textures.length || context._textures[textureIndex] == null) {\n            return [1, u, v, 0];\n        }\n\n        var texture:TextureSoftware = context._textures[textureIndex];\n        var state:SoftwareSamplerState = context._samplerStates[textureIndex];\n        if (!state) {\n            state = this._defaultSamplerState;\n        }\n        var repeat:boolean = state.wrap == ContextGLWrapMode.REPEAT;\n        var mipmap:boolean = state.mipfilter == ContextGLMipFilter.MIPLINEAR;\n        if (mipmap && texture.getMipLevelsCount() > 1) {\n            dux = Math.abs(dux);\n            dvx = Math.abs(dvx);\n            duy = Math.abs(duy);\n            dvy = Math.abs(dvy);\n\n            var lambda:number = Math.log(Math.max(texture.width * Math.sqrt(dux * dux + dvx * dvx), texture.height * Math.sqrt(duy * duy + dvy * dvy))) / Math.LN2;\n            if (lambda > 0) {\n\n                var miplevelLow:number = Math.floor(lambda);\n                var miplevelHigh:number = Math.ceil(lambda);\n\n                var maxmiplevel:number = Math.log(Math.min(texture.width, texture.height)) / Math.LN2;\n\n                if (miplevelHigh > maxmiplevel) {\n                    miplevelHigh = maxmiplevel;\n                }\n                if (miplevelLow > maxmiplevel) {\n                    miplevelLow = maxmiplevel;\n                }\n\n                var mipblend:number = lambda - Math.floor(lambda);\n\n                var resultLow:number[] = [];\n                var resultHigh:number[] = [];\n\n\n                var dataLow:number[] = texture.getData(miplevelLow);\n                var dataLowWidth:number = texture.width / Math.pow(2, miplevelLow);\n                var dataLowHeight:number = texture.height / Math.pow(2, miplevelLow);\n                var dataHigh:number[] = texture.getData(miplevelHigh);\n                var dataHighWidth:number = texture.width / Math.pow(2, miplevelHigh);\n                var dataHighHeight:number = texture.height / Math.pow(2, miplevelHigh);\n\n                if (state.filter == ContextGLTextureFilter.LINEAR) {\n                    resultLow = ProgramSoftware.sampleBilinear(u, v, dataLow, dataLowWidth, dataLowHeight, repeat);\n                    resultHigh = ProgramSoftware.sampleBilinear(u, v, dataHigh, dataHighWidth, dataHighHeight, repeat);\n                } else {\n                    resultLow = ProgramSoftware.sampleNearest(u, v, dataLow, dataLowWidth, dataLowHeight, repeat);\n                    resultHigh = ProgramSoftware.sampleNearest(u, v, dataHigh, dataHighWidth, dataHighHeight, repeat);\n                }\n\n                return ProgramSoftware.interpolateColor(resultLow, resultHigh, mipblend);\n            }\n        }\n\n        var result:number[];\n        var data:number[] = texture.getData(0);\n        if (state.filter == ContextGLTextureFilter.LINEAR) {\n            result = ProgramSoftware.sampleBilinear(u, v, data, texture.width, texture.height, repeat);\n        } else {\n            result = ProgramSoftware.sampleNearest(u, v, data, texture.width, texture.height, repeat);\n        }\n        return result;\n    }\n\n    private static sampleNearest(u:number, v:number, textureData:number[], textureWidth:number, textureHeight:number, repeat:boolean):number[] {\n        u *= textureWidth;\n        v *= textureHeight;\n\n        if (repeat) {\n            u = Math.abs(u % textureWidth);\n            v = Math.abs(v % textureHeight);\n        } else {\n            if (u < 0) {\n                u = 0;\n            } else if (u > textureWidth - 1) {\n                u = textureWidth - 1;\n            }\n\n            if (v < 0) {\n                v = 0;\n            } else if (v > textureHeight - 1) {\n                v = textureHeight - 1;\n            }\n        }\n\n        u = Math.floor(u);\n        v = Math.floor(v);\n\n        var pos:number = (u + v * textureWidth) * 4;\n        var r:number = textureData[pos] / 255;\n        var g:number = textureData[pos + 1] / 255;\n        var b:number = textureData[pos + 2] / 255;\n        var a:number = textureData[pos + 3] / 255;\n\n        return [a, r, g, b];\n    }\n\n    private static sampleBilinear(u:number, v:number, textureData:number[], textureWidth:number, textureHeight:number, repeat:boolean):number[] {\n        var texelSizeX:number = 1 / textureWidth;\n        var texelSizeY:number = 1 / textureHeight;\n        u -= texelSizeX / 2;\n        v -= texelSizeY / 2;\n\n        var color00:number[] = ProgramSoftware.sampleNearest(u, v, textureData, textureWidth, textureHeight, repeat);\n        var color10:number[] = ProgramSoftware.sampleNearest(u + texelSizeX, v, textureData, textureWidth, textureHeight, repeat);\n\n        var color01:number[] = ProgramSoftware.sampleNearest(u, v + texelSizeY, textureData, textureWidth, textureHeight, repeat);\n        var color11:number[] = ProgramSoftware.sampleNearest(u + texelSizeX, v + texelSizeY, textureData, textureWidth, textureHeight, repeat);\n\n        var a:number = u * textureWidth;\n        a = a - Math.floor(a);\n\n        var interColor0:number[] = ProgramSoftware.interpolateColor(color00, color10, a);\n        var interColor1:number[] = ProgramSoftware.interpolateColor(color01, color11, a);\n\n        var b:number = v * textureHeight;\n        b = b - Math.floor(b);\n        return ProgramSoftware.interpolateColor(interColor0, interColor1, b);\n    }\n\n\n    private static interpolateColor(source:number[], target:number[], a:number):number[] {\n        var result:number[] = [];\n        result[0] = source[0] + (target[0] - source[0]) * a;\n        result[1] = source[1] + (target[1] - source[1]) * a;\n        result[2] = source[2] + (target[2] - source[2]) * a;\n        result[3] = source[3] + (target[3] - source[3]) * a;\n        return result;\n    }\n\n    public static tex(vo:ProgramVOSoftware, desc:Description, dest:Destination, source1:Destination, source2:Destination, context:ContextSoftware):void {\n        var target:Vector3D = ProgramSoftware.getDestTarget(vo, desc, dest);\n\n        var source1Target:Vector3D = ProgramSoftware.getSourceTarget(vo, desc, source1, context);\n\n        var swiz:string[] = [\"x\", \"y\", \"z\", \"w\"];\n\n        var u:number = source1Target[swiz[(source1.swizzle >> 0) & 3]];\n        var v:number = source1Target[swiz[(source1.swizzle >> 2) & 3]];\n\n        var dux:number = vo.derivativeX[source1.regnum][swiz[(source1.swizzle >> 0) & 3]];\n        var dvx:number = vo.derivativeX[source1.regnum][swiz[(source1.swizzle >> 2) & 3]];\n        var duy:number = vo.derivativeY[source1.regnum][swiz[(source1.swizzle >> 0) & 3]];\n        var dvy:number = vo.derivativeY[source1.regnum][swiz[(source1.swizzle >> 2) & 3]];\n\n        var color:number[] = ProgramSoftware.sample(vo, context, u, v, source2.regnum, dux, dvx, duy, dvy);\n\n        if (dest.mask & 1) {\n            target.x = color[1];\n        }\n\n        if (dest.mask & 2) {\n            target.y = color[2];\n        }\n\n        if (dest.mask & 4) {\n            target.z = color[3];\n        }\n\n        if (dest.mask & 8) {\n            target.w = color[0];\n        }\n    }\n\n    public static add(vo:ProgramVOSoftware, desc:Description, dest:Destination, source1:Destination, source2:Destination, context:ContextSoftware):void {\n        var target:Vector3D = ProgramSoftware.getDestTarget(vo, desc, dest);\n\n        var source1Target:Vector3D = ProgramSoftware.getSourceTarget(vo, desc, source1, context);\n        var source2Target:Vector3D = ProgramSoftware.getSourceTarget(vo, desc, source2, context);\n\n        var swiz:string[] = [\"x\", \"y\", \"z\", \"w\"];\n\n        if (dest.mask & 1) {\n            target.x = source1Target[swiz[(source1.swizzle >> 0) & 3]] + source2Target[swiz[(source2.swizzle >> 0) & 3]];\n        }\n\n        if (dest.mask & 2) {\n            target.y = source1Target[swiz[(source1.swizzle >> 2) & 3]] + source2Target[swiz[(source2.swizzle >> 2) & 3]];\n        }\n\n        if (dest.mask & 4) {\n            target.z = source1Target[swiz[(source1.swizzle >> 4) & 3]] + source2Target[swiz[(source2.swizzle >> 4) & 3]];\n        }\n\n        if (dest.mask & 8) {\n            target.w = source1Target[swiz[(source1.swizzle >> 6) & 3]] + source2Target[swiz[(source2.swizzle >> 6) & 3]];\n        }\n    }\n\n    public static sub(vo:ProgramVOSoftware, desc:Description, dest:Destination, source1:Destination, source2:Destination, context:ContextSoftware):void {\n        var target:Vector3D = ProgramSoftware.getDestTarget(vo, desc, dest);\n\n        var source1Target:Vector3D = ProgramSoftware.getSourceTarget(vo, desc, source1, context);\n        var source2Target:Vector3D = ProgramSoftware.getSourceTarget(vo, desc, source2, context);\n\n        var swiz:string[] = [\"x\", \"y\", \"z\", \"w\"];\n\n        if (dest.mask & 1) {\n            target.x = source1Target[swiz[(source1.swizzle >> 0) & 3]] - source2Target[swiz[(source2.swizzle >> 0) & 3]];\n        }\n\n        if (dest.mask & 2) {\n            target.y = source1Target[swiz[(source1.swizzle >> 2) & 3]] - source2Target[swiz[(source2.swizzle >> 2) & 3]];\n        }\n\n        if (dest.mask & 4) {\n            target.z = source1Target[swiz[(source1.swizzle >> 4) & 3]] - source2Target[swiz[(source2.swizzle >> 4) & 3]];\n        }\n\n        if (dest.mask & 8) {\n            target.w = source1Target[swiz[(source1.swizzle >> 6) & 3]] - source2Target[swiz[(source2.swizzle >> 6) & 3]];\n        }\n    }\n\n    public static mul(vo:ProgramVOSoftware, desc:Description, dest:Destination, source1:Destination, source2:Destination, context:ContextSoftware):void {\n        var target:Vector3D = ProgramSoftware.getDestTarget(vo, desc, dest);\n\n        var source1Target:Vector3D = ProgramSoftware.getSourceTarget(vo, desc, source1, context);\n        var source2Target:Vector3D = ProgramSoftware.getSourceTarget(vo, desc, source2, context);\n\n        var swiz:string[] = [\"x\", \"y\", \"z\", \"w\"];\n\n        if (dest.mask & 1) {\n            target.x = source1Target[swiz[(source1.swizzle >> 0) & 3]] * source2Target[swiz[(source2.swizzle >> 0) & 3]];\n        }\n\n        if (dest.mask & 2) {\n            target.y = source1Target[swiz[(source1.swizzle >> 2) & 3]] * source2Target[swiz[(source2.swizzle >> 2) & 3]];\n        }\n\n        if (dest.mask & 4) {\n            target.z = source1Target[swiz[(source1.swizzle >> 4) & 3]] * source2Target[swiz[(source2.swizzle >> 4) & 3]];\n        }\n\n        if (dest.mask & 8) {\n            target.w = source1Target[swiz[(source1.swizzle >> 6) & 3]] * source2Target[swiz[(source2.swizzle >> 6) & 3]];\n        }\n    }\n\n    public static div(vo:ProgramVOSoftware, desc:Description, dest:Destination, source1:Destination, source2:Destination, context:ContextSoftware):void {\n        var target:Vector3D = ProgramSoftware.getDestTarget(vo, desc, dest);\n\n        var source1Target:Vector3D = ProgramSoftware.getSourceTarget(vo, desc, source1, context);\n        var source2Target:Vector3D = ProgramSoftware.getSourceTarget(vo, desc, source2, context);\n\n        var swiz:string[] = [\"x\", \"y\", \"z\", \"w\"];\n\n        if (dest.mask & 1) {\n            target.x = source1Target[swiz[(source1.swizzle >> 0) & 3]] / source2Target[swiz[(source2.swizzle >> 0) & 3]];\n        }\n\n        if (dest.mask & 2) {\n            target.y = source1Target[swiz[(source1.swizzle >> 2) & 3]] / source2Target[swiz[(source2.swizzle >> 2) & 3]];\n        }\n\n        if (dest.mask & 4) {\n            target.z = source1Target[swiz[(source1.swizzle >> 4) & 3]] / source2Target[swiz[(source2.swizzle >> 4) & 3]];\n        }\n\n        if (dest.mask & 8) {\n            target.w = source1Target[swiz[(source1.swizzle >> 6) & 3]] / source2Target[swiz[(source2.swizzle >> 6) & 3]];\n        }\n    }\n\n    public static rcp(vo:ProgramVOSoftware, desc:Description, dest:Destination, source1:Destination, source2:Destination, context:ContextSoftware):void {\n        var target:Vector3D = ProgramSoftware.getDestTarget(vo, desc, dest);\n\n        var source1Target:Vector3D = ProgramSoftware.getSourceTarget(vo, desc, source1, context);\n\n        var swiz:string[] = [\"x\", \"y\", \"z\", \"w\"];\n\n        if (dest.mask & 1) {\n            target.x = 1 / source1Target[swiz[(source1.swizzle >> 0) & 3]];\n        }\n\n        if (dest.mask & 2) {\n            target.y = 1 / source1Target[swiz[(source1.swizzle >> 2) & 3]];\n        }\n\n        if (dest.mask & 4) {\n            target.z = 1 / source1Target[swiz[(source1.swizzle >> 4) & 3]];\n        }\n\n        if (dest.mask & 8) {\n            target.w = 1 / source1Target[swiz[(source1.swizzle >> 6) & 3]];\n        }\n    }\n\n    public static min(vo:ProgramVOSoftware, desc:Description, dest:Destination, source1:Destination, source2:Destination, context:ContextSoftware):void {\n        var target:Vector3D = ProgramSoftware.getDestTarget(vo, desc, dest);\n\n        var source1Target:Vector3D = ProgramSoftware.getSourceTarget(vo, desc, source1, context);\n        var source2Target:Vector3D = ProgramSoftware.getSourceTarget(vo, desc, source2, context);\n\n        var swiz:string[] = [\"x\", \"y\", \"z\", \"w\"];\n\n        if (dest.mask & 1) {\n            target.x = Math.min(source1Target[swiz[(source1.swizzle >> 0) & 3]], source2Target[swiz[(source2.swizzle >> 0) & 3]]);\n        }\n\n        if (dest.mask & 2) {\n            target.y = Math.min(source1Target[swiz[(source1.swizzle >> 2) & 3]], source2Target[swiz[(source2.swizzle >> 2) & 3]]);\n        }\n\n        if (dest.mask & 4) {\n            target.z = Math.min(source1Target[swiz[(source1.swizzle >> 4) & 3]], source2Target[swiz[(source2.swizzle >> 4) & 3]]);\n        }\n\n        if (dest.mask & 8) {\n            target.w = Math.min(source1Target[swiz[(source1.swizzle >> 6) & 3]], source2Target[swiz[(source2.swizzle >> 6) & 3]]);\n        }\n    }\n\n    public static max(vo:ProgramVOSoftware, desc:Description, dest:Destination, source1:Destination, source2:Destination, context:ContextSoftware):void {\n        var target:Vector3D = ProgramSoftware.getDestTarget(vo, desc, dest);\n\n        var source1Target:Vector3D = ProgramSoftware.getSourceTarget(vo, desc, source1, context);\n        var source2Target:Vector3D = ProgramSoftware.getSourceTarget(vo, desc, source2, context);\n\n        var swiz:string[] = [\"x\", \"y\", \"z\", \"w\"];\n\n        if (dest.mask & 1) {\n            target.x = Math.max(source1Target[swiz[(source1.swizzle >> 0) & 3]], source2Target[swiz[(source2.swizzle >> 0) & 3]]);\n        }\n\n        if (dest.mask & 2) {\n            target.y = Math.max(source1Target[swiz[(source1.swizzle >> 2) & 3]], source2Target[swiz[(source2.swizzle >> 2) & 3]]);\n        }\n\n        if (dest.mask & 4) {\n            target.z = Math.max(source1Target[swiz[(source1.swizzle >> 4) & 3]], source2Target[swiz[(source2.swizzle >> 4) & 3]]);\n        }\n\n        if (dest.mask & 8) {\n            target.w = Math.max(source1Target[swiz[(source1.swizzle >> 6) & 3]], source2Target[swiz[(source2.swizzle >> 6) & 3]]);\n        }\n    }\n\n    public static frc(vo:ProgramVOSoftware, desc:Description, dest:Destination, source1:Destination, source2:Destination, context:ContextSoftware):void {\n        var target:Vector3D = ProgramSoftware.getDestTarget(vo, desc, dest);\n\n        var source1Target:Vector3D = ProgramSoftware.getSourceTarget(vo, desc, source1, context);\n\n        var swiz:string[] = [\"x\", \"y\", \"z\", \"w\"];\n\n        if (dest.mask & 1) {\n            target.x = source1Target[swiz[(source1.swizzle >> 0) & 3]] - Math.floor(source1Target[swiz[(source1.swizzle >> 0) & 3]]);\n        }\n\n        if (dest.mask & 2) {\n            target.y = source1Target[swiz[(source1.swizzle >> 2) & 3]] - Math.floor(source1Target[swiz[(source1.swizzle >> 2) & 3]]);\n        }\n\n        if (dest.mask & 4) {\n            target.z = source1Target[swiz[(source1.swizzle >> 4) & 3]] - Math.floor(source1Target[swiz[(source1.swizzle >> 4) & 3]]);\n        }\n\n        if (dest.mask & 8) {\n            target.w = source1Target[swiz[(source1.swizzle >> 6) & 3]] - Math.floor(source1Target[swiz[(source1.swizzle >> 6) & 3]]);\n        }\n    }\n\n    public static sqt(vo:ProgramVOSoftware, desc:Description, dest:Destination, source1:Destination, source2:Destination, context:ContextSoftware):void {\n        var target:Vector3D = ProgramSoftware.getDestTarget(vo, desc, dest);\n\n        var source1Target:Vector3D = ProgramSoftware.getSourceTarget(vo, desc, source1, context);\n\n        var swiz:string[] = [\"x\", \"y\", \"z\", \"w\"];\n\n        if (dest.mask & 1) {\n            target.x = Math.sqrt(source1Target[swiz[(source1.swizzle >> 0) & 3]]);\n        }\n\n        if (dest.mask & 2) {\n            target.y = Math.sqrt(source1Target[swiz[(source1.swizzle >> 2) & 3]]);\n        }\n\n        if (dest.mask & 4) {\n            target.z = Math.sqrt(source1Target[swiz[(source1.swizzle >> 4) & 3]]);\n        }\n\n        if (dest.mask & 8) {\n            target.w = Math.sqrt(source1Target[swiz[(source1.swizzle >> 6) & 3]]);\n        }\n    }\n\n    public static rsq(vo:ProgramVOSoftware, desc:Description, dest:Destination, source1:Destination, source2:Destination, context:ContextSoftware):void {\n        var target:Vector3D = ProgramSoftware.getDestTarget(vo, desc, dest);\n\n        var source1Target:Vector3D = ProgramSoftware.getSourceTarget(vo, desc, source1, context);\n\n        var swiz:string[] = [\"x\", \"y\", \"z\", \"w\"];\n\n        if (dest.mask & 1) {\n            target.x = 1 / Math.sqrt(source1Target[swiz[(source1.swizzle >> 0) & 3]]);\n        }\n\n        if (dest.mask & 2) {\n            target.y = 1 / Math.sqrt(source1Target[swiz[(source1.swizzle >> 2) & 3]]);\n        }\n\n        if (dest.mask & 4) {\n            target.z = 1 / Math.sqrt(source1Target[swiz[(source1.swizzle >> 4) & 3]]);\n        }\n\n        if (dest.mask & 8) {\n            target.w = 1 / Math.sqrt(source1Target[swiz[(source1.swizzle >> 6) & 3]]);\n        }\n    }\n\n    public static pow(vo:ProgramVOSoftware, desc:Description, dest:Destination, source1:Destination, source2:Destination, context:ContextSoftware):void {\n        var target:Vector3D = ProgramSoftware.getDestTarget(vo, desc, dest);\n\n        var source1Target:Vector3D = ProgramSoftware.getSourceTarget(vo, desc, source1, context);\n        var source2Target:Vector3D = ProgramSoftware.getSourceTarget(vo, desc, source2, context);\n\n        var swiz:string[] = [\"x\", \"y\", \"z\", \"w\"];\n\n        if (dest.mask & 1) {\n            target.x = Math.pow(source1Target[swiz[(source1.swizzle >> 0) & 3]], source2Target[swiz[(source2.swizzle >> 0) & 3]]);\n        }\n\n        if (dest.mask & 2) {\n            target.y = Math.pow(source1Target[swiz[(source1.swizzle >> 2) & 3]], source2Target[swiz[(source2.swizzle >> 2) & 3]]);\n        }\n\n        if (dest.mask & 4) {\n            target.z = Math.pow(source1Target[swiz[(source1.swizzle >> 4) & 3]], source2Target[swiz[(source2.swizzle >> 4) & 3]]);\n        }\n\n        if (dest.mask & 8) {\n            target.w = Math.pow(source1Target[swiz[(source1.swizzle >> 6) & 3]], source2Target[swiz[(source2.swizzle >> 6) & 3]]);\n        }\n    }\n\n    public static log(vo:ProgramVOSoftware, desc:Description, dest:Destination, source1:Destination, source2:Destination, context:ContextSoftware):void {\n        var target:Vector3D = ProgramSoftware.getDestTarget(vo, desc, dest);\n\n        var source1Target:Vector3D = ProgramSoftware.getSourceTarget(vo, desc, source1, context);\n\n        var swiz:string[] = [\"x\", \"y\", \"z\", \"w\"];\n\n        if (dest.mask & 1) {\n            target.x = Math.log(source1Target[swiz[(source1.swizzle >> 0) & 3]]) / Math.LN2;\n        }\n\n        if (dest.mask & 2) {\n            target.y = Math.log(source1Target[swiz[(source1.swizzle >> 2) & 3]]) / Math.LN2;\n        }\n\n        if (dest.mask & 4) {\n            target.z = Math.log(source1Target[swiz[(source1.swizzle >> 4) & 3]]) / Math.LN2;\n        }\n\n        if (dest.mask & 8) {\n            target.w = Math.log(source1Target[swiz[(source1.swizzle >> 6) & 3]]) / Math.LN2;\n        }\n    }\n\n    public static exp(vo:ProgramVOSoftware, desc:Description, dest:Destination, source1:Destination, source2:Destination, context:ContextSoftware):void {\n        var target:Vector3D = ProgramSoftware.getDestTarget(vo, desc, dest);\n\n        var source1Target:Vector3D = ProgramSoftware.getSourceTarget(vo, desc, source1, context);\n\n        var swiz:string[] = [\"x\", \"y\", \"z\", \"w\"];\n\n        if (dest.mask & 1) {\n            target.x = Math.exp(source1Target[swiz[(source1.swizzle >> 0) & 3]]);\n        }\n\n        if (dest.mask & 2) {\n            target.y = Math.exp(source1Target[swiz[(source1.swizzle >> 2) & 3]]);\n        }\n\n        if (dest.mask & 4) {\n            target.z = Math.exp(source1Target[swiz[(source1.swizzle >> 4) & 3]]);\n        }\n\n        if (dest.mask & 8) {\n            target.w = Math.exp(source1Target[swiz[(source1.swizzle >> 6) & 3]]);\n        }\n    }\n\n    public static nrm(vo:ProgramVOSoftware, desc:Description, dest:Destination, source1:Destination, source2:Destination, context:ContextSoftware):void {\n        var target:Vector3D = ProgramSoftware.getDestTarget(vo, desc, dest);\n\n        var source1Target:Vector3D = ProgramSoftware.getSourceTarget(vo, desc, source1, context);\n\n        var swiz:string[] = [\"x\", \"y\", \"z\", \"w\"];\n\n        var x:number = source1Target[swiz[(source1.swizzle >> 0) & 3]];\n        var y:number = source1Target[swiz[(source1.swizzle >> 2) & 3]];\n        var z:number = source1Target[swiz[(source1.swizzle >> 4) & 3]];\n\n        var len:number = Math.sqrt(x * x + y * y + z * z);\n        x /= len;\n        y /= len;\n        z /= len;\n\n        if (dest.mask & 1) {\n            target.x = x;\n        }\n\n        if (dest.mask & 2) {\n            target.y = y;\n        }\n\n        if (dest.mask & 4) {\n            target.z = z;\n        }\n    }\n\n    public static sin(vo:ProgramVOSoftware, desc:Description, dest:Destination, source1:Destination, source2:Destination, context:ContextSoftware):void {\n        var target:Vector3D = ProgramSoftware.getDestTarget(vo, desc, dest);\n\n        var source1Target:Vector3D = ProgramSoftware.getSourceTarget(vo, desc, source1, context);\n\n        var swiz:string[] = [\"x\", \"y\", \"z\", \"w\"];\n\n        if (dest.mask & 1) {\n            target.x = Math.sin(source1Target[swiz[(source1.swizzle >> 0) & 3]]);\n        }\n\n        if (dest.mask & 2) {\n            target.y = Math.sin(source1Target[swiz[(source1.swizzle >> 2) & 3]]);\n        }\n\n        if (dest.mask & 4) {\n            target.z = Math.sin(source1Target[swiz[(source1.swizzle >> 4) & 3]]);\n        }\n\n        if (dest.mask & 8) {\n            target.w = Math.sin(source1Target[swiz[(source1.swizzle >> 6) & 3]]);\n        }\n    }\n\n    public static cos(vo:ProgramVOSoftware, desc:Description, dest:Destination, source1:Destination, source2:Destination, context:ContextSoftware):void {\n        var target:Vector3D = ProgramSoftware.getDestTarget(vo, desc, dest);\n\n        var source1Target:Vector3D = ProgramSoftware.getSourceTarget(vo, desc, source1, context);\n\n        var swiz:string[] = [\"x\", \"y\", \"z\", \"w\"];\n\n        if (dest.mask & 1) {\n            target.x = Math.cos(source1Target[swiz[(source1.swizzle >> 0) & 3]]);\n        }\n\n        if (dest.mask & 2) {\n            target.y = Math.cos(source1Target[swiz[(source1.swizzle >> 2) & 3]]);\n        }\n\n        if (dest.mask & 4) {\n            target.z = Math.cos(source1Target[swiz[(source1.swizzle >> 4) & 3]]);\n        }\n\n        if (dest.mask & 8) {\n            target.w = Math.cos(source1Target[swiz[(source1.swizzle >> 6) & 3]]);\n        }\n    }\n\n    public static crs(vo:ProgramVOSoftware, desc:Description, dest:Destination, source1:Destination, source2:Destination, context:ContextSoftware):void {\n        var target:Vector3D = ProgramSoftware.getDestTarget(vo, desc, dest);\n\n        var swiz:string[] = [\"x\", \"y\", \"z\", \"w\"];\n\n        var source1Target:Vector3D = ProgramSoftware.getSourceTarget(vo, desc, source1, context);\n        var source1TargetX:number = source1Target[swiz[(source1.swizzle >> 0) & 3]];\n        var source1TargetY:number = source1Target[swiz[(source1.swizzle >> 2) & 3]];\n        var source1TargetZ:number = source1Target[swiz[(source1.swizzle >> 4) & 3]];\n\n        var source2Target:Vector3D = ProgramSoftware.getSourceTarget(vo, desc, source2, context);\n        var source2TargetX:number = source2Target[swiz[(source2.swizzle >> 0) & 3]];\n        var source2TargetY:number = source2Target[swiz[(source2.swizzle >> 2) & 3]];\n        var source2TargetZ:number = source2Target[swiz[(source2.swizzle >> 4) & 3]];\n\n        if (dest.mask & 1) {\n            target.x = source1TargetY * source2TargetZ - source1TargetZ * source2TargetY;\n        }\n\n        if (dest.mask & 2) {\n            target.y = source1TargetZ * source2TargetX - source1TargetX * source2TargetZ;\n        }\n\n        if (dest.mask & 4) {\n            target.z = source1TargetX * source2TargetY - source1TargetY * source2TargetX;\n        }\n    }\n\n    public static dp3(vo:ProgramVOSoftware, desc:Description, dest:Destination, source1:Destination, source2:Destination, context:ContextSoftware):void {\n        var target:Vector3D = ProgramSoftware.getDestTarget(vo, desc, dest);\n\n        var swiz:string[] = [\"x\", \"y\", \"z\", \"w\"];\n\n        var source1Target:Vector3D = ProgramSoftware.getSourceTarget(vo, desc, source1, context);\n        var source1TargetX:number = source1Target[swiz[(source1.swizzle >> 0) & 3]];\n        var source1TargetY:number = source1Target[swiz[(source1.swizzle >> 2) & 3]];\n        var source1TargetZ:number = source1Target[swiz[(source1.swizzle >> 4) & 3]];\n\n        var source2Target:Vector3D = ProgramSoftware.getSourceTarget(vo, desc, source2, context);\n        var source2TargetX:number = source2Target[swiz[(source2.swizzle >> 0) & 3]];\n        var source2TargetY:number = source2Target[swiz[(source2.swizzle >> 2) & 3]];\n        var source2TargetZ:number = source2Target[swiz[(source2.swizzle >> 4) & 3]];\n\n        if (dest.mask & 1) {\n            target.x = source1TargetX * source2TargetX + source1TargetY * source2TargetY + source1TargetZ * source2TargetZ;\n        }\n\n        if (dest.mask & 2) {\n            target.y = source1TargetX * source2TargetX + source1TargetY * source2TargetY + source1TargetZ * source2TargetZ;\n        }\n\n        if (dest.mask & 4) {\n            target.z = source1TargetX * source2TargetX + source1TargetY * source2TargetY + source1TargetZ * source2TargetZ;\n        }\n\n        if (dest.mask & 8) {\n            target.w = source1TargetX * source2TargetX + source1TargetY * source2TargetY + source1TargetZ * source2TargetZ;\n        }\n    }\n\n    public static dp4(vo:ProgramVOSoftware, desc:Description, dest:Destination, source1:Destination, source2:Destination, context:ContextSoftware):void {\n        var target:Vector3D = ProgramSoftware.getDestTarget(vo, desc, dest);\n\n        var swiz:string[] = [\"x\", \"y\", \"z\", \"w\"];\n\n        var source1Target:Vector3D = ProgramSoftware.getSourceTarget(vo, desc, source1, context);\n        var source1TargetX:number = source1Target[swiz[(source1.swizzle >> 0) & 3]];\n        var source1TargetY:number = source1Target[swiz[(source1.swizzle >> 2) & 3]];\n        var source1TargetZ:number = source1Target[swiz[(source1.swizzle >> 4) & 3]];\n        var source1TargetW:number = source1Target[swiz[(source1.swizzle >> 6) & 3]];\n\n        var source2Target:Vector3D = ProgramSoftware.getSourceTarget(vo, desc, source2, context);\n        var source2TargetX:number = source2Target[swiz[(source2.swizzle >> 0) & 3]];\n        var source2TargetY:number = source2Target[swiz[(source2.swizzle >> 2) & 3]];\n        var source2TargetZ:number = source2Target[swiz[(source2.swizzle >> 4) & 3]];\n        var source2TargetW:number = source2Target[swiz[(source2.swizzle >> 6) & 3]];\n\n        if (dest.mask & 1) {\n            target.x = source1TargetX * source2TargetX + source1TargetY * source2TargetY + source1TargetZ * source2TargetZ + source1TargetW * source2TargetW;\n        }\n\n        if (dest.mask & 2) {\n            target.y = source1TargetX * source2TargetX + source1TargetY * source2TargetY + source1TargetZ * source2TargetZ + source1TargetW * source2TargetW;\n        }\n\n        if (dest.mask & 4) {\n            target.z = source1TargetX * source2TargetX + source1TargetY * source2TargetY + source1TargetZ * source2TargetZ + source1TargetW * source2TargetW;\n        }\n\n        if (dest.mask & 8) {\n            target.w = source1TargetX * source2TargetX + source1TargetY * source2TargetY + source1TargetZ * source2TargetZ + source1TargetW * source2TargetW;\n        }\n    }\n\n    public static abs(vo:ProgramVOSoftware, desc:Description, dest:Destination, source1:Destination, source2:Destination, context:ContextSoftware):void {\n        var target:Vector3D = ProgramSoftware.getDestTarget(vo, desc, dest);\n\n        var source1Target:Vector3D = ProgramSoftware.getSourceTarget(vo, desc, source1, context);\n\n        var swiz:string[] = [\"x\", \"y\", \"z\", \"w\"];\n\n        if (dest.mask & 1) {\n            target.x = Math.abs(source1Target[swiz[(source1.swizzle >> 0) & 3]]);\n        }\n\n        if (dest.mask & 2) {\n            target.y = Math.abs(source1Target[swiz[(source1.swizzle >> 2) & 3]]);\n        }\n\n        if (dest.mask & 4) {\n            target.z = Math.abs(source1Target[swiz[(source1.swizzle >> 4) & 3]]);\n        }\n\n        if (dest.mask & 8) {\n            target.w = Math.abs(source1Target[swiz[(source1.swizzle >> 6) & 3]]);\n        }\n    }\n\n    public static neg(vo:ProgramVOSoftware, desc:Description, dest:Destination, source1:Destination, source2:Destination, context:ContextSoftware):void {\n        var target:Vector3D = ProgramSoftware.getDestTarget(vo, desc, dest);\n\n        var source1Target:Vector3D = ProgramSoftware.getSourceTarget(vo, desc, source1, context);\n\n        var swiz:string[] = [\"x\", \"y\", \"z\", \"w\"];\n\n        if (dest.mask & 1) {\n            target.x = -source1Target[swiz[(source1.swizzle >> 0) & 3]];\n        }\n\n        if (dest.mask & 2) {\n            target.y = -source1Target[swiz[(source1.swizzle >> 2) & 3]];\n        }\n\n        if (dest.mask & 4) {\n            target.z = -source1Target[swiz[(source1.swizzle >> 4) & 3]];\n        }\n\n        if (dest.mask & 8) {\n            target.w = -source1Target[swiz[(source1.swizzle >> 6) & 3]];\n        }\n    }\n\n    public static sat(vo:ProgramVOSoftware, desc:Description, dest:Destination, source1:Destination, source2:Destination, context:ContextSoftware):void {\n        var target:Vector3D = ProgramSoftware.getDestTarget(vo, desc, dest);\n\n        var source1Target:Vector3D = ProgramSoftware.getSourceTarget(vo, desc, source1, context);\n\n        var swiz:string[] = [\"x\", \"y\", \"z\", \"w\"];\n\n        if (dest.mask & 1) {\n            target.x = Math.max(0, Math.min(1, source1Target[swiz[(source1.swizzle >> 0) & 3]]));\n        }\n\n        if (dest.mask & 2) {\n            target.y = Math.max(0, Math.min(1, source1Target[swiz[(source1.swizzle >> 2) & 3]]));\n        }\n\n        if (dest.mask & 4) {\n            target.z = Math.max(0, Math.min(1, source1Target[swiz[(source1.swizzle >> 4) & 3]]));\n        }\n\n        if (dest.mask & 8) {\n            target.w = Math.max(0, Math.min(1, source1Target[swiz[(source1.swizzle >> 6) & 3]]));\n        }\n    }\n\n    public static m33(vo:ProgramVOSoftware, desc:Description, dest:Destination, source1:Destination, source2:Destination, context:ContextSoftware):void {\n        var target:Vector3D = ProgramSoftware.getDestTarget(vo, desc, dest);\n\n        var source1Target:Vector3D = ProgramSoftware.getSourceTarget(vo, desc, source1, context);\n\n        var source2Type:Vector3D[] = ProgramSoftware.getSourceTargetType(vo, desc, source2, context);\n\n        var source2Target0:Vector3D = ProgramSoftware.getSourceTargetByIndex(source2Type, source2.regnum);\n        var source2Target1:Vector3D = ProgramSoftware.getSourceTargetByIndex(source2Type, source2.regnum + 1);\n        var source2Target2:Vector3D = ProgramSoftware.getSourceTargetByIndex(source2Type, source2.regnum + 2);\n\n        var matrix:Matrix3D = new Matrix3D(new Float32Array([\n            source2Target0.x, source2Target1.x, source2Target2.x, 0,\n            source2Target0.y, source2Target1.y, source2Target2.y, 0,\n            source2Target0.z, source2Target1.z, source2Target2.z, 0,\n            0, 0, 0, 0\n        ]));\n\n        var result:Vector3D = matrix.transformVector(source1Target);\n\n        if (dest.mask & 1) {\n            target.x = result.x;\n        }\n\n        if (dest.mask & 2) {\n            target.y = result.y;\n        }\n\n        if (dest.mask & 4) {\n            target.z = result.z;\n        }\n    }\n\n    public static m34(vo:ProgramVOSoftware, desc:Description, dest:Destination, source1:Destination, source2:Destination, context:ContextSoftware):void {\n        var target:Vector3D = ProgramSoftware.getDestTarget(vo, desc, dest);\n\n        var source1Target:Vector3D = ProgramSoftware.getSourceTarget(vo, desc, source1, context);\n\n        var source2Type:Vector3D[] = ProgramSoftware.getSourceTargetType(vo, desc, source2, context);\n\n        var source2Target0:Vector3D = ProgramSoftware.getSourceTargetByIndex(source2Type, source2.regnum);\n        var source2Target1:Vector3D = ProgramSoftware.getSourceTargetByIndex(source2Type, source2.regnum + 1);\n        var source2Target2:Vector3D = ProgramSoftware.getSourceTargetByIndex(source2Type, source2.regnum + 2);\n\n        var matrix:Matrix3D = new Matrix3D(new Float32Array([\n            source2Target0.x, source2Target1.x, source2Target2.x, 0,\n            source2Target0.y, source2Target1.y, source2Target2.y, 0,\n            source2Target0.z, source2Target1.z, source2Target2.z, 0,\n            source2Target0.w, source2Target1.w, source2Target2.w, 1\n        ]));\n\n        var result:Vector3D = matrix.transformVector(source1Target);\n\n        if (dest.mask & 1) {\n            target.x = result.x;\n        }\n\n        if (dest.mask & 2) {\n            target.y = result.y;\n        }\n\n        if (dest.mask & 4) {\n            target.z = result.z;\n        }\n\n        if (dest.mask & 8) {\n            target.w = result.w;\n        }\n    }\n\n    public static ddx(vo:ProgramVOSoftware, desc:Description, dest:Destination, source1:Destination, source2:Destination, context:ContextSoftware):void {\n        var target:Vector3D = ProgramSoftware.getDestTarget(vo, desc, dest);\n\n        var source1Target:Vector3D = vo.derivativeX[source1.regnum];\n\n        var swiz:string[] = [\"x\", \"y\", \"z\", \"w\"];\n\n        if (dest.mask & 1) {\n            target.x = source1Target[swiz[(source1.swizzle >> 0) & 3]];\n        }\n\n        if (dest.mask & 2) {\n            target.y =source1Target[swiz[(source1.swizzle >> 2) & 3]];\n        }\n\n        if (dest.mask & 4) {\n            target.z =source1Target[swiz[(source1.swizzle >> 4) & 3]];\n        }\n\n        if (dest.mask & 8) {\n            target.w =source1Target[swiz[(source1.swizzle >> 6) & 3]];\n        }\n    }\n\n    public static ddy(vo:ProgramVOSoftware, desc:Description, dest:Destination, source1:Destination, source2:Destination, context:ContextSoftware):void {\n        var target:Vector3D = ProgramSoftware.getDestTarget(vo, desc, dest);\n\n        var source1Target:Vector3D = vo.derivativeY[source1.regnum];\n\n        var swiz:string[] = [\"x\", \"y\", \"z\", \"w\"];\n\n        if (dest.mask & 1) {\n            target.x = source1Target[swiz[(source1.swizzle >> 0) & 3]];\n        }\n\n        if (dest.mask & 2) {\n            target.y =source1Target[swiz[(source1.swizzle >> 2) & 3]];\n        }\n\n        if (dest.mask & 4) {\n            target.z =source1Target[swiz[(source1.swizzle >> 4) & 3]];\n        }\n\n        if (dest.mask & 8) {\n            target.w =source1Target[swiz[(source1.swizzle >> 6) & 3]];\n        }\n    }\n\n    public static sge(vo:ProgramVOSoftware, desc:Description, dest:Destination, source1:Destination, source2:Destination, context:ContextSoftware):void {\n        var target:Vector3D = ProgramSoftware.getDestTarget(vo, desc, dest);\n\n        var swiz:string[] = [\"x\", \"y\", \"z\", \"w\"];\n\n        var source1Target:Vector3D = ProgramSoftware.getSourceTarget(vo, desc, source1, context);\n        var source1TargetX:number = source1Target[swiz[(source1.swizzle >> 0) & 3]];\n        var source1TargetY:number = source1Target[swiz[(source1.swizzle >> 2) & 3]];\n        var source1TargetZ:number = source1Target[swiz[(source1.swizzle >> 4) & 3]];\n        var source1TargetW:number = source1Target[swiz[(source1.swizzle >> 6) & 3]];\n\n        var source2Target:Vector3D = ProgramSoftware.getSourceTarget(vo, desc, source2, context);\n        var source2TargetX:number = source2Target[swiz[(source2.swizzle >> 0) & 3]];\n        var source2TargetY:number = source2Target[swiz[(source2.swizzle >> 2) & 3]];\n        var source2TargetZ:number = source2Target[swiz[(source2.swizzle >> 4) & 3]];\n        var source2TargetW:number = source2Target[swiz[(source2.swizzle >> 6) & 3]];\n\n        if (dest.mask & 1) {\n            target.x = source1TargetX >= source2TargetX ? 1 : 0;\n        }\n\n        if (dest.mask & 2) {\n            target.y = source1TargetY >= source2TargetY ? 1 : 0;\n        }\n\n        if (dest.mask & 4) {\n            target.z = source1TargetZ >= source2TargetZ ? 1 : 0;\n        }\n\n        if (dest.mask & 8) {\n            target.w = source1TargetW >= source2TargetW ? 1 : 0;\n        }\n    }\n\n    public static slt(vo:ProgramVOSoftware, desc:Description, dest:Destination, source1:Destination, source2:Destination, context:ContextSoftware):void {\n        var target:Vector3D = ProgramSoftware.getDestTarget(vo, desc, dest);\n\n        var swiz:string[] = [\"x\", \"y\", \"z\", \"w\"];\n\n        var source1Target:Vector3D = ProgramSoftware.getSourceTarget(vo, desc, source1, context);\n        var source1TargetX:number = source1Target[swiz[(source1.swizzle >> 0) & 3]];\n        var source1TargetY:number = source1Target[swiz[(source1.swizzle >> 2) & 3]];\n        var source1TargetZ:number = source1Target[swiz[(source1.swizzle >> 4) & 3]];\n        var source1TargetW:number = source1Target[swiz[(source1.swizzle >> 6) & 3]];\n\n        var source2Target:Vector3D = ProgramSoftware.getSourceTarget(vo, desc, source2, context);\n        var source2TargetX:number = source2Target[swiz[(source2.swizzle >> 0) & 3]];\n        var source2TargetY:number = source2Target[swiz[(source2.swizzle >> 2) & 3]];\n        var source2TargetZ:number = source2Target[swiz[(source2.swizzle >> 4) & 3]];\n        var source2TargetW:number = source2Target[swiz[(source2.swizzle >> 6) & 3]];\n\n        if (dest.mask & 1) {\n            target.x = source1TargetX < source2TargetX ? 1 : 0;\n        }\n\n        if (dest.mask & 2) {\n            target.y = source1TargetY < source2TargetY ? 1 : 0;\n        }\n\n        if (dest.mask & 4) {\n            target.z = source1TargetZ < source2TargetZ ? 1 : 0;\n        }\n\n        if (dest.mask & 8) {\n            target.w = source1TargetW < source2TargetW ? 1 : 0;\n        }\n    }\n\n    public static seq(vo:ProgramVOSoftware, desc:Description, dest:Destination, source1:Destination, source2:Destination, context:ContextSoftware):void {\n        var target:Vector3D = ProgramSoftware.getDestTarget(vo, desc, dest);\n\n        var swiz:string[] = [\"x\", \"y\", \"z\", \"w\"];\n\n        var source1Target:Vector3D = ProgramSoftware.getSourceTarget(vo, desc, source1, context);\n        var source1TargetX:number = source1Target[swiz[(source1.swizzle >> 0) & 3]];\n        var source1TargetY:number = source1Target[swiz[(source1.swizzle >> 2) & 3]];\n        var source1TargetZ:number = source1Target[swiz[(source1.swizzle >> 4) & 3]];\n        var source1TargetW:number = source1Target[swiz[(source1.swizzle >> 6) & 3]];\n\n        var source2Target:Vector3D = ProgramSoftware.getSourceTarget(vo, desc, source2, context);\n        var source2TargetX:number = source2Target[swiz[(source2.swizzle >> 0) & 3]];\n        var source2TargetY:number = source2Target[swiz[(source2.swizzle >> 2) & 3]];\n        var source2TargetZ:number = source2Target[swiz[(source2.swizzle >> 4) & 3]];\n        var source2TargetW:number = source2Target[swiz[(source2.swizzle >> 6) & 3]];\n\n        if (dest.mask & 1) {\n            target.x = source1TargetX == source2TargetX ? 1 : 0;\n        }\n\n        if (dest.mask & 2) {\n            target.y = source1TargetY == source2TargetY ? 1 : 0;\n        }\n\n        if (dest.mask & 4) {\n            target.z = source1TargetZ == source2TargetZ ? 1 : 0;\n        }\n\n        if (dest.mask & 8) {\n            target.w = source1TargetW == source2TargetW ? 1 : 0;\n        }\n    }\n\n    public static sne(vo:ProgramVOSoftware, desc:Description, dest:Destination, source1:Destination, source2:Destination, context:ContextSoftware):void {\n        var target:Vector3D = ProgramSoftware.getDestTarget(vo, desc, dest);\n\n        var swiz:string[] = [\"x\", \"y\", \"z\", \"w\"];\n\n        var source1Target:Vector3D = ProgramSoftware.getSourceTarget(vo, desc, source1, context);\n        var source1TargetX:number = source1Target[swiz[(source1.swizzle >> 0) & 3]];\n        var source1TargetY:number = source1Target[swiz[(source1.swizzle >> 2) & 3]];\n        var source1TargetZ:number = source1Target[swiz[(source1.swizzle >> 4) & 3]];\n        var source1TargetW:number = source1Target[swiz[(source1.swizzle >> 6) & 3]];\n\n        var source2Target:Vector3D = ProgramSoftware.getSourceTarget(vo, desc, source2, context);\n        var source2TargetX:number = source2Target[swiz[(source2.swizzle >> 0) & 3]];\n        var source2TargetY:number = source2Target[swiz[(source2.swizzle >> 2) & 3]];\n        var source2TargetZ:number = source2Target[swiz[(source2.swizzle >> 4) & 3]];\n        var source2TargetW:number = source2Target[swiz[(source2.swizzle >> 6) & 3]];\n\n        if (dest.mask & 1) {\n            target.x = source1TargetX != source2TargetX ? 1 : 0;\n        }\n\n        if (dest.mask & 2) {\n            target.y = source1TargetY != source2TargetY ? 1 : 0;\n        }\n\n        if (dest.mask & 4) {\n            target.z = source1TargetZ != source2TargetZ ? 1 : 0;\n        }\n\n        if (dest.mask & 8) {\n            target.w = source1TargetW != source2TargetW ? 1 : 0;\n        }\n    }\n\n    public static sgn(vo:ProgramVOSoftware, desc:Description, dest:Destination, source1:Destination, source2:Destination, context:ContextSoftware):void {\n        var target:Vector3D = ProgramSoftware.getDestTarget(vo, desc, dest);\n\n        var swiz:string[] = [\"x\", \"y\", \"z\", \"w\"];\n\n        var source1Target:Vector3D = ProgramSoftware.getSourceTarget(vo, desc, source1, context);\n        var source1TargetX:number = source1Target[swiz[(source1.swizzle >> 0) & 3]];\n        var source1TargetY:number = source1Target[swiz[(source1.swizzle >> 2) & 3]];\n        var source1TargetZ:number = source1Target[swiz[(source1.swizzle >> 4) & 3]];\n        var source1TargetW:number = source1Target[swiz[(source1.swizzle >> 6) & 3]];\n\n        if (dest.mask & 1) {\n\n            target.x = 1\n            if (source1TargetX < 0) {\n                target.x = -1;\n            } else if (source1TargetX == 0) {\n                target.x = 0;\n            }\n        }\n\n        if (dest.mask & 2) {\n            target.y = 1\n            if (source1TargetY < 0) {\n                target.y = -1;\n            } else if (source1TargetY == 0) {\n                target.y = 0;\n            }\n        }\n\n        if (dest.mask & 4) {\n            target.z = 1\n            if (source1TargetZ < 0) {\n                target.z = -1;\n            } else if (source1TargetZ == 0) {\n                target.z = 0;\n            }\n        }\n\n        if (dest.mask & 8) {\n            target.w = 1\n            if (source1TargetW < 0) {\n                target.w = -1;\n            } else if (source1TargetW == 0) {\n                target.w = 0;\n            }\n        }\n    }\n\n    public static kil(vo:ProgramVOSoftware, desc:Description, dest:Destination, source1:Destination, source2:Destination, context:ContextSoftware):void {\n        var swiz:string[] = [\"x\", \"y\", \"z\", \"w\"];\n\n        var source1Target:Vector3D = ProgramSoftware.getSourceTarget(vo, desc, source1, context);\n        var source1TargetX:number = source1Target[swiz[(source1.swizzle >> 0) & 3]];\n\n        if(source1TargetX<0) {\n            vo.discard = true;\n        }\n    }\n}\n\nexport default ProgramSoftware;\n",
    "import Vector3D                        from \"awayjs-core/lib/geom/Vector3D\";\n\nclass ProgramVOSoftware {\n    public outputPosition:Vector3D[] = [];\n    public outputColor:Vector3D[] = [];\n    public outputDepth:number;\n    public varying:Vector3D[] = [];\n    public derivativeX:Vector3D[] = [];\n    public derivativeY:Vector3D[] = [];\n    public temp:Vector3D[] = [];\n    public attributes:Vector3D[] = [];\n    public discard:boolean = false;\n}\n\nexport default ProgramVOSoftware;",
    "import ByteArray\t\t\t\t\tfrom \"awayjs-core/lib/utils/ByteArray\";\n\nimport AGALTokenizer\t\t\t\tfrom \"../aglsl/AGALTokenizer\";\nimport AGLSLParser\t\t\t\t\tfrom \"../aglsl/AGLSLParser\";\nimport IProgram\t\t\t\t\t\tfrom \"../base/IProgram\";\nimport VertexBufferWebGL\t\t\tfrom \"../base/VertexBufferWebGL\";\n\nclass ProgramWebGL implements IProgram\n{\n\tprivate static _tokenizer:AGALTokenizer = new AGALTokenizer();\n\tprivate static _aglslParser:AGLSLParser = new AGLSLParser();\n\tprivate static _uniformLocationNameDictionary:Array<string> = [\"fc\", \"fs\", \"vc\"];\n\n\tprivate _gl:WebGLRenderingContext;\n\tprivate _program:WebGLProgram;\n\tprivate _vertexShader:WebGLShader;\n\tprivate _fragmentShader:WebGLShader;\n\tprivate _uniforms:Array<Array<WebGLUniformLocation>> = [[],[],[]];\n\tprivate _attribs:Array<number> = [];\n\n\tconstructor(gl:WebGLRenderingContext)\n\t{\n\t\tthis._gl = gl;\n\t\tthis._program = this._gl.createProgram();\n\t}\n\n\tpublic upload(vertexProgram:ByteArray, fragmentProgram:ByteArray)\n\t{\n\t\tvar vertexString:string = ProgramWebGL._aglslParser.parse(ProgramWebGL._tokenizer.decribeAGALByteArray(vertexProgram));\n\t\tvar fragmentString:string = ProgramWebGL._aglslParser.parse(ProgramWebGL._tokenizer.decribeAGALByteArray(fragmentProgram));\n\n\t\tthis._vertexShader = this._gl.createShader(this._gl.VERTEX_SHADER);\n\t\tthis._fragmentShader = this._gl.createShader(this._gl.FRAGMENT_SHADER);\n\n\t\tthis._gl.shaderSource(this._vertexShader, vertexString);\n\t\tthis._gl.compileShader(this._vertexShader);\n\n\t\tif (!this._gl.getShaderParameter(this._vertexShader, this._gl.COMPILE_STATUS))\n\t\t\tthrow new Error(this._gl.getShaderInfoLog(this._vertexShader));\n\n\t\tthis._gl.shaderSource(this._fragmentShader, fragmentString);\n\t\tthis._gl.compileShader(this._fragmentShader);\n\n\t\tif (!this._gl.getShaderParameter(this._fragmentShader, this._gl.COMPILE_STATUS))\n\t\t\tthrow new Error(this._gl.getShaderInfoLog(this._fragmentShader));\n\n\t\tthis._gl.attachShader(this._program, this._vertexShader);\n\t\tthis._gl.attachShader(this._program, this._fragmentShader);\n\t\tthis._gl.linkProgram(this._program);\n\n\t\tif (!this._gl.getProgramParameter(this._program, this._gl.LINK_STATUS))\n\t\t\tthrow new Error(this._gl.getProgramInfoLog(this._program));\n\n\t\tthis._uniforms[0].length = 0;\n\t\tthis._uniforms[1].length = 0;\n\t\tthis._uniforms[2].length = 0;\n\t\tthis._attribs.length = 0;\n\t}\n\n\tpublic getUniformLocation(programType:number, index:number):WebGLUniformLocation\n\t{\n\t\tif (this._uniforms[programType][index] != null)\n\t\t\treturn this._uniforms[programType][index];\n\n\t\treturn (this._uniforms[programType][index] = this._gl.getUniformLocation(this._program, ProgramWebGL._uniformLocationNameDictionary[programType] + index));\n\t}\n\n\n\tpublic getAttribLocation(index:number):number\n\t{\n\t\tif (this._attribs[index] != null)\n\t\t\treturn this._attribs[index];\n\n\t\treturn (this._attribs[index] = this._gl.getAttribLocation(this._program, \"va\" + index));\n\t}\n\n\n\tpublic dispose()\n\t{\n\t\tthis._gl.deleteProgram(this._program);\n\t}\n\n\tpublic focusProgram()\n\t{\n\t\tthis._gl.useProgram(this._program);\n\t}\n\n\tpublic get glProgram():WebGLProgram\n\t{\n\t\treturn this._program;\n\t}\n}\n\nexport default ProgramWebGL;",
    "class ResourceBaseFlash\n{\n\tpublic _pId:number;\n\n\tpublic get id():number\n\t{\n\t\treturn this._pId;\n\t}\n\n\tpublic dispose()\n\t{\n\n\t}\n}\n\nexport default ResourceBaseFlash;",
    "class SamplerState\n{\n\tpublic type:number;\n\tpublic wrap:number;\n\tpublic filter:number;\n\tpublic mipfilter:number;\n}\n\nexport default SamplerState;",
    "import ContextGLTextureFilter from \"../base/ContextGLTextureFilter\";\nimport ContextGLMipFilter from \"../base/ContextGLMipFilter\";\nimport ContextGLWrapMode from \"../base/ContextGLWrapMode\";\n/**\n * The same as SamplerState, but with strings\n * TODO: replace two similar classes with one\n */\nclass SoftwareSamplerState{\n    public type:string;\n    public wrap:string = ContextGLWrapMode.REPEAT;\n    public filter:string = ContextGLTextureFilter.LINEAR;\n    public mipfilter:string = ContextGLMipFilter.MIPLINEAR;\n}\nexport default SoftwareSamplerState;",
    "import EventDispatcher\t\t\t\tfrom \"awayjs-core/lib/events/EventDispatcher\";\nimport Rectangle\t\t\t\t\tfrom \"awayjs-core/lib/geom/Rectangle\";\nimport ImageBase\t\t\t\t\tfrom \"awayjs-core/lib/image/ImageBase\";\nimport AbstractionBase\t\t\t\tfrom \"awayjs-core/lib/library/AbstractionBase\";\nimport IAsset\t\t\t\t\t\tfrom \"awayjs-core/lib/library/IAsset\";\nimport IAssetClass\t\t\t\t\tfrom \"awayjs-core/lib/library/IAssetClass\";\nimport IAbstractionPool\t\t\t\tfrom \"awayjs-core/lib/library/IAbstractionPool\";\nimport CSS\t\t\t\t\t\t\tfrom \"awayjs-core/lib/utils/CSS\";\n\nimport ContextMode\t\t\t\t\tfrom \"../base/ContextMode\";\nimport ContextGLMipFilter\t\t\tfrom \"../base/ContextGLMipFilter\";\nimport ContextGLTextureFilter\t\tfrom \"../base/ContextGLTextureFilter\";\nimport ContextGLVertexBufferFormat\tfrom \"../base/ContextGLVertexBufferFormat\";\nimport ContextGLWrapMode\t\t\tfrom \"../base/ContextGLWrapMode\";\nimport ContextWebGL\t\t\t\t\tfrom \"../base/ContextWebGL\";\nimport ContextStage3D\t\t\t\tfrom \"../base/ContextStage3D\";\nimport ContextSoftware\t\t\t\tfrom \"../base/ContextSoftware\";\nimport IContextGL\t\t\t\t\tfrom \"../base/IContextGL\";\nimport IVertexBuffer\t\t\t\tfrom \"../base/IVertexBuffer\";\nimport StageEvent\t\t\t\t\tfrom \"../events/StageEvent\";\nimport GL_ImageBase\t\t\t\t\tfrom \"../image/GL_ImageBase\";\nimport GL_IAssetClass\t\t\t\tfrom \"../library/GL_IAssetClass\";\nimport ProgramData\t\t\t\t\tfrom \"../image/ProgramData\";\nimport ProgramDataPool\t\t\t\tfrom \"../image/ProgramDataPool\";\nimport StageManager\t\t\t\t\tfrom \"../managers/StageManager\";\n\n/**\n * Stage provides a proxy class to handle the creation and attachment of the Context\n * (and in turn the back buffer) it uses. Stage should never be created directly,\n * but requested through StageManager.\n *\n * @see away.managers.StageManager\n *\n */\nclass Stage extends EventDispatcher implements IAbstractionPool\n{\n\tprivate static _abstractionClassPool:Object = new Object();\n\n\tprivate _abstractionPool:Object = new Object();\n\n\tprivate _programData:Array<ProgramData> = new Array<ProgramData>();\n\tprivate _programDataPool:ProgramDataPool;\n\tprivate _context:IContextGL;\n\tprivate _container:HTMLElement;\n\tprivate _width:number;\n\tprivate _height:number;\n\tprivate _x:number = 0;\n\tprivate _y:number = 0;\n\n\t//private static _frameEventDriver:Shape = new Shape(); // TODO: add frame driver / request animation frame\n\n\tprivate _stageIndex:number = -1;\n\n\tprivate _usesSoftwareRendering:boolean;\n\tprivate _profile:string;\n\tprivate _stageManager:StageManager;\n\tprivate _antiAlias:number = 0;\n\tprivate _enableDepthAndStencil:boolean;\n\tprivate _contextRequested:boolean;\n\n\t//private var _activeVertexBuffers : Vector.<VertexBuffer> = new Vector.<VertexBuffer>(8, true);\n\t//private var _activeTextures : Vector.<TextureBase> = new Vector.<TextureBase>(8, true);\n\tprivate _renderTarget:ImageBase = null;\n\tprivate _renderSurfaceSelector:number = 0;\n\tprivate _scissorRect:Rectangle;\n\tprivate _color:number;\n\tprivate _backBufferDirty:boolean;\n\tprivate _viewPort:Rectangle;\n\tprivate _viewportUpdated:StageEvent;\n\tprivate _viewportDirty:boolean;\n\tprivate _bufferClear:boolean;\n\n\n\t//private _mouse3DManager:away.managers.Mouse3DManager;\n\t//private _touch3DManager:Touch3DManager; //TODO: imeplement dependency Touch3DManager\n\n\tprivate _initialised:boolean = false;\n\n\tprivate _bufferFormatDictionary:Array<Array<number>> = new Array<Array<number>>(5);\n\n\tconstructor(container:HTMLCanvasElement, stageIndex:number, stageManager:StageManager, forceSoftware:boolean = false, profile:string = \"baseline\")\n\t{\n\t\tsuper();\n\n\t\tthis._programDataPool = new ProgramDataPool(this);\n\n\t\tthis._container = container;\n\t\tif(this._container) {\n\t\t\tthis._container.addEventListener(\"webglcontextlost\", (event) => this.onContextLost(event));\n\t\t\tthis._container.addEventListener(\"webglcontextrestored\", (event) => this.onContextRestored(event));\n\t\t}\n\n\t\tthis._stageIndex = stageIndex;\n\n\t\tthis._stageManager = stageManager;\n\n\t\tthis._viewPort = new Rectangle();\n\n\t\tthis._enableDepthAndStencil = true;\n\n\t\tCSS.setElementX(this._container, 0);\n\t\tCSS.setElementY(this._container, 0);\n\n\t\tthis._bufferFormatDictionary[1] = new Array<number>(5);\n\t\tthis._bufferFormatDictionary[1][1] = ContextGLVertexBufferFormat.BYTE_1;\n\t\tthis._bufferFormatDictionary[1][2] = ContextGLVertexBufferFormat.BYTE_2;\n\t\tthis._bufferFormatDictionary[1][3] = ContextGLVertexBufferFormat.BYTE_3;\n\t\tthis._bufferFormatDictionary[1][4] = ContextGLVertexBufferFormat.BYTE_4;\n\t\tthis._bufferFormatDictionary[2] = new Array<number>(5);\n\t\tthis._bufferFormatDictionary[2][1] = ContextGLVertexBufferFormat.SHORT_1;\n\t\tthis._bufferFormatDictionary[2][2] = ContextGLVertexBufferFormat.SHORT_2;\n\t\tthis._bufferFormatDictionary[2][3] = ContextGLVertexBufferFormat.SHORT_3;\n\t\tthis._bufferFormatDictionary[2][4] = ContextGLVertexBufferFormat.SHORT_4;\n\t\tthis._bufferFormatDictionary[4] = new Array<number>(5);\n\t\tthis._bufferFormatDictionary[4][1] = ContextGLVertexBufferFormat.FLOAT_1;\n\t\tthis._bufferFormatDictionary[4][2] = ContextGLVertexBufferFormat.FLOAT_2;\n\t\tthis._bufferFormatDictionary[4][3] = ContextGLVertexBufferFormat.FLOAT_3;\n\t\tthis._bufferFormatDictionary[4][4] = ContextGLVertexBufferFormat.FLOAT_4;\n\t\tthis._bufferFormatDictionary[5] = new Array<number>(5);\n\t\tthis._bufferFormatDictionary[5][1] = ContextGLVertexBufferFormat.UNSIGNED_BYTE_1;\n\t\tthis._bufferFormatDictionary[5][2] = ContextGLVertexBufferFormat.UNSIGNED_BYTE_2;\n\t\tthis._bufferFormatDictionary[5][3] = ContextGLVertexBufferFormat.UNSIGNED_BYTE_3;\n\t\tthis._bufferFormatDictionary[5][4] = ContextGLVertexBufferFormat.UNSIGNED_BYTE_4;\n\t\tthis._bufferFormatDictionary[6] = new Array<number>(5);\n\t\tthis._bufferFormatDictionary[6][1] = ContextGLVertexBufferFormat.UNSIGNED_SHORT_1;\n\t\tthis._bufferFormatDictionary[6][2] = ContextGLVertexBufferFormat.UNSIGNED_SHORT_2;\n\t\tthis._bufferFormatDictionary[6][3] = ContextGLVertexBufferFormat.UNSIGNED_SHORT_3;\n\t\tthis._bufferFormatDictionary[6][4] = ContextGLVertexBufferFormat.UNSIGNED_SHORT_4;\n\n\n\n\t\tthis.visible = true;\n\t}\n\n\tpublic getProgramData(vertexString:string, fragmentString:string):ProgramData\n\t{\n\t\treturn this._programDataPool.getItem(vertexString, fragmentString);\n\t}\n\n\tpublic setRenderTarget(target:ImageBase, enableDepthAndStencil:boolean = false, surfaceSelector:number = 0)\n\t{\n\t\tif (this._renderTarget === target && surfaceSelector == this._renderSurfaceSelector && this._enableDepthAndStencil == enableDepthAndStencil)\n\t\t\treturn;\n\n\t\tthis._renderTarget = target;\n\t\tthis._renderSurfaceSelector = surfaceSelector;\n\t\tthis._enableDepthAndStencil = enableDepthAndStencil;\n\t\tif (target) {\n\t\t\tthis._context.setRenderToTexture((<GL_ImageBase> this.getAbstraction(target)).texture, enableDepthAndStencil, this._antiAlias, surfaceSelector);\n\t\t} else {\n\t\t\tthis._context.setRenderToBackBuffer();\n\t\t\tthis.configureBackBuffer(this._width, this._height, this._antiAlias, this._enableDepthAndStencil);\n\t\t}\n\t}\n\n\tpublic getAbstraction(asset:IAsset):AbstractionBase\n\t{\n\t\treturn (this._abstractionPool[asset.id] || (this._abstractionPool[asset.id] = new (<GL_IAssetClass> Stage._abstractionClassPool[asset.assetType])(asset, this)));\n\t}\n\n\t/**\n\t *\n\t * @param image\n\t */\n\tpublic clearAbstraction(asset:IAsset)\n\t{\n\t\tthis._abstractionPool[asset.id] = null;\n\t}\n\n\t/**\n\t *\n\t * @param imageObjectClass\n\t */\n\tpublic static registerAbstraction(gl_assetClass:GL_IAssetClass, assetClass:IAssetClass)\n\t{\n\t\tStage._abstractionClassPool[assetClass.assetType] = gl_assetClass;\n\t}\n\n\t/**\n\t * Requests a Context object to attach to the managed gl canvas.\n\t */\n\tpublic requestContext(forceSoftware:boolean = false, profile:string = \"baseline\", mode:string = \"auto\")\n\t{\n\t\t// If forcing software, we can be certain that the\n\t\t// returned Context will be running software mode.\n\t\t// If not, we can't be sure and should stick to the\n\t\t// old value (will likely be same if re-requesting.)\n\n\t\tif (this._usesSoftwareRendering != null)\n\t\t\tthis._usesSoftwareRendering = forceSoftware;\n\n\t\tthis._profile = profile;\n\n\t\ttry {\n\t\t\tif (mode == ContextMode.FLASH)\n\t\t\t\tnew ContextStage3D(<HTMLCanvasElement> this._container, (context:IContextGL) => this._callback(context));\n\t\t\telse if(mode == ContextMode.SOFTWARE)\n\t\t\t\tthis._context = new ContextSoftware(<HTMLCanvasElement> this._container);\n\t\t\telse\n\t\t\t\tthis._context = new ContextWebGL(<HTMLCanvasElement> this._container);\n\n\t\t} catch (e) {\n\t\t\ttry {\n\t\t\t\tif (mode == ContextMode.AUTO)\n\t\t\t\t\tnew ContextStage3D(<HTMLCanvasElement> this._container, (context:IContextGL) => this._callback(context));\n\t\t\t\telse\n\t\t\t\t\tthis.dispatchEvent(new StageEvent(StageEvent.STAGE_ERROR, this));\n\t\t\t} catch (e) {\n\t\t\t\tthis.dispatchEvent(new StageEvent(StageEvent.STAGE_ERROR, this));\n\t\t\t}\n\n\t\t}\n\n\t\tif (this._context)\n\t\t\tthis._callback(this._context);\n\t}\n\n\t/**\n\t * The width of the gl canvas\n\t */\n\tpublic get width()\n\t{\n\t\treturn this._width;\n\t}\n\n\tpublic set width(val:number)\n\t{\n\t\tif (this._width == val)\n\t\t\treturn;\n\n\t\tCSS.setElementWidth(this._container, val);\n\n\t\tthis._width = this._viewPort.width = val;\n\n\t\tthis._backBufferDirty = true;\n\n\t\tthis.notifyViewportUpdated();\n\t}\n\n\t/**\n\t * The height of the gl canvas\n\t */\n\tpublic get height()\n\t{\n\t\treturn this._height;\n\t}\n\n\tpublic set height(val:number)\n\t{\n\t\tif (this._height == val)\n\t\t\treturn;\n\n\t\tCSS.setElementHeight(this._container, val);\n\n\t\tthis._height = this._viewPort.height = val;\n\n\t\tthis._backBufferDirty = true;\n\n\t\tthis.notifyViewportUpdated();\n\t}\n\n\t/**\n\t * The x position of the gl canvas\n\t */\n\tpublic get x()\n\t{\n\t\treturn this._x;\n\t}\n\n\tpublic set x(val:number)\n\t{\n\t\tif (this._x == val)\n\t\t\treturn;\n\n\t\tCSS.setElementX(this._container, val);\n\n\t\tthis._x = this._viewPort.x = val;\n\n\t\tthis.notifyViewportUpdated();\n\t}\n\n\t/**\n\t * The y position of the gl canvas\n\t */\n\tpublic get y()\n\t{\n\t\treturn this._y;\n\t}\n\n\tpublic set y(val:number)\n\t{\n\t\tif (this._y == val)\n\t\t\treturn;\n\n\t\tCSS.setElementY(this._container, val);\n\n\t\tthis._y = this._viewPort.y = val;\n\n\t\tthis.notifyViewportUpdated();\n\t}\n\n\tpublic set visible(val:boolean)\n\t{\n\t\tCSS.setElementVisibility(this._container, val);\n\t}\n\n\tpublic get visible()\n\t{\n\t\treturn CSS.getElementVisibility(this._container);\n\t}\n\n\tpublic get container():HTMLElement\n\t{\n\t\treturn this._container;\n\t}\n\n\t/**\n\t * The Context object associated with the given stage object.\n\t */\n\tpublic get context():IContextGL\n\t{\n\t\treturn this._context;\n\t}\n\n\tprivate notifyViewportUpdated()\n\t{\n\t\tif (this._viewportDirty)\n\t\t\treturn;\n\n\t\tthis._viewportDirty = true;\n\n\t\tthis.dispatchEvent(new StageEvent(StageEvent.VIEWPORT_UPDATED, this));\n\t}\n\n\tpublic get profile():string\n\t{\n\t\treturn this._profile;\n\t}\n\n\t/**\n\t * Disposes the Stage object, freeing the Context attached to the Stage.\n\t */\n\tpublic dispose()\n\t{\n\t\tfor (var id in this._abstractionPool)\n\t\t\tthis._abstractionPool[id].clear();\n\n\t\tthis._abstractionPool = null;\n\n\t\tthis._stageManager.iRemoveStage(this);\n\t\tthis.freeContext();\n\t\tthis._stageManager = null;\n\t\tthis._stageIndex = -1;\n\t}\n\n\t/**\n\t * Configures the back buffer associated with the Stage object.\n\t * @param backBufferWidth The width of the backbuffer.\n\t * @param backBufferHeight The height of the backbuffer.\n\t * @param antiAlias The amount of anti-aliasing to use.\n\t * @param enableDepthAndStencil Indicates whether the back buffer contains a depth and stencil buffer.\n\t */\n\tpublic configureBackBuffer(backBufferWidth:number, backBufferHeight:number, antiAlias:number, enableDepthAndStencil:boolean)\n\t{\n\t\tthis.width = backBufferWidth;\n\t\tthis.height = backBufferHeight;\n\n\t\tthis._antiAlias = antiAlias;\n\t\tthis._enableDepthAndStencil = enableDepthAndStencil;\n\n\t\tif (this._context)\n\t\t\tthis._context.configureBackBuffer(backBufferWidth, backBufferHeight, antiAlias, enableDepthAndStencil);\n\t}\n\n\t/*\n\t * Indicates whether the depth and stencil buffer is used\n\t */\n\tpublic get enableDepthAndStencil():boolean\n\t{\n\t\treturn this._enableDepthAndStencil;\n\t}\n\n\tpublic set enableDepthAndStencil(enableDepthAndStencil:boolean)\n\t{\n\t\tthis._enableDepthAndStencil = enableDepthAndStencil;\n\t\tthis._backBufferDirty = true;\n\t}\n\n\tpublic get renderTarget():ImageBase\n\t{\n\t\treturn this._renderTarget;\n\t}\n\n\tpublic get renderSurfaceSelector():number\n\t{\n\t\treturn this._renderSurfaceSelector;\n\t}\n\n\t/*\n\t * Clear and reset the back buffer when using a shared context\n\t */\n\tpublic clear()\n\t{\n\t\tif (!this._context)\n\t\t\treturn;\n\n\t\tif (this._backBufferDirty) {\n\t\t\tthis.configureBackBuffer(this._width, this._height, this._antiAlias, this._enableDepthAndStencil);\n\t\t\tthis._backBufferDirty = false;\n\t\t}\n\n\t\tthis._context.clear(( this._color & 0xff000000 ) >>> 24, // <--------- Zero-fill right shift\n\t\t\t\t\t\t\t  ( this._color & 0xff0000 ) >>> 16, // <-------------|\n\t\t\t\t\t\t\t  ( this._color & 0xff00 ) >>> 8, // <----------------|\n\t\t\t\t\t\t\t\tthis._color & 0xff);\n\n\t\tthis._bufferClear = true;\n\t}\n\n\tpublic get scissorRect():Rectangle\n\t{\n\t\treturn this._scissorRect;\n\t}\n\n\tpublic set scissorRect(value:Rectangle)\n\t{\n\t\tthis._scissorRect = value;\n\n\t\tthis._context.setScissorRectangle(this._scissorRect);\n\t}\n\n\t/**\n\t * The index of the Stage which is managed by this instance of StageProxy.\n\t */\n\tpublic get stageIndex():number\n\t{\n\t\treturn this._stageIndex;\n\t}\n\n\t/**\n\t * Indicates whether the Stage managed by this proxy is running in software mode.\n\t * Remember to wait for the CONTEXT_CREATED event before checking this property,\n\t * as only then will it be guaranteed to be accurate.\n\t */\n\tpublic get usesSoftwareRendering():boolean\n\t{\n\t\treturn this._usesSoftwareRendering;\n\t}\n\n\t/**\n\t * The antiAliasing of the Stage.\n\t */\n\tpublic get antiAlias():number\n\t{\n\t\treturn this._antiAlias;\n\t}\n\n\tpublic set antiAlias(antiAlias:number)\n\t{\n\t\tthis._antiAlias = antiAlias;\n\t\tthis._backBufferDirty = true;\n\t}\n\n\t/**\n\t * A viewPort rectangle equivalent of the Stage size and position.\n\t */\n\tpublic get viewPort():Rectangle\n\t{\n\t\tthis._viewportDirty = false;\n\n\t\treturn this._viewPort;\n\t}\n\n\t/**\n\t * The background color of the Stage.\n\t */\n\tpublic get color():number\n\t{\n\t\treturn this._color;\n\t}\n\n\tpublic set color(color:number)\n\t{\n\t\tthis._color = color;\n\t}\n\n\t/**\n\t * The freshly cleared state of the backbuffer before any rendering\n\t */\n\tpublic get bufferClear():boolean\n\t{\n\t\treturn this._bufferClear;\n\t}\n\n\tpublic set bufferClear(newBufferClear:boolean)\n\t{\n\t\tthis._bufferClear = newBufferClear;\n\t}\n\n\n\tpublic registerProgram(programData:ProgramData)\n\t{\n\t\tvar i:number = 0;\n\t\twhile (this._programData[i] != null)\n\t\t\ti++;\n\n\t\tthis._programData[i] = programData;\n\t\tprogramData.id = i;\n\t}\n\n\tpublic unRegisterProgram(programData:ProgramData)\n\t{\n\t\tthis._programData[programData.id] = null;\n\t\tprogramData.id = -1;\n\t}\n\n\t/**\n\t * Frees the Context associated with this StageProxy.\n\t */\n\tprivate freeContext()\n\t{\n\t\tif (this._context) {\n\t\t\tthis._context.dispose();\n\n\t\t\tthis.dispatchEvent(new StageEvent(StageEvent.CONTEXT_DISPOSED, this));\n\t\t}\n\n\t\tthis._context = null;\n\n\t\tthis._initialised = false;\n\t}\n\n\tprivate onContextLost(event)\n\t{\n\n\t}\n\n\tprivate onContextRestored(event)\n\t{\n\n\t}\n\n\tpublic recoverFromDisposal():boolean\n\t{\n\t\tif (!this._context)\n\t\t\treturn false;\n\n\t\t//away.Debug.throwPIR( 'StageProxy' , 'recoverFromDisposal' , '' );\n\n\t\t/*\n\t\t if (this._iContext.driverInfo == \"Disposed\")\n\t\t {\n\t\t this._iContext = null;\n\t\t this.dispatchEvent(new StageEvent(StageEvent.CONTEXT_DISPOSED));\n\t\t return false;\n\n\t\t }\n\t\t */\n\t\treturn true;\n\n\t}\n\n\tprivate _callback(context:IContextGL)\n\t{\n\t\tthis._context = context;\n\n\t\tthis._container = this._context.container;\n\n\t\t// Only configure back buffer if width and height have been set,\n\t\t// which they may not have been if View.render() has yet to be\n\t\t// invoked for the first time.\n\t\tif (this._width && this._height)\n\t\t\tthis._context.configureBackBuffer(this._width, this._height, this._antiAlias, this._enableDepthAndStencil);\n\n\t\t// Dispatch the appropriate event depending on whether context was\n\t\t// created for the first time or recreated after a device loss.\n\t\tthis.dispatchEvent(new StageEvent(this._initialised? StageEvent.CONTEXT_RECREATED : StageEvent.CONTEXT_CREATED, this));\n\n\t\tthis._initialised = true;\n\t}\n\n\tpublic setVertexBuffer(index:number, buffer:IVertexBuffer, size:number, dimensions:number, offset:number, unsigned:boolean = false)\n\t{\n\t\tthis._context.setVertexBufferAt(index, buffer, offset, this._bufferFormatDictionary[unsigned? size + 4 : size][dimensions]);\n\t}\n\n\tpublic setSamplerState(index:number, repeat:boolean, smooth:boolean, mipmap:boolean)\n\t{\n\t\tvar wrap:string = repeat? ContextGLWrapMode.REPEAT :ContextGLWrapMode.CLAMP;\n\t\tvar filter:string = smooth? ContextGLTextureFilter.LINEAR : ContextGLTextureFilter.NEAREST;\n\t\tvar mipfilter:string = mipmap? ContextGLMipFilter.MIPLINEAR : ContextGLMipFilter.MIPNONE;\n\n\t\tthis._context.setSamplerStateAt(index, wrap, filter, mipfilter);\n\t}\n}\n\nexport default Stage;",
    "import AbstractMethodError\t\t\tfrom \"awayjs-core/lib/errors/AbstractMethodError\";\n\nclass TextureBaseWebGL\n{\n\tpublic textureType:string = \"\";\n\tpublic _gl:WebGLRenderingContext;\n\n\tconstructor(gl:WebGLRenderingContext)\n\t{\n\t\tthis._gl = gl;\n\t}\n\n\tpublic dispose():void\n\t{\n\t\tthrow \"Abstract method must be overridden.\";\n\t}\n\n\tpublic get glTexture():WebGLTexture\n\t{\n\t\tthrow new AbstractMethodError();\n\t}\n}\n\nexport default TextureBaseWebGL;",
    "import ByteArrayBase\t\t\t\tfrom \"awayjs-core/lib/utils/ByteArrayBase\";\n\nimport ContextStage3D\t\t\t\tfrom \"../base/ContextStage3D\";\nimport ITexture\t\t\t\t\t\tfrom \"../base/ITexture\";\nimport OpCodes\t\t\t\t\t\tfrom \"../base/OpCodes\";\nimport ResourceBaseFlash\t\t\tfrom \"../base/ResourceBaseFlash\";\n\nclass TextureFlash extends ResourceBaseFlash implements ITexture\n{\n\tprivate _context:ContextStage3D;\n\tprivate _width:number;\n\tprivate _height:number;\n\n\tpublic get width():number\n\t{\n\t\treturn this._width;\n\t}\n\n\tpublic get height():number\n\t{\n\t\treturn this._height;\n\t}\n\n\tconstructor(context:ContextStage3D, width:number, height:number, format:string, forRTT:boolean, streaming:boolean = false)\n\t{\n\t\tsuper();\n\n\t\tthis._context = context;\n\t\tthis._width = width;\n\t\tthis._height = height;\n\n\t\tthis._context.addStream(String.fromCharCode(OpCodes.initTexture, (forRTT? OpCodes.trueValue : OpCodes.falseValue)) + width + \",\" + height + \",\" + streaming + \",\" + format + \"$\");\n\t\tthis._pId = this._context.execute();\n\t\tthis._context._iAddResource(this);\n\t}\n\n\tpublic dispose()\n\t{\n\t\tthis._context.addStream(String.fromCharCode(OpCodes.disposeTexture) + this._pId.toString() + \",\");\n\t\tthis._context.execute();\n\t\tthis._context._iRemoveResource(this);\n\n\t\tthis._context = null;\n\t}\n\n\tpublic uploadFromData(image:HTMLImageElement, miplevel?:number);\n\tpublic uploadFromData(imageData:ImageData, miplevel?:number);\n\tpublic uploadFromData(data:any, miplevel:number = 0)\n\t{\n\t\tif (data instanceof HTMLImageElement) {\n\t\t\tvar can = document.createElement(\"canvas\");\n\t\t\tvar w = data.width;\n\t\t\tvar h = data.height;\n\t\t\tcan.width = w;\n\t\t\tcan.height = h;\n\t\t\tvar ctx = can.getContext(\"2d\");\n\t\t\tctx.drawImage(data, 0, 0);\n\t\t\tdata = ctx.getImageData(0, 0, w, h).data;\n\t\t}\n\n\t\tvar pos = 0;\n\t\tvar bytes = ByteArrayBase.internalGetBase64String(data.length, function () {\n\t\t\treturn data[pos++];\n\t\t}, null);\n\n\t\tthis._context.addStream(String.fromCharCode(OpCodes.uploadBytesTexture) + this._pId + \",\" + miplevel + \",\" + (this._width >> miplevel) + \",\" + (this._height >> miplevel) + \",\" + bytes + \"%\");\n\t\tthis._context.execute();\n\t}\n}\n\nexport default TextureFlash;",
    "import ByteArray                    from \"awayjs-core/lib/utils/ByteArray\";\n\nimport ITexture                        from \"../base/ITexture\";\nimport TextureBaseWebGL                from \"../base/TextureBaseWebGL\";\n\nclass TextureSoftware implements ITexture {\n    public textureType:string = \"texture2d\";\n\n    private _width:number;\n    private _height:number;\n    private _mipLevels:number[][] = [];\n\n    constructor(width:number, height:number) {\n        this._width = width;\n        this._height = height;\n    }\n\n    public dispose() {\n        this._mipLevels = null;\n    }\n\n    public get width():number {\n        return this._width;\n    }\n\n    public get height():number {\n        return this._height;\n    }\n\n    public uploadFromData(image:HTMLImageElement, miplevel?:number);\n    public uploadFromData(imageData:ImageData, miplevel?:number);\n    public uploadFromData(data:any, miplevel:number = 0) {\n        console.log(\"uploadFromData: \" + data + \" miplevel: \" + miplevel);\n        this._mipLevels[miplevel] = data.data;\n    }\n\n    public getData(miplevel:number):number[] {\n        return this._mipLevels[miplevel];\n    }\n\n    public getMipLevelsCount():number{\n        return this._mipLevels.length;\n    }\n}\n\nexport default TextureSoftware;",
    "import ByteArray\t\t\t\t\tfrom \"awayjs-core/lib/utils/ByteArray\";\n\nimport ITexture\t\t\t\t\t\tfrom \"../base/ITexture\";\nimport TextureBaseWebGL\t\t\t\tfrom \"../base/TextureBaseWebGL\";\n\nclass TextureWebGL extends TextureBaseWebGL implements ITexture\n{\n\n\tpublic textureType:string = \"texture2d\";\n\n\tprivate _width:number;\n\tprivate _height:number;\n\n\tprivate _frameBuffer:WebGLFramebuffer;\n\n\tprivate _glTexture:WebGLTexture;\n\n\tconstructor(gl:WebGLRenderingContext, width:number, height:number)\n\t{\n\t\tsuper(gl);\n\t\tthis._width = width;\n\t\tthis._height = height;\n\n\t\tthis._glTexture = this._gl.createTexture();\n\t}\n\n\tpublic dispose()\n\t{\n\t\tthis._gl.deleteTexture(this._glTexture);\n\t}\n\n\tpublic get width():number\n\t{\n\t\treturn this._width;\n\t}\n\n\tpublic get height():number\n\t{\n\t\treturn this._height;\n\t}\n\n\tpublic get frameBuffer():WebGLFramebuffer\n\t{\n\t\tif (!this._frameBuffer) {\n\t\t\tthis._frameBuffer = this._gl.createFramebuffer();\n\t\t\tthis._gl.bindFramebuffer(this._gl.FRAMEBUFFER, this._frameBuffer);\n\t\t\tthis._gl.bindTexture(this._gl.TEXTURE_2D, this._glTexture);\n\t\t\tthis._gl.texImage2D(this._gl.TEXTURE_2D, 0, this._gl.RGBA, this._width, this._height, 0, this._gl.RGBA, this._gl.UNSIGNED_BYTE, null);\n\n\t\t\tvar renderBuffer:WebGLRenderbuffer = this._gl.createRenderbuffer();\n\t\t\tthis._gl.bindRenderbuffer(this._gl.RENDERBUFFER, renderBuffer);\n\t\t\tthis._gl.renderbufferStorage(this._gl.RENDERBUFFER, this._gl.DEPTH_STENCIL, this._width, this._height);\n\n\t\t\tthis._gl.framebufferTexture2D(this._gl.FRAMEBUFFER, this._gl.COLOR_ATTACHMENT0, this._gl.TEXTURE_2D, this._glTexture, 0);\n\t\t\tthis._gl.framebufferRenderbuffer(this._gl.FRAMEBUFFER, this._gl.DEPTH_STENCIL_ATTACHMENT, this._gl.RENDERBUFFER, renderBuffer);\n\n\t\t\tthis._gl.bindTexture(this._gl.TEXTURE_2D, null);\n\t\t\tthis._gl.bindRenderbuffer(this._gl.RENDERBUFFER, null);\n\t\t\tthis._gl.bindFramebuffer(this._gl.FRAMEBUFFER, null);\n\t\t}\n\n\t\treturn this._frameBuffer;\n\t}\n\n\tpublic uploadFromData(image:HTMLImageElement, miplevel?:number);\n\tpublic uploadFromData(imageData:ImageData, miplevel?:number);\n\tpublic uploadFromData(data:any, miplevel:number = 0)\n\t{\n\t\tthis._gl.bindTexture(this._gl.TEXTURE_2D, this._glTexture);\n\t\tthis._gl.texImage2D(this._gl.TEXTURE_2D, miplevel, this._gl.RGBA, this._gl.RGBA, this._gl.UNSIGNED_BYTE, data);\n\t\tthis._gl.bindTexture(this._gl.TEXTURE_2D, null);\n\t}\n\n\tpublic uploadCompressedTextureFromByteArray(data:ByteArray, byteArrayOffset:number /*uint*/, async:boolean = false)\n\t{\n\t\tvar ext:Object = this._gl.getExtension(\"WEBKIT_WEBGL_compressed_texture_s3tc\");\n\t\t//this._gl.compressedTexImage2D(this._gl.TEXTURE_2D, 0, this)\n\t}\n\n\tpublic get glTexture():WebGLTexture\n\t{\n\t\treturn this._glTexture;\n\t}\n\n\tpublic generateMipmaps()\n\t{\n\t\t//TODO: implement generating mipmaps\n\t\t//this._gl.bindTexture( this._gl.TEXTURE_2D, this._glTexture );\n\t\t//this._gl.generateMipmap(this._gl.TEXTURE_2D);\n\t\t//this._gl.bindTexture( this._gl.TEXTURE_2D, null );\n\t}\n}\n\nexport default TextureWebGL;",
    "import ContextStage3D\t\t\t\tfrom \"../base/ContextStage3D\";\nimport IVertexBuffer\t\t\t\tfrom \"../base/IVertexBuffer\";\nimport OpCodes\t\t\t\t\t\tfrom \"../base/OpCodes\";\nimport ResourceBaseFlash\t\t\tfrom \"../base/ResourceBaseFlash\";\n\nclass VertexBufferFlash extends ResourceBaseFlash implements IVertexBuffer\n{\n\tprivate _context:ContextStage3D;\n\tprivate _numVertices:number;\n\tprivate _dataPerVertex:number;\n\n\tconstructor(context:ContextStage3D, numVertices:number, dataPerVertex:number)\n\t{\n\t\tsuper();\n\n\t\tthis._context = context;\n\t\tthis._numVertices = numVertices;\n\t\tthis._dataPerVertex = dataPerVertex;\n\t\tthis._context.addStream(String.fromCharCode(OpCodes.initVertexBuffer, dataPerVertex + OpCodes.intMask) + numVertices.toString() + \",\");\n\t\tthis._pId = this._context.execute();\n\t\tthis._context._iAddResource(this);\n\t}\n\n\tpublic uploadFromArray(data:number[], startVertex:number, numVertices:number)\n\t{\n\t\tthis._context.addStream(String.fromCharCode(OpCodes.uploadArrayVertexBuffer, this._pId + OpCodes.intMask) + data.join() + \"#\" + [startVertex, numVertices].join() + \",\");\n\t\tthis._context.execute();\n\t}\n\n\tpublic uploadFromByteArray(data:ArrayBuffer, startVertex:number, numVertices:number)\n\t{\n\n\t}\n\n\tpublic get numVertices():number\n\t{\n\t\treturn this._numVertices;\n\t}\n\n\tpublic get dataPerVertex():number\n\t{\n\t\treturn this._dataPerVertex;\n\t}\n\n\tpublic dispose()\n\t{\n\t\tthis._context.addStream(String.fromCharCode(OpCodes.disposeVertexBuffer, this._pId + OpCodes.intMask));\n\t\tthis._context.execute();\n\t\tthis._context._iRemoveResource(this);\n\n\t\tthis._context = null;\n\t}\n}\n\nexport default VertexBufferFlash;",
    "import IVertexBuffer                from \"../base/IVertexBuffer\";\n\nclass VertexBufferSoftware implements IVertexBuffer {\n    private _numVertices:number;\n    private _dataPerVertex:number;\n    private _floatData:Float32Array;\n    private _uintData:Uint8Array;\n    //private _dataOffset:number;\n\n    constructor(numVertices:number, dataPerVertex:number) {\n        this._numVertices = numVertices;\n        this._dataPerVertex = dataPerVertex;\n    }\n\n    public uploadFromArray(vertices:number[], startVertex:number, numVertices:number) {\n        console.log(\"VertexBufferSoftware.uploadFromArray\")\n        //this._dataOffset = startVertex * this._dataPerVertex;\n        this._floatData = new Float32Array(vertices);\n    }\n\n    public uploadFromByteArray(data:ArrayBuffer, startVertex:number, numVertices:number) {\n        console.log(\"VertexBufferSoftware.uploadFromByteArray\")\n        //this._dataOffset = startVertex * this._dataPerVertex;\n        this._floatData = new Float32Array(data, startVertex * this._dataPerVertex, numVertices * this._dataPerVertex / 4);\n        this._uintData = new Uint8Array(data);\n    }\n\n    public get numVertices():number {\n        return this._numVertices;\n    }\n\n    public get dataPerVertex():number {\n        return this._dataPerVertex;\n    }\n\n    public get attributesPerVertex():number {\n        return this._dataPerVertex / 4;\n    }\n\n    public dispose() {\n        this._floatData = null;\n    }\n\n    public get data():Float32Array {\n        return this._floatData;\n    }\n\n    public get uintData():Uint8Array {\n        return this._uintData;\n    }\n}\n\nexport default VertexBufferSoftware;",
    "import IVertexBuffer\t\t\t\tfrom \"../base/IVertexBuffer\";\n\nclass VertexBufferWebGL implements IVertexBuffer\n{\n\n\tprivate _gl:WebGLRenderingContext;\n\tprivate _numVertices:number;\n\tprivate _dataPerVertex:number;\n\tprivate _buffer:WebGLBuffer;\n\n\tconstructor(gl:WebGLRenderingContext, numVertices:number, dataPerVertex:number)\n\t{\n\t\tthis._gl = gl;\n\t\tthis._buffer = this._gl.createBuffer();\n\t\tthis._numVertices = numVertices;\n\t\tthis._dataPerVertex = dataPerVertex;\n\t}\n\n\tpublic uploadFromArray(vertices:number[], startVertex:number, numVertices:number)\n\t{\n\t\tthis._gl.bindBuffer(this._gl.ARRAY_BUFFER, this._buffer);\n\n\t\tif (startVertex)\n\t\t\tthis._gl.bufferSubData(this._gl.ARRAY_BUFFER, startVertex*this._dataPerVertex, new Float32Array(vertices));\n\t\telse\n\t\t\tthis._gl.bufferData(this._gl.ARRAY_BUFFER, new Float32Array(vertices), this._gl.STATIC_DRAW);\n\t}\n\n\n\tpublic uploadFromByteArray(data:ArrayBuffer, startVertex:number, numVertices:number)\n\t{\n\t\tthis._gl.bindBuffer(this._gl.ARRAY_BUFFER, this._buffer);\n\n\t\tif (startVertex)\n\t\t\tthis._gl.bufferSubData(this._gl.ARRAY_BUFFER, startVertex*this._dataPerVertex, data);\n\t\telse\n\t\t\tthis._gl.bufferData(this._gl.ARRAY_BUFFER, data, this._gl.STATIC_DRAW);\n\t}\n\n\tpublic get numVertices():number\n\t{\n\t\treturn this._numVertices;\n\t}\n\n\tpublic get dataPerVertex():number\n\t{\n\t\treturn this._dataPerVertex;\n\t}\n\n\tpublic get glBuffer():WebGLBuffer\n\t{\n\t\treturn this._buffer;\n\t}\n\n\tpublic dispose()\n\t{\n\t\tthis._gl.deleteBuffer(this._buffer);\n\t}\n}\n\nexport default VertexBufferWebGL;",
    "export {default as ContextGLBlendFactor}\t\t\tfrom \"./base/ContextGLBlendFactor\";\nexport {default as ContextGLClearMask}\t\t\t\tfrom \"./base/ContextGLClearMask\";\nexport {default as ContextGLCompareMode}\t\t\tfrom \"./base/ContextGLCompareMode\";\nexport {default as ContextGLDrawMode}\t\t\t\tfrom \"./base/ContextGLDrawMode\";\nexport {default as ContextGLMipFilter}\t\t\t\tfrom \"./base/ContextGLMipFilter\";\nexport {default as ContextGLProfile}\t\t\t\tfrom \"./base/ContextGLProfile\";\nexport {default as ContextGLProgramType}\t\t\tfrom \"./base/ContextGLProgramType\";\nexport {default as ContextGLStencilAction}\t\t\tfrom \"./base/ContextGLStencilAction\";\nexport {default as ContextGLTextureFilter}\t\t\tfrom \"./base/ContextGLTextureFilter\";\nexport {default as ContextGLTextureFormat}\t\t\tfrom \"./base/ContextGLTextureFormat\";\nexport {default as ContextGLTriangleFace}\t\t\tfrom \"./base/ContextGLTriangleFace\";\nexport {default as ContextGLVertexBufferFormat}\t\tfrom \"./base/ContextGLVertexBufferFormat\";\nexport {default as ContextGLWrapMode}\t\t\t\tfrom \"./base/ContextGLWrapMode\";\nexport {default as ContextMode}\t\t\t\t\t\tfrom \"./base/ContextMode\";\nexport {default as ContextSoftware}\t\t\t\t\tfrom \"./base/ContextSoftware\";\nexport {default as ContextStage3D}\t\t\t\t\tfrom \"./base/ContextStage3D\";\nexport {default as ContextWebGL}\t\t\t\t\tfrom \"./base/ContextWebGL\";\nexport {default as CubeTextureFlash}\t\t\t\tfrom \"./base/CubeTextureFlash\";\nexport {default as CubeTextureWebGL}\t\t\t\tfrom \"./base/CubeTextureWebGL\";\nexport {default as IContextGL}\t\t\t\t\t\tfrom \"./base/IContextGL\";\nexport {default as ICubeTexture}\t\t\t\t\tfrom \"./base/ICubeTexture\";\nexport {default as IIndexBuffer}\t\t\t\t\tfrom \"./base/IIndexBuffer\";\nexport {default as IndexBufferFlash}\t\t\t\tfrom \"./base/IndexBufferFlash\";\nexport {default as IndexBufferSoftware}\t\t\t\tfrom \"./base/IndexBufferSoftware\";\nexport {default as IndexBufferWebGL}\t\t\t\tfrom \"./base/IndexBufferWebGL\";\nexport {default as IProgram}\t\t\t\t\t\tfrom \"./base/IProgram\";\nexport {default as ITexture}\t\t\t\t\t\tfrom \"./base/ITexture\";\nexport {default as ITextureBase}\t\t\t\t\tfrom \"./base/ITextureBase\";\nexport {default as IVertexBuffer}\t\t\t\t\tfrom \"./base/IVertexBuffer\";\nexport {default as OpCodes}\t\t\t\t\t\t\tfrom \"./base/OpCodes\";\nexport {default as ProgramFlash}\t\t\t\t\tfrom \"./base/ProgramFlash\";\nexport {default as ProgramSoftware}\t\t\t\t\tfrom \"./base/ProgramSoftware\";\nexport {default as ProgramVOSoftware}\t\t\t\tfrom \"./base/ProgramVOSoftware\";\nexport {default as ProgramWebGL}\t\t\t\t\tfrom \"./base/ProgramWebGL\";\nexport {default as ResourceBaseFlash}\t\t\t\tfrom \"./base/ResourceBaseFlash\";\nexport {default as SamplerState}\t\t\t\t\tfrom \"./base/SamplerState\";\nexport {default as SoftwareSamplerState}\t\t\tfrom \"./base/SoftwareSamplerState\";\nexport {default as Stage}\t\t\t\t\t\t\tfrom \"./base/Stage\";\nexport {default as TextureBaseWebGL}\t\t\t\tfrom \"./base/TextureBaseWebGL\";\nexport {default as TextureFlash}\t\t\t\t\tfrom \"./base/TextureFlash\";\nexport {default as TextureSoftware}\t\t\t\t\tfrom \"./base/TextureSoftware\";\nexport {default as TextureWebGL}\t\t\t\t\tfrom \"./base/TextureWebGL\";\nexport {default as VertexBufferFlash}\t\t\t\tfrom \"./base/VertexBufferFlash\";\nexport {default as VertexBufferSoftware}\t\t\tfrom \"./base/VertexBufferSoftware\";\nexport {default as VertexBufferWebGL}\t\t\t\tfrom \"./base/VertexBufferWebGL\";",
    "import EventBase\t\t\t\tfrom \"awayjs-core/lib/events/EventBase\";\n\nimport Stage\t\t\t\t\tfrom \"../base/Stage\";\n\nclass StageEvent extends EventBase\n{\n\t/**\n\t *\n\t */\n\tpublic static STAGE_ERROR:string = \"stageError\";\n\n\t/**\n\t *\n\t */\n\tpublic static CONTEXT_CREATED:string = \"contextCreated\";\n\n\t/**\n\t *\n\t */\n\tpublic static CONTEXT_DISPOSED:string = \"contextDisposed\";\n\n\t/**\n\t *\n\t */\n\tpublic static CONTEXT_RECREATED:string = \"contextRecreated\";\n\n\t/**\n\t *\n\t */\n\tpublic static VIEWPORT_UPDATED:string = \"viewportUpdated\";\n\n\tprivate _stage:Stage;\n\n\t/**\n\t *\n\t */\n\tpublic get stage():Stage\n\t{\n\t\treturn this._stage;\n\t}\n\n\tconstructor(type:string, stage:Stage)\n\t{\n\t\tsuper(type);\n\n\t\tthis._stage = stage;\n\t}\n\n\t/**\n\t *\n\t */\n\tpublic clone():StageEvent\n\t{\n\t\treturn new StageEvent(this.type, this._stage);\n\t}\n}\n\nexport default StageEvent;",
    "export {default as StageEvent}\t\t\t\t\t\tfrom \"./events/StageEvent\";",
    "import BitmapImage2D\t\t\t\tfrom \"awayjs-core/lib/image/BitmapImage2D\";\nimport AssetEvent\t\t\t\t\tfrom \"awayjs-core/lib/events/AssetEvent\";\nimport MipmapGenerator\t\t\t\tfrom \"awayjs-core/lib/utils/MipmapGenerator\";\n\nimport GL_Image2D\t\t\t\t\tfrom \"../image/GL_Image2D\";\nimport ITexture\t\t\t\t\t\tfrom \"../base/ITexture\";\n\n/**\n *\n * @class away.pool.ImageObjectBase\n */\nclass GL_BitmapImage2D extends GL_Image2D\n{\n\tprivate _mipmapData:Array<BitmapImage2D>;\n\n\tpublic activate(index:number, mipmap:boolean)\n\t{\n\t\tif (!this._texture) {\n\t\t\tthis._createTexture();\n\t\t\tthis._invalid = true;\n\t\t}\n\n\t\tif (!this._mipmap && mipmap) {\n\t\t\tthis._mipmap = true;\n\t\t\tthis._invalid = true;\n\t\t}\n\n\t\tif (this._invalid) {\n\t\t\tthis._invalid = false;\n\t\t\tif (mipmap) {\n\t\t\t\tvar mipmapData:Array<BitmapImage2D> = this._mipmapData || (this._mipmapData = new Array<BitmapImage2D>());\n\n\t\t\t\tMipmapGenerator._generateMipMaps((<BitmapImage2D> this._asset).getCanvas(), mipmapData, true);\n\t\t\t\tvar len:number = mipmapData.length;\n\t\t\t\tfor (var i:number = 0; i < len; i++)\n\t\t\t\t\t(<ITexture> this._texture).uploadFromData(mipmapData[i].getImageData(), i);\n\t\t\t} else {\n\t\t\t\t(<ITexture> this._texture).uploadFromData((<BitmapImage2D> this._asset).getImageData(), 0);\n\t\t\t}\n\t\t}\n\n\t\tsuper.activate(index, mipmap);\n\t}\n\n\t/**\n\t *\n\t */\n\tpublic onClear(event:AssetEvent)\n\t{\n\t\tsuper.onClear(event);\n\n\t\tif (this._mipmapData) {\n\t\t\tvar len:number = this._mipmapData.length;\n\t\t\tfor (var i:number = 0; i < len; i++)\n\t\t\t\tMipmapGenerator._freeMipMapHolder(this._mipmapData[i]);\n\t\t}\n\t}\n}\n\nexport default GL_BitmapImage2D;",
    "import IAssetClass\t\t\t\t\tfrom \"awayjs-core/lib/library/IAssetClass\";\nimport BitmapImageCube\t\t\t\tfrom \"awayjs-core/lib/image/BitmapImageCube\";\nimport BitmapImage2D\t\t\t\tfrom \"awayjs-core/lib/image/BitmapImage2D\";\nimport AssetEvent\t\t\t\t\tfrom \"awayjs-core/lib/events/AssetEvent\";\nimport MipmapGenerator\t\t\t\tfrom \"awayjs-core/lib/utils/MipmapGenerator\";\n\nimport GL_ImageCube\t\t\t\t\tfrom \"../image/GL_ImageCube\";\nimport ICubeTexture\t\t\t\t\tfrom \"../base/ICubeTexture\";\n\n/**\n *\n * @class away.pool.ImageObjectBase\n */\nclass GL_BitmapImageCube extends GL_ImageCube\n{\n\tpublic _mipmapDataArray:Array<Array<BitmapImage2D>> = new Array<Array<BitmapImage2D>>(6);\n\n\tpublic activate(index:number, mipmap:boolean)\n\t{\n\t\tif (!this._texture) {\n\t\t\tthis._createTexture();\n\t\t\tthis._invalid = true;\n\t\t}\n\n\t\tif (!this._mipmap && mipmap) {\n\t\t\tthis._mipmap = true;\n\t\t\tthis._invalid = true;\n\t\t}\n\n\t\tif (this._invalid) {\n\t\t\tthis._invalid = false;\n\t\t\tfor (var i:number = 0; i < 6; ++i) {\n\t\t\t\tif (mipmap) {\n\t\t\t\t\tvar mipmapData:Array<BitmapImage2D> = this._mipmapDataArray[i] || (this._mipmapDataArray[i] = new Array<BitmapImage2D>());\n\n\t\t\t\t\tMipmapGenerator._generateMipMaps((<BitmapImageCube> this._asset).getCanvas(i), mipmapData, true);\n\t\t\t\t\tvar len:number = mipmapData.length;\n\t\t\t\t\tfor (var j:number = 0; j < len; j++)\n\t\t\t\t\t\t(<ICubeTexture> this._texture).uploadFromData(mipmapData[j].getImageData(), i, j);\n\t\t\t\t} else {\n\t\t\t\t\t(<ICubeTexture> this._texture).uploadFromData((<BitmapImageCube> this._asset).getImageData(i), i, 0);\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t\tsuper.activate(index, mipmap);\n\t}\n\n\t/**\n\t *\n\t */\n\tpublic onClear(event:AssetEvent)\n\t{\n\t\tsuper.onClear(event);\n\n\t\tfor (var i:number = 0; i < 6; i++) {\n\t\t\tvar mipmapData:Array<BitmapImage2D> = this._mipmapDataArray[i];\n\n\t\t\tif (mipmapData) {\n\t\t\t\tvar len:number = mipmapData.length;\n\n\t\t\t\tfor (var j:number = 0; j < len; i++)\n\t\t\t\t\tMipmapGenerator._freeMipMapHolder(mipmapData[j]);\n\t\t\t}\n\t\t}\n\t}\n}\n\nexport default GL_BitmapImageCube;",
    "import Image2D\t\t\t\t\t\tfrom \"awayjs-core/lib/image/Image2D\";\n\nimport ContextGLTextureFormat\t\tfrom \"../base/ContextGLTextureFormat\";\nimport GL_ImageBase\t\t\t\t\tfrom \"../image/GL_ImageBase\";\n\n/**\n *\n * @class away.pool.GL_ImageBase\n */\nclass GL_Image2D extends GL_ImageBase\n{\n\t/**\n\t *\n\t * @param context\n\t * @returns {ITexture}\n\t */\n\tpublic _createTexture()\n\t{\n\t\tthis._texture = this._stage.context.createTexture((<Image2D> this._asset).width, (<Image2D> this._asset).height, ContextGLTextureFormat.BGRA, true);\n\t}\n}\n\nexport default GL_Image2D;",
    "import AbstractMethodError\t\t\tfrom \"awayjs-core/lib/errors/AbstractMethodError\";\nimport AssetEvent\t\t\t\t\tfrom \"awayjs-core/lib/events/AssetEvent\";\nimport IAsset\t\t\t\t\t\tfrom \"awayjs-core/lib/library/IAsset\";\nimport AbstractionBase\t\t\t\tfrom \"awayjs-core/lib/library/AbstractionBase\";\n\nimport Stage\t\t\t\t\t\tfrom \"../base/Stage\";\nimport ITextureBase\t\t\t\t\tfrom \"../base/ITextureBase\";\n\n/**\n *\n * @class away.pool.GL_ImageBase\n */\nclass GL_ImageBase extends AbstractionBase\n{\n\tpublic usages:number = 0;\n\n\tpublic _texture:ITextureBase;\n\n\tpublic _mipmap:boolean;\n\n\tpublic _stage:Stage;\n\n\tpublic get texture():ITextureBase\n\t{\n\t\tif (!this._texture) {\n\t\t\tthis._createTexture();\n\t\t\tthis._invalid = true;\n\t\t}\n\n\t\treturn this._texture;\n\t}\n\n\tconstructor(asset:IAsset, stage:Stage)\n\t{\n\t\tsuper(asset, stage);\n\n\t\tthis._stage = stage;\n\t}\n\n\t/**\n\t *\n\t */\n\tpublic onClear(event:AssetEvent)\n\t{\n\t\tsuper.onClear(event);\n\n\t\tif (this._texture) {\n\t\t\tthis._texture.dispose();\n\t\t\tthis._texture = null;\n\t\t}\n\t}\n\n\tpublic activate(index:number, mipmap:boolean)\n\t{\n\t\tthis._stage.context.setTextureAt(index, this._texture);\n\t}\n\n\tpublic _createTexture()\n\t{\n\t\tthrow new AbstractMethodError();\n\t}\n}\n\nexport default GL_ImageBase;",
    "import ImageCube\t\t\t\t\tfrom \"awayjs-core/lib/image/ImageCube\";\n\nimport ContextGLTextureFormat\t\tfrom \"../base/ContextGLTextureFormat\";\nimport GL_ImageBase\t\t\t\t\tfrom \"../image/GL_ImageBase\";\n\n/**\n *\n * @class away.pool.GL_ImageCubeBase\n */\nclass GL_ImageCube extends GL_ImageBase\n{\n\t/**\n\t *\n\t * @param context\n\t * @returns {ITexture}\n\t */\n\tpublic _createTexture()\n\t{\n\t\tthis._texture = this._stage.context.createCubeTexture((<ImageCube> this._asset).size, ContextGLTextureFormat.BGRA, false);\n\t}\n}\n\nexport default GL_ImageCube;",
    "import GL_Image2D\t\t\t\t\tfrom \"../image/GL_Image2D\";\n\n/**\n *\n * @class away.pool.ImageObjectBase\n */\nclass GL_RenderImage2D extends GL_Image2D\n{\n\n\tpublic activate(index:number, mipmap:boolean)\n\t{\n\t\tsuper.activate(index, false);\n\n\t\t//TODO: allow automatic mipmap generation\n\t}\n}\n\nexport default GL_RenderImage2D;",
    "import GL_ImageCube\t\t\t\t\tfrom \"../image/GL_ImageCube\";\n\n/**\n *\n * @class away.pool.ImageObjectBase\n */\nclass GL_RenderImageCube extends GL_ImageCube\n{\n\tpublic activate(index:number, mipmap:boolean)\n\t{\n\t\tsuper.activate(index, false);\n\n\t\t//TODO: allow automatic mipmap generation\n\n\t}\n}\n\nexport default GL_RenderImageCube;",
    "import Sampler2D\t\t\t\t\tfrom \"awayjs-core/lib/image/Sampler2D\";\n\nimport Stage\t\t\t\t\t\tfrom \"../base/Stage\";\nimport GL_SamplerBase\t\t\t\tfrom \"../image/GL_SamplerBase\";\n\n/**\n *\n * @class away.pool.GL_SamplerBase\n */\nclass GL_Sampler2D extends GL_SamplerBase\n{\n\tpublic _sampler:Sampler2D;\n\n\tconstructor(sampler:Sampler2D, stage:Stage)\n\t{\n\t\tsuper(sampler, stage);\n\n\t\tthis._sampler = sampler;\n\t}\n\n\tpublic activate(index:number)\n\t{\n\t\tthis._stage.setSamplerState(index, this._sampler.repeat, this._sampler.smooth, this._sampler.mipmap);\n\t}\n}\n\nexport default GL_Sampler2D;",
    "import AbstractMethodError\t\t\tfrom \"awayjs-core/lib/errors/AbstractMethodError\";\nimport IAsset\t\t\t\t\t\tfrom \"awayjs-core/lib/library/IAsset\";\nimport AbstractionBase\t\t\t\tfrom \"awayjs-core/lib/library/AbstractionBase\";\n\nimport Stage\t\t\t\t\t\tfrom \"../base/Stage\";\n\n/**\n *\n * @class away.pool.GL_SamplerBase\n */\nclass GL_SamplerBase extends AbstractionBase\n{\n\tpublic _stage:Stage;\n\n\tconstructor(asset:IAsset, stage:Stage)\n\t{\n\t\tsuper(asset, stage);\n\n\t\tthis._stage = stage;\n\t}\n\n\tpublic activate(index:number)\n\t{\n\t\tthrow new AbstractMethodError();\n\t}\n}\n\nexport default GL_SamplerBase;",
    "import SamplerCube\t\t\t\t\tfrom \"awayjs-core/lib/image/SamplerCube\";\n\nimport Stage\t\t\t\t\t\tfrom \"../base/Stage\";\nimport GL_SamplerBase\t\t\t\tfrom \"../image/GL_SamplerBase\";\n\n/**\n *\n * @class away.pool.GL_SamplerBase\n */\nclass GL_SamplerCube extends GL_SamplerBase\n{\n\tpublic _sampler:SamplerCube;\n\n\tconstructor(sampler:SamplerCube, stage:Stage)\n\t{\n\t\tsuper(sampler, stage);\n\n\t\tthis._sampler = sampler;\n\t}\n\n\tpublic activate(index:number)\n\t{\n\t\tthis._stage.setSamplerState(index, false, this._sampler.smooth, this._sampler.mipmap);\n\t}\n}\n\nexport default GL_SamplerCube;",
    "import Stage\t\t\t\t\t\tfrom \"../base/Stage\";\nimport ProgramData\t\t\t\t\tfrom \"../image/ProgramData\";\n\n/**\n * @class away.pool.ProgramDataPool\n */\nclass ProgramDataPool\n{\n\tprivate _pool:Object = new Object();\n\tprivate _stage:Stage;\n\n\t/**\n\t * //TODO\n\t *\n\t * @param textureDataClass\n\t */\n\tconstructor(stage:Stage)\n\t{\n\t\tthis._stage = stage;\n\t}\n\n\t/**\n\t * //TODO\n\t *\n\t * @param materialOwner\n\t * @returns ITexture\n\t */\n\tpublic getItem(vertexString:string, fragmentString:string):ProgramData\n\t{\n\t\tvar key:string = vertexString + fragmentString;\n\t\treturn this._pool[key] || (this._pool[key] = new ProgramData(this, this._stage, vertexString, fragmentString));\n\t}\n\n\t/**\n\t * //TODO\n\t *\n\t * @param materialOwner\n\t */\n\tpublic disposeItem(key:string)\n\t{\n\t\tthis._pool[key] = null;\n\t}\n}\n\nexport default ProgramDataPool;",
    "import ProgramDataPool\t\t\t\tfrom \"../image/ProgramDataPool\";\nimport IProgram\t\t\t\t\t\tfrom \"../base/IProgram\";\nimport Stage\t\t\t\t\t\tfrom \"../base/Stage\";\n\n/**\n *\n * @class away.pool.ProgramDataBase\n */\nclass ProgramData\n{\n\tpublic static PROGRAMDATA_ID_COUNT:number = 0;\n\n\tprivate _pool:ProgramDataPool;\n\n\tpublic vertexString:string;\n\n\tpublic fragmentString:string;\n\n\tpublic stage:Stage;\n\n\tpublic usages:number = 0;\n\n\tpublic program:IProgram;\n\n\tpublic id:number;\n\n\tconstructor(pool:ProgramDataPool, context:Stage, vertexString:string, fragmentString:string)\n\t{\n\t\tthis._pool = pool;\n\t\tthis.stage = context;\n\t\tthis.vertexString = vertexString;\n\t\tthis.fragmentString = fragmentString;\n\t\tthis.stage.registerProgram(this);\n\t}\n\n\t/**\n\t *\n\t */\n\tpublic dispose()\n\t{\n\t\tthis.usages--;\n\n\t\tif (!this.usages) {\n\t\t\tthis._pool.disposeItem(this.vertexString + this.fragmentString);\n\n\t\t\tthis.stage.unRegisterProgram(this);\n\n\t\t\tif (this.program) {\n\t\t\t\tthis.program.dispose();\n\t\t\t\tthis.program = null;\n\t\t\t}\n\t\t}\n\t}\n}\n\nexport default ProgramData;",
    "export {default as GL_BitmapImage2D}\t\t\t\tfrom \"./image/GL_BitmapImage2D\";\nexport {default as GL_BitmapImageCube}\t\t\t\tfrom \"./image/GL_BitmapImageCube\";\nexport {default as GL_Image2D}\t\t\t\t\t\tfrom \"./image/GL_Image2D\";\nexport {default as GL_ImageBase}\t\t\t\t\tfrom \"./image/GL_ImageBase\";\nexport {default as GL_ImageCube}\t\t\t\t\tfrom \"./image/GL_ImageCube\";\nexport {default as GL_RenderImage2D}\t\t\t\tfrom \"./image/GL_RenderImage2D\";\nexport {default as GL_RenderImageCube}\t\t\t\tfrom \"./image/GL_RenderImageCube\";\nexport {default as GL_Sampler2D}\t\t\t\t\tfrom \"./image/GL_Sampler2D\";\nexport {default as GL_SamplerBase}\t\t\t\t\tfrom \"./image/GL_SamplerBase\";\nexport {default as GL_SamplerCube}\t\t\t\t\tfrom \"./image/GL_SamplerCube\";\nexport {default as ProgramData}\t\t\t\t\t\tfrom \"./image/ProgramData\";\nexport {default as ProgramDataPool}\t\t\t\t\tfrom \"./image/ProgramDataPool\";",
    "import EventDispatcher\t\t\t\tfrom \"awayjs-core/lib/events/EventDispatcher\";\nimport ArgumentError\t\t\t\tfrom \"awayjs-core/lib/errors/ArgumentError\";\n\nimport Stage\t\t\t\t\t\tfrom \"../base/Stage\";\nimport StageEvent\t\t\t\t\tfrom \"../events/StageEvent\";\n\n/**\n * The StageManager class provides a multiton object that handles management for Stage objects.\n *\n * @see away.base.Stage\n */\nclass StageManager extends EventDispatcher\n{\n\tprivate static STAGE_MAX_QUANTITY:number = 8;\n\tprivate _stages:Array<Stage>;\n\n\tprivate static _instance:StageManager;\n\tprivate static _numStages:number = 0;\n\tprivate _onContextCreatedDelegate:(event:StageEvent) => void;\n\n\t/**\n\t * Creates a new StageManager class.\n\t * @param stage The Stage object that contains the Stage objects to be managed.\n\t * @private\n\t */\n\tconstructor()\n\t{\n\t\tsuper();\n\n\t\tthis._stages = new Array<Stage>(StageManager.STAGE_MAX_QUANTITY);\n\n\t\tthis._onContextCreatedDelegate = (event:StageEvent) => this.onContextCreated(event);\n\t}\n\n\t/**\n\t * Gets a StageManager instance for the given Stage object.\n\t * @param stage The Stage object that contains the Stage objects to be managed.\n\t * @return The StageManager instance for the given Stage object.\n\t */\n\tpublic static getInstance():StageManager\n\t{\n\t\tif (this._instance == null)\n\t\t\tthis._instance = new StageManager();\n\n\t\treturn this._instance;\n\t}\n\n\t/**\n\t * Requests the Stage for the given index.\n\t *\n\t * @param index The index of the requested Stage.\n\t * @param forceSoftware Whether to force software mode even if hardware acceleration is available.\n\t * @param profile The compatibility profile, an enumeration of ContextProfile\n\t * @return The Stage for the given index.\n\t */\n\tpublic getStageAt(index:number, forceSoftware:boolean = false, profile:string = \"baseline\", mode:string = \"auto\"):Stage\n\t{\n\t\tif (index < 0 || index >= StageManager.STAGE_MAX_QUANTITY)\n\t\t\tthrow new ArgumentError(\"Index is out of bounds [0..\" + StageManager.STAGE_MAX_QUANTITY + \"]\");\n\n\t\tif (!this._stages[index]) {\n\t\t\tStageManager._numStages++;\n\n\t\t\tif(document) {\n\t\t\t\tvar canvas:HTMLCanvasElement = document.createElement(\"canvas\");\n\t\t\t\tcanvas.id = \"stage\" + index;\n\t\t\t\tdocument.body.appendChild(canvas);\n\t\t\t}\n\t\t\tvar stage:Stage = this._stages[index] = new Stage(canvas, index, this, forceSoftware, profile);\n\t\t\tstage.addEventListener(StageEvent.CONTEXT_CREATED, this._onContextCreatedDelegate);\n\t\t\tstage.requestContext(forceSoftware, profile, mode);\n\t\t}\n\n\t\treturn stage;\n\t}\n\n\t/**\n\t * Removes a Stage from the manager.\n\t * @param stage\n\t * @private\n\t */\n\tpublic iRemoveStage(stage:Stage)\n\t{\n\t\tStageManager._numStages--;\n\n\t\tstage.removeEventListener(StageEvent.CONTEXT_CREATED, this._onContextCreatedDelegate);\n\n\t\tthis._stages[stage.stageIndex] = null;\n\t}\n\n\t/**\n\t * Get the next available stage. An error is thrown if there are no StageProxies available\n\t * @param forceSoftware Whether to force software mode even if hardware acceleration is available.\n\t * @param profile The compatibility profile, an enumeration of ContextProfile\n\t * @return The allocated stage\n\t */\n\tpublic getFreeStage(forceSoftware:boolean = false, profile:string = \"baseline\", mode:string = \"auto\"):Stage\n\t{\n\t\tvar i:number = 0;\n\t\tvar len:number = this._stages.length;\n\n\t\twhile (i < len) {\n\t\t\tif (!this._stages[i])\n\t\t\t\treturn this.getStageAt(i, forceSoftware, profile, mode);\n\n\t\t\t++i;\n\t\t}\n\n\t\treturn null;\n\t}\n\n\t/**\n\t * Checks if a new stage can be created and managed by the class.\n\t * @return true if there is one slot free for a new stage\n\t */\n\tpublic get hasFreeStage():boolean\n\t{\n\t\treturn StageManager._numStages < StageManager.STAGE_MAX_QUANTITY? true : false;\n\t}\n\n\t/**\n\t * Returns the amount of stage objects that can be created and managed by the class\n\t * @return the amount of free slots\n\t */\n\tpublic get numSlotsFree():number\n\t{\n\t\treturn StageManager.STAGE_MAX_QUANTITY - StageManager._numStages;\n\t}\n\n\t/**\n\t * Returns the amount of Stage objects currently managed by the class.\n\t * @return the amount of slots used\n\t */\n\tpublic get numSlotsUsed():number\n\t{\n\t\treturn StageManager._numStages;\n\t}\n\n\t/**\n\t * The maximum amount of Stage objects that can be managed by the class\n\t */\n\tpublic get numSlotsTotal():number\n\t{\n\t\treturn this._stages.length;\n\t}\n\n\tprivate onContextCreated(event:StageEvent):void\n\t{\n\t\t//var stage:Stage = <Stage> e.target;\n\t\t//document.body.appendChild(stage.canvas)\n\t}\n}\n\nexport default StageManager;",
    "export {default as StageManager}\t\t\t\t\tfrom \"./managers/StageManager\";"
  ],
  "sourceRoot": ""
}
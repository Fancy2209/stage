{"version":3,"sources":["node_modules/browserify/node_modules/browser-pack/_prelude.js","awayjs-stagegl/lib/aglsl/agaltokenizer.ts","awayjs-stagegl/lib/aglsl/aglslparser.ts","awayjs-stagegl/lib/aglsl/description.ts","awayjs-stagegl/lib/aglsl/destination.ts","awayjs-stagegl/lib/aglsl/header.ts","awayjs-stagegl/lib/aglsl/mapping.ts","awayjs-stagegl/lib/aglsl/oplut.ts","awayjs-stagegl/lib/aglsl/sampler.ts","awayjs-stagegl/lib/aglsl/token.ts","awayjs-stagegl/lib/aglsl/assembler/agalminiassembler.ts","awayjs-stagegl/lib/aglsl/assembler/fs.ts","awayjs-stagegl/lib/aglsl/assembler/flags.ts","awayjs-stagegl/lib/aglsl/assembler/opcodemap.ts","awayjs-stagegl/lib/aglsl/assembler/opcode.ts","awayjs-stagegl/lib/aglsl/assembler/part.ts","awayjs-stagegl/lib/aglsl/assembler/regmap.ts","awayjs-stagegl/lib/aglsl/assembler/samplermap.ts","awayjs-stagegl/lib/aglsl/assembler/sampler.ts","awayjs-stagegl/lib/animators/animationsetbase.ts","awayjs-stagegl/lib/animators/animatorbase.ts","awayjs-stagegl/lib/animators/data/animationregistercache.ts","awayjs-stagegl/lib/base/contextglbase.ts","awayjs-stagegl/lib/base/contextglblendfactor.ts","awayjs-stagegl/lib/base/contextglclearmask.ts","awayjs-stagegl/lib/base/contextglcomparemode.ts","awayjs-stagegl/lib/base/contextglmipfilter.ts","awayjs-stagegl/lib/base/contextglprofile.ts","awayjs-stagegl/lib/base/contextglprogramtype.ts","awayjs-stagegl/lib/base/contextglstencilaction.ts","awayjs-stagegl/lib/base/contextgltexturefilter.ts","awayjs-stagegl/lib/base/contextgltextureformat.ts","awayjs-stagegl/lib/base/contextgltriangleface.ts","awayjs-stagegl/lib/base/contextglvertexbufferformat.ts","awayjs-stagegl/lib/base/contextglwrapmode.ts","awayjs-stagegl/lib/base/contextstage3d.ts","awayjs-stagegl/lib/base/contextwebgl.ts","awayjs-stagegl/lib/base/cubetextureflash.ts","awayjs-stagegl/lib/base/cubetexturewebgl.ts","awayjs-stagegl/lib/base/indexbufferflash.ts","awayjs-stagegl/lib/base/indexbufferwebgl.ts","awayjs-stagegl/lib/base/opcodes.ts","awayjs-stagegl/lib/base/programflash.ts","awayjs-stagegl/lib/base/programwebgl.ts","awayjs-stagegl/lib/base/resourcebaseflash.ts","awayjs-stagegl/lib/base/samplerstate.ts","awayjs-stagegl/lib/base/stage.ts","awayjs-stagegl/lib/base/texturebasewebgl.ts","awayjs-stagegl/lib/base/textureflash.ts","awayjs-stagegl/lib/base/texturewebgl.ts","awayjs-stagegl/lib/base/vertexbufferflash.ts","awayjs-stagegl/lib/base/vertexbufferwebgl.ts","awayjs-stagegl/lib/errors/animationseterror.ts","awayjs-stagegl/lib/events/animatorevent.ts","awayjs-stagegl/lib/events/shadingmethodevent.ts","awayjs-stagegl/lib/filters/filter3dbase.ts","awayjs-stagegl/lib/filters/tasks/filter3dtaskbase.ts","awayjs-stagegl/lib/managers/rttbuffermanager.ts","awayjs-stagegl/lib/managers/stagemanager.ts","awayjs-stagegl/lib/materials/linebasicmaterial.ts","awayjs-stagegl/lib/materials/skyboxmaterial.ts","awayjs-stagegl/lib/materials/stageglmaterialbase.ts","awayjs-stagegl/lib/materials/trianglebasicmaterial.ts","awayjs-stagegl/lib/materials/trianglematerialbase.ts","awayjs-stagegl/lib/materials/trianglematerialmode.ts","awayjs-stagegl/lib/materials/trianglemethodmaterial.ts","awayjs-stagegl/lib/materials/compilation/methodvo.ts","awayjs-stagegl/lib/materials/compilation/registerpool.ts","awayjs-stagegl/lib/materials/compilation/shadercompilerbase.ts","awayjs-stagegl/lib/materials/compilation/shaderlightingcompiler.ts","awayjs-stagegl/lib/materials/compilation/shaderlightingobject.ts","awayjs-stagegl/lib/materials/compilation/shaderobjectbase.ts","awayjs-stagegl/lib/materials/compilation/shaderregistercache.ts","awayjs-stagegl/lib/materials/compilation/shaderregisterdata.ts","awayjs-stagegl/lib/materials/compilation/shaderregisterelement.ts","awayjs-stagegl/lib/materials/methods/ambientbasicmethod.ts","awayjs-stagegl/lib/materials/methods/diffusebasicmethod.ts","awayjs-stagegl/lib/materials/methods/effectcolortransformmethod.ts","awayjs-stagegl/lib/materials/methods/effectmethodbase.ts","awayjs-stagegl/lib/materials/methods/lightingmethodbase.ts","awayjs-stagegl/lib/materials/methods/normalbasicmethod.ts","awayjs-stagegl/lib/materials/methods/shadingmethodbase.ts","awayjs-stagegl/lib/materials/methods/shadowhardmethod.ts","awayjs-stagegl/lib/materials/methods/shadowmapmethodbase.ts","awayjs-stagegl/lib/materials/methods/shadowmethodbase.ts","awayjs-stagegl/lib/materials/methods/specularbasicmethod.ts","awayjs-stagegl/lib/materials/passes/depthmappass.ts","awayjs-stagegl/lib/materials/passes/distancemappass.ts","awayjs-stagegl/lib/materials/passes/linebasicpass.ts","awayjs-stagegl/lib/materials/passes/materialpassbase.ts","awayjs-stagegl/lib/materials/passes/materialpassmode.ts","awayjs-stagegl/lib/materials/passes/skyboxpass.ts","awayjs-stagegl/lib/materials/passes/trianglebasicpass.ts","awayjs-stagegl/lib/materials/passes/trianglemethodpass.ts","awayjs-stagegl/lib/materials/utils/defaultmaterialmanager.ts","awayjs-stagegl/lib/materials/utils/shadercompilerhelper.ts","awayjs-stagegl/lib/pool/billboardrenderable.ts","awayjs-stagegl/lib/pool/indexdatapool.ts","awayjs-stagegl/lib/pool/indexdata.ts","awayjs-stagegl/lib/pool/linesubmeshrenderable.ts","awayjs-stagegl/lib/pool/materialdatapool.ts","awayjs-stagegl/lib/pool/materialdata.ts","awayjs-stagegl/lib/pool/materialpassdatapool.ts","awayjs-stagegl/lib/pool/materialpassdata.ts","awayjs-stagegl/lib/pool/programdatapool.ts","awayjs-stagegl/lib/pool/programdata.ts","awayjs-stagegl/lib/pool/renderablebase.ts","awayjs-stagegl/lib/pool/skyboxrenderable.ts","awayjs-stagegl/lib/pool/texturedatapool.ts","awayjs-stagegl/lib/pool/texturedata.ts","awayjs-stagegl/lib/pool/trianglesubmeshrenderable.ts","awayjs-stagegl/lib/pool/vertexdatapool.ts","awayjs-stagegl/lib/pool/vertexdata.ts","awayjs-stagegl/lib/render/defaultrenderer.ts","awayjs-stagegl/lib/render/depthrenderer.ts","awayjs-stagegl/lib/render/filter3drenderer.ts","awayjs-stagegl/lib/render/rendererbase.ts","lib/swfobject.js"],"names":[],"mappings":"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","file":"awayjs-stagegl.min.js","sourcesContent":["(function e(t,n,r){function s(o,u){if(!n[o]){if(!t[o]){var a=typeof require==\"function\"&&require;if(!u&&a)return a(o,!0);if(i)return i(o,!0);var f=new Error(\"Cannot find module '\"+o+\"'\");throw f.code=\"MODULE_NOT_FOUND\",f}var l=n[o]={exports:{}};t[o][0].call(l.exports,function(e){var n=t[o][1][e];return s(n?n:e)},l,l.exports,e,t,n,r)}return n[o].exports}var i=typeof require==\"function\"&&require;for(var o=0;o<r.length;o++)s(r[o]);return s})","import ByteArray\t\t\t\t= require(\"awayjs-core/lib/utils/ByteArray\");\n\nimport Description\t\t\t\t= require(\"awayjs-stagegl/lib/aglsl/Description\");\nimport Header\t\t\t\t\t= require(\"awayjs-stagegl/lib/aglsl/Header\");\nimport Mapping\t\t\t\t\t= require(\"awayjs-stagegl/lib/aglsl/Mapping\");\nimport Token\t\t\t\t\t= require(\"awayjs-stagegl/lib/aglsl/Token\");\n\nclass AGALTokenizer\n{\n\tconstructor()\n\t{\n\t}\n\n\tpublic decribeAGALByteArray(bytes:ByteArray)\n\t{\n\t\tvar header:Header = new Header();\n\n\t\tif (bytes.readUnsignedByte() != 0xa0) {\n\t\t\tthrow \"Bad AGAL: Missing 0xa0 magic byte.\";\n\t\t}\n\n\t\theader.version = bytes.readUnsignedInt();\n\t\tif (header.version >= 0x10) {\n\t\t\tbytes.readUnsignedByte();\n\t\t\theader.version >>= 1;\n\t\t}\n\t\tif (bytes.readUnsignedByte() != 0xa1) {\n\t\t\tthrow \"Bad AGAL: Missing 0xa1 magic byte.\";\n\t\t}\n\n\t\theader.progid = bytes.readUnsignedByte();\n\t\tswitch (header.progid) {\n\t\t\tcase 1:\n\t\t\t\theader.type = \"fragment\";\n\t\t\t\tbreak;\n\t\t\tcase 0:\n\t\t\t\theader.type = \"vertex\";\n\t\t\t\tbreak;\n\t\t\tcase 2:\n\t\t\t\theader.type = \"cpu\";\n\t\t\t\tbreak;\n\t\t\tdefault:\n\t\t\t\theader.type = \"\";\n\t\t\t\tbreak;\n\t\t}\n\n\t\tvar desc:Description = new Description();\n\t\tvar tokens:Token[] = [];\n\t\twhile (bytes.position < bytes.length) {\n\t\t\tvar token:Token = new Token();\n\n\t\t\ttoken.opcode = bytes.readUnsignedInt();\n\t\t\tvar lutentry = Mapping.agal2glsllut[token.opcode];\n\t\t\tif (!lutentry) {\n\t\t\t\tthrow \"Opcode not valid or not implemented yet: \" + token.opcode;\n\t\t\t}\n\t\t\tif (lutentry.matrixheight) {\n\t\t\t\tdesc.hasmatrix = true;\n\t\t\t}\n\t\t\tif (lutentry.dest) {\n\t\t\t\ttoken.dest.regnum = bytes.readUnsignedShort();\n\t\t\t\ttoken.dest.mask = bytes.readUnsignedByte();\n\t\t\t\ttoken.dest.regtype = bytes.readUnsignedByte();\n\t\t\t\tdesc.regwrite[token.dest.regtype][token.dest.regnum] |= token.dest.mask;\n\t\t\t} else {\n\t\t\t\ttoken.dest = null;\n\t\t\t\tbytes.readUnsignedInt();\n\t\t\t}\n\t\t\tif (lutentry.a) {\n\t\t\t\tthis.readReg(token.a, 1, desc, bytes);\n\t\t\t} else {\n\t\t\t\ttoken.a = null;\n\t\t\t\tbytes.readUnsignedInt();\n\t\t\t\tbytes.readUnsignedInt();\n\t\t\t}\n\t\t\tif (lutentry.b) {\n\t\t\t\tthis.readReg(token.b, lutentry.matrixheight | 0, desc, bytes);\n\t\t\t} else {\n\t\t\t\ttoken.b = null;\n\t\t\t\tbytes.readUnsignedInt();\n\t\t\t\tbytes.readUnsignedInt();\n\t\t\t}\n\t\t\ttokens.push(token);\n\t\t}\n\t\tdesc.header = header;\n\t\tdesc.tokens = tokens;\n\n\t\treturn desc;\n\t}\n\n\tpublic readReg(s, mh, desc, bytes)\n\t{\n\t\ts.regnum = bytes.readUnsignedShort();\n\t\ts.indexoffset = bytes.readByte();\n\t\ts.swizzle = bytes.readUnsignedByte();\n\t\ts.regtype = bytes.readUnsignedByte();\n\t\tdesc.regread[s.regtype][s.regnum] = 0xf; // sould be swizzle to mask? should be |=                                                 \n\t\tif (s.regtype == 0x5) {\n\t\t\t// sampler\n\t\t\ts.lodbiad = s.indexoffset;\n\t\t\ts.indexoffset = undefined;\n\t\t\ts.swizzle = undefined;\n\n\t\t\t// sampler \n\t\t\ts.readmode = bytes.readUnsignedByte();\n\t\t\ts.dim = s.readmode >> 4;\n\t\t\ts.readmode &= 0xf;\n\t\t\ts.special = bytes.readUnsignedByte();\n\t\t\ts.wrap = s.special >> 4;\n\t\t\ts.special &= 0xf;\n\t\t\ts.mipmap = bytes.readUnsignedByte();\n\t\t\ts.filter = s.mipmap >> 4;\n\t\t\ts.mipmap &= 0xf;\n\t\t\tdesc.samplers[s.regnum] = s;\n\t\t} else {\n\t\t\ts.indexregtype = bytes.readUnsignedByte();\n\t\t\ts.indexselect = bytes.readUnsignedByte();\n\t\t\ts.indirectflag = bytes.readUnsignedByte();\n\t\t}\n\t\tif (s.indirectflag) {\n\t\t\tdesc.hasindirect = true;\n\t\t}\n\t\tif (!s.indirectflag && mh) {\n\t\t\tfor (var mhi:number = 0; mhi < mh; mhi++) //TODO wrong, should be |=\n\t\t\t{\n\t\t\t\tdesc.regread[s.regtype][s.regnum + mhi] = desc.regread[s.regtype][s.regnum];\n\t\t\t}\n\t\t}\n\t}\n}\n\nexport = AGALTokenizer;","import Description\t\t\t\t= require(\"awayjs-stagegl/lib/aglsl/Description\");\nimport Mapping\t\t\t\t\t= require(\"awayjs-stagegl/lib/aglsl/Mapping\");\nimport ContextStage3D\t\t\t= require(\"awayjs-stagegl/lib/base/ContextStage3D\");\n\nclass AGLSLParser\n{\n\tpublic parse(desc:Description)\n\t{\n\t\tvar header:string = \"\";\n\t\tvar body:string = \"\";\n\n\t\theader += \"precision highp float;\\n\";\n\t\tvar tag = desc.header.type[0]; //TODO\n\n\t\t// declare uniforms\n\t\tif (desc.header.type == \"vertex\") {\n\t\t\theader += \"uniform float yflip;\\n\";\n\t\t}\n\t\tif (!desc.hasindirect) {\n\t\t\tfor (var i:number = 0; i < desc.regread[0x1].length; i++) {\n\t\t\t\tif (desc.regread[0x1][i]) {\n\t\t\t\t\theader += \"uniform vec4 \" + tag + \"c\" + i + \";\\n\";\n\t\t\t\t}\n\t\t\t}\n\t\t} else {\n\t\t\theader += \"uniform vec4 \" + tag + \"carrr[\" + ContextStage3D.maxvertexconstants + \"];\\n\";                // use max const count instead\n\t\t}\n\n\t\t// declare temps\n\t\tfor (var i = 0; i < desc.regread[0x2].length || i < desc.regwrite[0x2].length; i++) {\n\t\t\tif (desc.regread[0x2][i] || desc.regwrite[0x2][i]) // duh, have to check write only also...\n\t\t\t{\n\t\t\t\theader += \"vec4 \" + tag + \"t\" + i + \";\\n\";\n\t\t\t}\n\t\t}\n\n\t\t// declare streams\n\t\tfor (var i:number = 0; i < desc.regread[0x0].length; i++) {\n\t\t\tif (desc.regread[0x0][i]) {\n\t\t\t\theader += \"attribute vec4 va\" + i + \";\\n\";\n\t\t\t}\n\t\t}\n\n\t\t// declare interpolated\n\t\tfor (var i:number = 0; i < desc.regread[0x4].length || i < desc.regwrite[0x4].length; i++) {\n\t\t\tif (desc.regread[0x4][i] || desc.regwrite[0x4][i]) {\n\t\t\t\theader += \"varying vec4 vi\" + i + \";\\n\";\n\t\t\t}\n\t\t}\n\n\t\t// declare samplers\n\t\tvar samptype:Array<string> = [\"2D\", \"Cube\", \"3D\", \"\"];\n\t\tfor (var i:number = 0; i < desc.samplers.length; i++) {\n\t\t\tif (desc.samplers[i]) {\n\t\t\t\theader += \"uniform sampler\" + samptype[ desc.samplers[i].dim & 3 ] + \" fs\" + i + \";\\n\";\n\t\t\t}\n\t\t}\n\n\t\t// extra gl fluff: setup position and depth adjust temps\n\t\tif (desc.header.type == \"vertex\") {\n\t\t\theader += \"vec4 outpos;\\n\";\n\t\t}\n\t\tif (desc.writedepth) {\n\t\t\theader += \"vec4 tmp_FragDepth;\\n\";\n\t\t}\n\t\t//if ( desc.hasmatrix ) \n\t\t//    header += \"vec4 tmp_matrix;\\n\";\n\n\t\t// start body of code\n\t\tbody += \"void main() {\\n\";\n\n\t\tfor (var i:number = 0; i < desc.tokens.length; i++) {\n\t\t\tvar lutentry = Mapping.agal2glsllut[desc.tokens[i].opcode];\n\t\t\tif (!lutentry) {\n\t\t\t\tthrow \"Opcode not valid or not implemented yet: \"\n\t\t\t\t/*+token.opcode;*/\n\t\t\t}\n\t\t\tvar sublines = lutentry.matrixheight || 1;\n\n\t\t\tfor (var sl:number = 0; sl < sublines; sl++) {\n\t\t\t\tvar line:string = \"  \" + lutentry.s;\n\t\t\t\tif (desc.tokens[i].dest) {\n\t\t\t\t\tif (lutentry.matrixheight) {\n\t\t\t\t\t\tif (((desc.tokens[i].dest.mask >> sl) & 1) != 1) {\n\t\t\t\t\t\t\tcontinue;\n\t\t\t\t\t\t}\n\t\t\t\t\t\tvar destregstring:string = this.regtostring(desc.tokens[i].dest.regtype, desc.tokens[i].dest.regnum, desc, tag);\n\t\t\t\t\t\tvar destcaststring:string = \"float\";\n\t\t\t\t\t\tvar destmaskstring = [\"x\", \"y\", \"z\", \"w\"][sl];\n\t\t\t\t\t\tdestregstring += \".\" + destmaskstring;\n\t\t\t\t\t} else {\n\t\t\t\t\t\tvar destregstring:string = this.regtostring(desc.tokens[i].dest.regtype, desc.tokens[i].dest.regnum, desc, tag);\n\t\t\t\t\t\tvar destcaststring:string;\n\t\t\t\t\t\tvar destmaskstring:string;\n\t\t\t\t\t\tif (desc.tokens[i].dest.mask != 0xf) {\n\t\t\t\t\t\t\tvar ndest:number = 0;\n\t\t\t\t\t\t\tdestmaskstring = \"\";\n\t\t\t\t\t\t\tif (desc.tokens[i].dest.mask & 1) {\n\t\t\t\t\t\t\t\tndest++;\n\t\t\t\t\t\t\t\tdestmaskstring += \"x\";\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\tif (desc.tokens[i].dest.mask & 2) {\n\t\t\t\t\t\t\t\tndest++;\n\t\t\t\t\t\t\t\tdestmaskstring += \"y\";\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\tif (desc.tokens[i].dest.mask & 4) {\n\t\t\t\t\t\t\t\tndest++;\n\t\t\t\t\t\t\t\tdestmaskstring += \"z\";\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\tif (desc.tokens[i].dest.mask & 8) {\n\t\t\t\t\t\t\t\tndest++;\n\t\t\t\t\t\t\t\tdestmaskstring += \"w\";\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\tdestregstring += \".\" + destmaskstring;\n\t\t\t\t\t\t\tswitch (ndest) {\n\t\t\t\t\t\t\t\tcase 1:\n\t\t\t\t\t\t\t\t\tdestcaststring = \"float\";\n\t\t\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\t\t\tcase 2:\n\t\t\t\t\t\t\t\t\tdestcaststring = \"vec2\";\n\t\t\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\t\t\tcase 3:\n\t\t\t\t\t\t\t\t\tdestcaststring = \"vec3\";\n\t\t\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\t\t\tdefault:\n\t\t\t\t\t\t\t\t\tthrow \"Unexpected destination mask\";\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\tdestcaststring = \"vec4\";\n\t\t\t\t\t\t\tdestmaskstring = \"xyzw\";\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t\tline = line.replace(\"%dest\", destregstring);\n\t\t\t\t\tline = line.replace(\"%cast\", destcaststring);\n\t\t\t\t\tline = line.replace(\"%dm\", destmaskstring);\n\t\t\t\t}\n\t\t\t\tvar dwm:number = 0xf;\n\t\t\t\tif (!lutentry.ndwm && lutentry.dest && desc.tokens[i].dest) {\n\t\t\t\t\tdwm = desc.tokens[i].dest.mask;\n\t\t\t\t}\n\t\t\t\tif (desc.tokens[i].a) {\n\t\t\t\t\tline = line.replace(\"%a\", this.sourcetostring(desc.tokens[i].a, 0, dwm, lutentry.scalar, desc, tag));\n\t\t\t\t}\n\t\t\t\tif (desc.tokens[i].b) {\n\t\t\t\t\tline = line.replace(\"%b\", this.sourcetostring(desc.tokens[i].b, sl, dwm, lutentry.scalar, desc, tag));\n\t\t\t\t\tif (desc.tokens[i].b.regtype == 0x5) {\n\t\t\t\t\t\t// sampler dim\n\t\t\t\t\t\tvar texdim = [\"2D\", \"Cube\", \"3D\"][desc.tokens[i].b.dim];\n\t\t\t\t\t\tvar texsize = [\"vec2\", \"vec3\", \"vec3\"][desc.tokens[i].b.dim];\n\t\t\t\t\t\tline = line.replace(\"%texdim\", texdim);\n\t\t\t\t\t\tline = line.replace(\"%texsize\", texsize);\n\t\t\t\t\t\tvar texlod:string = \"\";\n\t\t\t\t\t\tline = line.replace(\"%lod\", texlod);\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\tbody += line;\n\t\t\t}\n\t\t}\n\n\t\t// adjust z from opengl range of -1..1 to 0..1 as in d3d, this also enforces a left handed coordinate system\n\t\tif (desc.header.type == \"vertex\") {\n\t\t\tbody += \"  gl_Position = vec4(outpos.x, outpos.y, outpos.z*2.0 - outpos.w, outpos.w);\\n\";\n\t\t}\n\n\t\t// clamp fragment depth\n\t\tif (desc.writedepth) {\n\t\t\tbody += \"  gl_FragDepth = clamp(tmp_FragDepth,0.0,1.0);\\n\";\n\t\t}\n\n\t\t// close main\n\t\tbody += \"}\\n\";\n\n\t\treturn header + body;\n\t}\n\n\tpublic regtostring(regtype:number, regnum:number, desc:Description, tag)\n\t{\n\t\tswitch (regtype) {\n\t\t\tcase 0x0:\n\t\t\t\treturn \"va\" + regnum;\n\t\t\tcase 0x1:\n\t\t\t\tif (desc.hasindirect && desc.header.type == \"vertex\") {\n\t\t\t\t\treturn \"vcarrr[\" + regnum + \"]\";\n\t\t\t\t} else {\n\t\t\t\t\treturn tag + \"c\" + regnum;\n\t\t\t\t}\n\t\t\tcase 0x2:\n\t\t\t\treturn tag + \"t\" + regnum;\n\t\t\tcase 0x3:\n\t\t\t\treturn desc.header.type == \"vertex\"? \"outpos\" : \"gl_FragColor\";\n\t\t\tcase 0x4:\n\t\t\t\treturn \"vi\" + regnum;\n\t\t\tcase 0x5:\n\t\t\t\treturn \"fs\" + regnum;\n\t\t\tcase 0x6:\n\t\t\t\treturn \"tmp_FragDepth\";\n\t\t\tdefault:\n\t\t\t\tthrow \"Unknown register type\";\n\t\t}\n\t}\n\n\tpublic sourcetostring(s, subline, dwm, isscalar, desc, tag):string\n\t{\n\t\tvar swiz = [ \"x\", \"y\", \"z\", \"w\" ];\n\t\tvar r;\n\n\t\tif (s.indirectflag) {\n\t\t\tr = \"vcarrr[int(\" + this.regtostring(s.indexregtype, s.regnum, desc, tag) + \".\" + swiz[s.indexselect] + \")\";\n\t\t\tvar realofs = subline + s.indexoffset;\n\t\t\tif (realofs < 0) r += realofs.toString();\n\t\t\tif (realofs > 0) r += \"+\" + realofs.toString();\n\t\t\tr += \"]\";\n\t\t} else {\n\t\t\tr = this.regtostring(s.regtype, s.regnum + subline, desc, tag);\n\t\t}\n\n\t\t// samplers never add swizzle        \n\t\tif (s.regtype == 0x5) {\n\t\t\treturn r;\n\t\t}\n\n\t\t// scalar, first component only\n\t\tif (isscalar) {\n\t\t\treturn r + \".\" + swiz[(s.swizzle >> 0) & 3];\n\t\t}\n\n\t\t// identity\n\t\tif (s.swizzle == 0xe4 && dwm == 0xf) {\n\t\t\treturn r;\n\t\t}\n\n\t\t// with destination write mask folded in\n\t\tr += \".\";\n\t\tif (dwm & 1) r += swiz[(s.swizzle >> 0) & 3];\n\t\tif (dwm & 2) r += swiz[(s.swizzle >> 2) & 3];\n\t\tif (dwm & 4) r += swiz[(s.swizzle >> 4) & 3];\n\t\tif (dwm & 8) r += swiz[(s.swizzle >> 6) & 3];\n\t\treturn r;\n\t}\n}\n\nexport = AGLSLParser;","import Header\t\t\t\t\t= require(\"awayjs-stagegl/lib/aglsl/Header\");\nimport Token\t\t\t\t\t= require(\"awayjs-stagegl/lib/aglsl/Token\");\n\nclass Description\n{\n\tpublic regread:any[] = [\n\t\t[],\n\t\t[],\n\t\t[],\n\t\t[],\n\t\t[],\n\t\t[],\n\t\t[]\n\t];\n\tpublic regwrite:any[] = [\n\t\t[],\n\t\t[],\n\t\t[],\n\t\t[],\n\t\t[],\n\t\t[],\n\t\t[]\n\t];\n\tpublic hasindirect:boolean = false;\n\tpublic writedepth:boolean = false;\n\tpublic hasmatrix:boolean = false;\n\tpublic samplers:any[] = [];\n\n\t// added due to dynamic assignment 3*0xFFFFFFuuuu\n\tpublic tokens:Token[] = [];\n\tpublic header:Header = new Header();\n\n\tconstructor()\n\t{\n\t}\n}\n\nexport = Description;","class Destination\n{\n\tpublic mask:number = 0;\n\tpublic regnum:number = 0;\n\tpublic regtype:number = 0;\n\tpublic dim:number = 0;\n\n\tconstructor()\n\t{\n\t}\n}\n\nexport = Destination;","class Header\n{\n\tpublic progid:number = 0;\n\tpublic version:number = 0;\n\tpublic type:string = \"\";\n\n\tconstructor()\n\t{\n\t}\n}\n\nexport = Header;","import OpLUT\t\t\t\t\t= require(\"awayjs-stagegl/lib/aglsl/OpLUT\");\n\nclass Mapping\n{\n\tstatic agal2glsllut:Array<OpLUT> = [\n\n\t\t//         s \t\t\t\t\t\t\t\t\t\t\t\tflags   dest    a     b \t    mw \t  mh    ndwm  scale dm\t  lod\n\t\tnew OpLUT(\"%dest = %cast(%a);\\n\", 0, true, true, false, null, null, null, null, null, null), //mov\n\t\tnew OpLUT(\"%dest = %cast(%a + %b);\\n\", 0, true, true, true, null, null, null, null, null, null), //add\n\t\tnew OpLUT(\"%dest = %cast(%a - %b);\\n\", 0, true, true, true, null, null, null, null, null, null), //sub\n\t\tnew OpLUT(\"%dest = %cast(%a * %b);\\n\", 0, true, true, true, null, null, null, null, null, null), //mul\n\t\tnew OpLUT(\"%dest = %cast(%a / %b);\\n\", 0, true, true, true, null, null, null, null, null, null), //div\n\t\tnew OpLUT(\"%dest = %cast(1.0) / %a;\\n\", 0, true, true, false, null, null, null, null, null, null), //rcp\n\t\tnew OpLUT(\"%dest = %cast(min(%a,%b));\\n\", 0, true, true, true, null, null, null, null, null, null), //min\n\t\tnew OpLUT(\"%dest = %cast(max(%a,%b));\\n\", 0, true, true, true, null, null, null, null, null, null), //max\n\t\tnew OpLUT(\"%dest = %cast(fract(%a));\\n\", 0, true, true, false, null, null, null, null, null, null), //frc\n\t\tnew OpLUT(\"%dest = %cast(sqrt(abs(%a)));\\n\", 0, true, true, false, null, null, null, null, null, null), //sqt\n\t\tnew OpLUT(\"%dest = %cast(inversesqrt(abs(%a)));\\n\", 0, true, true, false, null, null, null, null, null, null), //rsq\n\t\tnew OpLUT(\"%dest = %cast(pow(abs(%a),%b));\\n\", 0, true, true, true, null, null, null, null, null, null), //pow\n\t\tnew OpLUT(\"%dest = %cast(log2(abs(%a)));\\n\", 0, true, true, false, null, null, null, null, null, null), //log\n\t\tnew OpLUT(\"%dest = %cast(exp2(%a));\\n\", 0, true, true, false, null, null, null, null, null, null), //exp\n\n\t\t//         s \t\t\t\t\t\t\t\t\t\t\t\tflags  \tdest    a     b \t    mw \t  mh    ndwm  scale dm\t  lod\n\t\tnew OpLUT(\"%dest = %cast(normalize(vec3( %a ) ));\\n\", 0, true, true, false, null, null, true, null, null, null), //nrm\n\t\tnew OpLUT(\"%dest = %cast(sin(%a));\\n\", 0, true, true, false, null, null, null, null, null, null), //sin\n\t\tnew OpLUT(\"%dest = %cast(cos(%a));\\n\", 0, true, true, false, null, null, null, null, null, null), //cos\n\t\tnew OpLUT(\"%dest = %cast(cross(vec3(%a),vec3(%b)));\\n\", 0, true, true, true, null, null, true, null, null, null), //crs\n\t\tnew OpLUT(\"%dest = %cast(dot(vec3(%a),vec3(%b)));\\n\", 0, true, true, true, null, null, true, null, null, null), //dp3\n\t\tnew OpLUT(\"%dest = %cast(dot(vec4(%a),vec4(%b)));\\n\", 0, true, true, true, null, null, true, null, null, null), //dp4\n\t\tnew OpLUT(\"%dest = %cast(abs(%a));\\n\", 0, true, true, false, null, null, null, null, null, null), //abs\n\t\tnew OpLUT(\"%dest = %cast(%a * -1.0);\\n\", 0, true, true, false, null, null, null, null, null, null), //neg\n\t\tnew OpLUT(\"%dest = %cast(clamp(%a,0.0,1.0));\\n\", 0, true, true, false, null, null, null, null, null, null), //sat\n\t\tnew OpLUT(\"%dest = %cast(dot(vec3(%a),vec3(%b)));\\n\", null, true, true, true, 3, 3, true, null, null, null), //m33\n\t\tnew OpLUT(\"%dest = %cast(dot(vec4(%a),vec4(%b)));\\n\", null, true, true, true, 4, 4, true, null, null, null), //m44\n\t\tnew OpLUT(\"%dest = %cast(dot(vec4(%a),vec4(%b)));\\n\", null, true, true, true, 4, 3, true, null, null, null), //m43\n\t\tnew OpLUT(\"%dest = %cast(dFdx(%a));\\n\", 0, true, true, false, null, null, null, null, null, null), //dFdx\n\t\tnew OpLUT(\"%dest = %cast(dFdx(%a));\\n\", 0, true, true, false, null, null, null, null, null, null), //dFdx\n\t\tnew OpLUT(\"if (float(%a)==float(%b)) {;\\n\", 0, false, true, true, null, null, null, true, null, null), new OpLUT(\"if (float(%a)!=float(%b)) {;\\n\", 0, false, true, true, null, null, null, true, null, null), new OpLUT(\"if (float(%a)>=float(%b)) {;\\n\", 0, false, true, true, null, null, null, true, null, null), new OpLUT(\"if (float(%a)<float(%b)) {;\\n\", 0, false, true, true, null, null, null, true, null, null), new OpLUT(\"} else {;\\n\", 0, false, false, false, null, null, null, null, null, null), new OpLUT(\"};\\n\", 0, false, false, false, null, null, null, null, null, null), new OpLUT(null, null, null, null, false, null, null, null, null, null, null), new OpLUT(null, null, null, null, false, null, null, null, null, null, null), new OpLUT(null, null, null, null, false, null, null, null, null, null, null), new OpLUT(null, null, null, null, false, null, null, null, null, null, null),\n\n\t\t//         s \t\t\t\t\t\t\t\t\t\t\t\t\t\t\tflags  \tdest    a     b \t    mw \t  mh    ndwm  scale dm\t  lod\n\t\tnew OpLUT(\"%dest = %cast(texture%texdimLod(%b,%texsize(%a)).%dm);\\n\", null, true, true, true, null, null, null, null, true, null), new OpLUT(\"if ( float(%a)<0.0 ) discard;\\n\", null, false, true, false, null, null, null, true, null, null), new OpLUT(\"%dest = %cast(texture%texdim(%b,%texsize(%a)%lod).%dm);\\n\", null, true, true, true, null, null, true, null, true, true), new OpLUT(\"%dest = %cast(greaterThanEqual(%a,%b).%dm);\\n\", 0, true, true, true, null, null, true, null, true, null), new OpLUT(\"%dest = %cast(lessThan(%a,%b).%dm);\\n\", 0, true, true, true, null, null, true, null, true, null), new OpLUT(\"%dest = %cast(sign(%a));\\n\", 0, true, true, false, null, null, null, null, null, null), new OpLUT(\"%dest = %cast(equal(%a,%b).%dm);\\n\", 0, true, true, true, null, null, true, null, true, null), new OpLUT(\"%dest = %cast(notEqual(%a,%b).%dm);\\n\", 0, true, true, true, null, null, true, null, true, null)\n\n\t];\n\n\t//TODO: get rid of hack that fixes including definition file\n\tconstructor(include?:OpLUT)\n\t{\n\n\t}\n}\n\nexport = Mapping;","class OpLUT\n{\n\n\tpublic s:string;\n\tpublic flags:number;\n\tpublic dest:boolean;\n\tpublic a:boolean;\n\tpublic b:boolean;\n\tpublic matrixwidth:number;\n\tpublic matrixheight:number;\n\tpublic ndwm:boolean;\n\tpublic scalar:boolean;\n\tpublic dm:boolean;\n\tpublic lod:boolean;\n\n\tconstructor(s:string, flags:number, dest:boolean, a:boolean, b:boolean, matrixwidth:number, matrixheight:number, ndwm:boolean, scaler:boolean, dm:boolean, lod:boolean)\n\t{\n\t\tthis.s = s;\n\t\tthis.flags = flags;\n\t\tthis.dest = dest;\n\t\tthis.a = a;\n\t\tthis.b = b;\n\t\tthis.matrixwidth = matrixwidth;\n\t\tthis.matrixheight = matrixheight;\n\t\tthis.ndwm = ndwm;\n\t\tthis.scalar = scaler;\n\t\tthis.dm = dm;\n\t\tthis.lod = lod;\n\t}\n}\n\nexport = OpLUT;","class Sampler\n{\n\tpublic lodbias:number = 0;\n\tpublic dim:number = 0;\n\tpublic readmode:number = 0;\n\tpublic special:number = 0;\n\tpublic wrap:number = 0;\n\tpublic mipmap:number = 0;\n\tpublic filter:number = 0;\n\n\tconstructor()\n\t{\n\t}\n}\n\nexport = Sampler;","import Destination\t\t\t\t= require(\"awayjs-stagegl/lib/aglsl/Destination\");\n\nclass Token\n{\n\tpublic dest:Destination = new Destination();\n\tpublic opcode:number = 0;\n\tpublic a:Destination = new Destination();\n\tpublic b:Destination = new Destination();\n\n\tconstructor()\n\t{\n\t}\n}\n\nexport = Token;","import Sampler\t\t\t\t\t= require(\"awayjs-stagegl/lib/aglsl/assembler/Sampler\");\nimport Opcode\t\t\t\t\t= require(\"awayjs-stagegl/lib/aglsl/assembler/Opcode\");\nimport OpcodeMap\t\t\t\t= require(\"awayjs-stagegl/lib/aglsl/assembler/OpcodeMap\");\nimport Part\t\t\t\t\t\t= require(\"awayjs-stagegl/lib/aglsl/assembler/Part\");\nimport RegMap\t\t\t\t\t= require(\"awayjs-stagegl/lib/aglsl/assembler/RegMap\");\nimport SamplerMap\t\t\t\t= require(\"awayjs-stagegl/lib/aglsl/assembler/SamplerMap\");\n\n\nclass AGALMiniAssembler\n{\n\tpublic r:Object;\n\tpublic cur:Part;\n\n\tconstructor()\n\t{\n\t\tthis.r = {};\n\t\tthis.cur = new Part();\n\t}\n\n\tpublic assemble(source:string, ext_part = null, ext_version = null)\n\t{\n\t\tif (!ext_version) {\n\t\t\text_version = 1;\n\t\t}\n\n\t\tif (ext_part) {\n\t\t\tthis.addHeader(ext_part, ext_version);\n\t\t}\n\n\t\tvar lines = source.replace(/[\\f\\n\\r\\v]+/g, \"\\n\").split(\"\\n\"); // handle breaks, then split into lines\n\n\t\tfor (var i in lines) {\n\t\t\tthis.processLine(lines[i], i);\n\t\t}\n\n\t\treturn this.r;\n\t}\n\n\tprivate processLine(line, linenr)\n\t{\n\t\tvar startcomment:number = line.search(\"//\");  // remove comments\n\t\tif (startcomment != -1) {\n\t\t\tline = line.slice(0, startcomment);\n\t\t}\n\t\tline = line.replace(/^\\s+|\\s+$/g, \"\"); // remove outer space\n\t\tif (!(line.length > 0 )) {\n\t\t\treturn;\n\t\t}\n\t\tvar optsi:number = line.search(/<.*>/g); // split of options part <*> if there\n\t\tvar opts:string[] = null;\n\t\tif (optsi != -1) {\n\t\t\topts = line.slice(optsi).match(/([\\w\\.\\-\\+]+)/gi);\n\t\t\tline = line.slice(0, optsi);\n\t\t}\n\n\t\t// get opcode/command\t\t\t\t            \n\t\tvar tokens = line.match(/([\\w\\.\\+\\[\\]]+)/gi); // get tokens in line\n\t\tif (!tokens || tokens.length < 1) {\n\t\t\tif (line.length >= 3) {\n\t\t\t\tconsole.log(\"Warning: bad line \" + linenr + \": \" + line);\n\t\t\t}\n\t\t\treturn;\n\t\t}\n\n\t\t//console.log ( linenr, line, cur, tokens ); \n\t\tswitch (tokens[0]) {\n\t\t\tcase \"part\":\n\t\t\t\tthis.addHeader(tokens[1], Number(tokens[2]));\n\t\t\t\tbreak;\n\t\t\tcase \"endpart\":\n\t\t\t\tif (!this.cur) {\n\t\t\t\t\tthrow \"Unexpected endpart\";\n\t\t\t\t}\n\t\t\t\tthis.cur.data.position = 0;\n\t\t\t\tthis.cur = null;\n\t\t\t\treturn;\n\t\t\tdefault:\n\t\t\t\tif (!this.cur) {\n\t\t\t\t\tconsole.log(\"Warning: bad line \" + linenr + \": \" + line + \" (Outside of any part definition)\");\n\t\t\t\t\treturn;\n\t\t\t\t}\n\t\t\t\tif (this.cur.name == \"comment\") {\n\t\t\t\t\treturn;\n\t\t\t\t}\n\t\t\t\tvar op:Opcode = <Opcode> OpcodeMap.map[tokens[0]];\n\t\t\t\tif (!op) {\n\t\t\t\t\tthrow \"Bad opcode \" + tokens[0] + \" \" + linenr + \": \" + line;\n\t\t\t\t}\n\t\t\t\t// console.log( 'AGALMiniAssembler' , 'op' , op );\n\n\t\t\t\tthis.emitOpcode(this.cur, op.opcode);\n\t\t\t\tvar ti:number = 1;\n\t\t\t\tif (op.dest && op.dest != \"none\") {\n\t\t\t\t\tif (!this.emitDest(this.cur, tokens[ti++], op.dest)) {\n\t\t\t\t\t\tthrow \"Bad destination register \" + tokens[ti - 1] + \" \" + linenr + \": \" + line;\n\t\t\t\t\t}\n\t\t\t\t} else {\n\t\t\t\t\tthis.emitZeroDword(this.cur);\n\t\t\t\t}\n\n\t\t\t\tif (op.a && op.a.format != \"none\") {\n\t\t\t\t\tif (!this.emitSource(this.cur, tokens[ti++], op.a)) throw \"Bad source register \" + tokens[ti - 1] + \" \" + linenr + \": \" + line;\n\t\t\t\t} else {\n\t\t\t\t\tthis.emitZeroQword(this.cur);\n\t\t\t\t}\n\n\t\t\t\tif (op.b && op.b.format != \"none\") {\n\t\t\t\t\tif (op.b.format == \"sampler\") {\n\t\t\t\t\t\tif (!this.emitSampler(this.cur, tokens[ti++], op.b, opts)) {\n\t\t\t\t\t\t\tthrow \"Bad sampler register \" + tokens[ti - 1] + \" \" + linenr + \": \" + line;\n\t\t\t\t\t\t}\n\t\t\t\t\t} else {\n\t\t\t\t\t\tif (!this.emitSource(this.cur, tokens[ti++], op.b)) {\n\t\t\t\t\t\t\tthrow \"Bad source register \" + tokens[ti - 1] + \" \" + linenr + \": \" + line;\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t} else {\n\t\t\t\t\tthis.emitZeroQword(this.cur);\n\t\t\t\t}\n\t\t\t\tbreak;\n\t\t}\n\t}\n\n\tpublic emitHeader(pr:Part)\n\t{\n\t\tpr.data.writeUnsignedByte(0xa0); \t// tag version\n\t\tpr.data.writeUnsignedInt(pr.version);\n\t\tif (pr.version >= 0x10) {\n\t\t\tpr.data.writeUnsignedByte(0); // align, for higher versions\n\t\t}\n\t\tpr.data.writeUnsignedByte(0xa1);\t\t// tag program id\n\t\tswitch (pr.name) {\n\t\t\tcase \"fragment\" :\n\t\t\t\tpr.data.writeUnsignedByte(1);\n\t\t\t\tbreak;\n\t\t\tcase \"vertex\" :\n\t\t\t\tpr.data.writeUnsignedByte(0);\n\t\t\t\tbreak;\n\t\t\tcase \"cpu\" :\n\t\t\t\tpr.data.writeUnsignedByte(2);\n\t\t\t\tbreak;\n\t\t\tdefault :\n\t\t\t\tpr.data.writeUnsignedByte(0xff);\n\t\t\t\tbreak; // unknown/comment\n\t\t}\n\t}\n\n\tpublic emitOpcode(pr:Part, opcode)\n\t{\n\t\tpr.data.writeUnsignedInt(opcode);\n\t\t//console.log ( \"Emit opcode: \", opcode ); \n\t}\n\n\tpublic emitZeroDword(pr:Part)\n\t{\n\t\tpr.data.writeUnsignedInt(0);\n\t}\n\n\tpublic emitZeroQword(pr)\n\t{\n\t\tpr.data.writeUnsignedInt(0);\n\t\tpr.data.writeUnsignedInt(0);\n\t}\n\n\tpublic emitDest(pr, token, opdest)\n\t{\n\n\t\t//console.log( 'AGALMiniAssembler' , 'emitDest' , 'RegMap.map' , RegMap.map);\n\t\tvar reg = token.match(/([fov]?[tpocidavs])(\\d*)(\\.[xyzw]{1,4})?/i); // g1: regname, g2:regnum, g3:mask\n\n\t\t// console.log( 'AGALMiniAssembler' , 'emitDest' , 'reg' , reg , reg[1] , RegMap.map[reg[1]] );\n\t\t// console.log( 'AGALMiniAssembler' , 'emitDest' , 'RegMap.map[reg[1]]' , RegMap.map[reg[1]] , 'bool' , !RegMap.map[reg[1]] ) ;\n\n\t\tif (!RegMap.map[reg[1]]) return false;\n\t\tvar em = { num:reg[2]? reg[2] : 0, code:RegMap.map[reg[1]].code, mask:this.stringToMask(reg[3]) };\n\t\tpr.data.writeUnsignedShort(em.num);\n\t\tpr.data.writeUnsignedByte(em.mask);\n\t\tpr.data.writeUnsignedByte(em.code);\n\t\t//console.log ( \"  Emit dest: \", em );\n\t\treturn true;\n\t}\n\n\tpublic stringToMask(s:string):number\n\t{\n\t\tif (!s) return 0xf;\n\t\tvar r = 0;\n\t\tif (s.indexOf(\"x\") != -1) r |= 1;\n\t\tif (s.indexOf(\"y\") != -1) r |= 2;\n\t\tif (s.indexOf(\"z\") != -1) r |= 4;\n\t\tif (s.indexOf(\"w\") != -1) r |= 8;\n\t\treturn r;\n\t}\n\n\tpublic stringToSwizzle(s)\n\t{\n\t\tif (!s) {\n\t\t\treturn 0xe4;\n\t\t}\n\t\tvar chartoindex = { x:0, y:1, z:2, w:3 };\n\t\tvar sw = 0;\n\n\t\tif (s.charAt(0) != \".\") {\n\t\t\tthrow \"Missing . for swizzle\";\n\t\t}\n\n\t\tif (s.length > 1) {\n\t\t\tsw |= chartoindex[s.charAt(1)];\n\t\t}\n\n\t\tif (s.length > 2) {\n\t\t\tsw |= chartoindex[s.charAt(2)] << 2;\n\t\t} else {\n\t\t\tsw |= (sw & 3) << 2;\n\t\t}\n\n\t\tif (s.length > 3) {\n\t\t\tsw |= chartoindex[s.charAt(3)] << 4;\n\t\t} else {\n\t\t\tsw |= (sw & (3 << 2)) << 2;\n\t\t}\n\n\t\tif (s.length > 4) {\n\t\t\tsw |= chartoindex[s.charAt(4)] << 6;\n\t\t} else {\n\t\t\tsw |= (sw & (3 << 4)) << 2;\n\t\t}\n\n\t\treturn sw;\n\t}\n\n\tpublic emitSampler(pr:Part, token, opsrc, opts)\n\t{\n\t\tvar reg:string[] = token.match(/fs(\\d*)/i); // g1:regnum\n\t\tif (!reg || !reg[1]) {\n\t\t\treturn false;\n\t\t}\n\t\tpr.data.writeUnsignedShort(parseInt(reg[1]));\n\t\tpr.data.writeUnsignedByte(0);   // bias\n\t\tpr.data.writeUnsignedByte(0);\n\t\t/*\n\t\t pr.data.writeUnsignedByte ( 0x5 );\n\t\t pr.data.writeUnsignedByte ( 0 );   // readmode, dim\n\t\t pr.data.writeUnsignedByte ( 0 );   // special, wrap\n\t\t pr.data.writeUnsignedByte ( 0 );   // mip, filter\n\t\t */\n\t\tvar samplerbits:number = 0x5;\n\t\tvar sampleroptset:number = 0;\n\t\tfor (var i:number = 0; i < opts.length; i++) {\n\t\t\tvar o:Sampler = <Sampler> SamplerMap.map[ opts[i].toLowerCase() ];\n\n\t\t\t//console.log( 'AGALMiniAssembler' , 'emitSampler' , 'SampleMap opt:' , o , '<-------- WATCH FOR THIS');\n\n\t\t\tif (o) {\n\t\t\t\tif (((sampleroptset >> o.shift) & o.mask) != 0) {\n\t\t\t\t\tconsole.log(\"Warning, duplicate sampler option\");\n\t\t\t\t}\n\t\t\t\tsampleroptset |= o.mask << o.shift;\n\t\t\t\tsamplerbits &= ~(o.mask << o.shift);\n\t\t\t\tsamplerbits |= o.value << o.shift;\n\t\t\t} else {\n\t\t\t\tconsole.log(\"Warning, unknown sampler option: \", opts[i]);\n\t\t\t\t// todo bias\n\t\t\t}\n\t\t}\n\t\tpr.data.writeUnsignedInt(samplerbits);\n\t\treturn true;\n\t}\n\n\tpublic emitSource(pr, token, opsrc)\n\t{\n\t\tvar indexed = token.match(/vc\\[(v[tcai])(\\d+)\\.([xyzw])([\\+\\-]\\d+)?\\](\\.[xyzw]{1,4})?/i); // g1: indexregname, g2:indexregnum, g3:select, [g4:offset], [g5:swizzle]\n\t\tvar reg;\n\t\tif (indexed) {\n\t\t\tif (!RegMap.map[indexed[1]]) {\n\t\t\t\treturn false;\n\t\t\t}\n\t\t\tvar selindex = { x:0, y:1, z:2, w:3 };\n\t\t\tvar em:any = { num:indexed[2] | 0, code:RegMap.map[indexed[1]].code, swizzle:this.stringToSwizzle(indexed[5]), select:selindex[indexed[3]], offset:indexed[4] | 0 };\n\t\t\tpr.data.writeUnsignedShort(em.num);\n\t\t\tpr.data.writeByte(em.offset);\n\t\t\tpr.data.writeUnsignedByte(em.swizzle);\n\t\t\tpr.data.writeUnsignedByte(0x1); // constant reg\n\t\t\tpr.data.writeUnsignedByte(em.code);\n\t\t\tpr.data.writeUnsignedByte(em.select);\n\t\t\tpr.data.writeUnsignedByte(1 << 7);\n\t\t} else {\n\t\t\treg = token.match(/([fov]?[tpocidavs])(\\d*)(\\.[xyzw]{1,4})?/i); // g1: regname, g2:regnum, g3:swizzle\n\t\t\tif (!RegMap.map[reg[1]]) {\n\t\t\t\treturn false;\n\t\t\t}\n\t\t\tvar em:any = { num:reg[2] | 0, code:RegMap.map[reg[1]].code, swizzle:this.stringToSwizzle(reg[3]) };\n\t\t\tpr.data.writeUnsignedShort(em.num);\n\t\t\tpr.data.writeUnsignedByte(0);\n\t\t\tpr.data.writeUnsignedByte(em.swizzle);\n\t\t\tpr.data.writeUnsignedByte(em.code);\n\t\t\tpr.data.writeUnsignedByte(0);\n\t\t\tpr.data.writeUnsignedByte(0);\n\t\t\tpr.data.writeUnsignedByte(0);\n\t\t\t//console.log ( \"  Emit source: \", em, pr.data.length );\n\t\t}\n\t\treturn true;\n\t}\n\n\tpublic addHeader(partname, version)\n\t{\n\t\tif (!version) {\n\t\t\tversion = 1;\n\t\t}\n\t\tif (this.r[partname] == undefined) {\n\t\t\tthis.r[partname] = new Part(partname, version);\n\t\t\tthis.emitHeader(this.r[ partname ]);\n\t\t} else if (this.r[partname].version != version) {\n\t\t\tthrow \"Multiple versions for part \" + partname;\n\t\t}\n\t\tthis.cur = this.r[partname];\n\t}\n}\n\nexport = AGALMiniAssembler;","class FS\n{\n\tpublic format:string;\n\tpublic size:number;\n}\n\nexport = FS;\n","class Flags\n{\n\tpublic simple:boolean;\n\tpublic horizontal:boolean;\n\tpublic fragonly:boolean;\n\tpublic matrix:boolean;\n}\n\nexport = Flags;\n","import Opcode\t\t\t\t\t= require(\"awayjs-stagegl/lib/aglsl/assembler/Opcode\");\n\nclass OpcodeMap\n{\n\t// dest:\t\t\t\t\t  \t\t\t\t\t   string,  aformat, asize, bformat,   bsize, opcode, simple, horizontal, fragonly   matrix\n\t/*\n\t public static mov:Opcode = new Opcode( \"vector\", \"vector\", 4,    \"none\",    0,     0x00,   true,   null,       null,      null );\n\t public static add:Opcode = new Opcode( \"vector\", \"vector\", 4,    \"none\",    0,     0x01,   true,   null,       null,      null );\n\n\t public static sub:Opcode = new Opcode( \"vector\", \"vector\", 4,    \"vector\",  4,     0x02,   true,   null,       null,      null );\n\t public static mul:Opcode = new Opcode( \"vector\", \"vector\", 4,    \"vector\",  4,     0x03,   true,   null,       null,      null );\n\t public static div:Opcode = new Opcode( \"vector\", \"vector\", 4,    \"vector\",  4,     0x04,   true,   null,       null,      null );\n\t public static rcp:Opcode = new Opcode( \"vector\", \"vector\", 4,    \"none\",    0,     0x05,   true,   null,       null,      null );\n\t public static min:Opcode = new Opcode( \"vector\", \"vector\", 4,    \"vector\",  4,     0x06,   true,   null,       null,      null );\n\t public static max:Opcode = new Opcode( \"vector\", \"vector\", 4,    \"vector\",  4,     0x07,   true,   null,       null,      null );\n\t public static frc:Opcode = new Opcode( \"vector\", \"vector\", 4,    \"none\",    0,     0x08,   true,   null,       null,      null );\n\t public static sqt:Opcode = new Opcode( \"vector\", \"vector\", 4,    \"none\",    0,     0x09,   true,   null,       null,      null );\n\t public static rsq:Opcode = new Opcode( \"vector\", \"vector\", 4,    \"none\",    0,     0x0a,   true,   null,       null,      null );\n\t public static pow:Opcode = new Opcode( \"vector\", \"vector\", 4,    \"vector\",  4,     0x0b,   true,   null,       null,      null );\n\t public static log:Opcode = new Opcode( \"vector\", \"vector\", 4,    \"none\",    0,     0x0c,   true,   null,       null,      null );\n\t public static exp:Opcode = new Opcode( \"vector\", \"vector\", 4,    \"none\",    0,     0x0d,   true,   null,       null,      null );\n\t public static nrm:Opcode = new Opcode( \"vector\", \"vector\", 4,    \"none\",    0,     0x0e,   true,   null,       null,      null );\n\t public static sin:Opcode = new Opcode( \"vector\", \"vector\", 4,    \"none\",    0,     0x0f,   true,   null,       null,      null );\n\t public static cos:Opcode = new Opcode( \"vector\", \"vector\", 4,    \"none\",    0,     0x10,   true,   null,       null,      null );\n\t public static crs:Opcode = new Opcode( \"vector\", \"vector\", 4,    \"vector\",  4,     0x11,   true,   true,       null,      null );\n\t public static dp3:Opcode = new Opcode( \"vector\", \"vector\", 4,    \"vector\",  4,     0x12,   true,   true,       null,      null );\n\t public static dp4:Opcode = new Opcode( \"vector\", \"vector\", 4,    \"vector\",  4,     0x13,   true,   true,       null,      null );\n\t public static abs:Opcode = new Opcode( \"vector\", \"vector\", 4,    \"none\",    0,     0x14,   true,   null,       null,      null );\n\t public static neg:Opcode = new Opcode( \"vector\", \"vector\", 4,    \"none\",    0,     0x15,   true,   null,       null,      null );\n\t public static sat:Opcode = new Opcode( \"vector\", \"vector\", 4,    \"none\",    0,     0x16,   true,   null,       null,      null );\n\n\t public static ted:Opcode = new Opcode( \"vector\", \"vector\", 4,    \"sampler\", 1,     0x26,   true,   null,       true,      null );\n\t public static kil:Opcode = new Opcode( \"none\",   \"scalar\", 1,    \"none\",    0,     0x27,   true,   null,       true,      null );\n\t public static tex:Opcode = new Opcode( \"vector\", \"vector\", 4,    \"sampler\", 1,     0x28,   true,   null,       true,      null );\n\n\t public static m33:Opcode = new Opcode( \"vector\", \"matrix\", 3,    \"vector\",  3,     0x17,   true,   null,       null,      true );\n\t public static m44:Opcode = new Opcode( \"vector\", \"matrix\", 4,    \"vector\",  4,     0x18,   true,   null,       null,      true );\n\t public static m43:Opcode = new Opcode( \"vector\", \"matrix\", 3,    \"vector\",  4,     0x19,   true,   null,       null,      true );\n\n\t public static sge:Opcode = new Opcode( \"vector\", \"vector\", 4,    \"vector\",  4,     0x29,   true,   null,       null,      null );\n\t public static slt:Opcode = new Opcode( \"vector\", \"vector\", 4,    \"vector\",  4,     0x2a,   true,   null,       null,      null );\n\t public static sgn:Opcode = new Opcode( \"vector\", \"vector\", 4,    \"vector\",  4,     0x2b,   true,   null,       null,      null );\n\t public static seq:Opcode = new Opcode( \"vector\", \"vector\", 4,    \"vector\",  4,     0x2c,   true,   null,       null,      null );\n\t public static sne:Opcode = new Opcode( \"vector\", \"vector\", 4,    \"vector\",  4,     0x2d,   true,   null,       null,      null );\n\t */\n\n\n\tprivate static _map:Object[];\n\n\tpublic static get map():Object[]\n\t{\n\n\t\tif (!OpcodeMap._map) {\n\n\t\t\tOpcodeMap._map = new Array<Object>();\n\t\t\tOpcodeMap._map['mov'] = new Opcode(\"vector\", \"vector\", 4, \"none\", 0, 0x00, true, null, null, null);\n\t\t\tOpcodeMap._map['add'] = new Opcode(\"vector\", \"vector\", 4, \"vector\", 4, 0x01, true, null, null, null);\n\t\t\tOpcodeMap._map['sub'] = new Opcode(\"vector\", \"vector\", 4, \"vector\", 4, 0x02, true, null, null, null);\n\t\t\tOpcodeMap._map['mul'] = new Opcode(\"vector\", \"vector\", 4, \"vector\", 4, 0x03, true, null, null, null);\n\t\t\tOpcodeMap._map['div'] = new Opcode(\"vector\", \"vector\", 4, \"vector\", 4, 0x04, true, null, null, null);\n\t\t\tOpcodeMap._map['rcp'] = new Opcode(\"vector\", \"vector\", 4, \"none\", 0, 0x05, true, null, null, null);\n\t\t\tOpcodeMap._map['min'] = new Opcode(\"vector\", \"vector\", 4, \"vector\", 4, 0x06, true, null, null, null);\n\t\t\tOpcodeMap._map['max'] = new Opcode(\"vector\", \"vector\", 4, \"vector\", 4, 0x07, true, null, null, null);\n\t\t\tOpcodeMap._map['frc'] = new Opcode(\"vector\", \"vector\", 4, \"none\", 0, 0x08, true, null, null, null);\n\t\t\tOpcodeMap._map['sqt'] = new Opcode(\"vector\", \"vector\", 4, \"none\", 0, 0x09, true, null, null, null);\n\t\t\tOpcodeMap._map['rsq'] = new Opcode(\"vector\", \"vector\", 4, \"none\", 0, 0x0a, true, null, null, null);\n\t\t\tOpcodeMap._map['pow'] = new Opcode(\"vector\", \"vector\", 4, \"vector\", 4, 0x0b, true, null, null, null);\n\t\t\tOpcodeMap._map['log'] = new Opcode(\"vector\", \"vector\", 4, \"none\", 0, 0x0c, true, null, null, null);\n\t\t\tOpcodeMap._map['exp'] = new Opcode(\"vector\", \"vector\", 4, \"none\", 0, 0x0d, true, null, null, null);\n\t\t\tOpcodeMap._map['nrm'] = new Opcode(\"vector\", \"vector\", 4, \"none\", 0, 0x0e, true, null, null, null);\n\t\t\tOpcodeMap._map['sin'] = new Opcode(\"vector\", \"vector\", 4, \"none\", 0, 0x0f, true, null, null, null);\n\t\t\tOpcodeMap._map['cos'] = new Opcode(\"vector\", \"vector\", 4, \"none\", 0, 0x10, true, null, null, null);\n\t\t\tOpcodeMap._map['crs'] = new Opcode(\"vector\", \"vector\", 4, \"vector\", 4, 0x11, true, true, null, null);\n\t\t\tOpcodeMap._map['dp3'] = new Opcode(\"vector\", \"vector\", 4, \"vector\", 4, 0x12, true, true, null, null);\n\t\t\tOpcodeMap._map['dp4'] = new Opcode(\"vector\", \"vector\", 4, \"vector\", 4, 0x13, true, true, null, null);\n\t\t\tOpcodeMap._map['abs'] = new Opcode(\"vector\", \"vector\", 4, \"none\", 0, 0x14, true, null, null, null);\n\t\t\tOpcodeMap._map['neg'] = new Opcode(\"vector\", \"vector\", 4, \"none\", 0, 0x15, true, null, null, null);\n\t\t\tOpcodeMap._map['sat'] = new Opcode(\"vector\", \"vector\", 4, \"none\", 0, 0x16, true, null, null, null);\n\n\t\t\tOpcodeMap._map['ted'] = new Opcode(\"vector\", \"vector\", 4, \"sampler\", 1, 0x26, true, null, true, null);\n\t\t\tOpcodeMap._map['kil'] = new Opcode(\"none\", \"scalar\", 1, \"none\", 0, 0x27, true, null, true, null);\n\t\t\tOpcodeMap._map['tex'] = new Opcode(\"vector\", \"vector\", 4, \"sampler\", 1, 0x28, true, null, true, null);\n\n\t\t\tOpcodeMap._map['m33'] = new Opcode(\"vector\", \"matrix\", 3, \"vector\", 3, 0x17, true, null, null, true);\n\t\t\tOpcodeMap._map['m44'] = new Opcode(\"vector\", \"matrix\", 4, \"vector\", 4, 0x18, true, null, null, true);\n\t\t\tOpcodeMap._map['m43'] = new Opcode(\"vector\", \"matrix\", 3, \"vector\", 4, 0x19, true, null, null, true);\n\n\t\t\tOpcodeMap._map['sge'] = new Opcode(\"vector\", \"vector\", 4, \"vector\", 4, 0x29, true, null, null, null);\n\t\t\tOpcodeMap._map['slt'] = new Opcode(\"vector\", \"vector\", 4, \"vector\", 4, 0x2a, true, null, null, null);\n\t\t\tOpcodeMap._map['sgn'] = new Opcode(\"vector\", \"vector\", 4, \"vector\", 4, 0x2b, true, null, null, null);\n\t\t\tOpcodeMap._map['seq'] = new Opcode(\"vector\", \"vector\", 4, \"vector\", 4, 0x2c, true, null, null, null);\n\t\t\tOpcodeMap._map['sne'] = new Opcode(\"vector\", \"vector\", 4, \"vector\", 4, 0x2d, true, null, null, null);\n\n\n\t\t}\n\n\t\treturn OpcodeMap._map;\n\n\t}\n\n\n\tconstructor()\n\t{\n\t}\n}\n\nexport = OpcodeMap;","import Flags\t\t\t\t= require(\"awayjs-stagegl/lib/aglsl/assembler/Flags\");\nimport FS\t\t\t\t\t= require(\"awayjs-stagegl/lib/aglsl/assembler/FS\");\n\n/**\n *\n */\nclass Opcode\n{\n\tpublic dest:string;\n\tpublic a:FS;\n\tpublic b:FS;\n\tpublic opcode:number;\n\tpublic flags:Flags;\n\n\tconstructor(dest:string, aformat:string, asize:number, bformat:string, bsize:number, opcode:number, simple:boolean, horizontal:boolean, fragonly:boolean, matrix:boolean)\n\t{\n\t\tthis.a = new FS();\n\t\tthis.b = new FS();\n\t\tthis.flags = new Flags();\n\n\t\tthis.dest = dest;\n\t\tthis.a.format = aformat;\n\t\tthis.a.size = asize;\n\t\tthis.b.format = bformat;\n\t\tthis.b.size = bsize;\n\t\tthis.opcode = opcode;\n\t\tthis.flags.simple = simple;\n\t\tthis.flags.horizontal = horizontal;\n\t\tthis.flags.fragonly = fragonly;\n\t\tthis.flags.matrix = matrix;\n\t}\n}\n\nexport = Opcode;\n","import ByteArray\t\t\t\t= require(\"awayjs-core/lib/utils/ByteArray\");\n\nclass Part\n{\n\tpublic name:string = \"\";\n\tpublic version:number = 0;\n\tpublic data:ByteArray;\n\n\tconstructor(name:string = null, version:number = null)\n\t{\n\t\tthis.name = name;\n\t\tthis.version = version;\n\t\tthis.data = new ByteArray();\n\t}\n}\n\nexport = Part;","\nclass Reg\n{\n\n\tpublic code:number;\n\tpublic desc:string;\n\n\tconstructor(code:number, desc:string)\n\t{\n\t\tthis.code = code;\n\t\tthis.desc = desc;\n\t}\n}\n\nclass RegMap\n{\n\n\t/*\n\t public static map = [ new Reg( 0x00, \"vertex attribute\" ),\n\t new Reg( 0x01, \"fragment constant\" ),\n\t new Reg( 0x01, \"vertex constant\" ),\n\t new Reg( 0x02, \"fragment temporary\" ),\n\t new Reg( 0x02, \"vertex temporary\" ),\n\t new Reg( 0x03, \"vertex output\" ),\n\t new Reg( 0x03, \"vertex output\" ),\n\t new Reg( 0x03, \"fragment depth output\" ),\n\t new Reg( 0x03, \"fragment output\" ),\n\t new Reg( 0x03, \"fragment output\" ),\n\t new Reg( 0x04, \"varying\" ),\n\t new Reg( 0x04, \"varying output\" ),\n\t new Reg( 0x04, \"varying input\" ),\n\t new Reg( 0x05, \"sampler\" ) ];\n\t */\n\n\tprivate static _map:any[];\n\tpublic static get map():any[]\n\t{\n\n\t\tif (!RegMap._map) {\n\n\t\t\tRegMap._map = new Array<Object>();\n\t\t\tRegMap._map['va'] = new Reg(0x00, \"vertex attribute\");\n\t\t\tRegMap._map['fc'] = new Reg(0x01, \"fragment constant\");\n\t\t\tRegMap._map['vc'] = new Reg(0x01, \"vertex constant\")\n\t\t\tRegMap._map['ft'] = new Reg(0x02, \"fragment temporary\");\n\t\t\tRegMap._map['vt'] = new Reg(0x02, \"vertex temporary\");\n\t\t\tRegMap._map['vo'] = new Reg(0x03, \"vertex output\");\n\t\t\tRegMap._map['op'] = new Reg(0x03, \"vertex output\");\n\t\t\tRegMap._map['fd'] = new Reg(0x03, \"fragment depth output\");\n\t\t\tRegMap._map['fo'] = new Reg(0x03, \"fragment output\");\n\t\t\tRegMap._map['oc'] = new Reg(0x03, \"fragment output\");\n\t\t\tRegMap._map['v'] = new Reg(0x04, \"varying\")\n\t\t\tRegMap._map['vi'] = new Reg(0x04, \"varying output\");\n\t\t\tRegMap._map['fi'] = new Reg(0x04, \"varying input\");\n\t\t\tRegMap._map['fs'] = new Reg(0x05, \"sampler\");\n\n\n\t\t}\n\n\t\treturn RegMap._map;\n\n\t}\n\n\t/*\n\t public static va:Reg = new Reg( 0x00, \"vertex attribute\" );\n\t public static fc:Reg = new Reg( 0x01, \"fragment constant\" );\n\t public static vc:Reg = new Reg( 0x01, \"vertex constant\" );\n\t public static ft:Reg = new Reg( 0x02, \"fragment temporary\" );\n\t public static vt:Reg = new Reg( 0x02, \"vertex temporary\" );\n\t public static vo:Reg = new Reg( 0x03, \"vertex output\" );\n\t public static op:Reg = new Reg( 0x03, \"vertex output\" );\n\t public static fd:Reg = new Reg( 0x03, \"fragment depth output\" );\n\t public static fo:Reg = new Reg( 0x03, \"fragment output\" );\n\t public static oc:Reg = new Reg( 0x03, \"fragment output\" );\n\t public static v: Reg = new Reg( 0x04, \"varying\" );\n\t public static vi:Reg = new Reg( 0x04, \"varying output\" );\n\t public static fi:Reg = new Reg( 0x04, \"varying input\" );\n\t public static fs:Reg = new Reg( 0x05, \"sampler\" );\n\t */\n\tconstructor()\n\t{\n\t}\n}\n\nexport = RegMap;","import Sampler\t\t\t\t= require(\"awayjs-stagegl/lib/aglsl/assembler/Sampler\");\n\nclass SamplerMap\n{\n\n\tprivate static _map:Object[];\n\n\tpublic static get map():Object[]\n\t{\n\n\t\tif (!SamplerMap._map) {\n\n\t\t\tSamplerMap._map = new Array<Object>();\n\t\t\tSamplerMap._map['rgba'] = new Sampler(8, 0xf, 0);\n\t\t\tSamplerMap._map['rg'] = new Sampler(8, 0xf, 5);\n\t\t\tSamplerMap._map['r'] = new Sampler(8, 0xf, 4);\n\t\t\tSamplerMap._map['compressed'] = new Sampler(8, 0xf, 1);\n\t\t\tSamplerMap._map['compressed_alpha'] = new Sampler(8, 0xf, 2);\n\t\t\tSamplerMap._map['dxt1'] = new Sampler(8, 0xf, 1);\n\t\t\tSamplerMap._map['dxt5'] = new Sampler(8, 0xf, 2);\n\n\t\t\t// dimension\n\t\t\tSamplerMap._map['2d'] = new Sampler(12, 0xf, 0);\n\t\t\tSamplerMap._map['cube'] = new Sampler(12, 0xf, 1);\n\t\t\tSamplerMap._map['3d'] = new Sampler(12, 0xf, 2);\n\n\t\t\t// special\n\t\t\tSamplerMap._map['centroid'] = new Sampler(16, 1, 1);\n\t\t\tSamplerMap._map['ignoresampler'] = new Sampler(16, 4, 4);\n\n\t\t\t// repeat\n\t\t\tSamplerMap._map['clamp'] = new Sampler(20, 0xf, 0);\n\t\t\tSamplerMap._map['repeat'] = new Sampler(20, 0xf, 1);\n\t\t\tSamplerMap._map['wrap'] = new Sampler(20, 0xf, 1);\n\n\t\t\t// mip\n\t\t\tSamplerMap._map['nomip'] = new Sampler(24, 0xf, 0);\n\t\t\tSamplerMap._map['mipnone'] = new Sampler(24, 0xf, 0);\n\t\t\tSamplerMap._map['mipnearest'] = new Sampler(24, 0xf, 1);\n\t\t\tSamplerMap._map['miplinear'] = new Sampler(24, 0xf, 2);\n\n\t\t\t// filter\n\t\t\tSamplerMap._map['nearest'] = new Sampler(28, 0xf, 0);\n\t\t\tSamplerMap._map['linear'] = new Sampler(28, 0xf, 1);\n\n\t\t}\n\n\t\treturn SamplerMap._map;\n\n\t}\n\n\t/*\n\t public static map =     [ new Sampler( 8, 0xf, 0 ),\n\t new Sampler( 8, 0xf, 5 ),\n\t new Sampler( 8, 0xf, 4 ),\n\t new Sampler( 8, 0xf, 1 ),\n\t new Sampler( 8, 0xf, 2 ),\n\t new Sampler( 8, 0xf, 1 ),\n\t new Sampler( 8, 0xf, 2 ),\n\n\t // dimension\n\t new Sampler( 12, 0xf, 0 ),\n\t new Sampler( 12, 0xf, 1 ),\n\t new Sampler( 12, 0xf, 2 ),\n\n\t // special\n\t new Sampler( 16, 1, 1 ),\n\t new Sampler( 16, 4, 4 ),\n\n\t // repeat\n\t new Sampler( 20, 0xf, 0 ),\n\t new Sampler( 20, 0xf, 1 ),\n\t new Sampler( 20, 0xf, 1 ),\n\n\t // mip\n\t new Sampler( 24, 0xf, 0 ),\n\t new Sampler( 24, 0xf, 0 ),\n\t new Sampler( 24, 0xf, 1 ),\n\t new Sampler( 24, 0xf, 2 ),\n\n\t // filter\n\t new Sampler( 28, 0xf, 0 ),\n\t new Sampler( 28, 0xf, 1 ) ]\n\t */\n\t/*\n\t public static rgba: Sampler = new Sampler( 8, 0xf, 0 );\n\t public static rg: Sampler = new Sampler( 8, 0xf, 5 );\n\t public static r: Sampler = new Sampler( 8, 0xf, 4 );\n\t public static compressed: Sampler = new Sampler( 8, 0xf, 1 );\n\t public static compressed_alpha: Sampler = new Sampler( 8, 0xf, 2 );\n\t public static dxt1: Sampler = new Sampler( 8, 0xf, 1 );\n\t public static dxt5: Sampler = new Sampler( 8, 0xf, 2 );\n\n\t // dimension\n\t public static sampler2d: Sampler = new Sampler( 12, 0xf, 0 );\n\t public static cube: Sampler = new Sampler( 12, 0xf, 1 );\n\t public static sampler3d: Sampler = new Sampler( 12, 0xf, 2 );\n\n\t // special\n\t public static centroid: Sampler = new Sampler( 16, 1, 1 );\n\t public static ignoresampler: Sampler = new Sampler( 16, 4, 4 );\n\n\t // repeat\n\t public static clamp: Sampler = new Sampler( 20, 0xf, 0 );\n\t public static repeat: Sampler = new Sampler( 20, 0xf, 1 );\n\t public static wrap: Sampler = new Sampler( 20, 0xf, 1 );\n\n\t // mip\n\t public static nomip: Sampler = new Sampler( 24, 0xf, 0 );\n\t public static mipnone: Sampler = new Sampler( 24, 0xf, 0 );\n\t public static mipnearest: Sampler = new Sampler( 24, 0xf, 1 );\n\t public static miplinear: Sampler = new Sampler( 24, 0xf, 2 );\n\n\t // filter\n\t public static nearest: Sampler = new Sampler( 28, 0xf, 0 );\n\t public static linear: Sampler = new Sampler( 28, 0xf, 1 );\n\t */\n\tconstructor()\n\t{\n\t}\n}\n\nexport = SamplerMap;","class Sampler\n{\n\tpublic shift:number;\n\tpublic mask:number;\n\tpublic value:number;\n\n\tconstructor(shift:number, mask:number, value:number)\n\t{\n\t\tthis.shift = shift;\n\t\tthis.mask = mask;\n\t\tthis.value = value;\n\t}\n}\n\nexport = Sampler;","import AssetType\t\t\t\t\t= require(\"awayjs-core/lib/library/AssetType\");\nimport IAsset\t\t\t\t\t\t= require(\"awayjs-core/lib/library/IAsset\");\nimport NamedAssetBase\t\t\t\t= require(\"awayjs-core/lib/library/NamedAssetBase\");\nimport AbstractMethodError\t\t\t= require(\"awayjs-core/lib/errors/AbstractMethodError\");\n\nimport AnimationNodeBase\t\t\t= require(\"awayjs-display/lib/animators/nodes/AnimationNodeBase\");\n\nimport Stage\t\t\t\t\t\t= require(\"awayjs-stagegl/lib/base/Stage\");\nimport ShaderObjectBase\t\t\t\t= require(\"awayjs-stagegl/lib/materials/compilation/ShaderObjectBase\");\nimport ShaderRegisterElement\t\t= require(\"awayjs-stagegl/lib/materials/compilation/ShaderRegisterElement\");\nimport AnimationSetError\t\t\t= require(\"awayjs-stagegl/lib/errors/AnimationSetError\");\n\n/**\n * Provides an abstract base class for data set classes that hold animation data for use in animator classes.\n *\n * @see away.animators.AnimatorBase\n */\nclass AnimationSetBase extends NamedAssetBase implements IAsset\n{\n\tprivate _usesCPU:boolean;\n\tprivate _animations:Array<AnimationNodeBase> = new Array<AnimationNodeBase>();\n\tprivate _animationNames:Array<string> = new Array<string>();\n\tprivate _animationDictionary:Object = new Object();\n\n\tconstructor()\n\t{\n\t\tsuper();\n\t}\n\n\t/**\n\t * Retrieves a temporary GPU register that's still free.\n\t *\n\t * @param exclude An array of non-free temporary registers.\n\t * @param excludeAnother An additional register that's not free.\n\t * @return A temporary register that can be used.\n\t */\n\tpublic _pFindTempReg(exclude:Array<string>, excludeAnother:string = null):string\n\t{\n\t\tvar i:number /*uint*/ = 0;\n\t\tvar reg:string;\n\n\t\twhile (true) {\n\t\t\treg = \"vt\" + i;\n\t\t\tif (exclude.indexOf(reg) == -1 && excludeAnother != reg)\n\t\t\t\treturn reg;\n\t\t\t++i;\n\t\t}\n\n\t\t// can't be reached\n\t\treturn null;\n\t}\n\n\t/**\n\t * Indicates whether the properties of the animation data contained within the set combined with\n\t * the vertex registers already in use on shading materials allows the animation data to utilise\n\t * GPU calls.\n\t */\n\tpublic get usesCPU():boolean\n\t{\n\t\treturn this._usesCPU;\n\t}\n\n\t/**\n\t * Called by the material to reset the GPU indicator before testing whether register space in the shader\n\t * is available for running GPU-based animation code.\n\t *\n\t * @private\n\t */\n\tpublic resetGPUCompatibility()\n\t{\n\t\tthis._usesCPU = false;\n\t}\n\n\tpublic cancelGPUCompatibility()\n\t{\n\t\tthis._usesCPU = true;\n\t}\n\n\n\t/**\n\t * @inheritDoc\n\t */\n\tpublic getAGALVertexCode(shaderObject:ShaderObjectBase):string\n\t{\n\t\tthrow new AbstractMethodError();\n\t}\n\n\t/**\n\t * @inheritDoc\n\t */\n\tpublic activate(shaderObject:ShaderObjectBase, stage:Stage)\n\t{\n\t\tthrow new AbstractMethodError();\n\t}\n\n\t/**\n\t * @inheritDoc\n\t */\n\tpublic deactivate(shaderObject:ShaderObjectBase, stage:Stage)\n\t{\n\t\tthrow new AbstractMethodError();\n\t}\n\n\t/**\n\t * @inheritDoc\n\t */\n\tpublic getAGALFragmentCode(shaderObject:ShaderObjectBase, shadedTarget:string):string\n\t{\n\t\tthrow new AbstractMethodError();\n\t}\n\n\t/**\n\t * @inheritDoc\n\t */\n\tpublic getAGALUVCode(shaderObject:ShaderObjectBase):string\n\t{\n\t\tthrow new AbstractMethodError();\n\t}\n\n\t/**\n\t * @inheritDoc\n\t */\n\tpublic doneAGALCode(shaderObject:ShaderObjectBase)\n\t{\n\t\tthrow new AbstractMethodError();\n\t}\n\n\t/**\n\t * @inheritDoc\n\t */\n\tpublic get assetType():string\n\t{\n\t\treturn AssetType.ANIMATION_SET;\n\t}\n\n\t/**\n\t * Returns a vector of animation state objects that make up the contents of the animation data set.\n\t */\n\tpublic get animations():Array<AnimationNodeBase>\n\t{\n\t\treturn this._animations;\n\t}\n\n\t/**\n\t * Returns a vector of animation state objects that make up the contents of the animation data set.\n\t */\n\tpublic get animationNames():Array<string>\n\t{\n\t\treturn this._animationNames;\n\t}\n\n\t/**\n\t * Check to determine whether a state is registered in the animation set under the given name.\n\t *\n\t * @param stateName The name of the animation state object to be checked.\n\t */\n\tpublic hasAnimation(name:string):boolean\n\t{\n\t\treturn this._animationDictionary[name] != null;\n\t}\n\n\t/**\n\t * Retrieves the animation state object registered in the animation data set under the given name.\n\t *\n\t * @param stateName The name of the animation state object to be retrieved.\n\t */\n\tpublic getAnimation(name:string):AnimationNodeBase\n\t{\n\t\treturn this._animationDictionary[name];\n\t}\n\n\t/**\n\t * Adds an animation state object to the aniamtion data set under the given name.\n\t *\n\t * @param stateName The name under which the animation state object will be stored.\n\t * @param animationState The animation state object to be staored in the set.\n\t */\n\tpublic addAnimation(node:AnimationNodeBase)\n\t{\n\t\tif (this._animationDictionary[node.name])\n\t\t\tthrow new AnimationSetError(\"root node name '\" + node.name + \"' already exists in the set\");\n\n\t\tthis._animationDictionary[node.name] = node;\n\n\t\tthis._animations.push(node);\n\n\t\tthis._animationNames.push(node.name);\n\t}\n\n\t/**\n\t * Cleans up any resources used by the current object.\n\t */\n\tpublic dispose()\n\t{\n\t}\n}\n\nexport = AnimationSetBase;","import Vector3D\t\t\t\t\t\t= require(\"awayjs-core/lib/geom/Vector3D\");\nimport AssetType\t\t\t\t\t= require(\"awayjs-core/lib/library/AssetType\");\nimport NamedAssetBase\t\t\t\t= require(\"awayjs-core/lib/library/NamedAssetBase\");\nimport AbstractMethodError\t\t\t= require(\"awayjs-core/lib/errors/AbstractMethodError\");\nimport RequestAnimationFrame\t\t= require(\"awayjs-core/lib/utils/RequestAnimationFrame\");\nimport getTimer\t\t\t\t\t\t= require(\"awayjs-core/lib/utils/getTimer\");\n\nimport IAnimationSet\t\t\t\t= require(\"awayjs-display/lib/animators/IAnimationSet\");\nimport IAnimator\t\t\t\t\t= require(\"awayjs-display/lib/animators/IAnimator\");\nimport AnimationNodeBase\t\t\t= require(\"awayjs-display/lib/animators/nodes/AnimationNodeBase\");\nimport TriangleSubGeometry\t\t\t= require(\"awayjs-display/lib/base/TriangleSubGeometry\");\nimport Camera\t\t\t\t\t\t= require(\"awayjs-display/lib/entities/Camera\");\nimport Mesh\t\t\t\t\t\t\t= require(\"awayjs-display/lib/entities/Mesh\");\n\nimport Stage\t\t\t\t\t\t= require(\"awayjs-stagegl/lib/base/Stage\");\nimport IAnimationState\t\t\t\t= require(\"awayjs-stagegl/lib/animators/states/IAnimationState\");\nimport RenderableBase\t\t\t\t= require(\"awayjs-stagegl/lib/pool/RenderableBase\");\nimport TriangleSubMeshRenderable\t= require(\"awayjs-stagegl/lib/pool/TriangleSubMeshRenderable\");\nimport AnimatorEvent\t\t\t\t= require(\"awayjs-stagegl/lib/events/AnimatorEvent\");\nimport ShaderObjectBase\t\t\t\t= require(\"awayjs-stagegl/lib/materials/compilation/ShaderObjectBase\");\n\n/**\n * Dispatched when playback of an animation inside the animator object starts.\n *\n * @eventType away3d.events.AnimatorEvent\n */\n//[Event(name=\"start\", type=\"away3d.events.AnimatorEvent\")]\n\n/**\n * Dispatched when playback of an animation inside the animator object stops.\n *\n * @eventType away3d.events.AnimatorEvent\n */\n//[Event(name=\"stop\", type=\"away3d.events.AnimatorEvent\")]\n\n/**\n * Dispatched when playback of an animation reaches the end of an animation.\n *\n * @eventType away3d.events.AnimatorEvent\n */\n//[Event(name=\"cycle_complete\", type=\"away3d.events.AnimatorEvent\")]\n\n/**\n * Provides an abstract base class for animator classes that control animation output from a data set subtype of <code>AnimationSetBase</code>.\n *\n * @see away.animators.AnimationSetBase\n */\nclass AnimatorBase extends NamedAssetBase implements IAnimator\n{\n\tprivate _broadcaster:RequestAnimationFrame;\n\tprivate _isPlaying:boolean;\n\tprivate _autoUpdate:boolean = true;\n\tprivate _startEvent:AnimatorEvent;\n\tprivate _stopEvent:AnimatorEvent;\n\tprivate _cycleEvent:AnimatorEvent;\n\tprivate _time:number /*int*/ = 0;\n\tprivate _playbackSpeed:number = 1;\n\n\tpublic _pAnimationSet:IAnimationSet;\n\tpublic _pOwners:Array<Mesh> = new Array<Mesh>();\n\tpublic _pActiveNode:AnimationNodeBase;\n\tpublic _pActiveState:IAnimationState;\n\tpublic _pActiveAnimationName:string;\n\tpublic _pAbsoluteTime:number = 0;\n\n\tprivate _animationStates:Object = new Object();\n\n\t/**\n\t * Enables translation of the animated mesh from data returned per frame via the positionDelta property of the active animation node. Defaults to true.\n\t *\n\t * @see away.animators.IAnimationState#positionDelta\n\t */\n\tpublic updatePosition:boolean = true;\n\n\tpublic getAnimationState(node:AnimationNodeBase):IAnimationState\n\t{\n\t\tvar className:any = node.stateClass;\n\t\tvar uID:number = node.id;\n\n\t\tif (this._animationStates[uID] == null)\n\t\t\tthis._animationStates[uID] = new className(this, node);\n\n\t\treturn this._animationStates[uID];\n\t}\n\n\tpublic getAnimationStateByName(name:string):IAnimationState\n\t{\n\t\treturn this.getAnimationState(this._pAnimationSet.getAnimation(name));\n\t}\n\n\t/**\n\t * Returns the internal absolute time of the animator, calculated by the current time and the playback speed.\n\t *\n\t * @see #time\n\t * @see #playbackSpeed\n\t */\n\tpublic get absoluteTime():number\n\t{\n\t\treturn this._pAbsoluteTime;\n\t}\n\n\t/**\n\t * Returns the animation data set in use by the animator.\n\t */\n\tpublic get animationSet():IAnimationSet\n\t{\n\t\treturn this._pAnimationSet;\n\t}\n\n\t/**\n\t * Returns the current active animation state.\n\t */\n\tpublic get activeState():IAnimationState\n\t{\n\t\treturn this._pActiveState;\n\t}\n\n\t/**\n\t * Returns the current active animation node.\n\t */\n\tpublic get activeAnimation():AnimationNodeBase\n\t{\n\t\treturn this._pAnimationSet.getAnimation(this._pActiveAnimationName);\n\t}\n\n\t/**\n\t * Returns the current active animation node.\n\t */\n\tpublic get activeAnimationName():string\n\t{\n\t\treturn this._pActiveAnimationName;\n\t}\n\n\t/**\n\t * Determines whether the animators internal update mechanisms are active. Used in cases\n\t * where manual updates are required either via the <code>time</code> property or <code>update()</code> method.\n\t * Defaults to true.\n\t *\n\t * @see #time\n\t * @see #update()\n\t */\n\tpublic get autoUpdate():boolean\n\t{\n\t\treturn this._autoUpdate;\n\t}\n\n\tpublic set autoUpdate(value:boolean)\n\t{\n\t\tif (this._autoUpdate == value)\n\t\t\treturn;\n\n\t\tthis._autoUpdate = value;\n\n\t\tif (this._autoUpdate)\n\t\t\tthis.start(); else\n\t\t\tthis.stop();\n\t}\n\n\t/**\n\t * Gets and sets the internal time clock of the animator.\n\t */\n\tpublic get time():number /*int*/\n\t{\n\t\treturn this._time;\n\t}\n\n\tpublic set time(value:number /*int*/)\n\t{\n\t\tif (this._time == value)\n\t\t\treturn;\n\n\t\tthis.update(value);\n\t}\n\n\t/**\n\t * Sets the animation phase of the current active state's animation clip(s).\n\t *\n\t * @param value The phase value to use. 0 represents the beginning of an animation clip, 1 represents the end.\n\t */\n\tpublic phase(value:number)\n\t{\n\t\tthis._pActiveState.phase(value);\n\t}\n\n\t/**\n\t * Creates a new <code>AnimatorBase</code> object.\n\t *\n\t * @param animationSet The animation data set to be used by the animator object.\n\t */\n\tconstructor(animationSet:IAnimationSet)\n\t{\n\t\tsuper();\n\n\t\tthis._pAnimationSet = animationSet;\n\n\t\tthis._broadcaster = new RequestAnimationFrame(this.onEnterFrame, this);\n\t}\n\n\t/**\n\t * The amount by which passed time should be scaled. Used to slow down or speed up animations. Defaults to 1.\n\t */\n\tpublic get playbackSpeed():number\n\t{\n\t\treturn this._playbackSpeed;\n\t}\n\n\tpublic set playbackSpeed(value:number)\n\t{\n\t\tthis._playbackSpeed = value;\n\t}\n\n\tpublic setRenderState(shaderObject:ShaderObjectBase, renderable:RenderableBase, stage:Stage, camera:Camera, vertexConstantOffset:number /*int*/, vertexStreamOffset:number /*int*/)\n\t{\n\t\tthrow new AbstractMethodError();\n\t}\n\n\t/**\n\t * Resumes the automatic playback clock controling the active state of the animator.\n\t */\n\tpublic start()\n\t{\n\t\tif (this._isPlaying || !this._autoUpdate)\n\t\t\treturn;\n\n\t\tthis._time = this._pAbsoluteTime = getTimer();\n\n\t\tthis._isPlaying = true;\n\n\t\tthis._broadcaster.start();\n\n\t\tif (!this.hasEventListener(AnimatorEvent.START))\n\t\t\treturn;\n\n\t\tif (this._startEvent == null)\n\t\t\tthis._startEvent = new AnimatorEvent(AnimatorEvent.START, this);\n\n\t\tthis.dispatchEvent(this._startEvent);\n\t}\n\n\t/**\n\t * Pauses the automatic playback clock of the animator, in case manual updates are required via the\n\t * <code>time</code> property or <code>update()</code> method.\n\t *\n\t * @see #time\n\t * @see #update()\n\t */\n\tpublic stop()\n\t{\n\t\tif (!this._isPlaying)\n\t\t\treturn;\n\n\t\tthis._isPlaying = false;\n\n\t\tthis._broadcaster.stop();\n\n\t\tif (!this.hasEventListener(AnimatorEvent.STOP))\n\t\t\treturn;\n\n\t\tif (this._stopEvent == null)\n\t\t\tthis._stopEvent = new AnimatorEvent(AnimatorEvent.STOP, this);\n\n\t\tthis.dispatchEvent(this._stopEvent);\n\t}\n\n\t/**\n\t * Provides a way to manually update the active state of the animator when automatic\n\t * updates are disabled.\n\t *\n\t * @see #stop()\n\t * @see #autoUpdate\n\t */\n\tpublic update(time:number /*int*/)\n\t{\n\t\tvar dt:number = (time - this._time)*this.playbackSpeed;\n\n\t\tthis._pUpdateDeltaTime(dt);\n\n\t\tthis._time = time;\n\t}\n\n\tpublic reset(name:string, offset:number = 0)\n\t{\n\t\tthis.getAnimationState(this._pAnimationSet.getAnimation(name)).offset(offset + this._pAbsoluteTime);\n\t}\n\n\t/**\n\t * Used by the mesh object to which the animator is applied, registers the owner for internal use.\n\t *\n\t * @private\n\t */\n\tpublic addOwner(mesh:Mesh)\n\t{\n\t\tthis._pOwners.push(mesh);\n\t}\n\n\t/**\n\t * Used by the mesh object from which the animator is removed, unregisters the owner for internal use.\n\t *\n\t * @private\n\t */\n\tpublic removeOwner(mesh:Mesh)\n\t{\n\t\tthis._pOwners.splice(this._pOwners.indexOf(mesh), 1);\n\t}\n\n\t/**\n\t * Internal abstract method called when the time delta property of the animator's contents requires updating.\n\t *\n\t * @private\n\t */\n\tpublic _pUpdateDeltaTime(dt:number)\n\t{\n\t\tthis._pAbsoluteTime += dt;\n\n\t\tthis._pActiveState.update(this._pAbsoluteTime);\n\n\t\tif (this.updatePosition)\n\t\t\tthis.applyPositionDelta();\n\t}\n\n\t/**\n\t * Enter frame event handler for automatically updating the active state of the animator.\n\t */\n\tprivate onEnterFrame(event:Event = null)\n\t{\n\t\tthis.update(getTimer());\n\t}\n\n\tprivate applyPositionDelta()\n\t{\n\t\tvar delta:Vector3D = this._pActiveState.positionDelta;\n\t\tvar dist:number = delta.length;\n\t\tvar len:number /*uint*/;\n\t\tif (dist > 0) {\n\t\t\tlen = this._pOwners.length;\n\t\t\tfor (var i:number /*uint*/ = 0; i < len; ++i)\n\t\t\t\tthis._pOwners[i].translateLocal(delta, dist);\n\t\t}\n\t}\n\n\t/**\n\t *  for internal use.\n\t *\n\t * @private\n\t */\n\tpublic dispatchCycleEvent()\n\t{\n\t\tif (this.hasEventListener(AnimatorEvent.CYCLE_COMPLETE)) {\n\t\t\tif (this._cycleEvent == null)\n\t\t\t\tthis._cycleEvent = new AnimatorEvent(AnimatorEvent.CYCLE_COMPLETE, this);\n\n\t\t\tthis.dispatchEvent(this._cycleEvent);\n\t\t}\n\t}\n\n\t/**\n\t * @inheritDoc\n\t */\n\tpublic clone():AnimatorBase\n\t{\n\t\tthrow new AbstractMethodError();\n\t}\n\n\t/**\n\t * @inheritDoc\n\t */\n\tpublic dispose()\n\t{\n\t}\n\n\t/**\n\t * @inheritDoc\n\t */\n\tpublic testGPUCompatibility(shaderObject:ShaderObjectBase)\n\t{\n\t\tthrow new AbstractMethodError();\n\t}\n\n\t/**\n\t * @inheritDoc\n\t */\n\tpublic get assetType():string\n\t{\n\t\treturn AssetType.ANIMATOR;\n\t}\n\n\n\tpublic getRenderableSubGeometry(renderable:TriangleSubMeshRenderable, sourceSubGeometry:TriangleSubGeometry):TriangleSubGeometry\n\t{\n\t\t//nothing to do here\n\t\treturn sourceSubGeometry;\n\t}\n}\n\nexport = AnimatorBase;","import Matrix3D\t\t\t\t\t\t= require(\"awayjs-core/lib/geom/Matrix3D\");\n\nimport AnimationNodeBase\t\t\t= require(\"awayjs-display/lib/animators/nodes/AnimationNodeBase\");\n\nimport ShaderRegisterCache\t\t\t= require(\"awayjs-stagegl/lib/materials/compilation/ShaderRegisterCache\");\nimport ShaderRegisterElement\t\t= require(\"awayjs-stagegl/lib/materials/compilation/ShaderRegisterElement\");\n\n\n/**\n * ...\n */\nclass AnimationRegisterCache extends ShaderRegisterCache\n{\n\t//vertex\n\tpublic positionAttribute:ShaderRegisterElement;\n\tpublic uvAttribute:ShaderRegisterElement;\n\tpublic positionTarget:ShaderRegisterElement;\n\tpublic scaleAndRotateTarget:ShaderRegisterElement;\n\tpublic velocityTarget:ShaderRegisterElement;\n\tpublic vertexTime:ShaderRegisterElement;\n\tpublic vertexLife:ShaderRegisterElement;\n\tpublic vertexZeroConst:ShaderRegisterElement;\n\tpublic vertexOneConst:ShaderRegisterElement;\n\tpublic vertexTwoConst:ShaderRegisterElement;\n\tpublic uvTarget:ShaderRegisterElement;\n\tpublic colorAddTarget:ShaderRegisterElement;\n\tpublic colorMulTarget:ShaderRegisterElement;\n\t//vary\n\tpublic colorAddVary:ShaderRegisterElement;\n\tpublic colorMulVary:ShaderRegisterElement;\n\n\t//fragment\n\n\tpublic uvVar:ShaderRegisterElement;\n\n\t//these are targets only need to rotate ( normal and tangent )\n\tpublic rotationRegisters:Array<ShaderRegisterElement>;\n\n\tpublic needFragmentAnimation:boolean;\n\tpublic needUVAnimation:boolean;\n\n\tpublic sourceRegisters:Array<string>;\n\tpublic targetRegisters:Array<string>;\n\n\tprivate indexDictionary:Object = new Object();\n\n\t//set true if has an node which will change UV\n\tpublic hasUVNode:boolean;\n\t//set if the other nodes need to access the velocity\n\tpublic needVelocity:boolean;\n\t//set if has a billboard node.\n\tpublic hasBillboard:boolean;\n\t//set if has an node which will apply color multiple operation\n\tpublic hasColorMulNode:boolean;\n\t//set if has an node which will apply color add operation\n\tpublic hasColorAddNode:boolean;\n\n\tconstructor(profile:string)\n\t{\n\t\tsuper(profile);\n\t}\n\n\tpublic reset()\n\t{\n\t\tsuper.reset();\n\n\t\tthis.rotationRegisters = new Array<ShaderRegisterElement>();\n\t\tthis.positionAttribute = this.getRegisterFromString(this.sourceRegisters[0]);\n\t\tthis.scaleAndRotateTarget = this.getRegisterFromString(this.targetRegisters[0]);\n\t\tthis.addVertexTempUsages(this.scaleAndRotateTarget, 1);\n\n\t\tfor (var i:number /*int*/ = 1; i < this.targetRegisters.length; i++) {\n\t\t\tthis.rotationRegisters.push(this.getRegisterFromString(this.targetRegisters[i]));\n\t\t\tthis.addVertexTempUsages(this.rotationRegisters[i - 1], 1);\n\t\t}\n\n\t\tthis.scaleAndRotateTarget = new ShaderRegisterElement(this.scaleAndRotateTarget.regName, this.scaleAndRotateTarget.index); //only use xyz, w is used as vertexLife\n\n\t\t//allot const register\n\n\t\tthis.vertexZeroConst = this.getFreeVertexConstant();\n\t\tthis.vertexZeroConst = new ShaderRegisterElement(this.vertexZeroConst.regName, this.vertexZeroConst.index, 0);\n\t\tthis.vertexOneConst = new ShaderRegisterElement(this.vertexZeroConst.regName, this.vertexZeroConst.index, 1);\n\t\tthis.vertexTwoConst = new ShaderRegisterElement(this.vertexZeroConst.regName, this.vertexZeroConst.index, 2);\n\n\t\t//allot temp register\n\t\tthis.positionTarget = this.getFreeVertexVectorTemp();\n\t\tthis.addVertexTempUsages(this.positionTarget, 1);\n\t\tthis.positionTarget = new ShaderRegisterElement(this.positionTarget.regName, this.positionTarget.index);\n\n\t\tif (this.needVelocity) {\n\t\t\tthis.velocityTarget = this.getFreeVertexVectorTemp();\n\t\t\tthis.addVertexTempUsages(this.velocityTarget, 1);\n\t\t\tthis.velocityTarget = new ShaderRegisterElement(this.velocityTarget.regName, this.velocityTarget.index);\n\t\t\tthis.vertexTime = new ShaderRegisterElement(this.velocityTarget.regName, this.velocityTarget.index, 3);\n\t\t\tthis.vertexLife = new ShaderRegisterElement(this.positionTarget.regName, this.positionTarget.index, 3);\n\t\t} else {\n\t\t\tvar tempTime:ShaderRegisterElement = this.getFreeVertexVectorTemp();\n\t\t\tthis.addVertexTempUsages(tempTime, 1);\n\t\t\tthis.vertexTime = new ShaderRegisterElement(tempTime.regName, tempTime.index, 0);\n\t\t\tthis.vertexLife = new ShaderRegisterElement(tempTime.regName, tempTime.index, 1);\n\t\t}\n\n\t}\n\n\tpublic setUVSourceAndTarget(UVAttribute:string, UVVaring:string)\n\t{\n\t\tthis.uvVar = this.getRegisterFromString(UVVaring);\n\t\tthis.uvAttribute = this.getRegisterFromString(UVAttribute);\n\t\t//uv action is processed after normal actions,so use offsetTarget as uvTarget\n\t\tthis.uvTarget = new ShaderRegisterElement(this.positionTarget.regName, this.positionTarget.index);\n\t}\n\n\tpublic setRegisterIndex(node:AnimationNodeBase, parameterIndex:number /*int*/, registerIndex:number /*int*/)\n\t{\n\t\t//8 should be enough for any node.\n\t\tvar t:Array<number> /*int*/ = this.indexDictionary[node.id];\n\n\t\tif (t == null)\n\t\t\tt = this.indexDictionary[node.id] = new Array<number>(8) /*int*/;\n\n\t\tt[parameterIndex] = registerIndex;\n\t}\n\n\tpublic getRegisterIndex(node:AnimationNodeBase, parameterIndex:number /*int*/):number /*int*/\n\t{\n\t\treturn (<Array<number>> this.indexDictionary[node.id])[parameterIndex];\n\t}\n\n\tpublic getInitCode():string\n\t{\n\t\tvar len:number /*int*/ = this.sourceRegisters.length;\n\t\tvar code:string = \"\";\n\t\tfor (var i:number /*int*/ = 0; i < len; i++)\n\t\t\tcode += \"mov \" + this.targetRegisters[i] + \",\" + this.sourceRegisters[i] + \"\\n\";\n\n\t\tcode += \"mov \" + this.positionTarget + \".xyz,\" + this.vertexZeroConst.toString() + \"\\n\";\n\n\t\tif (this.needVelocity)\n\t\t\tcode += \"mov \" + this.velocityTarget + \".xyz,\" + this.vertexZeroConst.toString() + \"\\n\";\n\n\t\treturn code;\n\t}\n\n\tpublic getCombinationCode():string\n\t{\n\t\treturn \"add \" + this.scaleAndRotateTarget + \".xyz,\" + this.scaleAndRotateTarget + \".xyz,\" + this.positionTarget + \".xyz\\n\";\n\t}\n\n\tpublic initColorRegisters():string\n\t{\n\t\tvar code:string = \"\";\n\t\tif (this.hasColorMulNode) {\n\t\t\tthis.colorMulTarget = this.getFreeVertexVectorTemp();\n\t\t\tthis.addVertexTempUsages(this.colorMulTarget, 1);\n\t\t\tthis.colorMulVary = this.getFreeVarying();\n\t\t\tcode += \"mov \" + this.colorMulTarget + \",\" + this.vertexOneConst + \"\\n\";\n\t\t}\n\t\tif (this.hasColorAddNode) {\n\t\t\tthis.colorAddTarget = this.getFreeVertexVectorTemp();\n\t\t\tthis.addVertexTempUsages(this.colorAddTarget, 1);\n\t\t\tthis.colorAddVary = this.getFreeVarying();\n\t\t\tcode += \"mov \" + this.colorAddTarget + \",\" + this.vertexZeroConst + \"\\n\";\n\t\t}\n\t\treturn code;\n\t}\n\n\tpublic getColorPassCode():string\n\t{\n\t\tvar code:string = \"\";\n\t\tif (this.needFragmentAnimation && (this.hasColorAddNode || this.hasColorMulNode)) {\n\t\t\tif (this.hasColorMulNode)\n\t\t\t\tcode += \"mov \" + this.colorMulVary + \",\" + this.colorMulTarget + \"\\n\";\n\t\t\tif (this.hasColorAddNode)\n\t\t\t\tcode += \"mov \" + this.colorAddVary + \",\" + this.colorAddTarget + \"\\n\";\n\t\t}\n\t\treturn code;\n\t}\n\n\tpublic getColorCombinationCode(shadedTarget:string):string\n\t{\n\t\tvar code:string = \"\";\n\t\tif (this.needFragmentAnimation && (this.hasColorAddNode || this.hasColorMulNode)) {\n\t\t\tvar colorTarget:ShaderRegisterElement = this.getRegisterFromString(shadedTarget);\n\t\t\tthis.addFragmentTempUsages(colorTarget, 1);\n\t\t\tif (this.hasColorMulNode)\n\t\t\t\tcode += \"mul \" + colorTarget + \",\" + colorTarget + \",\" + this.colorMulVary + \"\\n\";\n\t\t\tif (this.hasColorAddNode)\n\t\t\t\tcode += \"add \" + colorTarget + \",\" + colorTarget + \",\" + this.colorAddVary + \"\\n\";\n\t\t}\n\t\treturn code;\n\t}\n\n\tprivate getRegisterFromString(code:string):ShaderRegisterElement\n\t{\n\t\tvar temp:Array<string> = code.split(/(\\d+)/);\n\t\treturn new ShaderRegisterElement(temp[0], parseInt(temp[1]));\n\t}\n\n\tpublic vertexConstantData:Array<number> = new Array<number>();\n\tpublic fragmentConstantData:Array<number> = new Array<number>();\n\n\tprivate _numVertexConstant:number /*int*/;\n\tprivate _numFragmentConstant:number /*int*/;\n\n\tpublic get numVertexConstant():number /*int*/\n\t{\n\t\treturn this._numVertexConstant;\n\t}\n\n\tpublic get numFragmentConstant():number /*int*/\n\t{\n\t\treturn this._numFragmentConstant;\n\t}\n\n\tpublic setDataLength()\n\t{\n\t\tthis._numVertexConstant = this.numUsedVertexConstants - this.vertexConstantOffset;\n\t\tthis._numFragmentConstant = this.numUsedFragmentConstants - this.fragmentConstantOffset;\n\t\tthis.vertexConstantData.length = this._numVertexConstant*4;\n\t\tthis.fragmentConstantData.length = this._numFragmentConstant*4;\n\t}\n\n\tpublic setVertexConst(index:number /*int*/, x:number = 0, y:number = 0, z:number = 0, w:number = 0)\n\t{\n\t\tvar _index:number /*int*/ = (index - this.vertexConstantOffset)*4;\n\t\tthis.vertexConstantData[_index++] = x;\n\t\tthis.vertexConstantData[_index++] = y;\n\t\tthis.vertexConstantData[_index++] = z;\n\t\tthis.vertexConstantData[_index] = w;\n\t}\n\n\tpublic setVertexConstFromArray(index:number /*int*/, data:Array<number>)\n\t{\n\t\tvar _index:number /*int*/ = (index - this.vertexConstantOffset)*4;\n\t\tfor (var i:number /*int*/ = 0; i < data.length; i++)\n\t\t\tthis.vertexConstantData[_index++] = data[i];\n\t}\n\n\tpublic setVertexConstFromMatrix(index:number /*int*/, matrix:Matrix3D)\n\t{\n\t\tvar rawData:Array<number> = matrix.rawData;\n\t\tvar _index:number /*int*/ = (index - this.vertexConstantOffset)*4;\n\t\tthis.vertexConstantData[_index++] = rawData[0];\n\t\tthis.vertexConstantData[_index++] = rawData[4];\n\t\tthis.vertexConstantData[_index++] = rawData[8];\n\t\tthis.vertexConstantData[_index++] = rawData[12];\n\t\tthis.vertexConstantData[_index++] = rawData[1];\n\t\tthis.vertexConstantData[_index++] = rawData[5];\n\t\tthis.vertexConstantData[_index++] = rawData[9];\n\t\tthis.vertexConstantData[_index++] = rawData[13];\n\t\tthis.vertexConstantData[_index++] = rawData[2];\n\t\tthis.vertexConstantData[_index++] = rawData[6];\n\t\tthis.vertexConstantData[_index++] = rawData[10];\n\t\tthis.vertexConstantData[_index++] = rawData[14];\n\t\tthis.vertexConstantData[_index++] = rawData[3];\n\t\tthis.vertexConstantData[_index++] = rawData[7];\n\t\tthis.vertexConstantData[_index++] = rawData[11];\n\t\tthis.vertexConstantData[_index] = rawData[15];\n\n\t}\n\n\tpublic setFragmentConst(index:number /*int*/, x:number = 0, y:number = 0, z:number = 0, w:number = 0)\n\t{\n\t\tvar _index:number /*int*/ = (index - this.fragmentConstantOffset)*4;\n\t\tthis.fragmentConstantData[_index++] = x;\n\t\tthis.fragmentConstantData[_index++] = y;\n\t\tthis.fragmentConstantData[_index++] = z;\n\t\tthis.fragmentConstantData[_index] = w;\n\t}\n}\n\nexport = AnimationRegisterCache;","import BitmapData\t\t\t\t\t= require(\"awayjs-core/lib/base/BitmapData\");\nimport Matrix3D\t\t\t\t\t\t= require(\"awayjs-core/lib/geom/Matrix3D\");\nimport Rectangle\t\t\t\t\t= require(\"awayjs-core/lib/geom/Rectangle\");\nimport AbstractMethodError\t\t\t= require(\"awayjs-core/lib/errors/AbstractMethodError\");\nimport CubeTextureBase\t\t\t\t= require(\"awayjs-core/lib/textures/CubeTextureBase\");\nimport RenderTexture\t\t\t\t= require(\"awayjs-core/lib/textures/RenderTexture\");\nimport Texture2DBase\t\t\t\t= require(\"awayjs-core/lib/textures/Texture2DBase\");\nimport TextureProxyBase\t\t\t\t= require(\"awayjs-core/lib/textures/TextureProxyBase\");\nimport ByteArray\t\t\t\t\t= require(\"awayjs-core/lib/utils/ByteArray\");\n\nimport IMaterialOwner\t\t\t\t= require(\"awayjs-display/lib/base/IMaterialOwner\");\nimport IContext\t\t\t\t\t\t= require(\"awayjs-display/lib/display/IContext\");\nimport Camera\t\t\t\t\t\t= require(\"awayjs-display/lib/entities/Camera\");\n\nimport Stage\t\t\t\t\t\t= require(\"awayjs-stagegl/lib/base/Stage\");\nimport AGALMiniAssembler\t\t\t= require(\"awayjs-stagegl/lib/aglsl/assembler/AGALMiniAssembler\");\nimport AnimatorBase\t\t\t\t\t= require(\"awayjs-stagegl/lib/animators/AnimatorBase\");\nimport AnimationSetBase\t\t\t\t= require(\"awayjs-stagegl/lib/animators/AnimationSetBase\");\nimport IndexData\t\t\t\t\t= require(\"awayjs-stagegl/lib/pool/IndexData\");\nimport MaterialPassData\t\t\t\t= require(\"awayjs-stagegl/lib/pool/MaterialPassData\");\nimport MaterialPassDataPool\t\t\t= require(\"awayjs-stagegl/lib/pool/MaterialPassDataPool\");\nimport TextureData\t\t\t\t\t= require(\"awayjs-stagegl/lib/pool/TextureData\");\nimport TextureDataPool\t\t\t\t= require(\"awayjs-stagegl/lib/pool/TextureDataPool\");\nimport ProgramData\t\t\t\t\t= require(\"awayjs-stagegl/lib/pool/ProgramData\");\nimport ProgramDataPool\t\t\t\t= require(\"awayjs-stagegl/lib/pool/ProgramDataPool\");\nimport RenderableBase\t\t\t\t= require(\"awayjs-stagegl/lib/pool/RenderableBase\");\nimport MaterialData\t\t\t\t\t= require(\"awayjs-stagegl/lib/pool/MaterialData\");\nimport MaterialDataPool\t\t\t\t= require(\"awayjs-stagegl/lib/pool/MaterialDataPool\");\nimport VertexData\t\t\t\t\t= require(\"awayjs-stagegl/lib/pool/VertexData\");\nimport ContextGLClearMask\t\t\t= require(\"awayjs-stagegl/lib/base/ContextGLClearMask\");\nimport ContextGLTextureFormat\t\t= require(\"awayjs-stagegl/lib/base/ContextGLTextureFormat\");\nimport ICubeTexture\t\t\t\t\t= require(\"awayjs-stagegl/lib/base/ICubeTexture\");\nimport IIndexBuffer\t\t\t\t\t= require(\"awayjs-stagegl/lib/base/IIndexBuffer\");\nimport IProgram\t\t\t\t\t\t= require(\"awayjs-stagegl/lib/base/IProgram\");\nimport ITexture\t\t\t\t\t\t= require(\"awayjs-stagegl/lib/base/ITexture\");\nimport ITextureBase\t\t\t\t\t= require(\"awayjs-stagegl/lib/base/ITextureBase\");\nimport IVertexBuffer\t\t\t\t= require(\"awayjs-stagegl/lib/base/IVertexBuffer\");\nimport StageGLMaterialBase\t\t\t= require(\"awayjs-stagegl/lib/materials/StageGLMaterialBase\");\nimport ShaderObjectBase\t\t\t\t= require(\"awayjs-stagegl/lib/materials/compilation/ShaderObjectBase\");\n\n/**\n * Stage provides a proxy class to handle the creation and attachment of the Context\n * (and in turn the back buffer) it uses. Stage should never be created directly,\n * but requested through StageManager.\n *\n * @see away.managers.StageManager\n *\n */\nclass ContextGLBase implements IContext\n{\n\tprivate _programData:Array<ProgramData> = new Array<ProgramData>();\n\tprivate _numUsedStreams:number = 0;\n\tprivate _numUsedTextures:number = 0;\n\n\tpublic _pContainer:HTMLElement;\n\n\tprivate _texturePool:TextureDataPool;\n\n\tprivate _materialDataPool:MaterialDataPool;\n\n\tprivate _programDataPool:ProgramDataPool;\n\n\tprivate _width:number;\n\tprivate _height:number;\n\n\t//private static _frameEventDriver:Shape = new Shape(); // TODO: add frame driver / request animation frame\n\n\tprivate _stageIndex:number = -1;\n\tprivate _antiAlias:number = 0;\n\tprivate _enableDepthAndStencil:boolean;\n\tprivate _renderTarget:TextureProxyBase = null;\n\tprivate _renderSurfaceSelector:number = 0;\n\n\tpublic get container():HTMLElement\n\t{\n\t\treturn this._pContainer;\n\t}\n\n\tconstructor(stageIndex:number)\n\t{\n\t\tthis._stageIndex = stageIndex;\n\t\tthis._texturePool = new TextureDataPool(this);\n\t\tthis._materialDataPool = new MaterialDataPool(this);\n\t\tthis._programDataPool = new ProgramDataPool(this);\n\t}\n\n\tpublic setRenderTarget(target:TextureProxyBase, enableDepthAndStencil:boolean = false, surfaceSelector:number = 0)\n\t{\n\t\tif (this._renderTarget === target && surfaceSelector == this._renderSurfaceSelector && this._enableDepthAndStencil == enableDepthAndStencil)\n\t\t\treturn;\n\n\t\tthis._renderTarget = target;\n\t\tthis._renderSurfaceSelector = surfaceSelector;\n\t\tthis._enableDepthAndStencil = enableDepthAndStencil;\n\t\tif (target instanceof RenderTexture) {\n\t\t\tthis.setRenderToTexture(this.getRenderTexture(<RenderTexture> target), enableDepthAndStencil, this._antiAlias, surfaceSelector);\n\t\t} else {\n\t\t\tthis.setRenderToBackBuffer();\n\t\t\tthis.configureBackBuffer(this._width, this._height, this._antiAlias, this._enableDepthAndStencil);\n\t\t}\n\t}\n\n\tpublic getRenderTexture(textureProxy:RenderTexture):ITextureBase\n\t{\n\t\tvar textureData:TextureData = this._texturePool.getItem(textureProxy);\n\n\t\tif (!textureData.texture)\n\t\t\ttextureData.texture = this.createTexture(textureProxy.width, textureProxy.height, ContextGLTextureFormat.BGRA, true);\n\n\t\treturn textureData.texture;\n\t}\n\n\tpublic getProgram(materialPassData:MaterialPassData):ProgramData\n\t{\n\t\t//check key doesn't need re-concatenating\n\t\tif (!materialPassData.key.length) {\n\t\t\tmaterialPassData.key = materialPassData.animationVertexCode +\n\t\t\t\tmaterialPassData.vertexCode +\n\t\t\t\t\"---\" +\n\t\t\t\tmaterialPassData.fragmentCode +\n\t\t\t\tmaterialPassData.animationFragmentCode +\n\t\t\t\tmaterialPassData.postAnimationFragmentCode;\n\t\t} else {\n\t\t\treturn materialPassData.programData;\n\t\t}\n\n\t\tvar programData:ProgramData = this._programDataPool.getItem(materialPassData.key);\n\n\t\t//check program data hasn't changed, keep count of program usages\n\t\tif (materialPassData.programData != programData) {\n\t\t\tif (materialPassData.programData)\n\t\t\t\tmaterialPassData.programData.dispose();\n\n\t\t\tmaterialPassData.programData = programData;\n\n\t\t\tprogramData.usages++;\n\t\t}\n\n\t\treturn programData;\n\t}\n\n\t/**\n\t *\n\t * @param material\n\t */\n\tpublic getMaterial(material:StageGLMaterialBase, profile:string):MaterialData\n\t{\n\t\tvar materialData:MaterialData = this._materialDataPool.getItem(material);\n\n\t\tif (materialData.invalidAnimation) {\n\t\t\tmaterialData.invalidAnimation = false;\n\n\t\t\tvar materialDataPasses:Array<MaterialPassData> = materialData.getMaterialPasses(profile);\n\n\t\t\tvar enabledGPUAnimation:boolean = this.getEnabledGPUAnimation(material, materialDataPasses);\n\n\t\t\tvar renderOrderId = 0;\n\t\t\tvar mult:number = 1;\n\t\t\tvar materialPassData:MaterialPassData;\n\t\t\tvar len:number = materialDataPasses.length;\n\t\t\tfor (var i:number = 0; i < len; i++) {\n\t\t\t\tmaterialPassData = materialDataPasses[i];\n\n\t\t\t\tif (materialPassData.usesAnimation != enabledGPUAnimation) {\n\t\t\t\t\tmaterialPassData.usesAnimation = enabledGPUAnimation;\n\t\t\t\t\tmaterialPassData.key == \"\";\n\t\t\t\t}\n\n\t\t\t\tif (materialPassData.key == \"\")\n\t\t\t\t\tthis.calcAnimationCode(material, materialPassData);\n\n\t\t\t\trenderOrderId += this.getProgram(materialPassData).id*mult;\n\t\t\t\tmult *= 1000;\n\t\t\t}\n\n\t\t\tmaterialData.renderOrderId = renderOrderId;\n\t\t}\n\n\t\treturn materialData;\n\t}\n\n\t/**\n\t * Assigns an attribute stream\n\t *\n\t * @param index The attribute stream index for the vertex shader\n\t * @param buffer\n\t * @param offset\n\t * @param stride\n\t * @param format\n\t */\n\tpublic activateBuffer(index:number, buffer:VertexData, offset:number, format:string)\n\t{\n\t\tif (!buffer.contexts[this._stageIndex])\n\t\t\tbuffer.contexts[this._stageIndex] = this;\n\n\t\tif (!buffer.buffers[this._stageIndex]) {\n\t\t\tbuffer.buffers[this._stageIndex] = this.createVertexBuffer(buffer.data.length/buffer.dataPerVertex, buffer.dataPerVertex);\n\t\t\tbuffer.invalid[this._stageIndex] = true;\n\t\t}\n\n\t\tif (buffer.invalid[this._stageIndex]) {\n\t\t\tbuffer.buffers[this._stageIndex].uploadFromArray(buffer.data, 0, buffer.data.length/buffer.dataPerVertex);\n\t\t\tbuffer.invalid[this._stageIndex] = false;\n\t\t}\n\n\t\tthis.setVertexBufferAt(index, buffer.buffers[this._stageIndex], offset, format);\n\t}\n\n\tpublic disposeVertexData(buffer:VertexData)\n\t{\n\t\tbuffer.buffers[this._stageIndex].dispose();\n\t\tbuffer.buffers[this._stageIndex] = null;\n\t}\n\n\tpublic activateRenderTexture(index:number, textureProxy:RenderTexture)\n\t{\n\t\tthis.setTextureAt(index, this.getRenderTexture(textureProxy));\n\t}\n\n\tpublic activateMaterialPass(materialPassData:MaterialPassData, stage:Stage, camera:Camera)\n\t{\n\t\tvar shaderObject:ShaderObjectBase = materialPassData.shaderObject;\n\n\t\t//clear unused vertex streams\n\t\tfor (var i = shaderObject.numUsedStreams; i < this._numUsedStreams; i++)\n\t\t\tthis.setVertexBufferAt(i, null);\n\n\t\t//clear unused texture streams\n\t\tfor (var i = shaderObject.numUsedTextures; i < this._numUsedTextures; i++)\n\t\t\tthis.setTextureAt(i, null);\n\n\t\tif (materialPassData.usesAnimation)\n\t\t\t(<AnimationSetBase> materialPassData.material.animationSet).activate(shaderObject, stage);\n\n\t\t//activate shader object\n\t\tshaderObject.iActivate(stage, camera);\n\n\t\t//check program data is uploaded\n\t\tvar programData:ProgramData = this.getProgram(materialPassData);\n\n\t\tif (!programData.program) {\n\t\t\tprogramData.program = this.createProgram();\n\t\t\tvar vertexByteCode:ByteArray = (new AGALMiniAssembler().assemble(\"part vertex 1\\n\" + materialPassData.animationVertexCode + materialPassData.vertexCode + \"endpart\"))['vertex'].data;\n\t\t\tvar fragmentByteCode:ByteArray = (new AGALMiniAssembler().assemble(\"part fragment 1\\n\" + materialPassData.fragmentCode + materialPassData.animationFragmentCode + materialPassData.postAnimationFragmentCode + \"endpart\"))['fragment'].data;\n\t\t\tprogramData.program.upload(vertexByteCode, fragmentByteCode);\n\t\t}\n\n\t\t//set program data\n\t\tthis.setProgram(programData.program);\n\t}\n\n\tpublic deactivateMaterialPass(materialPassData:MaterialPassData, stage:Stage)\n\t{\n\t\tvar shaderObject:ShaderObjectBase = materialPassData.shaderObject;\n\n\t\tif (materialPassData.usesAnimation)\n\t\t\t(<AnimationSetBase> materialPassData.material.animationSet).deactivate(shaderObject, stage);\n\n\t\tmaterialPassData.shaderObject.iDeactivate(stage);\n\n\t\tthis._numUsedStreams = shaderObject.numUsedStreams;\n\t\tthis._numUsedTextures = shaderObject.numUsedTextures;\n\t}\n\n\tpublic activateTexture(index:number, textureProxy:Texture2DBase)\n\t{\n\t\tvar textureData:TextureData = <TextureData> this._texturePool.getItem(textureProxy);\n\n\t\tif (!textureData.texture) {\n\t\t\ttextureData.texture = this.createTexture(textureProxy.width, textureProxy.height, ContextGLTextureFormat.BGRA, true);\n\t\t\ttextureData.invalid = true;\n\t\t}\n\n\t\tif (textureData.invalid) {\n\t\t\ttextureData.invalid = false;\n\t\t\tif (textureProxy.generateMipmaps) {\n\t\t\t\tvar mipmapData:Array<BitmapData> = textureProxy._iGetMipmapData();\n\t\t\t\tvar len:number = mipmapData.length;\n\t\t\t\tfor (var i:number = 0; i < len; i++)\n\t\t\t\t\t(<ITexture> textureData.texture).uploadFromData(mipmapData[i], i);\n\t\t\t} else {\n\t\t\t\t(<ITexture> textureData.texture).uploadFromData(textureProxy._iGetTextureData(), 0);\n\t\t\t}\n\t\t}\n\n\t\tthis.setTextureAt(index, textureData.texture);\n\t}\n\n\tpublic activateCubeTexture(index:number, textureProxy:CubeTextureBase)\n\t{\n\t\tvar textureData:TextureData = <TextureData> this._texturePool.getItem(textureProxy);\n\n\t\tif (!textureData.texture) {\n\t\t\ttextureData.texture = this.createCubeTexture(textureProxy.size, ContextGLTextureFormat.BGRA, false);\n\t\t\ttextureData.invalid = true;\n\t\t}\n\n\t\tif (textureData.invalid) {\n\t\t\ttextureData.invalid = false;\n\t\t\tfor (var i:number = 0; i < 6; ++i) {\n\t\t\t\tif (textureProxy.generateMipmaps) {\n\t\t\t\t\tvar mipmapData:Array<BitmapData> = textureProxy._iGetMipmapData(i);\n\t\t\t\t\tvar len:number = mipmapData.length;\n\t\t\t\t\tfor (var j:number = 0; j < len; j++)\n\t\t\t\t\t\t(<ICubeTexture> textureData.texture).uploadFromData(mipmapData[j], i, j);\n\t\t\t\t} else {\n\t\t\t\t\t(<ICubeTexture> textureData.texture).uploadFromData(textureProxy._iGetTextureData(i), i, 0);\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t\tthis.setTextureAt(index, textureData.texture);\n\t}\n\n\t/**\n\t * Retrieves the VertexBuffer object that contains triangle indices.\n\t * @param context The ContextWeb for which we request the buffer\n\t * @return The VertexBuffer object that contains triangle indices.\n\t */\n\tpublic getIndexBuffer(buffer:IndexData):IIndexBuffer\n\t{\n\t\tif (!buffer.contexts[this._stageIndex])\n\t\t\tbuffer.contexts[this._stageIndex] = this;\n\n\t\tif (!buffer.buffers[this._stageIndex]) {\n\t\t\tbuffer.buffers[this._stageIndex] = this.createIndexBuffer(buffer.data.length);\n\t\t\tbuffer.invalid[this._stageIndex] = true;\n\t\t}\n\n\t\tif (buffer.invalid[this._stageIndex]) {\n\t\t\tbuffer.buffers[this._stageIndex].uploadFromArray(buffer.data, 0, buffer.data.length);\n\t\t\tbuffer.invalid[this._stageIndex] = false;\n\t\t}\n\n\t\treturn buffer.buffers[this._stageIndex];\n\t}\n\n\tpublic disposeIndexData(buffer:IndexData)\n\t{\n\t\tbuffer.buffers[this._stageIndex].dispose();\n\t\tbuffer.buffers[this._stageIndex] = null;\n\t}\n\n\tpublic clear(red:number = 0, green:number = 0, blue:number = 0, alpha:number = 1, depth:number = 1, stencil:number = 0, mask:number = ContextGLClearMask.ALL)\n\t{\n\n\t}\n\n\tpublic configureBackBuffer(width:number, height:number, antiAlias:number, enableDepthAndStencil:boolean = true)\n\t{\n\t\tthis._width = width;\n\t\tthis._height = height;\n\t}\n\n\tpublic createIndexBuffer(numIndices:number):IIndexBuffer\n\t{\n\t\tthrow new AbstractMethodError();\n\t}\n\n\tpublic createVertexBuffer(numVertices:number, data32PerVertex:number):IVertexBuffer\n\t{\n\t\tthrow new AbstractMethodError();\n\t}\n\n\tpublic createTexture(width:number, height:number, format:string, optimizeForRenderToTexture:boolean, streamingLevels:number = 0):ITexture\n\t{\n\t\tthrow new AbstractMethodError();\n\t}\n\n\tpublic createCubeTexture(size:number, format:string, optimizeForRenderToTexture:boolean, streamingLevels:number = 0):ICubeTexture\n\t{\n\t\tthrow new AbstractMethodError();\n\t}\n\n\tpublic createProgram():IProgram\n\t{\n\t\tthrow new AbstractMethodError();\n\t}\n\n\tpublic dispose()\n\t{\n\n\t}\n\n\tpublic present()\n\t{\n\n\t}\n\n\tpublic setRenderToTexture(target:ITextureBase, enableDepthAndStencil:boolean = false, antiAlias:number = 0, surfaceSelector:number = 0)\n\t{\n\n\t}\n\n\tpublic setRenderToBackBuffer()\n\t{\n\n\t}\n\n\tpublic setScissorRectangle(rectangle:Rectangle)\n\t{\n\n\t}\n\n\tpublic setTextureAt(sampler:number, texture:ITextureBase)\n\t{\n\n\t}\n\n\tpublic setVertexBufferAt(index:number, buffer:IVertexBuffer, bufferOffset:number = 0, format:string = null)\n\t{\n\n\t}\n\n\tpublic setProgram(program:IProgram)\n\t{\n\n\t}\n\n\tpublic registerProgram(programData:ProgramData)\n\t{\n\t\tvar i:number = 0;\n\t\twhile (this._programData[i] != null)\n\t\t\ti++;\n\n\t\tthis._programData[i] = programData;\n\t\tprogramData.id = i;\n\t}\n\n\tpublic unRegisterProgram(programData:ProgramData)\n\t{\n\t\tthis._programData[programData.id] = null;\n\t\tprogramData.id = -1;\n\t}\n\n\n\t/**\n\t * test if animation will be able to run on gpu BEFORE compiling materials\n\t * test if the shader objects supports animating the animation set in the vertex shader\n\t * if any object using this material fails to support accelerated animations for any of the shader objects,\n\t * we should do everything on cpu (otherwise we have the cost of both gpu + cpu animations)\n\t */\n\tprivate getEnabledGPUAnimation(material:StageGLMaterialBase, materialDataPasses:Array<MaterialPassData>):boolean\n\t{\n\t\tif (material.animationSet) {\n\t\t\tmaterial.animationSet.resetGPUCompatibility();\n\n\t\t\tvar owners:Array<IMaterialOwner> = material.iOwners;\n\t\t\tvar numOwners:number = owners.length;\n\n\t\t\tvar len:number = materialDataPasses.length;\n\t\t\tfor (var i:number = 0; i < len; i++)\n\t\t\t\tfor (var j:number = 0; j < numOwners; j++)\n\t\t\t\t\tif (owners[j].animator)\n\t\t\t\t\t\t(<AnimatorBase> owners[j].animator).testGPUCompatibility(materialDataPasses[i].shaderObject);\n\n\t\t\treturn !material.animationSet.usesCPU;\n\t\t}\n\n\t\treturn false;\n\t}\n\n\tpublic calcAnimationCode(material:StageGLMaterialBase, materialPassData:MaterialPassData)\n\t{\n\t\t//reset key so that the program is re-calculated\n\t\tmaterialPassData.key = \"\";\n\t\tmaterialPassData.animationVertexCode = \"\";\n\t\tmaterialPassData.animationFragmentCode = \"\";\n\n\t\tvar shaderObject:ShaderObjectBase = materialPassData.shaderObject;\n\n\t\t//check to see if GPU animation is used\n\t\tif (materialPassData.usesAnimation) {\n\n\t\t\tvar animationSet:AnimationSetBase = <AnimationSetBase> material.animationSet;\n\n\t\t\tmaterialPassData.animationVertexCode += animationSet.getAGALVertexCode(shaderObject);\n\n\t\t\tif (shaderObject.uvDependencies > 0 && !shaderObject.usesUVTransform)\n\t\t\t\tmaterialPassData.animationVertexCode += animationSet.getAGALUVCode(shaderObject);\n\n\t\t\tif (shaderObject.usesFragmentAnimation)\n\t\t\t\tmaterialPassData.animationFragmentCode += animationSet.getAGALFragmentCode(shaderObject, materialPassData.shadedTarget);\n\n\t\t\tanimationSet.doneAGALCode(shaderObject);\n\n\t\t} else {\n\t\t\t// simply write attributes to targets, do not animate them\n\t\t\t// projection will pick up on targets[0] to do the projection\n\t\t\tvar len:number = shaderObject.animatableAttributes.length;\n\t\t\tfor (var i:number = 0; i < len; ++i)\n\t\t\t\tmaterialPassData.animationVertexCode += \"mov \" + shaderObject.animationTargetRegisters[i] + \", \" + shaderObject.animatableAttributes[i] + \"\\n\";\n\n\t\t\tif (shaderObject.uvDependencies > 0 && !shaderObject.usesUVTransform)\n\t\t\t\tmaterialPassData.animationVertexCode += \"mov \" + shaderObject.uvTarget + \",\" + shaderObject.uvSource + \"\\n\";\n\t\t}\n\t}\n}\n\nexport = ContextGLBase;","class ContextGLBlendFactor\n{\n\tpublic static DESTINATION_ALPHA:string = \"destinationAlpha\";\n\tpublic static DESTINATION_COLOR:string = \"destinationColor\";\n\tpublic static ONE:string = \"one\";\n\tpublic static ONE_MINUS_DESTINATION_ALPHA:string = \"oneMinusDestinationAlpha\";\n\tpublic static ONE_MINUS_DESTINATION_COLOR:string = \"oneMinusDestinationColor\";\n\tpublic static ONE_MINUS_SOURCE_ALPHA:string = \"oneMinusSourceAlpha\";\n\tpublic static ONE_MINUS_SOURCE_COLOR:string = \"oneMinusSourceColor\";\n\tpublic static SOURCE_ALPHA:string = \"sourceAlpha\";\n\tpublic static SOURCE_COLOR:string = \"sourceColor\";\n\tpublic static ZERO:string = \"zero\";\n}\n\nexport = ContextGLBlendFactor;","class ContextGLClearMask\n{\n\tstatic COLOR:number = 1;\n\tstatic DEPTH:number = 2;\n\tstatic STENCIL:number = 4;\n\tstatic ALL:number = ContextGLClearMask.COLOR | ContextGLClearMask.DEPTH | ContextGLClearMask.STENCIL;\n}\n\nexport = ContextGLClearMask;","class ContextGLCompareMode\n{\n\tpublic static ALWAYS:string = \"always\";\n\tpublic static EQUAL:string = \"equal\";\n\tpublic static GREATER:string = \"greater\";\n\tpublic static GREATER_EQUAL:string = \"greaterEqual\";\n\tpublic static LESS:string = \"less\";\n\tpublic static LESS_EQUAL:string = \"lessEqual\";\n\tpublic static NEVER:string = \"never\";\n\tpublic static NOT_EQUAL:string = \"notEqual\";\n}\n\nexport = ContextGLCompareMode;","class ContextGLMipFilter\n{\n\tpublic static MIPLINEAR:string = \"miplinear\";\n\tpublic static MIPNEAREST:string = \"mipnearest\";\n\tpublic static MIPNONE:string = \"mipnone\";\n}\n\nexport = ContextGLMipFilter;","class ContextGLProfile\n{\n\tpublic static BASELINE:string = \"baseline\";\n\tpublic static BASELINE_CONSTRAINED:string = \"baselineConstrained\";\n\tpublic static BASELINE_EXTENDED:string = \"baselineExtended\";\n}\nexport = ContextGLProfile;","class ContextGLProgramType\n{\n\tstatic FRAGMENT:string = \"fragment\";\n\tstatic VERTEX:string = \"vertex\";\n}\n\nexport = ContextGLProgramType;","class ContextGLStencilAction\n{\n\tpublic static DECREMENT_SATURATE:string = \"decrementSaturate\";\n\tpublic static DECREMENT_WRAP:string = \"decrementWrap\";\n\tpublic static INCREMENT_SATURATE:string = \"incrementSaturate\";\n\tpublic static INCREMENT_WRAP:string = \"incrementWrap\";\n\tpublic static INVERT:string = \"invert\";\n\tpublic static KEEP:string = \"keep\";\n\tpublic static SET:string = \"set\";\n\tpublic static ZERO:string = \"zero\";\n}\n\nexport = ContextGLStencilAction;","class ContextGLTextureFilter\n{\n\tpublic static LINEAR:string = \"linear\";\n\tpublic static NEAREST:string = \"nearest\";\n}\n\nexport = ContextGLTextureFilter;","class ContextGLTextureFormat\n{\n\tstatic BGRA:string = \"bgra\";\n\tstatic BGRA_PACKED:string = \"bgraPacked4444\";\n\tstatic BGR_PACKED:string = \"bgrPacked565\";\n\tstatic COMPRESSED:string = \"compressed\";\n\tstatic COMPRESSED_ALPHA:string = \"compressedAlpha\";\n}\n\nexport = ContextGLTextureFormat;","class ContextGLTriangleFace\n{\n\tstatic BACK:string = \"back\";\n\tstatic FRONT:string = \"front\";\n\tstatic FRONT_AND_BACK:string = \"frontAndBack\";\n\tstatic NONE:string = \"none\";\n}\n\nexport = ContextGLTriangleFace;","class ContextGLVertexBufferFormat\n{\n\tstatic BYTES_4:string = \"bytes4\";\n\tstatic FLOAT_1:string = \"float1\";\n\tstatic FLOAT_2:string = \"float2\";\n\tstatic FLOAT_3:string = \"float3\";\n\tstatic FLOAT_4:string = \"float4\";\n}\n\nexport = ContextGLVertexBufferFormat;","class ContextGLWrapMode\n{\n\tpublic static CLAMP:string = \"clamp\";\n\tpublic static REPEAT:string = \"repeat\";\n}\n\nexport = ContextGLWrapMode;","import BitmapData\t\t\t\t\t= require(\"awayjs-core/lib/base/BitmapData\");\nimport Matrix3D\t\t\t\t\t\t= require(\"awayjs-core/lib/geom/Matrix3D\");\nimport Rectangle\t\t\t\t\t= require(\"awayjs-core/lib/geom/Rectangle\");\n\nimport swfobject\t\t\t\t\t= require(\"awayjs-stagegl/lib/swfobject\");\nimport Sampler\t\t\t\t\t\t= require(\"awayjs-stagegl/lib/aglsl/Sampler\");\nimport ContextGLBase\t\t\t\t= require(\"awayjs-stagegl/lib/base/ContextGLBase\");\nimport ContextGLClearMask\t\t\t= require(\"awayjs-stagegl/lib/base/ContextGLClearMask\");\nimport ContextGLProgramType\t\t\t= require(\"awayjs-stagegl/lib/base/ContextGLProgramType\");\nimport CubeTextureFlash\t\t\t\t= require(\"awayjs-stagegl/lib/base/CubeTextureFlash\");\nimport IContextStageGL\t\t\t\t= require(\"awayjs-stagegl/lib/base/IContextStageGL\");\nimport IndexBufferFlash\t\t\t\t= require(\"awayjs-stagegl/lib/base/IndexBufferFlash\");\nimport OpCodes\t\t\t\t\t\t= require(\"awayjs-stagegl/lib/base/OpCodes\");\nimport ProgramFlash\t\t\t\t\t= require(\"awayjs-stagegl/lib/base/ProgramFlash\");\nimport TextureFlash\t\t\t\t\t= require(\"awayjs-stagegl/lib/base/TextureFlash\");\nimport ResourceBaseFlash\t\t\t= require(\"awayjs-stagegl/lib/base/ResourceBaseFlash\");\nimport VertexBufferFlash\t\t\t= require(\"awayjs-stagegl/lib/base/VertexBufferFlash\");\n\nclass ContextStage3D extends ContextGLBase implements IContextStageGL\n{\n\tpublic static contexts:Object = new Object();\n\tpublic static maxvertexconstants:number = 128;\n\tpublic static maxfragconstants:number = 28;\n\tpublic static maxtemp:number = 8;\n\tpublic static maxstreams:number = 8;\n\tpublic static maxtextures:number = 8;\n\tpublic static defaultsampler = new Sampler();\n\n\tpublic _iDriverInfo;\n\n\tprivate _cmdStream:string = \"\";\n\tprivate _errorCheckingEnabled:boolean;\n\tprivate _resources:Array<ResourceBaseFlash>;\n\tprivate _oldCanvas:HTMLCanvasElement;\n\tprivate _oldParent:HTMLElement;\n\n\n\tpublic static debug:boolean = false;\n\tpublic static logStream:boolean = false;\n\n\tpublic _iCallback:(context:IContextStageGL) => void;\n\n\tpublic get container():HTMLElement\n\t{\n\t\treturn this._pContainer;\n\t}\n\n\tpublic get driverInfo()\n\t{\n\t\treturn this._iDriverInfo;\n\t}\n\n\tpublic get errorCheckingEnabled():boolean\n\t{\n\t\treturn this._errorCheckingEnabled;\n\t}\n\n\tpublic set errorCheckingEnabled(value:boolean)\n\t{\n\t\tif (this._errorCheckingEnabled == value)\n\t\t\treturn;\n\n\t\tthis._errorCheckingEnabled = value;\n\n\t\tthis.addStream(String.fromCharCode(OpCodes.enableErrorChecking, value? OpCodes.trueValue : OpCodes.falseValue));\n\t\tthis.execute();\n\t}\n\n\t//TODO: get rid of hack that fixes including definition file\n\tconstructor(container:HTMLCanvasElement, stageIndex:number, callback:(context:IContextStageGL) => void, include?:Sampler)\n\t{\n\t\tsuper(stageIndex);\n\n\t\tthis._resources = new Array<ResourceBaseFlash>();\n\n\t\tvar swfVersionStr = \"11.0.0\";\n\n\t\t// To use express install, set to playerProductInstall.swf, otherwise the empty string.\n\t\tvar flashvars = {\n\t\t\tid:container.id\n\t\t};\n\n\t\tvar params = {\n\t\t\tquality:\"high\",\n\t\t\tbgcolor:\"#ffffff\",\n\t\t\tallowscriptaccess:\"sameDomain\",\n\t\t\tallowfullscreen:\"true\",\n\t\t\twmode:\"direct\"\n\t\t};\n\n\t\tthis._errorCheckingEnabled = false;\n\t\tthis._iDriverInfo = \"Unknown\";\n\n\t\tvar attributes = {\n\t\t\tsalign:\"tl\",\n\t\t\tid:container.id,\n\t\t\tname:container[\"name\"] //TODO: needed?\n\t\t};\n\n\t\tthis._oldCanvas = <HTMLCanvasElement> container.cloneNode(); // keep the old one to restore on dispose\n\t\tthis._oldParent = <HTMLElement> container.parentNode;\n\n\t\tvar context3dObj = this;\n\t\tContextStage3D.contexts[container.id] = this;\n\n\t\tfunction callbackSWFObject(callbackInfo)\n\t\t{\n\t\t\tif (!callbackInfo.success)\n\t\t\t\treturn;\n\n\t\t\tcontext3dObj._pContainer = callbackInfo.ref;\n\t\t\tcontext3dObj._iCallback = callback;\n\t\t}\n\n\t\tswfobject.embedSWF(\"libs/molehill_js_flashbridge.swf\", container.id, String(container.width), String(container.height), swfVersionStr, \"\", flashvars, params, attributes, callbackSWFObject);\n\t}\n\n\tpublic _iAddResource(resource:ResourceBaseFlash)\n\t{\n\t\tthis._resources.push(resource);\n\t}\n\n\tpublic _iRemoveResource(resource:ResourceBaseFlash)\n\t{\n\t\tthis._resources.splice(this._resources.indexOf(resource));\n\t}\n\n\tpublic createTexture(width:number, height:number, format:string, optimizeForRenderToTexture:boolean, streamingLevels:number = 0):TextureFlash\n\t{\n\t\t//TODO:streaming\n\t\treturn new TextureFlash(this, width, height, format, optimizeForRenderToTexture);\n\t}\n\n\tpublic createCubeTexture(size:number, format:string, optimizeForRenderToTexture:boolean, streamingLevels:number = 0):CubeTextureFlash\n\t{\n\t\t//TODO:streaming\n\t\treturn new CubeTextureFlash(this, size, format, optimizeForRenderToTexture);\n\t}\n\n\n\tpublic setTextureAt(sampler:number, texture:ResourceBaseFlash)\n\t{\n\t\tif (texture) {\n\t\t\tthis.addStream(String.fromCharCode(OpCodes.setTextureAt) + sampler + \",\" + texture.id + \",\");\n\t\t} else {\n\t\t\tthis.addStream(String.fromCharCode(OpCodes.clearTextureAt) + sampler.toString() + \",\");\n\t\t}\n\n\t\tif (ContextStage3D.debug)\n\t\t\tthis.execute();\n\t}\n\n\tpublic setSamplerStateAt(sampler:number, wrap:string, filter:string, mipfilter:string):void\n\t{\n\t\t//nothing to do here\n\t}\n\n\tpublic setStencilActions(triangleFace:string = \"frontAndBack\", compareMode:string = \"always\", actionOnBothPass:string = \"keep\", actionOnDepthFail:string = \"keep\", actionOnDepthPassStencilFail:string = \"keep\")\n\t{\n\t\tthis.addStream(String.fromCharCode(OpCodes.setStencilActions) + triangleFace + \"$\" + compareMode + \"$\" + actionOnBothPass + \"$\" + actionOnDepthFail + \"$\" + actionOnDepthPassStencilFail + \"$\");\n\n\t\tif (ContextStage3D.debug)\n\t\t\tthis.execute();\n\t}\n\n\tpublic setStencilReferenceValue(referenceValue:number, readMask:number = 255, writeMask:number = 255)\n\t{\n\t\tthis.addStream(String.fromCharCode(OpCodes.setStencilReferenceValue, referenceValue + OpCodes.intMask, readMask + OpCodes.intMask, writeMask + OpCodes.intMask));\n\n\t\tif (ContextStage3D.debug)\n\t\t\tthis.execute();\n\t}\n\n\tpublic setCulling(triangleFaceToCull:string, coordinateSystem:string = \"leftHanded\")\n\t{\n\t\t//TODO implement coordinateSystem option\n\t\tthis.addStream(String.fromCharCode(OpCodes.setCulling) + triangleFaceToCull + \"$\");\n\n\t\tif (ContextStage3D.debug)\n\t\t\tthis.execute();\n\t}\n\n\tpublic drawTriangles(indexBuffer:IndexBufferFlash, firstIndex:number = 0, numTriangles:number = -1)\n\t{\n\t\tfirstIndex = firstIndex || 0;\n\t\tif (!numTriangles || numTriangles < 0)\n\t\t\tnumTriangles = indexBuffer.numIndices/3;\n\n\t\tthis.addStream(String.fromCharCode(OpCodes.drawTriangles, indexBuffer.id + OpCodes.intMask) + firstIndex + \",\" + numTriangles + \",\");\n\n\t\tif (ContextStage3D.debug)\n\t\t\tthis.execute();\n\t}\n\n\tpublic setProgramConstantsFromMatrix(programType:string, firstRegister:number, matrix:Matrix3D, transposedMatrix:boolean = false)\n\t{\n\t\t//this._gl.uniformMatrix4fv(this._gl.getUniformLocation(this._currentProgram.glProgram, this._uniformLocationNameDictionary[programType]), !transposedMatrix, new Float32Array(matrix.rawData));\n\n\t\t//TODO remove special case for WebGL matrix calls?\n\t\tvar d:number[] = matrix.rawData;\n\t\tif (transposedMatrix) {\n\t\t\tthis.setProgramConstantsFromArray(programType, firstRegister, [ d[0], d[4], d[8], d[12] ], 1);\n\t\t\tthis.setProgramConstantsFromArray(programType, firstRegister + 1, [ d[1], d[5], d[9], d[13] ], 1);\n\t\t\tthis.setProgramConstantsFromArray(programType, firstRegister + 2, [ d[2], d[6], d[10], d[14] ], 1);\n\t\t\tthis.setProgramConstantsFromArray(programType, firstRegister + 3, [ d[3], d[7], d[11], d[15] ], 1);\n\t\t} else {\n\t\t\tthis.setProgramConstantsFromArray(programType, firstRegister, [ d[0], d[1], d[2], d[3] ], 1);\n\t\t\tthis.setProgramConstantsFromArray(programType, firstRegister + 1, [ d[4], d[5], d[6], d[7] ], 1);\n\t\t\tthis.setProgramConstantsFromArray(programType, firstRegister + 2, [ d[8], d[9], d[10], d[11] ], 1);\n\t\t\tthis.setProgramConstantsFromArray(programType, firstRegister + 3, [ d[12], d[13], d[14], d[15] ], 1);\n\t\t}\n\t}\n\n\tpublic setProgramConstantsFromArray(programType:string, firstRegister:number, data:number[], numRegisters:number = -1)\n\t{\n\t\tvar startIndex:number;\n\t\tvar target:number = (programType == ContextGLProgramType.VERTEX)? OpCodes.trueValue : OpCodes.falseValue;\n\t\tfor (var i:number = 0; i < numRegisters; i++) {\n\t\t\tstartIndex = i*4;\n\t\t\tthis.addStream(String.fromCharCode(OpCodes.setProgramConstant, target, (firstRegister + i) + OpCodes.intMask) + data[startIndex] + \",\" + data[startIndex + 1] + \",\" + data[startIndex + 2] + \",\" + data[startIndex + 3] + \",\");\n\n\t\t\tif (ContextStage3D.debug)\n\t\t\t\tthis.execute();\n\t\t}\n\t}\n\n\tpublic setProgram(program:ProgramFlash)\n\t{\n\t\tthis.addStream(String.fromCharCode(OpCodes.setProgram, program.id + OpCodes.intMask));\n\n\t\tif (ContextStage3D.debug)\n\t\t\tthis.execute();\n\t}\n\n\tpublic present()\n\t{\n\t\tthis.addStream(String.fromCharCode(OpCodes.present));\n\t\tthis.execute();\n\t}\n\n\tpublic clear(red:number = 0, green:number = 0, blue:number = 0, alpha:number = 1, depth:number = 1, stencil:number = 0, mask:number = ContextGLClearMask.ALL)\n\t{\n\t\tthis.addStream(String.fromCharCode(OpCodes.clear) + red + \",\" + green + \",\" + blue + \",\" + alpha + \",\" + depth + \",\" + stencil + \",\" + mask + \",\");\n\n\t\tif (ContextStage3D.debug)\n\t\t\tthis.execute();\n\t}\n\n\tpublic createProgram():ProgramFlash\n\t{\n\t\treturn new ProgramFlash(this);\n\t}\n\n\tpublic createVertexBuffer(numVertices:number, data32PerVertex:number):VertexBufferFlash\n\t{\n\t\treturn new VertexBufferFlash(this, numVertices, data32PerVertex);\n\t}\n\n\tpublic createIndexBuffer(numIndices:number):IndexBufferFlash\n\t{\n\t\treturn new IndexBufferFlash(this, numIndices);\n\t}\n\n\tpublic configureBackBuffer(width:number, height:number, antiAlias:number, enableDepthAndStencil:boolean = true)\n\t{\n\t\tsuper.configureBackBuffer(width, height, antiAlias, enableDepthAndStencil);\n\n\t\t//TODO: add Anitalias setting\n\t\tthis.addStream(String.fromCharCode(OpCodes.configureBackBuffer) + width + \",\" + height + \",\");\n\t}\n\n\tpublic drawToBitmapData(destination:BitmapData)\n\t{\n\t\t//TODO\n\t}\n\n\tpublic setVertexBufferAt(index:number, buffer:VertexBufferFlash, bufferOffset:number = 0, format:string = null)\n\t{\n\t\tif (buffer) {\n\t\t\tthis.addStream(String.fromCharCode(OpCodes.setVertexBufferAt, index + OpCodes.intMask) + buffer.id + \",\" + bufferOffset + \",\" + format + \"$\");\n\t\t} else {\n\t\t\tthis.addStream(String.fromCharCode(OpCodes.clearVertexBufferAt, index + OpCodes.intMask));\n\t\t}\n\n\t\tif (ContextStage3D.debug)\n\t\t\tthis.execute();\n\t}\n\n\tpublic setColorMask(red:boolean, green:boolean, blue:boolean, alpha:boolean)\n\t{\n\t\tthis.addStream(String.fromCharCode(OpCodes.setColorMask, red? OpCodes.trueValue : OpCodes.falseValue, green? OpCodes.trueValue : OpCodes.falseValue, blue? OpCodes.trueValue : OpCodes.falseValue, alpha? OpCodes.trueValue : OpCodes.falseValue));\n\n\t\tif (ContextStage3D.debug)\n\t\t\tthis.execute();\n\t}\n\n\tpublic setBlendFactors(sourceFactor:string, destinationFactor:string)\n\t{\n\t\tthis.addStream(String.fromCharCode(OpCodes.setBlendFactors) + sourceFactor + \"$\" + destinationFactor + \"$\");\n\n\t\tif (ContextStage3D.debug)\n\t\t\tthis.execute();\n\t}\n\n\tpublic setRenderToTexture(target:ResourceBaseFlash, enableDepthAndStencil:boolean = false, antiAlias:number = 0, surfaceSelector:number = 0)\n\t{\n\t\tif (target === null || target === undefined) {\n\t\t\tthis.addStream(String.fromCharCode(OpCodes.clearRenderToTexture));\n\t\t} else {\n\t\t\tthis.addStream(String.fromCharCode(OpCodes.setRenderToTexture, enableDepthAndStencil? OpCodes.trueValue : OpCodes.falseValue) + target.id + \",\" + (antiAlias || 0) + \",\");\n\t\t}\n\n\t\tif (ContextStage3D.debug)\n\t\t\tthis.execute();\n\t}\n\n\n\tpublic setRenderToBackBuffer()\n\t{\n\t\tthis.addStream(String.fromCharCode(OpCodes.clearRenderToTexture));\n\n\t\tif (ContextStage3D.debug)\n\t\t\tthis.execute();\n\t}\n\n\tpublic setScissorRectangle(rectangle:Rectangle)\n\t{\n\t\tif (rectangle) {\n\t\t\tthis.addStream(String.fromCharCode(OpCodes.setScissorRect) + rectangle.x + \",\" + rectangle.y + \",\" + rectangle.width + \",\" + rectangle.height + \",\");\n\t\t} else {\n\t\t\tthis.addStream(String.fromCharCode(OpCodes.clearScissorRect));\n\t\t}\n\n\t\tif (ContextStage3D.debug)\n\t\t\tthis.execute();\n\t}\n\n\tpublic setDepthTest(depthMask:boolean, passCompareMode:string)\n\t{\n\t\tthis.addStream(String.fromCharCode(OpCodes.setDepthTest, depthMask? OpCodes.trueValue : OpCodes.falseValue) + passCompareMode + \"$\");\n\n\t\tif (ContextStage3D.debug)\n\t\t\tthis.execute();\n\t}\n\n\tpublic dispose()\n\t{\n\t\tif (this._pContainer == null)\n\t\t\treturn;\n\n\t\tconsole.log(\"Context3D dispose, releasing \" + this._resources.length + \" resources.\");\n\n\t\twhile (this._resources.length)\n\t\t\tthis._resources[0].dispose();\n\n\t\tif (this._pContainer) {\n\t\t\t// encode command\n\t\t\tthis.addStream(String.fromCharCode(OpCodes.disposeContext));\n\t\t\tthis.execute();\n\t\t\tswfobject.removeSWF(this._oldCanvas.id);\n\t\t\tif (this._oldCanvas && this._oldParent) {\n\t\t\t\tthis._oldParent.appendChild(this._oldCanvas);\n\t\t\t\tthis._oldParent = null;\n\t\t\t}\n\t\t\tthis._pContainer = null;\n\t\t}\n\n\t\tthis._oldCanvas = null;\n\t}\n\n\tpublic addStream(stream:string)\n\t{\n\t\tthis._cmdStream += stream;\n\t}\n\n\tpublic execute():number\n\t{\n\t\tif (ContextStage3D.logStream)\n\t\t\tconsole.log(this._cmdStream);\n\n\t\tvar result:number = this._pContainer[\"CallFunction\"](\"<invoke name=\\\"execStage3dOpStream\\\" returntype=\\\"javascript\\\"><arguments><string>\" + this._cmdStream + \"</string></arguments></invoke>\");\n\n\t\tif (Number(result) <= -3)\n\t\t\tthrow \"Exec stream failed\";\n\n\t\tthis._cmdStream = \"\";\n\n\t\treturn Number(result);\n\t}\n}\n\nexport = ContextStage3D;\n\n/**\n* global function for flash callback\n*/\nfunction mountain_js_context_available(id, driverInfo)\n{\n\tvar ctx:ContextStage3D = ContextStage3D.contexts[id];\n\tif (ctx._iCallback) {\n\t\tctx._iDriverInfo = driverInfo;\n\t\t// get out of the current JS stack frame and call back from flash player\n\t\tvar timeOutId = window.setTimeout(function ()\n\t\t{\n\t\t\twindow.clearTimeout(timeOutId);\n\t\t\ttry {\n\t\t\t\tctx._iCallback(ctx);\n\t\t\t} catch (e) {\n\t\t\t\tconsole.log(\"Callback failed during flash initialization with '\" + e.toString() + \"'\");\n\t\t\t}\n\t\t}, 1);\n\t}\n}\n","import BitmapData\t\t\t\t\t= require(\"awayjs-core/lib/base/BitmapData\");\nimport Matrix3D\t\t\t\t\t\t= require(\"awayjs-core/lib/geom/Matrix3D\");\nimport Rectangle\t\t\t\t\t= require(\"awayjs-core/lib/geom/Rectangle\");\nimport ByteArray\t\t\t\t\t= require(\"awayjs-core/lib/utils/ByteArray\");\n\nimport ContextGLBase\t\t\t\t= require(\"awayjs-stagegl/lib/base/ContextGLBase\");\nimport ContextGLBlendFactor\t\t\t= require(\"awayjs-stagegl/lib/base/ContextGLBlendFactor\");\nimport ContextGLClearMask\t\t\t= require(\"awayjs-stagegl/lib/base/ContextGLClearMask\");\nimport ContextGLCompareMode\t\t\t= require(\"awayjs-stagegl/lib/base/ContextGLCompareMode\");\nimport ContextGLMipFilter\t\t\t= require(\"awayjs-stagegl/lib/base/ContextGLMipFilter\");\nimport ContextGLProgramType\t\t\t= require(\"awayjs-stagegl/lib/base/ContextGLProgramType\");\nimport ContextGLTextureFilter\t\t= require(\"awayjs-stagegl/lib/base/ContextGLTextureFilter\");\nimport ContextGLTriangleFace\t\t= require(\"awayjs-stagegl/lib/base/ContextGLTriangleFace\");\nimport ContextGLVertexBufferFormat\t= require(\"awayjs-stagegl/lib/base/ContextGLVertexBufferFormat\");\nimport ContextGLWrapMode\t\t\t= require(\"awayjs-stagegl/lib/base/ContextGLWrapMode\");\nimport CubeTextureWebGL\t\t\t\t= require(\"awayjs-stagegl/lib/base/CubeTextureWebGL\");\nimport IContextStageGL\t\t\t\t= require(\"awayjs-stagegl/lib/base/IContextStageGL\");\nimport IndexBufferWebGL\t\t\t\t= require(\"awayjs-stagegl/lib/base/IndexBufferWebGL\");\nimport ProgramWebGL\t\t\t\t\t= require(\"awayjs-stagegl/lib/base/ProgramWebGL\");\nimport TextureBaseWebGL\t\t\t\t= require(\"awayjs-stagegl/lib/base/TextureBaseWebGL\");\nimport TextureWebGL\t\t\t\t\t= require(\"awayjs-stagegl/lib/base/TextureWebGL\");\nimport SamplerState\t\t\t\t\t= require(\"awayjs-stagegl/lib/base/SamplerState\");\nimport VertexBufferWebGL\t\t\t= require(\"awayjs-stagegl/lib/base/VertexBufferWebGL\");\n\nclass ContextWebGL extends ContextGLBase implements IContextStageGL\n{\n\tprivate _blendFactorDictionary:Object = new Object();\n\tprivate _depthTestDictionary:Object = new Object();\n\tprivate _textureIndexDictionary:Array<number> = new Array<number>(8);\n\tprivate _textureTypeDictionary:Object = new Object();\n\tprivate _wrapDictionary:Object = new Object();\n\tprivate _filterDictionary:Object = new Object();\n\tprivate _mipmapFilterDictionary:Object = new Object();\n\tprivate _uniformLocationNameDictionary:Object = new Object();\n\tprivate _vertexBufferDimensionDictionary:Object = new Object();\n\n\tprivate _drawing:boolean;\n\tprivate _blendEnabled:boolean;\n\tprivate _blendSourceFactor:number;\n\tprivate _blendDestinationFactor:number;\n\n\tprivate _indexBufferList:Array<IndexBufferWebGL> = new Array<IndexBufferWebGL>();\n\tprivate _vertexBufferList:Array<VertexBufferWebGL> = new Array<VertexBufferWebGL>();\n\tprivate _textureList:Array<TextureBaseWebGL> = new Array<TextureBaseWebGL>();\n\tprivate _programList:Array<ProgramWebGL> = new Array<ProgramWebGL>();\n\n\tprivate _samplerStates:Array<SamplerState> = new Array<SamplerState>(8);\n\n\tpublic static MAX_SAMPLERS:number = 8;\n\n\t//@protected\n\tpublic _gl:WebGLRenderingContext;\n\n\t//@protected\n\tpublic _currentProgram:ProgramWebGL;\n\tprivate _activeTexture:number;\n\n\n\tpublic get container():HTMLElement\n\t{\n\t\treturn this._pContainer;\n\t}\n\n\tconstructor(canvas:HTMLCanvasElement, stageIndex:number)\n\t{\n\t\tsuper(stageIndex);\n\n\t\tthis._pContainer = canvas;\n\n\t\ttry {\n\t\t\tthis._gl = <WebGLRenderingContext> canvas.getContext(\"experimental-webgl\", { premultipliedAlpha:false, alpha:false });\n\n\t\t\tif (!this._gl)\n\t\t\t\tthis._gl = <WebGLRenderingContext> canvas.getContext(\"webgl\", { premultipliedAlpha:false, alpha:false });\n\t\t} catch (e) {\n\t\t\t//this.dispatchEvent( new away.events.AwayEvent( away.events.AwayEvent.INITIALIZE_FAILED, e ) );\n\t\t}\n\n\t\tif (this._gl) {\n\t\t\t//this.dispatchEvent( new away.events.AwayEvent( away.events.AwayEvent.INITIALIZE_SUCCESS ) );\n\t\t\t//setup shortcut dictionaries\n\t\t\tthis._blendFactorDictionary[ContextGLBlendFactor.ONE] = this._gl.ONE;\n\t\t\tthis._blendFactorDictionary[ContextGLBlendFactor.DESTINATION_ALPHA] = this._gl.DST_ALPHA;\n\t\t\tthis._blendFactorDictionary[ContextGLBlendFactor.DESTINATION_COLOR] = this._gl.DST_COLOR;\n\t\t\tthis._blendFactorDictionary[ContextGLBlendFactor.ONE] = this._gl.ONE;\n\t\t\tthis._blendFactorDictionary[ContextGLBlendFactor.ONE_MINUS_DESTINATION_ALPHA] = this._gl.ONE_MINUS_DST_ALPHA;\n\t\t\tthis._blendFactorDictionary[ContextGLBlendFactor.ONE_MINUS_DESTINATION_COLOR] = this._gl.ONE_MINUS_DST_COLOR;\n\t\t\tthis._blendFactorDictionary[ContextGLBlendFactor.ONE_MINUS_SOURCE_ALPHA] = this._gl.ONE_MINUS_SRC_ALPHA;\n\t\t\tthis._blendFactorDictionary[ContextGLBlendFactor.ONE_MINUS_SOURCE_COLOR] = this._gl.ONE_MINUS_SRC_COLOR;\n\t\t\tthis._blendFactorDictionary[ContextGLBlendFactor.SOURCE_ALPHA] = this._gl.SRC_ALPHA;\n\t\t\tthis._blendFactorDictionary[ContextGLBlendFactor.SOURCE_COLOR] = this._gl.SRC_COLOR;\n\t\t\tthis._blendFactorDictionary[ContextGLBlendFactor.ZERO] = this._gl.ZERO;\n\n\t\t\tthis._depthTestDictionary[ContextGLCompareMode.ALWAYS] = this._gl.ALWAYS;\n\t\t\tthis._depthTestDictionary[ContextGLCompareMode.EQUAL] = this._gl.EQUAL;\n\t\t\tthis._depthTestDictionary[ContextGLCompareMode.GREATER] = this._gl.GREATER;\n\t\t\tthis._depthTestDictionary[ContextGLCompareMode.GREATER_EQUAL] = this._gl.GEQUAL;\n\t\t\tthis._depthTestDictionary[ContextGLCompareMode.LESS] = this._gl.LESS;\n\t\t\tthis._depthTestDictionary[ContextGLCompareMode.LESS_EQUAL] = this._gl.LEQUAL;\n\t\t\tthis._depthTestDictionary[ContextGLCompareMode.NEVER] = this._gl.NEVER;\n\t\t\tthis._depthTestDictionary[ContextGLCompareMode.NOT_EQUAL] = this._gl.NOTEQUAL;\n\n\t\t\tthis._textureIndexDictionary[0] = this._gl.TEXTURE0;\n\t\t\tthis._textureIndexDictionary[1] = this._gl.TEXTURE1;\n\t\t\tthis._textureIndexDictionary[2] = this._gl.TEXTURE2;\n\t\t\tthis._textureIndexDictionary[3] = this._gl.TEXTURE3;\n\t\t\tthis._textureIndexDictionary[4] = this._gl.TEXTURE4;\n\t\t\tthis._textureIndexDictionary[5] = this._gl.TEXTURE5;\n\t\t\tthis._textureIndexDictionary[6] = this._gl.TEXTURE6;\n\t\t\tthis._textureIndexDictionary[7] = this._gl.TEXTURE7;\n\n\t\t\tthis._textureTypeDictionary[\"texture2d\"] = this._gl.TEXTURE_2D;\n\t\t\tthis._textureTypeDictionary[\"textureCube\"] = this._gl.TEXTURE_CUBE_MAP;\n\n\t\t\tthis._wrapDictionary[ContextGLWrapMode.REPEAT] = this._gl.REPEAT;\n\t\t\tthis._wrapDictionary[ContextGLWrapMode.CLAMP] = this._gl.CLAMP_TO_EDGE;\n\n\t\t\tthis._filterDictionary[ContextGLTextureFilter.LINEAR] = this._gl.LINEAR;\n\t\t\tthis._filterDictionary[ContextGLTextureFilter.NEAREST] = this._gl.NEAREST;\n\n\t\t\tthis._mipmapFilterDictionary[ContextGLTextureFilter.LINEAR] = new Object();\n\t\t\tthis._mipmapFilterDictionary[ContextGLTextureFilter.LINEAR][ContextGLMipFilter.MIPNEAREST] = this._gl.LINEAR_MIPMAP_NEAREST;\n\t\t\tthis._mipmapFilterDictionary[ContextGLTextureFilter.LINEAR][ContextGLMipFilter.MIPLINEAR] = this._gl.LINEAR_MIPMAP_LINEAR;\n\t\t\tthis._mipmapFilterDictionary[ContextGLTextureFilter.LINEAR][ContextGLMipFilter.MIPNONE] = this._gl.LINEAR;\n\t\t\tthis._mipmapFilterDictionary[ContextGLTextureFilter.NEAREST] = new Object();\n\t\t\tthis._mipmapFilterDictionary[ContextGLTextureFilter.NEAREST][ContextGLMipFilter.MIPNEAREST] = this._gl.NEAREST_MIPMAP_NEAREST;\n\t\t\tthis._mipmapFilterDictionary[ContextGLTextureFilter.NEAREST][ContextGLMipFilter.MIPLINEAR] = this._gl.NEAREST_MIPMAP_LINEAR;\n\t\t\tthis._mipmapFilterDictionary[ContextGLTextureFilter.NEAREST][ContextGLMipFilter.MIPNONE] = this._gl.NEAREST;\n\n\t\t\tthis._uniformLocationNameDictionary[ContextGLProgramType.VERTEX] = \"vc\";\n\t\t\tthis._uniformLocationNameDictionary[ContextGLProgramType.FRAGMENT] = \"fc\";\n\n\t\t\tthis._vertexBufferDimensionDictionary[ContextGLVertexBufferFormat.FLOAT_1] = 1;\n\t\t\tthis._vertexBufferDimensionDictionary[ContextGLVertexBufferFormat.FLOAT_2] = 2;\n\t\t\tthis._vertexBufferDimensionDictionary[ContextGLVertexBufferFormat.FLOAT_3] = 3;\n\t\t\tthis._vertexBufferDimensionDictionary[ContextGLVertexBufferFormat.FLOAT_4] = 4;\n\t\t\tthis._vertexBufferDimensionDictionary[ContextGLVertexBufferFormat.BYTES_4] = 4;\n\t\t} else {\n\t\t\t//this.dispatchEvent( new away.events.AwayEvent( away.events.AwayEvent.INITIALIZE_FAILED, e ) );\n\t\t\talert(\"WebGL is not available.\");\n\t\t}\n\n\t\t//defaults\n\t\tfor (var i:number = 0; i < ContextWebGL.MAX_SAMPLERS; ++i) {\n\t\t\tthis._samplerStates[i] = new SamplerState();\n\t\t\tthis._samplerStates[i].wrap = this._gl.REPEAT;\n\t\t\tthis._samplerStates[i].filter = this._gl.LINEAR;\n\t\t\tthis._samplerStates[i].mipfilter = this._gl.LINEAR;\n\t\t}\n\t}\n\n\tpublic gl():WebGLRenderingContext\n\t{\n\t\treturn this._gl;\n\t}\n\n\tpublic clear(red:number = 0, green:number = 0, blue:number = 0, alpha:number = 1, depth:number = 1, stencil:number = 0, mask:number = ContextGLClearMask.ALL)\n\t{\n\t\tif (!this._drawing) {\n\t\t\tthis.updateBlendStatus();\n\t\t\tthis._drawing = true;\n\t\t}\n\n\t\tvar glmask:number = 0;\n\t\tif (mask & ContextGLClearMask.COLOR) glmask |= this._gl.COLOR_BUFFER_BIT;\n\t\tif (mask & ContextGLClearMask.STENCIL) glmask |= this._gl.STENCIL_BUFFER_BIT;\n\t\tif (mask & ContextGLClearMask.DEPTH) glmask |= this._gl.DEPTH_BUFFER_BIT;\n\n\t\tthis._gl.clearColor(red, green, blue, alpha);\n\t\tthis._gl.clearDepth(depth);\n\t\tthis._gl.clearStencil(stencil);\n\t\tthis._gl.clear(glmask);\n\t}\n\n\tpublic configureBackBuffer(width:number, height:number, antiAlias:number, enableDepthAndStencil:boolean = true)\n\t{\n\t\tsuper.configureBackBuffer(width, height, antiAlias, enableDepthAndStencil);\n\n\t\tif (enableDepthAndStencil) {\n\t\t\tthis._gl.enable(this._gl.STENCIL_TEST);\n\t\t\tthis._gl.enable(this._gl.DEPTH_TEST);\n\t\t}\n\n\t\tthis._gl.viewport['width'] = width;\n\t\tthis._gl.viewport['height'] = height;\n\n\t\tthis._gl.viewport(0, 0, width, height);\n\t}\n\n\tpublic createCubeTexture(size:number, format:string, optimizeForRenderToTexture:boolean, streamingLevels:number = 0):CubeTextureWebGL\n\t{\n\t\tvar texture:CubeTextureWebGL = new CubeTextureWebGL(this._gl, size);\n\t\tthis._textureList.push(texture);\n\t\treturn texture;\n\t}\n\n\tpublic createIndexBuffer(numIndices:number):IndexBufferWebGL\n\t{\n\t\tvar indexBuffer:IndexBufferWebGL = new IndexBufferWebGL(this._gl, numIndices);\n\t\tthis._indexBufferList.push(indexBuffer);\n\t\treturn indexBuffer;\n\t}\n\n\tpublic createProgram():ProgramWebGL\n\t{\n\t\tvar program:ProgramWebGL = new ProgramWebGL(this._gl);\n\t\tthis._programList.push(program);\n\t\treturn program;\n\t}\n\n\tpublic createTexture(width:number, height:number, format:string, optimizeForRenderToTexture:boolean, streamingLevels:number = 0):TextureWebGL\n\t{\n\t\t//TODO streaming\n\t\tvar texture:TextureWebGL = new TextureWebGL(this._gl, width, height);\n\t\tthis._textureList.push(texture);\n\t\treturn texture;\n\t}\n\n\tpublic createVertexBuffer(numVertices:number, data32PerVertex:number):VertexBufferWebGL\n\t{\n\t\tvar vertexBuffer:VertexBufferWebGL = new VertexBufferWebGL(this._gl, numVertices, data32PerVertex);\n\t\tthis._vertexBufferList.push(vertexBuffer);\n\t\treturn vertexBuffer;\n\t}\n\n\tpublic dispose()\n\t{\n\t\tvar i:number;\n\t\tfor (i = 0; i < this._indexBufferList.length; ++i)\n\t\t\tthis._indexBufferList[i].dispose();\n\n\t\tthis._indexBufferList = null;\n\n\t\tfor (i = 0; i < this._vertexBufferList.length; ++i)\n\t\t\tthis._vertexBufferList[i].dispose();\n\n\t\tthis._vertexBufferList = null;\n\n\t\tfor (i = 0; i < this._textureList.length; ++i)\n\t\t\tthis._textureList[i].dispose();\n\n\t\tthis._textureList = null;\n\n\t\tfor (i = 0; i < this._programList.length; ++i)\n\t\t\tthis._programList[i].dispose();\n\n\t\tfor (i = 0; i < this._samplerStates.length; ++i)\n\t\t\tthis._samplerStates[i] = null;\n\n\t\tthis._programList = null;\n\t}\n\n\tpublic drawToBitmapData(destination:BitmapData)\n\t{\n\t\tvar arrayBuffer:ArrayBuffer = new ArrayBuffer(destination.width*destination.height*4);\n\n\t\tthis._gl.readPixels(0, 0, destination.width, destination.height, this._gl.RGBA, this._gl.UNSIGNED_BYTE, new Uint8Array(arrayBuffer));\n\n\t\tvar byteArray:ByteArray = new ByteArray();\n\t\tbyteArray.setArrayBuffer(arrayBuffer);\n\n\t\tdestination.setPixels(new Rectangle(0, 0, destination.width, destination.height), byteArray);\n\t}\n\n\tpublic drawTriangles(indexBuffer:IndexBufferWebGL, firstIndex:number = 0, numTriangles:number = -1)\n\t{\n\t\tif (!this._drawing)\n\t\t\tthrow \"Need to clear before drawing if the buffer has not been cleared since the last present() call.\";\n\n\t\tthis._gl.bindBuffer(this._gl.ELEMENT_ARRAY_BUFFER, indexBuffer.glBuffer);\n\t\tthis._gl.drawElements(this._gl.TRIANGLES, (numTriangles == -1)? indexBuffer.numIndices : numTriangles*3, this._gl.UNSIGNED_SHORT, firstIndex);\n\t}\n\n\tpublic present()\n\t{\n\t\tthis._drawing = false;\n\t}\n\n\tpublic setBlendFactors(sourceFactor:string, destinationFactor:string)\n\t{\n\t\tthis._blendEnabled = true;\n\n\t\tthis._blendSourceFactor = this._blendFactorDictionary[sourceFactor];\n\n\t\tthis._blendDestinationFactor = this._blendFactorDictionary[destinationFactor];\n\n\t\tthis.updateBlendStatus();\n\t}\n\n\tpublic setColorMask(red:boolean, green:boolean, blue:boolean, alpha:boolean)\n\t{\n\t\tthis._gl.colorMask(red, green, blue, alpha);\n\t}\n\n\tpublic setCulling(triangleFaceToCull:string, coordinateSystem:string = \"leftHanded\")\n\t{\n\t\tif (triangleFaceToCull == ContextGLTriangleFace.NONE) {\n\t\t\tthis._gl.disable(this._gl.CULL_FACE);\n\t\t} else {\n\t\t\tthis._gl.enable(this._gl.CULL_FACE);\n\t\t\tswitch (triangleFaceToCull) {\n\t\t\t\tcase ContextGLTriangleFace.BACK:\n\t\t\t\t\tthis._gl.cullFace((coordinateSystem == \"leftHanded\")? this._gl.FRONT : this._gl.BACK);\n\t\t\t\t\tbreak\n\t\t\t\tcase ContextGLTriangleFace.FRONT:\n\t\t\t\t\tthis._gl.cullFace((coordinateSystem == \"leftHanded\")? this._gl.BACK : this._gl.FRONT);\n\t\t\t\t\tbreak;\n\t\t\t\tcase ContextGLTriangleFace.FRONT_AND_BACK:\n\t\t\t\t\tthis._gl.cullFace(this._gl.FRONT_AND_BACK);\n\t\t\t\t\tbreak;\n\t\t\t\tdefault:\n\t\t\t\t\tthrow \"Unknown ContextGLTriangleFace type.\"; // TODO error\n\t\t\t}\n\t\t}\n\t}\n\n\t// TODO ContextGLCompareMode\n\tpublic setDepthTest(depthMask:boolean, passCompareMode:string)\n\t{\n\t\tthis._gl.depthFunc(this._depthTestDictionary[passCompareMode]);\n\n\t\tthis._gl.depthMask(depthMask);\n\t}\n\n\tpublic setProgram(program:ProgramWebGL)\n\t{\n\t\t//TODO decide on construction/reference resposibilities\n\t\tthis._currentProgram = program;\n\t\tprogram.focusProgram();\n\t}\n\n\tpublic setProgramConstantsFromMatrix(programType:string, firstRegister:number, matrix:Matrix3D, transposedMatrix:boolean = false)\n\t{\n\t\t//this._gl.uniformMatrix4fv(this._gl.getUniformLocation(this._currentProgram.glProgram, this._uniformLocationNameDictionary[programType]), !transposedMatrix, new Float32Array(matrix.rawData));\n\n\t\t//TODO remove special case for WebGL matrix calls?\n\t\tvar d:number[] = matrix.rawData;\n\t\tif (transposedMatrix) {\n\t\t\tthis.setProgramConstantsFromArray(programType, firstRegister, [ d[0], d[4], d[8], d[12] ], 1);\n\t\t\tthis.setProgramConstantsFromArray(programType, firstRegister + 1, [ d[1], d[5], d[9], d[13] ], 1);\n\t\t\tthis.setProgramConstantsFromArray(programType, firstRegister + 2, [ d[2], d[6], d[10], d[14] ], 1);\n\t\t\tthis.setProgramConstantsFromArray(programType, firstRegister + 3, [ d[3], d[7], d[11], d[15] ], 1);\n\t\t} else {\n\t\t\tthis.setProgramConstantsFromArray(programType, firstRegister, [ d[0], d[1], d[2], d[3] ], 1);\n\t\t\tthis.setProgramConstantsFromArray(programType, firstRegister + 1, [ d[4], d[5], d[6], d[7] ], 1);\n\t\t\tthis.setProgramConstantsFromArray(programType, firstRegister + 2, [ d[8], d[9], d[10], d[11] ], 1);\n\t\t\tthis.setProgramConstantsFromArray(programType, firstRegister + 3, [ d[12], d[13], d[14], d[15] ], 1);\n\t\t}\n\t}\n\n\tpublic static modulo:number = 0;\n\n\tpublic setProgramConstantsFromArray(programType:string, firstRegister:number, data:number[], numRegisters:number = -1)\n\t{\n\t\tvar locationName:string = this._uniformLocationNameDictionary[programType];\n\t\tvar startIndex:number;\n\t\tfor (var i:number = 0; i < numRegisters; i++) {\n\t\t\tstartIndex = i*4;\n\t\t\tthis._gl.uniform4f(this._gl.getUniformLocation(this._currentProgram.glProgram, locationName + (firstRegister + i)), data[startIndex], data[startIndex + 1], data[startIndex + 2], data[startIndex + 3]);\n\t\t}\n\t}\n\n\tpublic setScissorRectangle(rectangle:Rectangle)\n\t{\n\t\tif (!rectangle) {\n\t\t\tthis._gl.disable(this._gl.SCISSOR_TEST);\n\t\t\treturn;\n\t\t}\n\n\t\tthis._gl.enable(this._gl.SCISSOR_TEST);\n\t\tthis._gl.scissor(rectangle.x, rectangle.y, rectangle.width, rectangle.height);\n\t}\n\n\tpublic setTextureAt(sampler:number, texture:TextureBaseWebGL)\n\t{\n\t\tvar samplerState:SamplerState = this._samplerStates[sampler];\n\n\t\tif (this._activeTexture != sampler && (texture || samplerState.type)) {\n\t\t\tthis._activeTexture = sampler;\n\t\t\tthis._gl.activeTexture(this._textureIndexDictionary[sampler]);\n\t\t}\n\n\t\tif (!texture) {\n\t\t\tif (samplerState.type) {\n\t\t\t\tthis._gl.bindTexture(samplerState.type, null);\n\t\t\t\tsamplerState.type = null;\n\t\t\t}\n\n\t\t\treturn;\n\t\t}\n\n\t\tvar textureType:number = this._textureTypeDictionary[texture.textureType];\n\t\tsamplerState.type = textureType;\n\n\t\tthis._gl.bindTexture(textureType, texture.glTexture);\n\n\t\tthis._gl.uniform1i(this._gl.getUniformLocation(this._currentProgram.glProgram, \"fs\" + sampler), sampler);\n\n\t\tthis._gl.texParameteri(textureType, this._gl.TEXTURE_WRAP_S, samplerState.wrap);\n\t\tthis._gl.texParameteri(textureType, this._gl.TEXTURE_WRAP_T, samplerState.wrap);\n\n\t\tthis._gl.texParameteri(textureType, this._gl.TEXTURE_MAG_FILTER, samplerState.filter);\n\t\tthis._gl.texParameteri(textureType, this._gl.TEXTURE_MIN_FILTER, samplerState.mipfilter);\n\t}\n\n\tpublic setSamplerStateAt(sampler:number, wrap:string, filter:string, mipfilter:string):void\n\t{\n\t\tif (0 <= sampler && sampler < ContextWebGL.MAX_SAMPLERS) {\n\t\t\tthis._samplerStates[sampler].wrap = this._wrapDictionary[wrap];\n\t\t\tthis._samplerStates[sampler].filter = this._filterDictionary[filter];\n\t\t\tthis._samplerStates[sampler].mipfilter = this._mipmapFilterDictionary[filter][mipfilter];\n\t\t} else {\n\t\t\tthrow \"Sampler is out of bounds.\";\n\t\t}\n\t}\n\n\tpublic setVertexBufferAt(index:number, buffer:VertexBufferWebGL, bufferOffset:number = 0, format:string = null)\n\t{\n\t\tvar location:number = this._currentProgram? this._gl.getAttribLocation(this._currentProgram.glProgram, \"va\" + index) : -1;\n\n\t\tif (!buffer) {\n\t\t\tif (location > -1)\n\t\t\t\tthis._gl.disableVertexAttribArray(location);\n\n\t\t\treturn;\n\t\t}\n\n\t\tthis._gl.bindBuffer(this._gl.ARRAY_BUFFER, buffer.glBuffer);\n\t\tthis._gl.enableVertexAttribArray(location);\n\t\tthis._gl.vertexAttribPointer(location, this._vertexBufferDimensionDictionary[format], this._gl.FLOAT, false, buffer.data32PerVertex*4, bufferOffset*4);\n\t}\n\n\tpublic setRenderToTexture(target:TextureBaseWebGL, enableDepthAndStencil:boolean = false, antiAlias:number = 0, surfaceSelector:number = 0)\n\t{\n\t\tvar texture:TextureWebGL = <TextureWebGL> target;\n\t\tvar frameBuffer:WebGLFramebuffer = texture.frameBuffer;\n\t\tthis._gl.bindFramebuffer(this._gl.FRAMEBUFFER, frameBuffer);\n\n\t\tif (enableDepthAndStencil) {\n\t\t\tthis._gl.enable(this._gl.STENCIL_TEST);\n\t\t\tthis._gl.enable(this._gl.DEPTH_TEST);\n\t\t}\n\n\t\tthis._gl.viewport(0, 0, texture.width, texture.height );\n\t}\n\n\tpublic setRenderToBackBuffer()\n\t{\n\t\tthis._gl.bindFramebuffer(this._gl.FRAMEBUFFER, null);\n\t}\n\n\tprivate updateBlendStatus()\n\t{\n\t\tif (this._blendEnabled) {\n\t\t\tthis._gl.enable(this._gl.BLEND);\n\t\t\tthis._gl.blendEquation(this._gl.FUNC_ADD);\n\t\t\tthis._gl.blendFunc(this._blendSourceFactor, this._blendDestinationFactor);\n\t\t} else {\n\t\t\tthis._gl.disable(this._gl.BLEND);\n\t\t}\n\t}\n}\n\nexport = ContextWebGL;","import BitmapData\t\t\t\t\t= require(\"awayjs-core/lib/base/BitmapData\");\nimport ByteArray\t\t\t\t\t= require(\"awayjs-core/lib/utils/ByteArray\");\nimport ByteArrayBase\t\t\t\t= require(\"awayjs-core/lib/utils/ByteArrayBase\");\n\nimport ContextStage3D\t\t\t\t= require(\"awayjs-stagegl/lib/base/ContextStage3D\");\nimport ICubeTexture\t\t\t\t\t= require(\"awayjs-stagegl/lib/base/ICubeTexture\");\nimport OpCodes\t\t\t\t\t\t= require(\"awayjs-stagegl/lib/base/OpCodes\");\nimport ResourceBaseFlash\t\t\t= require(\"awayjs-stagegl/lib/base/ResourceBaseFlash\");\n\nclass CubeTextureFlash extends ResourceBaseFlash implements ICubeTexture\n{\n\tprivate _context:ContextStage3D;\n\tprivate _size:number;\n\n\tpublic get size():number\n\t{\n\t\treturn this._size;\n\t}\n\n\tconstructor(context:ContextStage3D, size:number, format:string, forRTT:boolean, streaming:boolean = false)\n\t{\n\t\tsuper();\n\n\t\tthis._context = context;\n\t\tthis._size = size;\n\n\t\tthis._context.addStream(String.fromCharCode(OpCodes.initCubeTexture, (forRTT? OpCodes.trueValue : OpCodes.falseValue)) + size + \",\" + streaming + \",\" + format + \"$\");\n\t\tthis._pId = this._context.execute();\n\t\tthis._context._iAddResource(this);\n\t}\n\n\tpublic dispose()\n\t{\n\t\tthis._context.addStream(String.fromCharCode(OpCodes.disposeCubeTexture) + this._pId.toString() + \",\");\n\t\tthis._context.execute();\n\t\tthis._context._iRemoveResource(this);\n\n\t\tthis._context = null;\n\t}\n\n\tpublic uploadFromData(bitmapData:BitmapData, side:number, miplevel?:number);\n\tpublic uploadFromData(image:HTMLImageElement, side:number, miplevel?:number);\n\tpublic uploadFromData(data:any, side:number, miplevel:number = 0)\n\t{\n\t\tif (data instanceof BitmapData) {\n\t\t\tdata = (<BitmapData> data).imageData.data;\n\t\t} else if (data instanceof HTMLImageElement) {\n\t\t\tvar can = document.createElement(\"canvas\");\n\t\t\tvar w = data.width;\n\t\t\tvar h = data.height;\n\t\t\tcan.width = w;\n\t\t\tcan.height = h;\n\t\t\tvar ctx = can.getContext(\"2d\");\n\t\t\tctx.drawImage(data, 0, 0);\n\t\t\tdata = ctx.getImageData(0, 0, w, h).data;\n\t\t}\n\n\t\tvar pos = 0;\n\t\tvar bytes = ByteArrayBase.internalGetBase64String(data.length, function () {\n\t\t\treturn data[pos++];\n\t\t}, null);\n\n\t\tthis._context.addStream(String.fromCharCode(OpCodes.uploadBytesCubeTexture) + this._pId + \",\" + miplevel + \",\" + side + \",\" + (this.size >> miplevel) + \",\" + bytes + \"%\");\n\t\tthis._context.execute();\n\t}\n\n\tpublic uploadCompressedTextureFromByteArray(data:ByteArray, byteArrayOffset:number /*uint*/, async:boolean = false)\n\t{\n\n\t}\n}\n\nexport = CubeTextureFlash;","import BitmapData\t\t\t\t\t= require(\"awayjs-core/lib/base/BitmapData\");\nimport ByteArray\t\t\t\t\t= require(\"awayjs-core/lib/utils/ByteArray\");\n\nimport ICubeTexture\t\t\t\t\t= require(\"awayjs-stagegl/lib/base/ICubeTexture\");\nimport TextureBaseWebGL\t\t\t\t= require(\"awayjs-stagegl/lib/base/TextureBaseWebGL\");\n\nclass CubeTextureWebGL extends TextureBaseWebGL implements ICubeTexture\n{\n\n\tprivate _textureSelectorDictionary:Array<number> = new Array<number>(6);\n\n\tpublic textureType:string = \"textureCube\";\n\tprivate _texture:WebGLTexture;\n\tprivate _size:number;\n\n\tconstructor(gl:WebGLRenderingContext, size:number)\n\t{\n\t\tsuper(gl);\n\t\tthis._size = size;\n\t\tthis._texture = this._gl.createTexture();\n\n\t\tthis._textureSelectorDictionary[0] = gl.TEXTURE_CUBE_MAP_POSITIVE_X;\n\t\tthis._textureSelectorDictionary[1] = gl.TEXTURE_CUBE_MAP_NEGATIVE_X;\n\t\tthis._textureSelectorDictionary[2] = gl.TEXTURE_CUBE_MAP_POSITIVE_Y;\n\t\tthis._textureSelectorDictionary[3] = gl.TEXTURE_CUBE_MAP_NEGATIVE_Y;\n\t\tthis._textureSelectorDictionary[4] = gl.TEXTURE_CUBE_MAP_POSITIVE_Z;\n\t\tthis._textureSelectorDictionary[5] = gl.TEXTURE_CUBE_MAP_NEGATIVE_Z;\n\t}\n\n\tpublic dispose()\n\t{\n\t\tthis._gl.deleteTexture(this._texture);\n\t}\n\n\tpublic uploadFromData(bitmapData:BitmapData, side:number, miplevel?:number);\n\tpublic uploadFromData(image:HTMLImageElement, side:number, miplevel?:number);\n\tpublic uploadFromData(data:any, side:number, miplevel:number = 0)\n\t{\n\t\tif (data instanceof BitmapData)\n\t\t\tdata = (<BitmapData> data).imageData;\n\n\t\tthis._gl.bindTexture(this._gl.TEXTURE_CUBE_MAP, this._texture);\n\t\tthis._gl.texImage2D(this._textureSelectorDictionary[side], miplevel, this._gl.RGBA, this._gl.RGBA, this._gl.UNSIGNED_BYTE, data);\n\t\tthis._gl.bindTexture(this._gl.TEXTURE_CUBE_MAP, null);\n\t}\n\n\tpublic uploadCompressedTextureFromByteArray(data:ByteArray, byteArrayOffset:number /*uint*/, async:boolean = false)\n\t{\n\n\t}\n\n\tpublic get size():number\n\t{\n\t\treturn this._size;\n\t}\n\n\tpublic get glTexture():WebGLTexture\n\t{\n\t\treturn this._texture;\n\t}\n}\n\nexport = CubeTextureWebGL;","import ContextStage3D\t\t\t\t= require(\"awayjs-stagegl/lib/base/ContextStage3D\");\nimport IIndexBuffer\t\t\t\t\t= require(\"awayjs-stagegl/lib/base/IIndexBuffer\");\nimport OpCodes\t\t\t\t\t\t= require(\"awayjs-stagegl/lib/base/OpCodes\");\nimport ResourceBaseFlash\t\t\t= require(\"awayjs-stagegl/lib/base/ResourceBaseFlash\");\n\nclass IndexBufferFlash extends ResourceBaseFlash implements IIndexBuffer\n{\n\tprivate _context:ContextStage3D;\n\tprivate _numIndices:number;\n\n\tconstructor(context:ContextStage3D, numIndices:number)\n\t{\n\t\tsuper();\n\n\t\tthis._context = context;\n\t\tthis._numIndices = numIndices;\n\t\tthis._context.addStream(String.fromCharCode(OpCodes.initIndexBuffer, numIndices + OpCodes.intMask));\n\t\tthis._pId = this._context.execute();\n\t\tthis._context._iAddResource(this);\n\t}\n\n\tpublic uploadFromArray(data:number[], startOffset:number, count:number):void\n\t{\n\t\tthis._context.addStream(String.fromCharCode(OpCodes.uploadArrayIndexBuffer, this._pId + OpCodes.intMask) + data.join() + \"#\" + startOffset + \",\" + count + \",\");\n\t\tthis._context.execute();\n\t}\n\n\tpublic dispose():void\n\t{\n\t\tthis._context.addStream(String.fromCharCode(OpCodes.disposeIndexBuffer, this._pId + OpCodes.intMask));\n\t\tthis._context.execute();\n\t\tthis._context._iRemoveResource(this);\n\n\t\tthis._context = null;\n\t}\n\n\tpublic get numIndices():number\n\t{\n\t\treturn this._numIndices;\n\t}\n}\n\nexport = IndexBufferFlash;","import IIndexBuffer\t\t\t\t\t= require(\"awayjs-stagegl/lib/base/IIndexBuffer\");\n\nclass IndexBufferWebGL implements IIndexBuffer\n{\n\n\tprivate _gl:WebGLRenderingContext;\n\tprivate _numIndices:number;\n\tprivate _buffer:WebGLBuffer;\n\n\tconstructor(gl:WebGLRenderingContext, numIndices:number)\n\t{\n\t\tthis._gl = gl;\n\t\tthis._buffer = this._gl.createBuffer();\n\t\tthis._numIndices = numIndices;\n\t}\n\n\tpublic uploadFromArray(data:number[], startOffset:number, count:number):void\n\t{\n\t\tthis._gl.bindBuffer(this._gl.ELEMENT_ARRAY_BUFFER, this._buffer);\n\n\t\t// TODO add index offsets\n\t\tthis._gl.bufferData(this._gl.ELEMENT_ARRAY_BUFFER, new Uint16Array(data), this._gl.STATIC_DRAW);\n\t}\n\n\tpublic dispose():void\n\t{\n\t\tthis._gl.deleteBuffer(this._buffer);\n\t}\n\n\tpublic get numIndices():number\n\t{\n\t\treturn this._numIndices;\n\t}\n\n\tpublic get glBuffer():WebGLBuffer\n\t{\n\t\treturn this._buffer;\n\t}\n}\n\nexport = IndexBufferWebGL;","class OpCodes\n{\n\tpublic static trueValue:number = 32;\n\tpublic static falseValue:number = 33;\n\tpublic static intMask:number = 63;\n\tpublic static drawTriangles:number = 41;\n\tpublic static setProgramConstant:number = 42;\n\tpublic static setProgram:number = 43;\n\tpublic static present:number = 44;\n\tpublic static clear:number = 45;\n\tpublic static initProgram:number = 46;\n\tpublic static initVertexBuffer:number = 47;\n\tpublic static initIndexBuffer:number = 48;\n\tpublic static configureBackBuffer:number = 49;\n\tpublic static uploadArrayIndexBuffer:number = 50;\n\tpublic static uploadArrayVertexBuffer:number = 51;\n\tpublic static uploadAGALBytesProgram:number = 52;\n\tpublic static setVertexBufferAt:number = 53;\n\tpublic static uploadBytesIndexBuffer:number = 54;\n\tpublic static uploadBytesVertexBuffer:number = 55;\n\tpublic static setColorMask:number = 56;\n\tpublic static setDepthTest:number = 57;\n\tpublic static disposeProgram:number = 58;\n\tpublic static disposeContext:number = 59;\n\t// must skip 60 '<' as it will invalidate xml being passed over the bridge\n\tpublic static disposeVertexBuffer:number = 61;\n\t// must skip 62 '>' as it will invalidate xml being passed over the bridge\n\tpublic static disposeIndexBuffer:number = 63;\n\tpublic static initTexture:number = 64;\n\tpublic static setTextureAt:number = 65;\n\tpublic static uploadBytesTexture:number = 66;\n\tpublic static disposeTexture:number = 67;\n\tpublic static setCulling:number = 68;\n\tpublic static setScissorRect:number = 69;\n\tpublic static clearScissorRect:number = 70;\n\tpublic static setBlendFactors:number = 71;\n\tpublic static setRenderToTexture:number = 72;\n\tpublic static clearTextureAt:number = 73;\n\tpublic static clearVertexBufferAt:number = 74;\n\tpublic static setStencilActions:number = 75;\n\tpublic static setStencilReferenceValue:number = 76;\n\tpublic static initCubeTexture:number = 77;\n\tpublic static disposeCubeTexture:number = 78;\n\tpublic static uploadBytesCubeTexture:number = 79;\n\tpublic static clearRenderToTexture:number = 80;\n\tpublic static enableErrorChecking:number = 81;\n}\n\nexport = OpCodes;","import ByteArray\t\t\t\t\t= require(\"awayjs-core/lib/utils/ByteArray\");\n\nimport ContextStage3D\t\t\t\t= require(\"awayjs-stagegl/lib/base/ContextStage3D\");\nimport IProgram\t\t\t\t\t\t= require(\"awayjs-stagegl/lib/base/IProgram\");\nimport OpCodes\t\t\t\t\t\t= require(\"awayjs-stagegl/lib/base/OpCodes\");\nimport ResourceBaseFlash\t\t\t= require(\"awayjs-stagegl/lib/base/ResourceBaseFlash\");\n\nclass ProgramFlash extends ResourceBaseFlash implements IProgram\n{\n\tprivate _context:ContextStage3D;\n\n\tconstructor(context:ContextStage3D)\n\t{\n\t\tsuper();\n\n\t\tthis._context = context;\n\t\tthis._context.addStream(String.fromCharCode(OpCodes.initProgram));\n\t\tthis._pId = this._context.execute();\n\t\tthis._context._iAddResource(this);\n\t}\n\n\tpublic upload(vertexProgram:ByteArray, fragmentProgram:ByteArray)\n\t{\n\t\tthis._context.addStream(String.fromCharCode(OpCodes.uploadAGALBytesProgram, this._pId + OpCodes.intMask) + vertexProgram.readBase64String(vertexProgram.length) + \"%\" + fragmentProgram.readBase64String(fragmentProgram.length) + \"%\");\n\n\t\tif (ContextStage3D.debug)\n\t\t\tthis._context.execute();\n\t}\n\n\tpublic dispose()\n\t{\n\t\tthis._context.addStream(String.fromCharCode(OpCodes.disposeProgram, this._pId + OpCodes.intMask));\n\t\tthis._context.execute();\n\t\tthis._context._iRemoveResource(this);\n\n\t\tthis._context = null;\n\t}\n}\n\nexport = ProgramFlash;","import ByteArray\t\t\t\t\t= require(\"awayjs-core/lib/utils/ByteArray\");\n\nimport AGALTokenizer\t\t\t\t= require(\"awayjs-stagegl/lib/aglsl/AGALTokenizer\");\nimport AGLSLParser\t\t\t\t\t= require(\"awayjs-stagegl/lib/aglsl/AGLSLParser\");\nimport IProgram\t\t\t\t\t\t= require(\"awayjs-stagegl/lib/base/IProgram\");\n\n\nclass ProgramWebGL implements IProgram\n{\n\tprivate static _tokenizer:AGALTokenizer = new AGALTokenizer();\n\tprivate static _aglslParser:AGLSLParser = new AGLSLParser();\n\n\tprivate _gl:WebGLRenderingContext;\n\tprivate _program:WebGLProgram;\n\tprivate _vertexShader:WebGLShader;\n\tprivate _fragmentShader:WebGLShader;\n\n\tconstructor(gl:WebGLRenderingContext)\n\t{\n\t\tthis._gl = gl;\n\t\tthis._program = this._gl.createProgram();\n\t}\n\n\tpublic upload(vertexProgram:ByteArray, fragmentProgram:ByteArray)\n\t{\n\t\tvar vertexString:string = ProgramWebGL._aglslParser.parse(ProgramWebGL._tokenizer.decribeAGALByteArray(vertexProgram));\n\t\tvar fragmentString:string = ProgramWebGL._aglslParser.parse(ProgramWebGL._tokenizer.decribeAGALByteArray(fragmentProgram));\n\n\t\tthis._vertexShader = this._gl.createShader(this._gl.VERTEX_SHADER);\n\t\tthis._fragmentShader = this._gl.createShader(this._gl.FRAGMENT_SHADER);\n\n\t\tthis._gl.shaderSource(this._vertexShader, vertexString);\n\t\tthis._gl.compileShader(this._vertexShader);\n\n\t\tif (!this._gl.getShaderParameter(this._vertexShader, this._gl.COMPILE_STATUS)) {\n\t\t\tthrow new Error(this._gl.getShaderInfoLog(this._vertexShader));\n\t\t\treturn;\n\t\t}\n\n\t\tthis._gl.shaderSource(this._fragmentShader, fragmentString);\n\t\tthis._gl.compileShader(this._fragmentShader);\n\n\t\tif (!this._gl.getShaderParameter(this._fragmentShader, this._gl.COMPILE_STATUS)) {\n\t\t\tthrow new Error(this._gl.getShaderInfoLog(this._fragmentShader));\n\t\t\treturn;\n\t\t}\n\n\t\tthis._gl.attachShader(this._program, this._vertexShader);\n\t\tthis._gl.attachShader(this._program, this._fragmentShader);\n\t\tthis._gl.linkProgram(this._program);\n\n\t\tif (!this._gl.getProgramParameter(this._program, this._gl.LINK_STATUS)) {\n\t\t\tthrow new Error(this._gl.getProgramInfoLog(this._program));\n\t\t}\n\t}\n\n\tpublic dispose()\n\t{\n\t\tthis._gl.deleteProgram(this._program);\n\t}\n\n\tpublic focusProgram()\n\t{\n\t\tthis._gl.useProgram(this._program);\n\t}\n\n\tpublic get glProgram():WebGLProgram\n\t{\n\t\treturn this._program;\n\t}\n}\n\nexport = ProgramWebGL;","class ResourceBaseFlash\n{\n\tpublic _pId:number;\n\n\tpublic get id():number\n\t{\n\t\treturn this._pId;\n\t}\n\n\tpublic dispose()\n\t{\n\n\t}\n}\n\nexport = ResourceBaseFlash;","class SamplerState\n{\n\tpublic type:number;\n\tpublic wrap:number;\n\tpublic filter:number;\n\tpublic mipfilter:number;\n}\n\nexport = SamplerState;","import Rectangle\t\t\t\t= require(\"awayjs-core/lib/geom/Rectangle\");\nimport Event\t\t\t\t\t= require(\"awayjs-core/lib/events/Event\");\nimport EventDispatcher\t\t\t= require(\"awayjs-core/lib/events/EventDispatcher\");\nimport CubeTextureBase\t\t\t= require(\"awayjs-core/lib/textures/CubeTextureBase\");\nimport RenderTexture\t\t\t= require(\"awayjs-core/lib/textures/RenderTexture\");\nimport TextureProxyBase\t\t\t= require(\"awayjs-core/lib/textures/TextureProxyBase\");\nimport CSS\t\t\t\t\t\t= require(\"awayjs-core/lib/utils/CSS\");\n\nimport ContextMode\t\t\t\t= require(\"awayjs-display/lib/display/ContextMode\");\nimport IContext\t\t\t\t\t= require(\"awayjs-display/lib/display/IContext\");\nimport StageEvent\t\t\t\t= require(\"awayjs-display/lib/events/StageEvent\");\n\nimport ContextStage3D\t\t\t= require(\"awayjs-stagegl/lib/base/ContextStage3D\");\nimport ContextWebGL\t\t\t\t= require(\"awayjs-stagegl/lib/base/ContextWebGL\");\nimport StageManager\t\t\t\t= require(\"awayjs-stagegl/lib/managers/StageManager\");\n\n/**\n * Stage provides a proxy class to handle the creation and attachment of the Context\n * (and in turn the back buffer) it uses. Stage should never be created directly,\n * but requested through StageManager.\n *\n * @see away.managers.StageManager\n *\n */\nclass Stage extends EventDispatcher\n{\n\tprivate _context:IContext;\n\tprivate _container:HTMLElement;\n\tprivate _width:number;\n\tprivate _height:number;\n\tprivate _x:number = 0;\n\tprivate _y:number = 0;\n\n\t//private static _frameEventDriver:Shape = new Shape(); // TODO: add frame driver / request animation frame\n\n\tprivate _stageIndex:number = -1;\n\n\tprivate _usesSoftwareRendering:boolean;\n\tprivate _profile:string;\n\tprivate _stageManager:StageManager;\n\tprivate _antiAlias:number = 0;\n\tprivate _enableDepthAndStencil:boolean;\n\tprivate _contextRequested:boolean;\n\n\t//private var _activeVertexBuffers : Vector.<VertexBuffer> = new Vector.<VertexBuffer>(8, true);\n\t//private var _activeTextures : Vector.<TextureBase> = new Vector.<TextureBase>(8, true);\n\tprivate _renderTarget:TextureProxyBase = null;\n\tprivate _renderSurfaceSelector:number = 0;\n\tprivate _scissorRect:Rectangle;\n\tprivate _color:number;\n\tprivate _backBufferDirty:boolean;\n\tprivate _viewPort:Rectangle;\n\tprivate _enterFrame:Event;\n\tprivate _exitFrame:Event;\n\tprivate _viewportUpdated:StageEvent;\n\tprivate _viewportDirty:boolean;\n\tprivate _bufferClear:boolean;\n\n\t//private _mouse3DManager:away.managers.Mouse3DManager;\n\t//private _touch3DManager:Touch3DManager; //TODO: imeplement dependency Touch3DManager\n\n\tprivate _initialised:boolean = false;\n\n\tconstructor(container:HTMLCanvasElement, stageIndex:number, stageManager:StageManager, forceSoftware:boolean = false, profile:string = \"baseline\")\n\t{\n\t\tsuper();\n\n\t\tthis._container = container;\n\n\t\tthis._stageIndex = stageIndex;\n\n\t\tthis._stageManager = stageManager;\n\n\t\tthis._viewPort = new Rectangle();\n\n\t\tthis._enableDepthAndStencil = true;\n\n\t\tCSS.setElementX(this._container, 0);\n\t\tCSS.setElementY(this._container, 0);\n\n\t\tthis.visible = true;\n\t}\n\n\t/**\n\t * Requests a Context object to attach to the managed gl canvas.\n\t */\n\tpublic requestContext(forceSoftware:boolean = false, profile:string = \"baseline\", mode:string = \"auto\")\n\t{\n\t\t// If forcing software, we can be certain that the\n\t\t// returned Context will be running software mode.\n\t\t// If not, we can't be sure and should stick to the\n\t\t// old value (will likely be same if re-requesting.)\n\n\t\tif (this._usesSoftwareRendering != null)\n\t\t\tthis._usesSoftwareRendering = forceSoftware;\n\n\t\tthis._profile = profile;\n\n\t\ttry {\n\t\t\tif (mode == ContextMode.FLASH)\n\t\t\t\tnew ContextStage3D(<HTMLCanvasElement> this._container, this._stageIndex, (context:IContext) => this._callback(context));\n\t\t\telse\n\t\t\t\tthis._context = new ContextWebGL(<HTMLCanvasElement> this._container, this._stageIndex);\n\n\t\t} catch (e) {\n\t\t\ttry {\n\t\t\t\tif (mode == ContextMode.AUTO)\n\t\t\t\t\tnew ContextStage3D(<HTMLCanvasElement> this._container, this._stageIndex, (context:IContext) => this._callback(context));\n\t\t\t\telse\n\t\t\t\t\tthis.dispatchEvent(new Event(Event.ERROR));\n\t\t\t} catch (e) {\n\t\t\t\tthis.dispatchEvent(new Event(Event.ERROR));\n\t\t\t}\n\n\t\t}\n\n\t\tif (this._context)\n\t\t\tthis._callback(this._context);\n\t}\n\n\t/**\n\t * The width of the gl canvas\n\t */\n\tpublic get width()\n\t{\n\t\treturn this._width;\n\t}\n\n\tpublic set width(val:number)\n\t{\n\t\tif (this._width == val)\n\t\t\treturn;\n\n\t\tCSS.setElementWidth(this._container, val);\n\n\t\tthis._width = this._viewPort.width = val;\n\n\t\tthis._backBufferDirty = true;\n\n\t\tthis.notifyViewportUpdated();\n\t}\n\n\t/**\n\t * The height of the gl canvas\n\t */\n\tpublic get height()\n\t{\n\t\treturn this._height;\n\t}\n\n\tpublic set height(val:number)\n\t{\n\t\tif (this._height == val)\n\t\t\treturn;\n\n\t\tCSS.setElementHeight(this._container, val);\n\n\t\tthis._height = this._viewPort.height = val;\n\n\t\tthis._backBufferDirty = true;\n\n\t\tthis.notifyViewportUpdated();\n\t}\n\n\t/**\n\t * The x position of the gl canvas\n\t */\n\tpublic get x()\n\t{\n\t\treturn this._x;\n\t}\n\n\tpublic set x(val:number)\n\t{\n\t\tif (this._x == val)\n\t\t\treturn;\n\n\t\tCSS.setElementX(this._container, val);\n\n\t\tthis._x = this._viewPort.x = val;\n\n\t\tthis.notifyViewportUpdated();\n\t}\n\n\t/**\n\t * The y position of the gl canvas\n\t */\n\tpublic get y()\n\t{\n\t\treturn this._y;\n\t}\n\n\tpublic set y(val:number)\n\t{\n\t\tif (this._y == val)\n\t\t\treturn;\n\n\t\tCSS.setElementY(this._container, val);\n\n\t\tthis._y = this._viewPort.y = val;\n\n\t\tthis.notifyViewportUpdated();\n\t}\n\n\tpublic set visible(val:boolean)\n\t{\n\t\tCSS.setElementVisibility(this._container, val);\n\t}\n\n\tpublic get visible()\n\t{\n\t\treturn CSS.getElementVisibility(this._container);\n\t}\n\n\tpublic get container():HTMLElement\n\t{\n\t\treturn this._container;\n\t}\n\n\t/**\n\t * The Context object associated with the given stage object.\n\t */\n\tpublic get context():IContext\n\t{\n\t\treturn this._context;\n\t}\n\n\tprivate notifyViewportUpdated()\n\t{\n\t\tif (this._viewportDirty)\n\t\t\treturn;\n\n\t\tthis._viewportDirty = true;\n\n\t\t//if (!this.hasEventListener(StageEvent.VIEWPORT_UPDATED))\n\t\t//return;\n\n\t\t//if (!_viewportUpdated)\n\t\tthis._viewportUpdated = new StageEvent(StageEvent.VIEWPORT_UPDATED);\n\n\t\tthis.dispatchEvent(this._viewportUpdated);\n\t}\n\n\tprivate notifyEnterFrame()\n\t{\n\t\t//if (!hasEventListener(Event.ENTER_FRAME))\n\t\t//return;\n\n\t\tif (!this._enterFrame)\n\t\t\tthis._enterFrame = new Event(Event.ENTER_FRAME);\n\n\t\tthis.dispatchEvent(this._enterFrame);\n\n\t}\n\n\tprivate notifyExitFrame()\n\t{\n\t\t//if (!hasEventListener(Event.EXIT_FRAME))\n\t\t//return;\n\n\t\tif (!this._exitFrame)\n\t\t\tthis._exitFrame = new Event(Event.EXIT_FRAME);\n\n\t\tthis.dispatchEvent(this._exitFrame);\n\t}\n\n\tpublic get profile():string\n\t{\n\t\treturn this._profile;\n\t}\n\n\t/**\n\t * Disposes the Stage object, freeing the Context attached to the Stage.\n\t */\n\tpublic dispose()\n\t{\n\t\tthis._stageManager.iRemoveStage(this);\n\t\tthis.freeContext();\n\t\tthis._stageManager = null;\n\t\tthis._stageIndex = -1;\n\t}\n\n\t/**\n\t * Configures the back buffer associated with the Stage object.\n\t * @param backBufferWidth The width of the backbuffer.\n\t * @param backBufferHeight The height of the backbuffer.\n\t * @param antiAlias The amount of anti-aliasing to use.\n\t * @param enableDepthAndStencil Indicates whether the back buffer contains a depth and stencil buffer.\n\t */\n\tpublic configureBackBuffer(backBufferWidth:number, backBufferHeight:number, antiAlias:number, enableDepthAndStencil:boolean)\n\t{\n\t\tthis.width = backBufferWidth;\n\t\tthis.height = backBufferHeight;\n\n\t\tthis._antiAlias = antiAlias;\n\t\tthis._enableDepthAndStencil = enableDepthAndStencil;\n\n\t\tif (this._context)\n\t\t\tthis._context.configureBackBuffer(backBufferWidth, backBufferHeight, antiAlias, enableDepthAndStencil);\n\t}\n\n\t/*\n\t * Indicates whether the depth and stencil buffer is used\n\t */\n\tpublic get enableDepthAndStencil():boolean\n\t{\n\t\treturn this._enableDepthAndStencil;\n\t}\n\n\tpublic set enableDepthAndStencil(enableDepthAndStencil:boolean)\n\t{\n\t\tthis._enableDepthAndStencil = enableDepthAndStencil;\n\t\tthis._backBufferDirty = true;\n\t}\n\n\tpublic get renderTarget():TextureProxyBase\n\t{\n\t\treturn this._renderTarget;\n\t}\n\n\tpublic get renderSurfaceSelector():number\n\t{\n\t\treturn this._renderSurfaceSelector;\n\t}\n\n\t/*\n\t * Clear and reset the back buffer when using a shared context\n\t */\n\tpublic clear()\n\t{\n\t\tif (!this._context)\n\t\t\treturn;\n\n\t\tif (this._backBufferDirty) {\n\t\t\tthis.configureBackBuffer(this._width, this._height, this._antiAlias, this._enableDepthAndStencil);\n\t\t\tthis._backBufferDirty = false;\n\t\t}\n\n\t\tthis._context.clear(( this._color & 0xff000000 ) >>> 24, // <--------- Zero-fill right shift\n\t\t\t\t\t\t\t  ( this._color & 0xff0000 ) >>> 16, // <-------------|\n\t\t\t\t\t\t\t  ( this._color & 0xff00 ) >>> 8, // <----------------|\n\t\t\t\t\t\t\t\tthis._color & 0xff);\n\n\t\tthis._bufferClear = true;\n\t}\n\n\t/**\n\t * Registers an event listener object with an EventDispatcher object so that the listener receives notification of an event. Special case for enterframe and exitframe events - will switch StageProxy into automatic render mode.\n\t * You can register event listeners on all nodes in the display list for a specific type of event, phase, and priority.\n\t *\n\t * @param type The type of event.\n\t * @param listener The listener function that processes the event.\n\t * @param useCapture Determines whether the listener works in the capture phase or the target and bubbling phases. If useCapture is set to true, the listener processes the event only during the capture phase and not in the target or bubbling phase. If useCapture is false, the listener processes the event only during the target or bubbling phase. To listen for the event in all three phases, call addEventListener twice, once with useCapture set to true, then again with useCapture set to false.\n\t * @param priority The priority level of the event listener. The priority is designated by a signed 32-bit integer. The higher the number, the higher the priority. All listeners with priority n are processed before listeners of priority n-1. If two or more listeners share the same priority, they are processed in the order in which they were added. The default priority is 0.\n\t * @param useWeakReference Determines whether the reference to the listener is strong or weak. A strong reference (the default) prevents your listener from being garbage-collected. A weak reference does not.\n\t */\n\tpublic addEventListener(type:string, listener:Function)\n\t{\n\t\tsuper.addEventListener(type, listener);\n\n\t\t//away.Debug.throwPIR( 'StageProxy' , 'addEventListener' ,  'EnterFrame, ExitFrame');\n\n\t\t//if ((type == Event.ENTER_FRAME || type == Event.EXIT_FRAME) ){//&& ! this._frameEventDriver.hasEventListener(Event.ENTER_FRAME)){\n\n\t\t//_frameEventDriver.addEventListener(Event.ENTER_FRAME, onEnterFrame, useCapture, priority, useWeakReference);\n\n\t\t//}\n\n\t\t/* Original code\n\t\t if ((type == Event.ENTER_FRAME || type == Event.EXIT_FRAME) && ! _frameEventDriver.hasEventListener(Event.ENTER_FRAME)){\n\n\t\t _frameEventDriver.addEventListener(Event.ENTER_FRAME, onEnterFrame, useCapture, priority, useWeakReference);\n\n\n\t\t }\n\t\t */\n\t}\n\n\t/**\n\t * Removes a listener from the EventDispatcher object. Special case for enterframe and exitframe events - will switch StageProxy out of automatic render mode.\n\t * If there is no matching listener registered with the EventDispatcher object, a call to this method has no effect.\n\t *\n\t * @param type The type of event.\n\t * @param listener The listener object to remove.\n\t * @param useCapture Specifies whether the listener was registered for the capture phase or the target and bubbling phases. If the listener was registered for both the capture phase and the target and bubbling phases, two calls to removeEventListener() are required to remove both, one call with useCapture() set to true, and another call with useCapture() set to false.\n\t */\n\tpublic removeEventListener(type:string, listener:Function)\n\t{\n\t\tsuper.removeEventListener(type, listener);\n\n\t\t/*\n\t\t // Remove the main rendering listener if no EnterFrame listeners remain\n\t\t if (    ! this.hasEventListener(Event.ENTER_FRAME , this.onEnterFrame , this )\n\t\t &&  ! this.hasEventListener(Event.EXIT_FRAME , this.onEnterFrame , this) ) //&& _frameEventDriver.hasEventListener(Event.ENTER_FRAME))\n\t\t {\n\n\t\t //_frameEventDriver.removeEventListener(Event.ENTER_FRAME, this.onEnterFrame, this );\n\n\t\t }\n\t\t */\n\t}\n\n\tpublic get scissorRect():Rectangle\n\t{\n\t\treturn this._scissorRect;\n\t}\n\n\tpublic set scissorRect(value:Rectangle)\n\t{\n\t\tthis._scissorRect = value;\n\n\t\tthis._context.setScissorRectangle(this._scissorRect);\n\t}\n\n\t/**\n\t * The index of the Stage which is managed by this instance of StageProxy.\n\t */\n\tpublic get stageIndex():number\n\t{\n\t\treturn this._stageIndex;\n\t}\n\n\t/**\n\t * Indicates whether the Stage managed by this proxy is running in software mode.\n\t * Remember to wait for the CONTEXT_CREATED event before checking this property,\n\t * as only then will it be guaranteed to be accurate.\n\t */\n\tpublic get usesSoftwareRendering():boolean\n\t{\n\t\treturn this._usesSoftwareRendering;\n\t}\n\n\t/**\n\t * The antiAliasing of the Stage.\n\t */\n\tpublic get antiAlias():number\n\t{\n\t\treturn this._antiAlias;\n\t}\n\n\tpublic set antiAlias(antiAlias:number)\n\t{\n\t\tthis._antiAlias = antiAlias;\n\t\tthis._backBufferDirty = true;\n\t}\n\n\t/**\n\t * A viewPort rectangle equivalent of the Stage size and position.\n\t */\n\tpublic get viewPort():Rectangle\n\t{\n\t\tthis._viewportDirty = false;\n\n\t\treturn this._viewPort;\n\t}\n\n\t/**\n\t * The background color of the Stage.\n\t */\n\tpublic get color():number\n\t{\n\t\treturn this._color;\n\t}\n\n\tpublic set color(color:number)\n\t{\n\t\tthis._color = color;\n\t}\n\n\t/**\n\t * The freshly cleared state of the backbuffer before any rendering\n\t */\n\tpublic get bufferClear():boolean\n\t{\n\t\treturn this._bufferClear;\n\t}\n\n\tpublic set bufferClear(newBufferClear:boolean)\n\t{\n\t\tthis._bufferClear = newBufferClear;\n\t}\n\n\t/*\n\t * Access to fire mouseevents across multiple layered view3D instances\n\t */\n\t//\t\tpublic get mouse3DManager():Mouse3DManager\n\t//\t\t{\n\t//\t\t\treturn this._mouse3DManager;\n\t//\t\t}\n\t//\n\t//\t\tpublic set mouse3DManager(value:Mouse3DManager)\n\t//\t\t{\n\t//\t\t\tthis._mouse3DManager = value;\n\t//\t\t}\n\n\t/* TODO: implement dependency Touch3DManager\n\t public get touch3DManager():Touch3DManager\n\t {\n\t return _touch3DManager;\n\t }\n\n\t public set touch3DManager(value:Touch3DManager)\n\t {\n\t _touch3DManager = value;\n\t }\n\t */\n\n\t/**\n\t * Frees the Context associated with this StageProxy.\n\t */\n\tprivate freeContext()\n\t{\n\t\tif (this._context) {\n\t\t\tthis._context.dispose();\n\n\t\t\tthis.dispatchEvent(new StageEvent(StageEvent.CONTEXT_DISPOSED));\n\t\t}\n\n\t\tthis._context = null;\n\n\t\tthis._initialised = false;\n\t}\n\n\t/**\n\t * The Enter_Frame handler for processing the proxy.ENTER_FRAME and proxy.EXIT_FRAME event handlers.\n\t * Typically the proxy.ENTER_FRAME listener would render the layers for this Stage instance.\n\t */\n\tprivate onEnterFrame(event:Event)\n\t{\n\t\tif (!this._context)\n\t\t\treturn;\n\n\t\t// Clear the stage instance\n\t\tthis.clear();\n\t\t//notify the enterframe listeners\n\t\tthis.notifyEnterFrame();\n\t\t// Call the present() to render the frame\n\t\tif (!this._context)\n\t\t\tthis._context.present();\n\t\t//notify the exitframe listeners\n\t\tthis.notifyExitFrame();\n\t}\n\n\tpublic recoverFromDisposal():boolean\n\t{\n\t\tif (!this._context)\n\t\t\treturn false;\n\n\t\t//away.Debug.throwPIR( 'StageProxy' , 'recoverFromDisposal' , '' );\n\n\t\t/*\n\t\t if (this._iContext.driverInfo == \"Disposed\")\n\t\t {\n\t\t this._iContext = null;\n\t\t this.dispatchEvent(new StageEvent(StageEvent.CONTEXT_DISPOSED));\n\t\t return false;\n\n\t\t }\n\t\t */\n\t\treturn true;\n\n\t}\n\n\tprivate _callback(context:IContext)\n\t{\n\t\tthis._context = context;\n\n\t\tthis._container = this._context.container;\n\n\t\t// Only configure back buffer if width and height have been set,\n\t\t// which they may not have been if View.render() has yet to be\n\t\t// invoked for the first time.\n\t\tif (this._width && this._height)\n\t\t\tthis._context.configureBackBuffer(this._width, this._height, this._antiAlias, this._enableDepthAndStencil);\n\n\t\t// Dispatch the appropriate event depending on whether context was\n\t\t// created for the first time or recreated after a device loss.\n\t\tthis.dispatchEvent(new StageEvent(this._initialised? StageEvent.CONTEXT_RECREATED : StageEvent.CONTEXT_CREATED));\n\n\t\tthis._initialised = true;\n\t}\n}\n\nexport = Stage;","import AbstractMethodError\t\t\t= require(\"awayjs-core/lib/errors/AbstractMethodError\");\n\nclass TextureBaseWebGL\n{\n\tpublic textureType:string = \"\";\n\tpublic _gl:WebGLRenderingContext;\n\n\tconstructor(gl:WebGLRenderingContext)\n\t{\n\t\tthis._gl = gl;\n\t}\n\n\tpublic dispose():void\n\t{\n\t\tthrow \"Abstract method must be overridden.\";\n\t}\n\n\tpublic get glTexture():WebGLTexture\n\t{\n\t\tthrow new AbstractMethodError();\n\t}\n}\n\nexport = TextureBaseWebGL;","import BitmapData\t\t\t\t\t= require(\"awayjs-core/lib/base/BitmapData\");\nimport ByteArrayBase\t\t\t\t= require(\"awayjs-core/lib/utils/ByteArrayBase\");\n\nimport ContextStage3D\t\t\t\t= require(\"awayjs-stagegl/lib/base/ContextStage3D\");\nimport ITexture\t\t\t\t\t\t= require(\"awayjs-stagegl/lib/base/ITexture\");\nimport OpCodes\t\t\t\t\t\t= require(\"awayjs-stagegl/lib/base/OpCodes\");\nimport ResourceBaseFlash\t\t\t= require(\"awayjs-stagegl/lib/base/ResourceBaseFlash\");\n\nclass TextureFlash extends ResourceBaseFlash implements ITexture\n{\n\tprivate _context:ContextStage3D;\n\tprivate _width:number;\n\tprivate _height:number;\n\n\tpublic get width():number\n\t{\n\t\treturn this._width;\n\t}\n\n\tpublic get height():number\n\t{\n\t\treturn this._height;\n\t}\n\n\tconstructor(context:ContextStage3D, width:number, height:number, format:string, forRTT:boolean, streaming:boolean = false)\n\t{\n\t\tsuper();\n\n\t\tthis._context = context;\n\t\tthis._width = width;\n\t\tthis._height = height;\n\n\t\tthis._context.addStream(String.fromCharCode(OpCodes.initTexture, (forRTT? OpCodes.trueValue : OpCodes.falseValue)) + width + \",\" + height + \",\" + streaming + \",\" + format + \"$\");\n\t\tthis._pId = this._context.execute();\n\t\tthis._context._iAddResource(this);\n\t}\n\n\tpublic dispose()\n\t{\n\t\tthis._context.addStream(String.fromCharCode(OpCodes.disposeTexture) + this._pId.toString() + \",\");\n\t\tthis._context.execute();\n\t\tthis._context._iRemoveResource(this);\n\n\t\tthis._context = null;\n\t}\n\n\tpublic uploadFromData(bitmapData:BitmapData, miplevel?:number);\n\tpublic uploadFromData(image:HTMLImageElement, miplevel?:number);\n\tpublic uploadFromData(data:any, miplevel:number = 0)\n\t{\n\t\tif (data instanceof BitmapData) {\n\t\t\tdata = (<BitmapData> data).imageData.data;\n\t\t} else if (data instanceof HTMLImageElement) {\n\t\t\tvar can = document.createElement(\"canvas\");\n\t\t\tvar w = data.width;\n\t\t\tvar h = data.height;\n\t\t\tcan.width = w;\n\t\t\tcan.height = h;\n\t\t\tvar ctx = can.getContext(\"2d\");\n\t\t\tctx.drawImage(data, 0, 0);\n\t\t\tdata = ctx.getImageData(0, 0, w, h).data;\n\t\t}\n\n\t\tvar pos = 0;\n\t\tvar bytes = ByteArrayBase.internalGetBase64String(data.length, function () {\n\t\t\treturn data[pos++];\n\t\t}, null);\n\n\t\tthis._context.addStream(String.fromCharCode(OpCodes.uploadBytesTexture) + this._pId + \",\" + miplevel + \",\" + (this._width >> miplevel) + \",\" + (this._height >> miplevel) + \",\" + bytes + \"%\");\n\t\tthis._context.execute();\n\t}\n}\n\nexport = TextureFlash;","import BitmapData\t\t\t\t\t= require(\"awayjs-core/lib/base/BitmapData\");\nimport ByteArray\t\t\t\t\t= require(\"awayjs-core/lib/utils/ByteArray\");\n\nimport ITexture\t\t\t\t\t\t= require(\"awayjs-stagegl/lib/base/ITexture\");\nimport TextureBaseWebGL\t\t\t\t= require(\"awayjs-stagegl/lib/base/TextureBaseWebGL\");\n\nclass TextureWebGL extends TextureBaseWebGL implements ITexture\n{\n\n\tpublic textureType:string = \"texture2d\";\n\n\tprivate _width:number;\n\tprivate _height:number;\n\n\tprivate _frameBuffer:WebGLFramebuffer;\n\n\tprivate _glTexture:WebGLTexture;\n\n\tconstructor(gl:WebGLRenderingContext, width:number, height:number)\n\t{\n\t\tsuper(gl);\n\t\tthis._width = width;\n\t\tthis._height = height;\n\n\t\tthis._glTexture = this._gl.createTexture();\n\t}\n\n\tpublic dispose()\n\t{\n\t\tthis._gl.deleteTexture(this._glTexture);\n\t}\n\n\tpublic get width():number\n\t{\n\t\treturn this._width;\n\t}\n\n\tpublic get height():number\n\t{\n\t\treturn this._height;\n\t}\n\n\tpublic get frameBuffer():WebGLFramebuffer\n\t{\n\t\tif (!this._frameBuffer) {\n\t\t\tthis._frameBuffer = this._gl.createFramebuffer();\n\t\t\tthis._gl.bindFramebuffer(this._gl.FRAMEBUFFER, this._frameBuffer);\n\t\t\tthis._gl.bindTexture(this._gl.TEXTURE_2D, this._glTexture);\n\t\t\tthis._gl.texImage2D(this._gl.TEXTURE_2D, 0, this._gl.RGBA, this._width, this._height, 0, this._gl.RGBA, this._gl.UNSIGNED_BYTE, null);\n\n\t\t\tvar renderBuffer:WebGLRenderbuffer = this._gl.createRenderbuffer();\n\t\t\tthis._gl.bindRenderbuffer(this._gl.RENDERBUFFER, renderBuffer);\n\t\t\tthis._gl.renderbufferStorage(this._gl.RENDERBUFFER, this._gl.DEPTH_COMPONENT16, this._width, this._height);\n\n\t\t\tthis._gl.framebufferTexture2D(this._gl.FRAMEBUFFER, this._gl.COLOR_ATTACHMENT0, this._gl.TEXTURE_2D, this._glTexture, 0);\n\t\t\tthis._gl.framebufferRenderbuffer(this._gl.FRAMEBUFFER, this._gl.DEPTH_ATTACHMENT, this._gl.RENDERBUFFER, renderBuffer);\n\n\t\t\tthis._gl.bindTexture(this._gl.TEXTURE_2D, null);\n\t\t\tthis._gl.bindRenderbuffer(this._gl.RENDERBUFFER, null);\n\t\t\tthis._gl.bindFramebuffer(this._gl.FRAMEBUFFER, null);\n\t\t}\n\n\t\treturn this._frameBuffer;\n\t}\n\n\tpublic uploadFromData(bitmapData:BitmapData, miplevel?:number);\n\tpublic uploadFromData(image:HTMLImageElement, miplevel?:number);\n\tpublic uploadFromData(data:any, miplevel:number = 0)\n\t{\n\t\tif (data instanceof BitmapData)\n\t\t\tdata = (<BitmapData> data).imageData;\n\n\t\tthis._gl.bindTexture(this._gl.TEXTURE_2D, this._glTexture);\n\t\tthis._gl.texImage2D(this._gl.TEXTURE_2D, miplevel, this._gl.RGBA, this._gl.RGBA, this._gl.UNSIGNED_BYTE, data);\n\t\tthis._gl.bindTexture(this._gl.TEXTURE_2D, null);\n\t}\n\n\tpublic uploadCompressedTextureFromByteArray(data:ByteArray, byteArrayOffset:number /*uint*/, async:boolean = false)\n\t{\n\t\tvar ext:Object = this._gl.getExtension(\"WEBKIT_WEBGL_compressed_texture_s3tc\");\n\t\t//this._gl.compressedTexImage2D(this._gl.TEXTURE_2D, 0, this)\n\t}\n\n\tpublic get glTexture():WebGLTexture\n\t{\n\t\treturn this._glTexture;\n\t}\n\n\tpublic generateMipmaps()\n\t{\n\t\t//TODO: implement generating mipmaps\n\t\t//this._gl.bindTexture( this._gl.TEXTURE_2D, this._glTexture );\n\t\t//this._gl.generateMipmap(this._gl.TEXTURE_2D);\n\t\t//this._gl.bindTexture( this._gl.TEXTURE_2D, null );\n\t}\n}\n\nexport = TextureWebGL;","import ContextStage3D\t\t\t\t= require(\"awayjs-stagegl/lib/base/ContextStage3D\");\nimport IVertexBuffer\t\t\t\t= require(\"awayjs-stagegl/lib/base/IVertexBuffer\");\nimport OpCodes\t\t\t\t\t\t= require(\"awayjs-stagegl/lib/base/OpCodes\");\nimport ResourceBaseFlash\t\t\t= require(\"awayjs-stagegl/lib/base/ResourceBaseFlash\");\n\nclass VertexBufferFlash extends ResourceBaseFlash implements IVertexBuffer\n{\n\tprivate _context:ContextStage3D;\n\tprivate _numVertices:number;\n\tprivate _data32PerVertex:number;\n\n\tconstructor(context:ContextStage3D, numVertices:number, data32PerVertex:number)\n\t{\n\t\tsuper();\n\n\t\tthis._context = context;\n\t\tthis._numVertices = numVertices;\n\t\tthis._data32PerVertex = data32PerVertex;\n\t\tthis._context.addStream(String.fromCharCode(OpCodes.initVertexBuffer, data32PerVertex + OpCodes.intMask) + numVertices.toString() + \",\");\n\t\tthis._pId = this._context.execute();\n\t\tthis._context._iAddResource(this);\n\t}\n\n\tpublic uploadFromArray(data:number[], startVertex:number, numVertices:number)\n\t{\n\t\tthis._context.addStream(String.fromCharCode(OpCodes.uploadArrayVertexBuffer, this._pId + OpCodes.intMask) + data.join() + \"#\" + [startVertex, numVertices].join() + \",\");\n\t\tthis._context.execute();\n\t}\n\n\tpublic get numVertices():number\n\t{\n\t\treturn this._numVertices;\n\t}\n\n\tpublic get data32PerVertex():number\n\t{\n\t\treturn this._data32PerVertex;\n\t}\n\n\tpublic dispose()\n\t{\n\t\tthis._context.addStream(String.fromCharCode(OpCodes.disposeVertexBuffer, this._pId + OpCodes.intMask));\n\t\tthis._context.execute();\n\t\tthis._context._iRemoveResource(this);\n\n\t\tthis._context = null;\n\t}\n}\n\nexport = VertexBufferFlash;","import IVertexBuffer\t\t\t\t= require(\"awayjs-stagegl/lib/base/IVertexBuffer\");\n\nclass VertexBufferWebGL implements IVertexBuffer\n{\n\n\tprivate _gl:WebGLRenderingContext;\n\tprivate _numVertices:number;\n\tprivate _data32PerVertex:number;\n\tprivate _buffer:WebGLBuffer;\n\n\tconstructor(gl:WebGLRenderingContext, numVertices:number, data32PerVertex:number)\n\t{\n\t\tthis._gl = gl;\n\t\tthis._buffer = this._gl.createBuffer();\n\t\tthis._numVertices = numVertices;\n\t\tthis._data32PerVertex = data32PerVertex;\n\t}\n\n\tpublic uploadFromArray(vertices:number[], startVertex:number, numVertices:number)\n\t{\n\t\tthis._gl.bindBuffer(this._gl.ARRAY_BUFFER, this._buffer);\n\n\t\t//console.log( \"** WARNING upload not fully implemented, startVertex & numVertices not considered.\" );\n\t\t// TODO add offsets , startVertex, numVertices * this._data32PerVertex\n\t\tthis._gl.bufferData(this._gl.ARRAY_BUFFER, new Float32Array(vertices), this._gl.STATIC_DRAW);\n\t}\n\n\tpublic get numVertices():number\n\t{\n\t\treturn this._numVertices;\n\t}\n\n\tpublic get data32PerVertex():number\n\t{\n\t\treturn this._data32PerVertex;\n\t}\n\n\tpublic get glBuffer():WebGLBuffer\n\t{\n\t\treturn this._buffer;\n\t}\n\n\tpublic dispose()\n\t{\n\t\tthis._gl.deleteBuffer(this._buffer);\n\t}\n}\n\nexport = VertexBufferWebGL;","import Error\t\t\t\t\t\t= require(\"awayjs-core/lib/errors/Error\");\n\nclass AnimationSetError extends Error\n{\n\tconstructor(message:string)\n\t{\n\t\tsuper(message);\n\t}\n}\n\nexport = AnimationSetError;","import Event\t\t\t\t\t\t= require(\"awayjs-core/lib/events/Event\");\n\nimport AnimatorBase\t\t\t\t\t= require(\"awayjs-stagegl/lib/animators/AnimatorBase\");\n\n/**\n * Dispatched to notify changes in an animator's state.\n */\nclass AnimatorEvent extends Event\n{\n\t/**\n\t * Defines the value of the type property of a start event object.\n\t */\n\tpublic static START:string = \"start\";\n\n\t/**\n\t * Defines the value of the type property of a stop event object.\n\t */\n\tpublic static STOP:string = \"stop\";\n\n\t/**\n\t * Defines the value of the type property of a cycle complete event object.\n\t */\n\tpublic static CYCLE_COMPLETE:string = \"cycle_complete\";\n\n\tprivate _animator:AnimatorBase;\n\n\t/**\n\t * Create a new <code>AnimatorEvent</code> object.\n\t *\n\t * @param type The event type.\n\t * @param animator The animator object that is the subject of this event.\n\t */\n\tconstructor(type:string, animator:AnimatorBase)\n\t{\n\t\tsuper(type);\n\t\tthis._animator = animator;\n\t}\n\n\tpublic get animator():AnimatorBase\n\t{\n\t\treturn this._animator;\n\t}\n\n\t/**\n\t * Clones the event.\n\t *\n\t * @return An exact duplicate of the current event object.\n\t */\n\tpublic clone():Event\n\t{\n\t\treturn new AnimatorEvent(this.type, this._animator);\n\t}\n}\n\nexport = AnimatorEvent;","import Event\t\t\t\t\t\t= require(\"awayjs-core/lib/events/Event\");\n\nclass ShadingMethodEvent extends Event\n{\n\tpublic static SHADER_INVALIDATED:string = \"ShaderInvalidated\";\n\n\tconstructor(type:string)\n\t{\n\n\t\tsuper(type);\n\n\t}\n}\n\nexport = ShadingMethodEvent;","import Camera\t\t\t\t\t\t= require(\"awayjs-display/lib/entities/Camera\");\n\nimport Stage\t\t\t\t\t\t= require(\"awayjs-stagegl/lib/base/Stage\");\nimport ITexture\t\t\t\t\t\t= require(\"awayjs-stagegl/lib/base/ITexture\");\nimport Filter3DTaskBase\t\t\t\t= require(\"awayjs-stagegl/lib/filters/tasks/Filter3DTaskBase\");\n\nclass Filter3DBase\n{\n\tprivate _tasks:Array<Filter3DTaskBase>;\n\tprivate _requireDepthRender:boolean;\n\tprivate _textureWidth:number;\n\tprivate _textureHeight:number;\n\n\tconstructor()\n\t{\n\t\tthis._tasks = new Array<Filter3DTaskBase>();\n\t}\n\n\tpublic get requireDepthRender():boolean\n\t{\n\t\treturn this._requireDepthRender;\n\t}\n\n\tpublic pAddTask(filter:Filter3DTaskBase)\n\t{\n\t\tthis._tasks.push(filter);\n\n\t\tif (this._requireDepthRender == null)\n\t\t\tthis._requireDepthRender = filter.requireDepthRender;\n\t}\n\n\tpublic get tasks():Filter3DTaskBase[]\n\t{\n\t\treturn this._tasks;\n\t}\n\n\tpublic getMainInputTexture(stage:Stage):ITexture\n\t{\n\t\treturn this._tasks[0].getMainInputTexture(stage);\n\t}\n\n\tpublic get textureWidth():number\n\t{\n\t\treturn this._textureWidth;\n\t}\n\n\tpublic set textureWidth(value:number)\n\t{\n\t\tthis._textureWidth = value;\n\n\t\tfor (var i:number = 0; i < this._tasks.length; ++i)\n\t\t\tthis._tasks[i].textureWidth = value;\n\t}\n\n\tpublic get textureHeight():number\n\t{\n\t\treturn this._textureHeight;\n\t}\n\n\tpublic set textureHeight(value:number)\n\t{\n\t\tthis._textureHeight = value;\n\n\t\tfor (var i:number = 0; i < this._tasks.length; ++i)\n\t\t\tthis._tasks[i].textureHeight = value;\n\t}\n\n\t// link up the filters correctly with the next filter\n\tpublic setRenderTargets(mainTarget:ITexture, stage:Stage)\n\t{\n\t\tthis._tasks[this._tasks.length - 1].target = mainTarget;\n\t}\n\n\tpublic dispose()\n\t{\n\t\tfor (var i:number = 0; i < this._tasks.length; ++i)\n\t\t\tthis._tasks[i].dispose();\n\t}\n\n\tpublic update(stage:Stage, camera:Camera)\n\t{\n\n\t}\n}\n\nexport = Filter3DBase;","import AbstractMethodError\t\t\t= require(\"awayjs-core/lib/errors/AbstractMethodError\");\nimport ByteArray\t\t\t\t\t= require(\"awayjs-core/lib/utils/ByteArray\");\n\nimport Camera\t\t\t\t\t\t= require(\"awayjs-display/lib/entities/Camera\");\n\nimport Stage\t\t\t\t\t\t= require(\"awayjs-stagegl/lib/base/Stage\");\nimport AGALMiniAssembler\t\t\t= require(\"awayjs-stagegl/lib/aglsl/assembler/AGALMiniAssembler\");\nimport ContextGLTextureFormat\t\t= require(\"awayjs-stagegl/lib/base/ContextGLTextureFormat\");\nimport IContextStageGL\t\t\t\t= require(\"awayjs-stagegl/lib/base/IContextStageGL\");\nimport IProgram\t\t\t\t\t\t= require(\"awayjs-stagegl/lib/base/IProgram\");\nimport ITexture\t\t\t\t\t\t= require(\"awayjs-stagegl/lib/base/ITexture\");\n\nclass Filter3DTaskBase\n{\n\tprivate _mainInputTexture:ITexture;\n\n\tprivate _scaledTextureWidth:number = -1;\n\tprivate _scaledTextureHeight:number = -1;\n\tprivate _textureWidth:number = -1;\n\tprivate _textureHeight:number = -1;\n\tprivate _textureDimensionsInvalid:boolean = true;\n\tprivate _program3DInvalid:boolean = true;\n\tprivate _program3D:IProgram;\n\tprivate _target:ITexture;\n\tprivate _requireDepthRender:boolean;\n\tprivate _textureScale:number = 0;\n\n\tconstructor(requireDepthRender:boolean = false)\n\t{\n\n\t\tthis._requireDepthRender = requireDepthRender;\n\n\t}\n\n\t/**\n\t * The texture scale for the input of this texture. This will define the output of the previous entry in the chain\n\t */\n\tpublic get textureScale():number\n\t{\n\t\treturn this._textureScale;\n\t}\n\n\tpublic set textureScale(value:number)\n\t{\n\t\tif (this._textureScale == value)\n\t\t\treturn;\n\n\t\tthis._textureScale = value;\n\t\tthis._scaledTextureWidth = this._textureWidth >> this._textureScale;\n\t\tthis._scaledTextureHeight = this._textureHeight >> this._textureScale;\n\t\tthis._textureDimensionsInvalid = true;\n\t}\n\n\tpublic get target():ITexture\n\t{\n\t\treturn this._target;\n\t}\n\n\tpublic set target(value:ITexture)\n\t{\n\t\tthis._target = value;\n\t}\n\n\tpublic get textureWidth():number\n\t{\n\t\treturn this._textureWidth;\n\t}\n\n\tpublic set textureWidth(value:number)\n\t{\n\t\tif (this._textureWidth == value)\n\t\t\treturn;\n\n\t\tthis._textureWidth = value;\n\t\tthis._scaledTextureWidth = this._textureWidth >> this._textureScale;\n\t\tthis._textureDimensionsInvalid = true;\n\t}\n\n\tpublic get textureHeight():number\n\t{\n\t\treturn this._textureHeight;\n\t}\n\n\tpublic set textureHeight(value:number)\n\t{\n\t\tif (this._textureHeight == value)\n\t\t\treturn;\n\n\t\tthis._textureHeight = value;\n\t\tthis._scaledTextureHeight = this._textureHeight >> this._textureScale;\n\t\tthis._textureDimensionsInvalid = true;\n\t}\n\n\tpublic getMainInputTexture(stage:Stage):ITexture\n\t{\n\t\tif (this._textureDimensionsInvalid)\n\t\t\tthis.pUpdateTextures(stage);\n\n\t\treturn this._mainInputTexture;\n\t}\n\n\tpublic dispose()\n\t{\n\t\tif (this._mainInputTexture)\n\t\t\tthis._mainInputTexture.dispose();\n\n\t\tif (this._program3D)\n\t\t\tthis._program3D.dispose();\n\t}\n\n\tpublic pInvalidateProgram()\n\t{\n\t\tthis._program3DInvalid = true;\n\t}\n\n\tpublic pUpdateProgram(stage:Stage)\n\t{\n\t\tif (this._program3D)\n\t\t\tthis._program3D.dispose();\n\n\t\tthis._program3D = (<IContextStageGL> stage.context).createProgram();\n\n\t\tvar vertexByteCode:ByteArray = (new AGALMiniAssembler().assemble(\"part vertex 1\\n\" + this.pGetVertexCode() + \"endpart\"))['vertex'].data;\n\t\tvar fragmentByteCode:ByteArray = (new AGALMiniAssembler().assemble(\"part fragment 1\\n\" + this.pGetFragmentCode() + \"endpart\"))['fragment'].data;\n\t\tthis._program3D.upload(vertexByteCode, fragmentByteCode);\n\t\tthis._program3DInvalid = false;\n\t}\n\n\tpublic pGetVertexCode():string\n\t{\n\t\t// TODO: imeplement AGAL <> GLSL\n\n\t\treturn \"mov op, va0\\n\" + \"mov v0, va1\\n\";\n\t}\n\n\tpublic pGetFragmentCode():string\n\t{\n\t\tthrow new AbstractMethodError();\n\n\t\treturn null;\n\t}\n\n\tpublic pUpdateTextures(stage:Stage)\n\t{\n\t\tif (this._mainInputTexture)\n\t\t\tthis._mainInputTexture.dispose();\n\n\t\tthis._mainInputTexture = (<IContextStageGL> stage.context).createTexture(this._scaledTextureWidth, this._scaledTextureHeight, ContextGLTextureFormat.BGRA, true);\n\n\t\tthis._textureDimensionsInvalid = false;\n\t}\n\n\tpublic getProgram(stage:Stage):IProgram\n\t{\n\t\tif (this._program3DInvalid)\n\t\t\tthis.pUpdateProgram(stage);\n\n\t\treturn this._program3D;\n\t}\n\n\tpublic activate(stage:Stage, camera:Camera, depthTexture:ITexture)\n\t{\n\t}\n\n\tpublic deactivate(stage:Stage)\n\t{\n\t}\n\n\tpublic get requireDepthRender():boolean\n\t{\n\t\treturn this._requireDepthRender;\n\t}\n\n}\n\nexport = Filter3DTaskBase;","import Rectangle\t\t\t\t\t= require(\"awayjs-core/lib/geom/Rectangle\");\nimport Event\t\t\t\t\t\t= require(\"awayjs-core/lib/events/Event\");\nimport EventDispatcher\t\t\t\t= require(\"awayjs-core/lib/events/EventDispatcher\");\nimport TextureUtils\t\t\t\t\t= require(\"awayjs-core/lib/utils/TextureUtils\");\n\nimport Stage\t\t\t\t\t\t= require(\"awayjs-stagegl/lib/base/Stage\");\nimport ContextGLBase\t\t\t\t= require(\"awayjs-stagegl/lib/base/ContextGLBase\");\nimport IIndexBuffer\t\t\t\t\t= require(\"awayjs-stagegl/lib/base/IIndexBuffer\");\nimport IVertexBuffer\t\t\t\t= require(\"awayjs-stagegl/lib/base/IVertexBuffer\");\n\nclass RTTBufferManager extends EventDispatcher\n{\n\tprivate static _instances:Array<RTTBufferManagerVO>;\n\n\tprivate _renderToTextureVertexBuffer:IVertexBuffer;\n\tprivate _renderToScreenVertexBuffer:IVertexBuffer;\n\n\tprivate _indexBuffer:IIndexBuffer;\n\tprivate _stage:Stage;\n\tprivate _viewWidth:number = -1;\n\tprivate _viewHeight:number = -1;\n\tprivate _textureWidth:number = -1;\n\tprivate _textureHeight:number = -1;\n\tprivate _renderToTextureRect:Rectangle;\n\tprivate _buffersInvalid:boolean = true;\n\n\tprivate _textureRatioX:number;\n\tprivate _textureRatioY:number;\n\n\tconstructor(stage:Stage)\n\t{\n\t\tsuper();\n\n\t\tthis._renderToTextureRect = new Rectangle();\n\n\t\tthis._stage = stage;\n\n\t}\n\n\tpublic static getInstance(stage:Stage):RTTBufferManager\n\t{\n\t\tif (!stage)\n\t\t\tthrow new Error(\"stage key cannot be null!\");\n\n\t\tif (RTTBufferManager._instances == null)\n\t\t\tRTTBufferManager._instances = new Array<RTTBufferManagerVO>();\n\n\t\tvar rttBufferManager:RTTBufferManager = RTTBufferManager.getRTTBufferManagerFromStage(stage);\n\n\t\tif (rttBufferManager == null) {\n\t\t\trttBufferManager = new RTTBufferManager(stage);\n\n\t\t\tvar vo:RTTBufferManagerVO = new RTTBufferManagerVO();\n\n\t\t\tvo.stage3d = stage;\n\t\t\tvo.rttbfm = rttBufferManager;\n\n\t\t\tRTTBufferManager._instances.push(vo);\n\t\t}\n\n\t\treturn rttBufferManager;\n\n\t}\n\n\tprivate static getRTTBufferManagerFromStage(stage:Stage):RTTBufferManager\n\t{\n\n\t\tvar l:number = RTTBufferManager._instances.length;\n\t\tvar r:RTTBufferManagerVO;\n\n\t\tfor (var c:number = 0; c < l; c++) {\n\t\t\tr = RTTBufferManager._instances[ c ];\n\n\t\t\tif (r.stage3d === stage)\n\t\t\t\treturn r.rttbfm;\n\t\t}\n\n\t\treturn null;\n\t}\n\n\tprivate static deleteRTTBufferManager(stage:Stage):void\n\t{\n\t\tvar l:number = RTTBufferManager._instances.length;\n\t\tvar r:RTTBufferManagerVO;\n\n\t\tfor (var c:number = 0; c < l; c++) {\n\t\t\tr = RTTBufferManager._instances[ c ];\n\n\t\t\tif (r.stage3d === stage) {\n\t\t\t\tRTTBufferManager._instances.splice(c, 1);\n\t\t\t\treturn;\n\t\t\t}\n\t\t}\n\t}\n\n\tpublic get textureRatioX():number\n\t{\n\t\tif (this._buffersInvalid)\n\t\t\tthis.updateRTTBuffers();\n\n\t\treturn this._textureRatioX;\n\t}\n\n\tpublic get textureRatioY():number\n\t{\n\t\tif (this._buffersInvalid)\n\t\t\tthis.updateRTTBuffers();\n\n\t\treturn this._textureRatioY;\n\t}\n\n\tpublic get viewWidth():number\n\t{\n\t\treturn this._viewWidth;\n\t}\n\n\tpublic set viewWidth(value:number)\n\t{\n\t\tif (value == this._viewWidth)\n\t\t\treturn;\n\n\t\tthis._viewWidth = value;\n\n\t\tthis._buffersInvalid = true;\n\n\t\tthis._textureWidth = TextureUtils.getBestPowerOf2(this._viewWidth);\n\n\t\tif (this._textureWidth > this._viewWidth) {\n\t\t\tthis._renderToTextureRect.x = Math.floor((this._textureWidth - this._viewWidth)*.5);\n\t\t\tthis._renderToTextureRect.width = this._viewWidth;\n\t\t} else {\n\t\t\tthis._renderToTextureRect.x = 0;\n\t\t\tthis._renderToTextureRect.width = this._textureWidth;\n\t\t}\n\n\t\tthis.dispatchEvent(new Event(Event.RESIZE));\n\t}\n\n\tpublic get viewHeight():number\n\t{\n\t\treturn this._viewHeight;\n\t}\n\n\tpublic set viewHeight(value:number)\n\t{\n\t\tif (value == this._viewHeight)\n\t\t\treturn;\n\n\t\tthis._viewHeight = value;\n\n\t\tthis._buffersInvalid = true;\n\n\t\tthis._textureHeight = TextureUtils.getBestPowerOf2(this._viewHeight);\n\n\t\tif (this._textureHeight > this._viewHeight) {\n\t\t\tthis._renderToTextureRect.y = Math.floor((this._textureHeight - this._viewHeight)*.5);\n\t\t\tthis._renderToTextureRect.height = this._viewHeight;\n\t\t} else {\n\t\t\tthis._renderToTextureRect.y = 0;\n\t\t\tthis._renderToTextureRect.height = this._textureHeight;\n\t\t}\n\n\t\tthis.dispatchEvent(new Event(Event.RESIZE));\n\t}\n\n\tpublic get renderToTextureVertexBuffer():IVertexBuffer\n\t{\n\t\tif (this._buffersInvalid)\n\t\t\tthis.updateRTTBuffers();\n\n\t\treturn this._renderToTextureVertexBuffer;\n\t}\n\n\tpublic get renderToScreenVertexBuffer():IVertexBuffer\n\t{\n\t\tif (this._buffersInvalid)\n\t\t\tthis.updateRTTBuffers();\n\n\t\treturn this._renderToScreenVertexBuffer;\n\n\t}\n\n\tpublic get indexBuffer():IIndexBuffer\n\t{\n\t\treturn this._indexBuffer;\n\t}\n\n\tpublic get renderToTextureRect():Rectangle\n\t{\n\t\tif (this._buffersInvalid)\n\t\t\tthis.updateRTTBuffers();\n\n\t\treturn this._renderToTextureRect;\n\t}\n\n\tpublic get textureWidth():number\n\t{\n\t\treturn this._textureWidth;\n\t}\n\n\tpublic get textureHeight():number\n\t{\n\t\treturn this._textureHeight;\n\t}\n\n\tpublic dispose()\n\t{\n\t\tRTTBufferManager.deleteRTTBufferManager(this._stage);\n\n\t\tif (this._indexBuffer) {\n\t\t\tthis._indexBuffer.dispose();\n\t\t\tthis._renderToScreenVertexBuffer.dispose();\n\t\t\tthis._renderToTextureVertexBuffer.dispose();\n\t\t\tthis._renderToScreenVertexBuffer = null;\n\t\t\tthis._renderToTextureVertexBuffer = null;\n\t\t\tthis._indexBuffer = null;\n\t\t}\n\t}\n\n\t// todo: place all this in a separate model, since it's used all over the place\n\t// maybe it even has a place in the core (together with screenRect etc)?\n\t// needs to be stored per view of course\n\tprivate updateRTTBuffers()\n\t{\n\t\tvar context:ContextGLBase = <ContextGLBase> this._stage.context;\n\t\tvar textureVerts:number[];\n\t\tvar screenVerts:number[];\n\n\t\tvar x:number;\n\t\tvar y:number;\n\n\t\tif (this._renderToTextureVertexBuffer == null)\n\t\t\tthis._renderToTextureVertexBuffer = context.createVertexBuffer(4, 5);\n\n\t\tif (this._renderToScreenVertexBuffer == null)\n\t\t\tthis._renderToScreenVertexBuffer = context.createVertexBuffer(4, 5);\n\n\t\tif (!this._indexBuffer) {\n\t\t\tthis._indexBuffer = context.createIndexBuffer(6);\n\n\t\t\tthis._indexBuffer.uploadFromArray([2, 1, 0, 3, 2, 0], 0, 6);\n\t\t}\n\n\t\tthis._textureRatioX = x = Math.min(this._viewWidth/this._textureWidth, 1);\n\t\tthis._textureRatioY = y = Math.min(this._viewHeight/this._textureHeight, 1);\n\n\t\tvar u1:number = (1 - x)*.5;\n\t\tvar u2:number = (x + 1)*.5;\n\t\tvar v1:number = (y + 1)*.5;\n\t\tvar v2:number = (1 - y)*.5;\n\n\t\t// last element contains indices for data per vertex that can be passed to the vertex shader if necessary (ie: frustum corners for deferred rendering)\n\t\ttextureVerts = [    -x, -y, u1, v1, 0, x, -y, u2, v1, 1, x, y, u2, v2, 2, -x, y, u1, v2, 3 ];\n\n\t\tscreenVerts = [     -1, -1, u1, v1, 0, 1, -1, u2, v1, 1, 1, 1, u2, v2, 2, -1, 1, u1, v2, 3 ];\n\n\t\tthis._renderToTextureVertexBuffer.uploadFromArray(textureVerts, 0, 4);\n\t\tthis._renderToScreenVertexBuffer.uploadFromArray(screenVerts, 0, 4);\n\n\t\tthis._buffersInvalid = false;\n\t}\n}\n\nexport = RTTBufferManager;\n\nclass RTTBufferManagerVO\n{\n\tpublic stage3d:Stage;\n\n\tpublic rttbfm:RTTBufferManager;\n}","import EventDispatcher\t\t\t\t= require(\"awayjs-core/lib/events/EventDispatcher\");\nimport ArgumentError\t\t\t\t= require(\"awayjs-core/lib/errors/ArgumentError\");\n\nimport StageEvent\t\t\t\t\t= require(\"awayjs-display/lib/events/StageEvent\");\n\nimport Stage\t\t\t\t\t\t= require(\"awayjs-stagegl/lib/base/Stage\");\n\n/**\n * The StageManager class provides a multiton object that handles management for Stage objects.\n *\n * @see away.base.Stage\n */\nclass StageManager extends EventDispatcher\n{\n\tprivate static STAGE_MAX_QUANTITY:number = 8;\n\tprivate _stages:Array<Stage>;\n\n\tprivate static _instance:StageManager;\n\tprivate static _numStages:number = 0;\n\tprivate _onContextCreatedDelegate:(event:Event) => void;\n\n\t/**\n\t * Creates a new StageManager class.\n\t * @param stage The Stage object that contains the Stage objects to be managed.\n\t * @private\n\t */\n\tconstructor()\n\t{\n\t\tsuper();\n\n\t\tthis._stages = new Array<Stage>(StageManager.STAGE_MAX_QUANTITY);\n\n\t\tthis._onContextCreatedDelegate = (event:Event) => this.onContextCreated(event);\n\t}\n\n\t/**\n\t * Gets a StageManager instance for the given Stage object.\n\t * @param stage The Stage object that contains the Stage objects to be managed.\n\t * @return The StageManager instance for the given Stage object.\n\t */\n\tpublic static getInstance():StageManager\n\t{\n\t\tif (this._instance == null)\n\t\t\tthis._instance = new StageManager();\n\n\t\treturn this._instance;\n\t}\n\n\t/**\n\t * Requests the Stage for the given index.\n\t *\n\t * @param index The index of the requested Stage.\n\t * @param forceSoftware Whether to force software mode even if hardware acceleration is available.\n\t * @param profile The compatibility profile, an enumeration of ContextProfile\n\t * @return The Stage for the given index.\n\t */\n\tpublic getStageAt(index:number, forceSoftware:boolean = false, profile:string = \"baseline\", mode:string = \"auto\"):Stage\n\t{\n\t\tif (index < 0 || index >= StageManager.STAGE_MAX_QUANTITY)\n\t\t\tthrow new ArgumentError(\"Index is out of bounds [0..\" + StageManager.STAGE_MAX_QUANTITY + \"]\");\n\n\t\tif (!this._stages[index]) {\n\t\t\tStageManager._numStages++;\n\n\t\t\tvar canvas:HTMLCanvasElement = document.createElement(\"canvas\");\n\t\t\tcanvas.id = \"stage\" + index;\n\t\t\tdocument.body.appendChild(canvas);\n\t\t\tvar stage:Stage = this._stages[index] = new Stage(canvas, index, this, forceSoftware, profile);\n\t\t\tstage.addEventListener(StageEvent.CONTEXT_CREATED, this._onContextCreatedDelegate);\n\t\t\tstage.requestContext(forceSoftware, profile, mode);\n\t\t}\n\n\t\treturn stage;\n\t}\n\n\t/**\n\t * Removes a Stage from the manager.\n\t * @param stage\n\t * @private\n\t */\n\tpublic iRemoveStage(stage:Stage)\n\t{\n\t\tStageManager._numStages--;\n\n\t\tstage.removeEventListener(StageEvent.CONTEXT_CREATED, this._onContextCreatedDelegate);\n\n\t\tthis._stages[stage.stageIndex] = null;\n\t}\n\n\t/**\n\t * Get the next available stage. An error is thrown if there are no StageProxies available\n\t * @param forceSoftware Whether to force software mode even if hardware acceleration is available.\n\t * @param profile The compatibility profile, an enumeration of ContextProfile\n\t * @return The allocated stage\n\t */\n\tpublic getFreeStage(forceSoftware:boolean = false, profile:string = \"baseline\", mode:string = \"auto\"):Stage\n\t{\n\t\tvar i:number = 0;\n\t\tvar len:number = this._stages.length;\n\n\t\twhile (i < len) {\n\t\t\tif (!this._stages[i])\n\t\t\t\treturn this.getStageAt(i, forceSoftware, profile, mode);\n\n\t\t\t++i;\n\t\t}\n\n\t\treturn null;\n\t}\n\n\t/**\n\t * Checks if a new stage can be created and managed by the class.\n\t * @return true if there is one slot free for a new stage\n\t */\n\tpublic get hasFreeStage():boolean\n\t{\n\t\treturn StageManager._numStages < StageManager.STAGE_MAX_QUANTITY? true : false;\n\t}\n\n\t/**\n\t * Returns the amount of stage objects that can be created and managed by the class\n\t * @return the amount of free slots\n\t */\n\tpublic get numSlotsFree():number\n\t{\n\t\treturn StageManager.STAGE_MAX_QUANTITY - StageManager._numStages;\n\t}\n\n\t/**\n\t * Returns the amount of Stage objects currently managed by the class.\n\t * @return the amount of slots used\n\t */\n\tpublic get numSlotsUsed():number\n\t{\n\t\treturn StageManager._numStages;\n\t}\n\n\t/**\n\t * The maximum amount of Stage objects that can be managed by the class\n\t */\n\tpublic get numSlotsTotal():number\n\t{\n\t\treturn this._stages.length;\n\t}\n\n\tprivate onContextCreated(event:Event):void\n\t{\n\t\t//var stage:Stage = <Stage> e.target;\n\t\t//document.body.appendChild(stage.canvas)\n\t}\n}\n\nexport = StageManager;","import Matrix3D\t\t\t\t\t\t= require(\"awayjs-core/lib/geom/Matrix3D\");\n\nimport LineSubGeometry\t\t\t\t= require(\"awayjs-display/lib/base/LineSubGeometry\");\nimport Camera\t\t\t\t\t\t= require(\"awayjs-display/lib/entities/Camera\");\n\nimport Stage\t\t\t\t\t\t= require(\"awayjs-stagegl/lib/base/Stage\");\nimport MaterialPassData\t\t\t\t= require(\"awayjs-stagegl/lib/pool/MaterialPassData\");\nimport RenderableBase\t\t\t\t= require(\"awayjs-stagegl/lib/pool/RenderableBase\");\nimport ContextGLProgramType\t\t\t= require(\"awayjs-stagegl/lib/base/ContextGLProgramType\");\nimport IContextStageGL\t\t\t\t= require(\"awayjs-stagegl/lib/base/IContextStageGL\");\nimport StageGLMaterialBase\t\t\t= require(\"awayjs-stagegl/lib/materials/StageGLMaterialBase\");\nimport ShaderObjectBase\t\t\t\t= require(\"awayjs-stagegl/lib/materials/compilation/ShaderObjectBase\");\nimport ShaderRegisterCache\t\t\t= require(\"awayjs-stagegl/lib/materials/compilation/ShaderRegisterCache\");\nimport ShaderRegisterData\t\t\t= require(\"awayjs-stagegl/lib/materials/compilation/ShaderRegisterData\");\nimport LineBasicPass\t\t\t\t= require(\"awayjs-stagegl/lib/materials/passes/LineBasicPass\");\n\n/**\n * LineMaterial is a material exclusively used to render wireframe objects\n *\n * @see away.entities.Lines\n */\nclass LineBasicMaterial extends StageGLMaterialBase\n{\n\tpublic static pONE_VECTOR:Array<number> = Array<number>(1, 1, 1, 1);\n\tpublic static pFRONT_VECTOR:Array<number> = Array<number>(0, 0, -1, 0);\n\n\tprivate _constants:Array<number> = new Array<number>(0, 0, 0, 0);\n\tprivate _calcMatrix:Matrix3D;\n\tprivate _thickness:number;\n\n\tprivate _screenPass:LineBasicPass;\n\n\t/**\n\t * Creates a new LineMaterial object.\n\t *\n\t * @param thickness The thickness of the wireframe lines.\n\t */\n\tconstructor(thickness:number = 1.25)\n\t{\n\t\tsuper();\n\n\t\tthis._thickness = thickness;\n\n\t\tthis.bothSides = true;\n\n\t\tthis._pAddScreenPass(this._screenPass = new LineBasicPass());\n\n\t\tthis._calcMatrix = new Matrix3D();\n\n\t\tthis._constants[1] = 1/255;\n\t}\n\n\n\t/**\n\t * @inheritDoc\n\t */\n\tpublic _iGetVertexCode(shaderObject:ShaderObjectBase, regCache:ShaderRegisterCache, sharedReg:ShaderRegisterData):string\n\t{\n\t\treturn \"m44 vt0, va0, vc8\t\t\t\\n\" + // transform Q0 to eye space\n\t\t\t\"m44 vt1, va1, vc8\t\t\t\\n\" + // transform Q1 to eye space\n\t\t\t\"sub vt2, vt1, vt0 \t\t\t\\n\" + // L = Q1 - Q0\n\n\t\t\t// test if behind camera near plane\n\t\t\t// if 0 - Q0.z < Camera.near then the point needs to be clipped\n\t\t\t//\"neg vt5.x, vt0.z\t\t\t\t\\n\" + // 0 - Q0.z\n\t\t\t\"slt vt5.x, vt0.z, vc7.z\t\t\t\\n\" + // behind = ( 0 - Q0.z < -Camera.near ) ? 1 : 0\n\t\t\t\"sub vt5.y, vc5.x, vt5.x\t\t\t\\n\" + // !behind = 1 - behind\n\n\t\t\t// p = point on the plane (0,0,-near)\n\t\t\t// n = plane normal (0,0,-1)\n\t\t\t// D = Q1 - Q0\n\t\t\t// t = ( dot( n, ( p - Q0 ) ) / ( dot( n, d )\n\n\t\t\t// solve for t where line crosses Camera.near\n\t\t\t\"add vt4.x, vt0.z, vc7.z\t\t\t\\n\" + // Q0.z + ( -Camera.near )\n\t\t\t\"sub vt4.y, vt0.z, vt1.z\t\t\t\\n\" + // Q0.z - Q1.z\n\n\t\t\t// fix divide by zero for horizontal lines\n\t\t\t\"seq vt4.z, vt4.y vc6.x\t\t\t\\n\" + // offset = (Q0.z - Q1.z)==0 ? 1 : 0\n\t\t\t\"add vt4.y, vt4.y, vt4.z\t\t\t\\n\" + // ( Q0.z - Q1.z ) + offset\n\n\t\t\t\"div vt4.z, vt4.x, vt4.y\t\t\t\\n\" + // t = ( Q0.z - near ) / ( Q0.z - Q1.z )\n\n\t\t\t\"mul vt4.xyz, vt4.zzz, vt2.xyz\t\\n\" + // t(L)\n\t\t\t\"add vt3.xyz, vt0.xyz, vt4.xyz\t\\n\" + // Qclipped = Q0 + t(L)\n\t\t\t\"mov vt3.w, vc5.x\t\t\t\\n\" + // Qclipped.w = 1\n\n\t\t\t// If necessary, replace Q0 with new Qclipped\n\t\t\t\"mul vt0, vt0, vt5.yyyy\t\t\t\\n\" + // !behind * Q0\n\t\t\t\"mul vt3, vt3, vt5.xxxx\t\t\t\\n\" + // behind * Qclipped\n\t\t\t\"add vt0, vt0, vt3\t\t\t\t\\n\" + // newQ0 = Q0 + Qclipped\n\n\t\t\t// calculate side vector for line\n\t\t\t\"sub vt2, vt1, vt0 \t\t\t\\n\" + // L = Q1 - Q0\n\t\t\t\"nrm vt2.xyz, vt2.xyz\t\t\t\\n\" + // normalize( L )\n\t\t\t\"nrm vt5.xyz, vt0.xyz\t\t\t\\n\" + // D = normalize( Q1 )\n\t\t\t\"mov vt5.w, vc5.x\t\t\t\t\\n\" + // D.w = 1\n\t\t\t\"crs vt3.xyz, vt2, vt5\t\t\t\\n\" + // S = L x D\n\t\t\t\"nrm vt3.xyz, vt3.xyz\t\t\t\\n\" + // normalize( S )\n\n\t\t\t// face the side vector properly for the given point\n\t\t\t\"mul vt3.xyz, vt3.xyz, va2.xxx\t\\n\" + // S *= weight\n\t\t\t\"mov vt3.w, vc5.x\t\t\t\\n\" + // S.w = 1\n\n\t\t\t// calculate the amount required to move at the point's distance to correspond to the line's pixel width\n\t\t\t// scale the side vector by that amount\n\t\t\t\"dp3 vt4.x, vt0, vc6\t\t\t\\n\" + // distance = dot( view )\n\t\t\t\"mul vt4.x, vt4.x, vc7.x\t\t\t\\n\" + // distance *= vpsod\n\t\t\t\"mul vt3.xyz, vt3.xyz, vt4.xxx\t\\n\" + // S.xyz *= pixelScaleFactor\n\n\t\t\t// add scaled side vector to Q0 and transform to clip space\n\t\t\t\"add vt0.xyz, vt0.xyz, vt3.xyz\t\\n\" + // Q0 + S\n\n\t\t\t\"m44 op, vt0, vc0\t\t\t\\n\" + // transform Q0 to clip space\n\n\t\t\t// interpolate color\n\t\t\t\"mov v0, va3\t\t\t\t\\n\";\n\t}\n\n\t/**\n\t * @inheritDoc\n\t */\n\tpublic _iActivatePass(pass:MaterialPassData, stage:Stage, camera:Camera)\n\t{\n\t\tsuper._iActivatePass(pass, stage, camera);\n\n\t\tvar context:IContextStageGL = <IContextStageGL> stage.context;\n\n\t\tthis._constants[0] = this._thickness/((stage.scissorRect)? Math.min(stage.scissorRect.width, stage.scissorRect.height) : Math.min(stage.width, stage.height));\n\n\t\t// value to convert distance from camera to model length per pixel width\n\t\tthis._constants[2] = camera.projection.near;\n\n\t\tcontext.setProgramConstantsFromArray(ContextGLProgramType.VERTEX, 5, LineBasicMaterial.pONE_VECTOR, 1);\n\t\tcontext.setProgramConstantsFromArray(ContextGLProgramType.VERTEX, 6, LineBasicMaterial.pFRONT_VECTOR, 1);\n\t\tcontext.setProgramConstantsFromArray(ContextGLProgramType.VERTEX, 7, this._constants, 1);\n\n\t\t// projection matrix\n\t\tcontext.setProgramConstantsFromMatrix(ContextGLProgramType.VERTEX, 0, camera.projection.matrix, true);\n\t}\n\n\t/**\n\t * @inheritDoc\n\t */\n\tpublic _iRenderPass(pass:MaterialPassData, renderable:RenderableBase, stage:Stage, camera:Camera, viewProjection:Matrix3D)\n\t{\n\t\tsuper._iRenderPass(pass, renderable, stage, camera, viewProjection);\n\n\t\tvar context:IContextStageGL = <IContextStageGL> stage.context;\n\t\tthis._calcMatrix.copyFrom(renderable.sourceEntity.sceneTransform);\n\t\tthis._calcMatrix.append(camera.inverseSceneTransform);\n\n\t\tcontext.setProgramConstantsFromMatrix(ContextGLProgramType.VERTEX, 8, this._calcMatrix, true);\n\n\t\tcontext.activateBuffer(0, renderable.getVertexData(LineSubGeometry.START_POSITION_DATA), renderable.getVertexOffset(LineSubGeometry.START_POSITION_DATA), LineSubGeometry.POSITION_FORMAT);\n\t\tcontext.activateBuffer(1, renderable.getVertexData(LineSubGeometry.END_POSITION_DATA), renderable.getVertexOffset(LineSubGeometry.END_POSITION_DATA), LineSubGeometry.POSITION_FORMAT);\n\t\tcontext.activateBuffer(2, renderable.getVertexData(LineSubGeometry.THICKNESS_DATA), renderable.getVertexOffset(LineSubGeometry.THICKNESS_DATA), LineSubGeometry.THICKNESS_FORMAT);\n\t\tcontext.activateBuffer(3, renderable.getVertexData(LineSubGeometry.COLOR_DATA), renderable.getVertexOffset(LineSubGeometry.COLOR_DATA), LineSubGeometry.COLOR_FORMAT);\n\n\t\tcontext.drawTriangles(context.getIndexBuffer(renderable.getIndexData()), 0, renderable.numTriangles);\n\t}\n}\n\nexport = LineBasicMaterial;","import Matrix3D\t\t\t\t\t\t= require(\"awayjs-core/lib/geom/Matrix3D\");\nimport Vector3D\t\t\t\t\t\t= require(\"awayjs-core/lib/geom/Vector3D\");\nimport CubeTextureBase\t\t\t\t= require(\"awayjs-core/lib/textures/CubeTextureBase\");\n\nimport TriangleSubGeometry\t\t\t= require(\"awayjs-display/lib/base/TriangleSubGeometry\");\nimport Camera\t\t\t\t\t\t= require(\"awayjs-display/lib/entities/Camera\");\n\nimport Stage\t\t\t\t\t\t= require(\"awayjs-stagegl/lib/base/Stage\");\nimport MaterialPassData\t\t\t\t= require(\"awayjs-stagegl/lib/pool/MaterialPassData\");\nimport RenderableBase\t\t\t\t= require(\"awayjs-stagegl/lib/pool/RenderableBase\");\nimport ContextGLCompareMode\t\t\t= require(\"awayjs-stagegl/lib/base/ContextGLCompareMode\");\nimport ContextGLMipFilter\t\t\t= require(\"awayjs-stagegl/lib/base/ContextGLMipFilter\");\nimport ContextGLProgramType\t\t\t= require(\"awayjs-stagegl/lib/base/ContextGLProgramType\");\nimport ContextGLTextureFilter\t\t= require(\"awayjs-stagegl/lib/base/ContextGLTextureFilter\");\nimport ContextGLWrapMode\t\t\t= require(\"awayjs-stagegl/lib/base/ContextGLWrapMode\");\nimport IContextStageGL\t\t\t\t= require(\"awayjs-stagegl/lib/base/IContextStageGL\");\nimport StageGLMaterialBase\t\t\t= require(\"awayjs-stagegl/lib/materials/StageGLMaterialBase\");\nimport ShaderObjectBase\t\t\t\t= require(\"awayjs-stagegl/lib/materials/compilation/ShaderObjectBase\");\nimport ShaderRegisterCache\t\t\t= require(\"awayjs-stagegl/lib/materials/compilation/ShaderRegisterCache\");\nimport ShaderRegisterData\t\t\t= require(\"awayjs-stagegl/lib/materials/compilation/ShaderRegisterData\");\nimport SkyboxPass\t\t\t\t\t= require(\"awayjs-stagegl/lib/materials/passes/SkyboxPass\");\nimport ShaderCompilerHelper\t\t\t= require(\"awayjs-stagegl/lib/materials/utils/ShaderCompilerHelper\");\n\n/**\n * SkyboxMaterial is a material exclusively used to render skyboxes\n *\n * @see away3d.primitives.Skybox\n */\nclass SkyboxMaterial extends StageGLMaterialBase\n{\n\tprivate _vertexData:Array<number>;\n\tprivate _cubeMap:CubeTextureBase;\n\tprivate _skyboxPass:SkyboxPass;\n\n\t/**\n\t * Creates a new SkyboxMaterial object.\n\t * @param cubeMap The CubeMap to use as the skybox.\n\t */\n\tconstructor(cubeMap:CubeTextureBase, smooth:boolean = true, repeat:boolean = false, mipmap:boolean = false)\n\t{\n\n\t\tsuper();\n\n\t\tthis._cubeMap = cubeMap;\n\t\tthis._pAddScreenPass(this._skyboxPass = new SkyboxPass());\n\n\t\tthis._vertexData = new Array<number>(0, 0, 0, 0, 1, 1, 1, 1);\n\t}\n\n\t/**\n\t * The cube texture to use as the skybox.\n\t */\n\tpublic get cubeMap():CubeTextureBase\n\t{\n\t\treturn this._cubeMap;\n\t}\n\n\tpublic set cubeMap(value:CubeTextureBase)\n\t{\n\t\tif (value && this._cubeMap && (value.hasMipmaps != this._cubeMap.hasMipmaps || value.format != this._cubeMap.format))\n\t\t\tthis._pInvalidatePasses();\n\n\t\tthis._cubeMap = value;\n\t}\n\n\t/**\n\t * @inheritDoc\n\t */\n\tpublic _iGetVertexCode(shaderObject:ShaderObjectBase, registerCache:ShaderRegisterCache, sharedRegisters:ShaderRegisterData):string\n\t{\n\t\treturn \"mul vt0, va0, vc5\\n\" +\n\t\t\t\"add vt0, vt0, vc4\\n\" +\n\t\t\t\"m44 op, vt0, vc0\\n\" +\n\t\t\t\"mov v0, va0\\n\";\n\t}\n\n\t/**\n\t * @inheritDoc\n\t */\n\tpublic _iGetFragmentCode(shaderObject:ShaderObjectBase, registerCache:ShaderRegisterCache, sharedRegisters:ShaderRegisterData):string\n\t{\n\t\t//var cubeMapReg:ShaderRegisterElement = registerCache.getFreeTextureReg();\n\n\t\t//this._texturesIndex = cubeMapReg.index;\n\n\t\t//ShaderCompilerHelper.getTexCubeSampleCode(sharedRegisters.shadedTarget, cubeMapReg, this._cubeTexture, shaderObject.useSmoothTextures, shaderObject.useMipmapping);\n\n\t\tvar mip:string = \",mipnone\";\n\n\t\tif (this._cubeMap.hasMipmaps)\n\t\t\tmip = \",miplinear\";\n\n\t\treturn \"tex ft0, v0, fs0 <cube,\" + ShaderCompilerHelper.getFormatStringForTexture(this._cubeMap) + \"linear,clamp\" + mip + \">\\n\";\n\t}\n\n\t/**\n\t * @inheritDoc\n\t */\n\tpublic _iActivatePass(pass:MaterialPassData, stage:Stage, camera:Camera)\n\t{\n\t\tsuper._iActivatePass(pass, stage, camera);\n\n\t\tvar context:IContextStageGL = <IContextStageGL> stage.context;\n\t\tcontext.setSamplerStateAt(0, ContextGLWrapMode.CLAMP, ContextGLTextureFilter.LINEAR, this._cubeMap.hasMipmaps? ContextGLMipFilter.MIPLINEAR : ContextGLMipFilter.MIPNONE);\n\t\tcontext.setDepthTest(false, ContextGLCompareMode.LESS);\n\t\tcontext.activateCubeTexture(0, this._cubeMap);\n\t}\n\n\t/**\n\t * @inheritDoc\n\t */\n\tpublic _iRenderPass(pass:MaterialPassData, renderable:RenderableBase, stage:Stage, camera:Camera, viewProjection:Matrix3D)\n\t{\n\t\tsuper._iRenderPass(pass, renderable, stage, camera, viewProjection);\n\n\t\tvar context:IContextStageGL = <IContextStageGL> stage.context;\n\t\tvar pos:Vector3D = camera.scenePosition;\n\t\tthis._vertexData[0] = pos.x;\n\t\tthis._vertexData[1] = pos.y;\n\t\tthis._vertexData[2] = pos.z;\n\t\tthis._vertexData[4] = this._vertexData[5] = this._vertexData[6] = camera.projection.far/Math.sqrt(3);\n\t\tcontext.setProgramConstantsFromMatrix(ContextGLProgramType.VERTEX, 0, viewProjection, true);\n\t\tcontext.setProgramConstantsFromArray(ContextGLProgramType.VERTEX, 4, this._vertexData, 2);\n\n\t\tcontext.activateBuffer(0, renderable.getVertexData(TriangleSubGeometry.POSITION_DATA), renderable.getVertexOffset(TriangleSubGeometry.POSITION_DATA), TriangleSubGeometry.POSITION_FORMAT);\n\t\tcontext.drawTriangles(context.getIndexBuffer(renderable.getIndexData()), 0, renderable.numTriangles);\n\t}\n}\n\nexport = SkyboxMaterial;","import MaterialBase\t\t\t\t\t= require(\"awayjs-display/lib/materials/MaterialBase\");\n\nimport ShaderObjectBase\t\t\t\t= require(\"awayjs-stagegl/lib/materials/compilation/ShaderObjectBase\");\nimport ShaderRegisterCache\t\t\t= require(\"awayjs-stagegl/lib/materials/compilation/ShaderRegisterCache\");\nimport ShaderRegisterData\t\t\t= require(\"awayjs-stagegl/lib/materials/compilation/ShaderRegisterData\");\n\nclass StageGLMaterialBase extends MaterialBase\n{\n\tpublic _iGetVertexCode(shaderObject:ShaderObjectBase, registerCache:ShaderRegisterCache, sharedRegisters:ShaderRegisterData):string\n\t{\n\t\treturn \"\";\n\t}\n\n\tpublic _iGetFragmentCode(shaderObject:ShaderObjectBase, registerCache:ShaderRegisterCache, sharedRegisters:ShaderRegisterData):string\n\t{\n\t\treturn \"\";\n\t}\n}\n\nexport = StageGLMaterialBase;","import Texture2DBase\t\t\t\t= require(\"awayjs-core/lib/textures/Texture2DBase\");\n\nimport BlendMode\t\t\t\t\t= require(\"awayjs-display/lib/base/BlendMode\");\n\nimport ContextGLCompareMode\t\t\t= require(\"awayjs-stagegl/lib/base/ContextGLCompareMode\");\nimport TriangleBasicPass\t\t\t= require(\"awayjs-stagegl/lib/materials/passes/TriangleBasicPass\");\nimport TriangleMaterialBase\t\t\t= require(\"awayjs-stagegl/lib/materials/TriangleMaterialBase\");\n\n/**\n * TriangleMaterial forms an abstract base class for the default shaded materials provided by Stage,\n * using material methods to define their appearance.\n */\nclass TriangleBasicMaterial extends TriangleMaterialBase\n{\n\tprivate _screenPass:TriangleBasicPass;\n\n\tprivate _alphaBlending:boolean = false;\n\tprivate _alpha:number = 1;\n\n\tprivate _depthCompareMode:string = ContextGLCompareMode.LESS_EQUAL;\n\n\t/**\n\t * Creates a new TriangleMaterial object.\n\t *\n\t * @param texture The texture used for the material's albedo color.\n\t * @param smooth Indicates whether the texture should be filtered when sampled. Defaults to true.\n\t * @param repeat Indicates whether the texture should be tiled when sampled. Defaults to false.\n\t * @param mipmap Indicates whether or not any used textures should use mipmapping. Defaults to false.\n\t */\n\tconstructor(texture?:Texture2DBase, smooth?:boolean, repeat?:boolean, mipmap?:boolean);\n\tconstructor(color?:number, alpha?:number);\n\tconstructor(textureColor:any = null, smoothAlpha:any = null, repeat:boolean = false, mipmap:boolean = false)\n\t{\n\t\tsuper();\n\n\t\tthis._screenPass = new TriangleBasicPass();\n\n\t\tif (textureColor instanceof Texture2DBase) {\n\t\t\tthis.texture = <Texture2DBase> textureColor;\n\n\t\t\tthis.smooth = (smoothAlpha == null)? true : false;\n\t\t\tthis.repeat = repeat;\n\t\t\tthis.mipmap = mipmap;\n\t\t} else {\n\t\t\tthis.color = textureColor? Number(textureColor) : 0xCCCCCC;\n\t\t\tthis.alpha = (smoothAlpha == null)? 1 : Number(smoothAlpha);\n\t\t}\n\t}\n\n\t/**\n\t * The depth compare mode used to render the renderables using this material.\n\t *\n\t * @see away.stagegl.ContextGLCompareMode\n\t */\n\n\tpublic get depthCompareMode():string\n\t{\n\t\treturn this._depthCompareMode;\n\t}\n\n\tpublic set depthCompareMode(value:string)\n\t{\n\t\tif (this._depthCompareMode == value)\n\t\t\treturn;\n\n\t\tthis._depthCompareMode = value;\n\n\t\tthis._pInvalidatePasses();\n\t}\n\n\t/**\n\t * The alpha of the surface.\n\t */\n\tpublic get alpha():number\n\t{\n\t\treturn this._alpha;\n\t}\n\n\tpublic set alpha(value:number)\n\t{\n\t\tif (value > 1)\n\t\t\tvalue = 1;\n\t\telse if (value < 0)\n\t\t\tvalue = 0;\n\n\t\tif (this._alpha == value)\n\t\t\treturn;\n\n\t\tthis._alpha = value;\n\n\t\tthis._pInvalidatePasses();\n\t}\n\n\t/**\n\t * Indicates whether or not the material has transparency. If binary transparency is sufficient, for\n\t * example when using textures of foliage, consider using alphaThreshold instead.\n\t */\n\tpublic get alphaBlending():boolean\n\t{\n\t\treturn this._alphaBlending;\n\t}\n\n\tpublic set alphaBlending(value:boolean)\n\t{\n\t\tif (this._alphaBlending == value)\n\t\t\treturn;\n\n\t\tthis._alphaBlending = value;\n\n\t\tthis._pInvalidatePasses();\n\t}\n\n\t/**\n\t * @inheritDoc\n\t */\n\tpublic iUpdateMaterial()\n\t{\n\t\tvar passesInvalid:boolean;\n\n\t\tif (this._pScreenPassesInvalid) {\n\t\t\tthis.pUpdateScreenPasses();\n\t\t\tpassesInvalid = true;\n\t\t}\n\n\t\tif (passesInvalid) {\n\t\t\tthis._pClearScreenPasses();\n\n\t\t\tthis._pAddScreenPass(this._screenPass);\n\t\t}\n\t}\n\n\t/**\n\t * Updates screen passes when they were found to be invalid.\n\t */\n\tpublic pUpdateScreenPasses()\n\t{\n\t\tthis.initPasses();\n\n\t\tthis.setBlendAndCompareModes();\n\n\t\tthis._pScreenPassesInvalid = false;\n\t}\n\n\t/**\n\t * Initializes all the passes and their dependent passes.\n\t */\n\tprivate initPasses()\n\t{\n\t\t//\n\t}\n\n\t/**\n\t * Sets up the various blending modes for all screen passes, based on whether or not there are previous passes.\n\t */\n\tprivate setBlendAndCompareModes()\n\t{\n\t\tthis._pRequiresBlending = (this._pBlendMode != BlendMode.NORMAL || this._alphaBlending || this._alpha < 1);\n\t\tthis._screenPass.depthCompareMode = this._depthCompareMode;\n\t\tthis._screenPass.preserveAlpha = this._pRequiresBlending;\n\t\tthis._screenPass.setBlendMode((this._pBlendMode == BlendMode.NORMAL && this._pRequiresBlending)? BlendMode.LAYER : this._pBlendMode);\n\t\tthis._screenPass.forceSeparateMVP = false;\n\t}\n}\n\nexport = TriangleBasicMaterial;","﻿import Matrix\t\t\t\t\t\t= require(\"awayjs-core/lib/geom/Matrix\");\nimport Matrix3D\t\t\t\t\t\t= require(\"awayjs-core/lib/geom/Matrix3D\");\nimport Matrix3DUtils\t\t\t\t= require(\"awayjs-core/lib/geom/Matrix3DUtils\");\nimport Texture2DBase\t\t\t\t= require(\"awayjs-core/lib/textures/Texture2DBase\");\n\nimport TriangleSubGeometry\t\t\t= require(\"awayjs-display/lib/base/TriangleSubGeometry\");\nimport Camera\t\t\t\t\t\t= require(\"awayjs-display/lib/entities/Camera\");\n\nimport Stage\t\t\t\t\t\t= require(\"awayjs-stagegl/lib/base/Stage\");\nimport MaterialPassData\t\t\t\t= require(\"awayjs-stagegl/lib/pool/MaterialPassData\");\nimport RenderableBase\t\t\t\t= require(\"awayjs-stagegl/lib/pool/RenderableBase\");\nimport ContextGLCompareMode\t\t\t= require(\"awayjs-stagegl/lib/base/ContextGLCompareMode\");\nimport ContextGLProgramType\t\t\t= require(\"awayjs-stagegl/lib/base/ContextGLProgramType\");\nimport IContextStageGL\t\t\t\t= require(\"awayjs-stagegl/lib/base/IContextStageGL\");\nimport ShaderObjectBase\t\t\t\t= require(\"awayjs-stagegl/lib/materials/compilation/ShaderObjectBase\");\nimport ShaderRegisterCache\t\t\t= require(\"awayjs-stagegl/lib/materials/compilation/ShaderRegisterCache\");\nimport ShaderRegisterData\t\t\t= require(\"awayjs-stagegl/lib/materials/compilation/ShaderRegisterData\");\nimport ShaderRegisterElement\t\t= require(\"awayjs-stagegl/lib/materials/compilation/ShaderRegisterElement\");\nimport StageGLMaterialBase\t\t\t= require(\"awayjs-stagegl/lib/materials/StageGLMaterialBase\");\n\n/**\n * CompiledPass forms an abstract base class for the default compiled pass materials provided by Away3D,\n * using material methods to define their appearance.\n */\nclass TriangleMaterialBase extends StageGLMaterialBase\n{\n\tpublic _iGetVertexCode(shaderObject:ShaderObjectBase, registerCache:ShaderRegisterCache, sharedRegisters:ShaderRegisterData):string\n\t{\n\t\tvar code:string = \"\";\n\n\t\t//get the projection coordinates\n\t\tvar position:ShaderRegisterElement = (shaderObject.globalPosDependencies > 0)? sharedRegisters.globalPositionVertex : sharedRegisters.localPosition;\n\n\t\t//reserving vertex constants for projection matrix\n\t\tvar viewMatrixReg:ShaderRegisterElement = registerCache.getFreeVertexConstant();\n\t\tregisterCache.getFreeVertexConstant();\n\t\tregisterCache.getFreeVertexConstant();\n\t\tregisterCache.getFreeVertexConstant();\n\t\tshaderObject.viewMatrixIndex = viewMatrixReg.index*4;\n\n\t\tif (shaderObject.projectionDependencies > 0) {\n\t\t\tsharedRegisters.projectionFragment = registerCache.getFreeVarying();\n\t\t\tvar temp:ShaderRegisterElement = registerCache.getFreeVertexVectorTemp();\n\t\t\tcode += \"m44 \" + temp + \", \" + position + \", \" + viewMatrixReg + \"\\n\" +\n\t\t\t\t\"mov \" + sharedRegisters.projectionFragment + \", \" + temp + \"\\n\" +\n\t\t\t\t\"mov op, \" + temp + \"\\n\";\n\t\t} else {\n\t\t\tcode += \"m44 op, \" + position + \", \" + viewMatrixReg + \"\\n\";\n\t\t}\n\n\t\treturn code;\n\t}\n\n\t/**\n\t * @inheritDoc\n\t */\n\tpublic _iRenderPass(pass:MaterialPassData, renderable:RenderableBase, stage:Stage, camera:Camera, viewProjection:Matrix3D)\n\t{\n\t\tsuper._iRenderPass(pass, renderable, stage, camera, viewProjection);\n\n\t\tvar shaderObject:ShaderObjectBase = pass.shaderObject;\n\n\t\tif (shaderObject.sceneMatrixIndex >= 0) {\n\t\t\trenderable.sourceEntity.getRenderSceneTransform(camera).copyRawDataTo(shaderObject.vertexConstantData, shaderObject.sceneMatrixIndex, true);\n\t\t\tviewProjection.copyRawDataTo(shaderObject.vertexConstantData, shaderObject.viewMatrixIndex, true);\n\t\t} else {\n\t\t\tvar matrix3D:Matrix3D = Matrix3DUtils.CALCULATION_MATRIX;\n\n\t\t\tmatrix3D.copyFrom(renderable.sourceEntity.getRenderSceneTransform(camera));\n\t\t\tmatrix3D.append(viewProjection);\n\n\t\t\tmatrix3D.copyRawDataTo(shaderObject.vertexConstantData, shaderObject.viewMatrixIndex, true);\n\t\t}\n\n\t\tvar context:IContextStageGL = <IContextStageGL> stage.context;\n\n\t\tcontext.setProgramConstantsFromArray(ContextGLProgramType.VERTEX, 0, shaderObject.vertexConstantData, shaderObject.numUsedVertexConstants);\n\t\tcontext.setProgramConstantsFromArray(ContextGLProgramType.FRAGMENT, 0, shaderObject.fragmentConstantData, shaderObject.numUsedFragmentConstants);\n\n\t\tcontext.activateBuffer(0, renderable.getVertexData(TriangleSubGeometry.POSITION_DATA), renderable.getVertexOffset(TriangleSubGeometry.POSITION_DATA), TriangleSubGeometry.POSITION_FORMAT);\n\t\tcontext.drawTriangles(context.getIndexBuffer(renderable.getIndexData()), 0, renderable.numTriangles);\n\t}\n}\n\nexport = TriangleMaterialBase;","class TriangleMaterialMode\n{\n\t/**\n\t *\n\t */\n\tpublic static SINGLE_PASS:string = \"singlePass\";\n\n\t/**\n\t *\n\t */\n\tpublic static MULTI_PASS:string = \"multiPass\";\n}\n\nexport = TriangleMaterialMode;","﻿import ColorTransform\t\t\t\t= require(\"awayjs-core/lib/geom/ColorTransform\");\nimport Texture2DBase\t\t\t\t= require(\"awayjs-core/lib/textures/Texture2DBase\");\n\nimport BlendMode\t\t\t\t\t= require(\"awayjs-display/lib/base/BlendMode\");\nimport Camera\t\t\t\t\t\t= require(\"awayjs-display/lib/entities/Camera\");\nimport StaticLightPicker\t\t\t= require(\"awayjs-display/lib/materials/lightpickers/StaticLightPicker\");\n\nimport Stage\t\t\t\t\t\t= require(\"awayjs-stagegl/lib/base/Stage\");\nimport ContextGLCompareMode\t\t\t= require(\"awayjs-stagegl/lib/base/ContextGLCompareMode\");\nimport AmbientBasicMethod\t\t\t= require(\"awayjs-stagegl/lib/materials/methods/AmbientBasicMethod\");\nimport DiffuseBasicMethod\t\t\t= require(\"awayjs-stagegl/lib/materials/methods/DiffuseBasicMethod\");\nimport EffectMethodBase\t\t\t\t= require(\"awayjs-stagegl/lib/materials/methods/EffectMethodBase\");\nimport NormalBasicMethod\t\t\t= require(\"awayjs-stagegl/lib/materials/methods/NormalBasicMethod\");\nimport ShadowMapMethodBase\t\t\t= require(\"awayjs-stagegl/lib/materials/methods/ShadowMapMethodBase\");\nimport SpecularBasicMethod\t\t\t= require(\"awayjs-stagegl/lib/materials/methods/SpecularBasicMethod\");\nimport MaterialPassMode\t\t\t\t= require(\"awayjs-stagegl/lib/materials/passes/MaterialPassMode\");\nimport TriangleMethodPass\t\t\t= require(\"awayjs-stagegl/lib/materials/passes/TriangleMethodPass\");\nimport TriangleMaterialBase\t\t\t= require(\"awayjs-stagegl/lib/materials/TriangleMaterialBase\");\nimport TriangleMaterialMode\t\t\t= require(\"awayjs-stagegl/lib/materials/TriangleMaterialMode\");\n\n/**\n * TriangleMethodMaterial forms an abstract base class for the default shaded materials provided by Stage,\n * using material methods to define their appearance.\n */\nclass TriangleMethodMaterial extends TriangleMaterialBase\n{\n\tprivate _alphaBlending:boolean = false;\n\tprivate _alpha:number = 1;\n\tprivate _colorTransform:ColorTransform;\n\tprivate _materialMode:string;\n\tprivate _casterLightPass:TriangleMethodPass;\n\tprivate _nonCasterLightPasses:Array<TriangleMethodPass>;\n\tprivate _screenPass:TriangleMethodPass;\n\n\tprivate _ambientMethod:AmbientBasicMethod = new AmbientBasicMethod();\n\tprivate _shadowMethod:ShadowMapMethodBase;\n\tprivate _diffuseMethod:DiffuseBasicMethod = new DiffuseBasicMethod();\n\tprivate _normalMethod:NormalBasicMethod = new NormalBasicMethod();\n\tprivate _specularMethod:SpecularBasicMethod = new SpecularBasicMethod();\n\n\n\tprivate _depthCompareMode:string = ContextGLCompareMode.LESS_EQUAL;\n\n\t/**\n\t * Creates a new TriangleMethodMaterial object.\n\t *\n\t * @param texture The texture used for the material's albedo color.\n\t * @param smooth Indicates whether the texture should be filtered when sampled. Defaults to true.\n\t * @param repeat Indicates whether the texture should be tiled when sampled. Defaults to false.\n\t * @param mipmap Indicates whether or not any used textures should use mipmapping. Defaults to false.\n\t */\n\tconstructor(texture?:Texture2DBase, smooth?:boolean, repeat?:boolean, mipmap?:boolean);\n\tconstructor(color?:number, alpha?:number);\n\tconstructor(textureColor:any = null, smoothAlpha:any = null, repeat:boolean = false, mipmap:boolean = false)\n\t{\n\t\tsuper();\n\n\t\tthis._materialMode = TriangleMaterialMode.SINGLE_PASS;\n\n\t\tif (textureColor instanceof Texture2DBase) {\n\t\t\tthis.texture = <Texture2DBase> textureColor;\n\n\t\t\tthis.smooth = (smoothAlpha == null)? true : false;\n\t\t\tthis.repeat = repeat;\n\t\t\tthis.mipmap = mipmap;\n\t\t} else {\n\t\t\tthis.color = (textureColor == null)? 0xFFFFFF : Number(textureColor);\n\t\t\tthis.alpha = (smoothAlpha == null)? 1 : Number(smoothAlpha);\n\t\t}\n\t}\n\n\n\tpublic get materialMode():string\n\t{\n\t\treturn this._materialMode;\n\t}\n\n\tpublic set materialMode(value:string)\n\t{\n\t\tif (this._materialMode == value)\n\t\t\treturn;\n\n\t\tthis._materialMode = value;\n\n\t\tthis._pInvalidateScreenPasses();\n\t}\n\n\t/**\n\t * The depth compare mode used to render the renderables using this material.\n\t *\n\t * @see away.stagegl.ContextGLCompareMode\n\t */\n\n\tpublic get depthCompareMode():string\n\t{\n\t\treturn this._depthCompareMode;\n\t}\n\n\tpublic set depthCompareMode(value:string)\n\t{\n\t\tif (this._depthCompareMode == value)\n\t\t\treturn;\n\n\t\tthis._depthCompareMode = value;\n\n\t\tthis._pInvalidateScreenPasses();\n\t}\n\n\t/**\n\t * The alpha of the surface.\n\t */\n\tpublic get alpha():number\n\t{\n\t\treturn this._alpha;\n\t}\n\n\tpublic set alpha(value:number)\n\t{\n\t\tif (value > 1)\n\t\t\tvalue = 1;\n\t\telse if (value < 0)\n\t\t\tvalue = 0;\n\n\t\tif (this._alpha == value)\n\t\t\treturn;\n\n\t\tthis._alpha = value;\n\n\t\tif (this._colorTransform == null)\n\t\t\tthis._colorTransform = new ColorTransform();\n\n\t\tthis._colorTransform.alphaMultiplier = value;\n\n\t\tthis._pInvalidatePasses();\n\t}\n\n\t/**\n\t * The ColorTransform object to transform the colour of the material with. Defaults to null.\n\t */\n\tpublic get colorTransform():ColorTransform\n\t{\n\t\treturn this._screenPass.colorTransform;\n\t}\n\n\tpublic set colorTransform(value:ColorTransform)\n\t{\n\t\tthis._screenPass.colorTransform = value;\n\t}\n\n\t/**\n\t * The texture object to use for the ambient colour.\n\t */\n\tpublic get diffuseTexture():Texture2DBase\n\t{\n\t\treturn this._diffuseMethod.texture;\n\t}\n\n\tpublic set diffuseTexture(value:Texture2DBase)\n\t{\n\t\tthis._diffuseMethod.texture = value;\n\t}\n\n\t/**\n\t * The method that provides the ambient lighting contribution. Defaults to AmbientBasicMethod.\n\t */\n\tpublic get ambientMethod():AmbientBasicMethod\n\t{\n\t\treturn this._ambientMethod;\n\t}\n\n\tpublic set ambientMethod(value:AmbientBasicMethod)\n\t{\n\t\tif (this._ambientMethod == value)\n\t\t\treturn;\n\n\t\tif (value && this._ambientMethod)\n\t\t\tvalue.copyFrom(this._ambientMethod);\n\n\t\tthis._ambientMethod = value;\n\n\t\tthis._pInvalidateScreenPasses();\n\t}\n\n\t/**\n\t * The method used to render shadows cast on this surface, or null if no shadows are to be rendered. Defaults to null.\n\t */\n\tpublic get shadowMethod():ShadowMapMethodBase\n\t{\n\t\treturn this._shadowMethod;\n\t}\n\n\tpublic set shadowMethod(value:ShadowMapMethodBase)\n\t{\n\t\tif (this._shadowMethod == value)\n\t\t\treturn;\n\n\t\tif (value && this._shadowMethod)\n\t\t\tvalue.copyFrom(this._shadowMethod);\n\n\t\tthis._shadowMethod = value;\n\n\t\tthis._pInvalidateScreenPasses();\n\t}\n\n\t/**\n\t * The method that provides the diffuse lighting contribution. Defaults to DiffuseBasicMethod.\n\t */\n\tpublic get diffuseMethod():DiffuseBasicMethod\n\t{\n\t\treturn this._diffuseMethod;\n\t}\n\n\tpublic set diffuseMethod(value:DiffuseBasicMethod)\n\t{\n\t\tif (this._diffuseMethod == value)\n\t\t\treturn;\n\n\t\tif (value && this._diffuseMethod)\n\t\t\tvalue.copyFrom(this._diffuseMethod);\n\n\t\tthis._diffuseMethod = value;\n\n\t\tthis._pInvalidateScreenPasses();\n\t}\n\n\t/**\n\t * The method that provides the specular lighting contribution. Defaults to SpecularBasicMethod.\n\t */\n\tpublic get specularMethod():SpecularBasicMethod\n\t{\n\t\treturn this._specularMethod;\n\t}\n\n\tpublic set specularMethod(value:SpecularBasicMethod)\n\t{\n\t\tif (this._specularMethod == value)\n\t\t\treturn;\n\n\t\tif (value && this._specularMethod)\n\t\t\tvalue.copyFrom(this._specularMethod);\n\n\t\tthis._specularMethod = value;\n\n\t\tthis._pInvalidateScreenPasses();\n\t}\n\n\t/**\n\t * The method used to generate the per-pixel normals. Defaults to NormalBasicMethod.\n\t */\n\tpublic get normalMethod():NormalBasicMethod\n\t{\n\t\treturn this._normalMethod;\n\t}\n\n\tpublic set normalMethod(value:NormalBasicMethod)\n\t{\n\t\tif (this._normalMethod == value)\n\t\t\treturn;\n\n\t\tif (value && this._normalMethod)\n\t\t\tvalue.copyFrom(this._normalMethod);\n\n\t\tthis._normalMethod = value;\n\n\t\tthis._pInvalidateScreenPasses();\n\t}\n\n\t/**\n\t * Appends an \"effect\" shading method to the shader. Effect methods are those that do not influence the lighting\n\t * but modulate the shaded colour, used for fog, outlines, etc. The method will be applied to the result of the\n\t * methods added prior.\n\t */\n\tpublic addEffectMethod(method:EffectMethodBase)\n\t{\n\t\tif (this._screenPass == null)\n\t\t\tthis._screenPass = new TriangleMethodPass();\n\n\t\tthis._screenPass.addEffectMethod(method);\n\n\t\tthis._pInvalidateScreenPasses();\n\t}\n\n\t/**\n\t * The number of \"effect\" methods added to the material.\n\t */\n\tpublic get numEffectMethods():number\n\t{\n\t\treturn this._screenPass? this._screenPass.numEffectMethods : 0;\n\t}\n\n\t/**\n\t * Queries whether a given effect method was added to the material.\n\t *\n\t * @param method The method to be queried.\n\t * @return true if the method was added to the material, false otherwise.\n\t */\n\tpublic hasEffectMethod(method:EffectMethodBase):boolean\n\t{\n\t\treturn this._screenPass? this._screenPass.hasEffectMethod(method) : false;\n\t}\n\n\t/**\n\t * Returns the method added at the given index.\n\t * @param index The index of the method to retrieve.\n\t * @return The method at the given index.\n\t */\n\tpublic getEffectMethodAt(index:number):EffectMethodBase\n\t{\n\t\tif (this._screenPass == null)\n\t\t\treturn null;\n\n\t\treturn this._screenPass.getEffectMethodAt(index);\n\t}\n\n\t/**\n\t * Adds an effect method at the specified index amongst the methods already added to the material. Effect\n\t * methods are those that do not influence the lighting but modulate the shaded colour, used for fog, outlines,\n\t * etc. The method will be applied to the result of the methods with a lower index.\n\t */\n\tpublic addEffectMethodAt(method:EffectMethodBase, index:number)\n\t{\n\t\tif (this._screenPass == null)\n\t\t\tthis._screenPass = new TriangleMethodPass();\n\n\t\tthis._screenPass.addEffectMethodAt(method, index);\n\n\t\tthis._pInvalidatePasses();\n\t}\n\n\t/**\n\t * Removes an effect method from the material.\n\t * @param method The method to be removed.\n\t */\n\tpublic removeEffectMethod(method:EffectMethodBase)\n\t{\n\t\tif (this._screenPass == null)\n\t\t\treturn;\n\n\t\tthis._screenPass.removeEffectMethod(method);\n\n\t\t// reconsider\n\t\tif (this._screenPass.numEffectMethods == 0)\n\t\t\tthis._pInvalidatePasses();\n\t}\n\n\t/**\n\t * The normal map to modulate the direction of the surface for each texel. The default normal method expects\n\t * tangent-space normal maps, but others could expect object-space maps.\n\t */\n\tpublic get normalMap():Texture2DBase\n\t{\n\t\treturn this._normalMethod.normalMap;\n\t}\n\n\tpublic set normalMap(value:Texture2DBase)\n\t{\n\t\tthis._normalMethod.normalMap = value;\n\t}\n\n\t/**\n\t * A specular map that defines the strength of specular reflections for each texel in the red channel,\n\t * and the gloss factor in the green channel. You can use SpecularBitmapTexture if you want to easily set\n\t * specular and gloss maps from grayscale images, but correctly authored images are preferred.\n\t */\n\tpublic get specularMap():Texture2DBase\n\t{\n\t\treturn this._specularMethod.texture;\n\t}\n\n\tpublic set specularMap(value:Texture2DBase)\n\t{\n\t\tthis._specularMethod.texture = value;\n\t}\n\n\t/**\n\t * The glossiness of the material (sharpness of the specular highlight).\n\t */\n\tpublic get gloss():number\n\t{\n\t\treturn this._specularMethod.gloss;\n\t}\n\n\tpublic set gloss(value:number)\n\t{\n\t\tthis._specularMethod.gloss = value;\n\t}\n\n\t/**\n\t * The strength of the ambient reflection.\n\t */\n\tpublic get ambient():number\n\t{\n\t\treturn this._ambientMethod.ambient;\n\t}\n\n\tpublic set ambient(value:number)\n\t{\n\t\tthis._ambientMethod.ambient = value;\n\t}\n\n\t/**\n\t * The overall strength of the specular reflection.\n\t */\n\tpublic get specular():number\n\t{\n\t\treturn this._specularMethod.specular;\n\t}\n\n\tpublic set specular(value:number)\n\t{\n\t\tthis._specularMethod.specular = value;\n\t}\n\n\t/**\n\t * The colour of the ambient reflection.\n\t */\n\tpublic get ambientColor():number\n\t{\n\t\treturn this._diffuseMethod.ambientColor;\n\t}\n\n\tpublic set ambientColor(value:number)\n\t{\n\t\tthis._diffuseMethod.ambientColor = value;\n\t}\n\n\t/**\n\t * The colour of the diffuse reflection.\n\t */\n\tpublic get diffuseColor():number\n\t{\n\t\treturn this._diffuseMethod.diffuseColor;\n\t}\n\n\tpublic set diffuseColor(value:number)\n\t{\n\t\tthis._diffuseMethod.diffuseColor = value;\n\t}\n\n\t/**\n\t * The colour of the specular reflection.\n\t */\n\tpublic get specularColor():number\n\t{\n\t\treturn this._specularMethod.specularColor;\n\t}\n\n\tpublic set specularColor(value:number)\n\t{\n\t\tthis._specularMethod.specularColor = value;\n\t}\n\n\t/**\n\t * Indicates whether or not the material has transparency. If binary transparency is sufficient, for\n\t * example when using textures of foliage, consider using alphaThreshold instead.\n\t */\n\n\tpublic get alphaBlending():boolean\n\t{\n\t\treturn this._alphaBlending;\n\t}\n\n\tpublic set alphaBlending(value:boolean)\n\t{\n\t\tif (this._alphaBlending == value)\n\t\t\treturn;\n\n\t\tthis._alphaBlending = value;\n\n\t\tthis._pInvalidatePasses();\n\t}\n\n\t/**\n\t * @inheritDoc\n\t */\n\tpublic _iUpdateMaterial()\n\t{\n\t\tif (this._pScreenPassesInvalid) {\n\t\t\t//Updates screen passes when they were found to be invalid.\n\t\t\tthis._pScreenPassesInvalid = false;\n\n\t\t\tthis.initPasses();\n\n\t\t\tthis.setBlendAndCompareModes();\n\n\t\t\tthis._pClearScreenPasses();\n\n\t\t\tif (this._materialMode == TriangleMaterialMode.MULTI_PASS) {\n\t\t\t\tif (this._casterLightPass)\n\t\t\t\t\tthis._pAddScreenPass(this._casterLightPass);\n\n\t\t\t\tif (this._nonCasterLightPasses)\n\t\t\t\t\tfor (var i:number = 0; i < this._nonCasterLightPasses.length; ++i)\n\t\t\t\t\t\tthis._pAddScreenPass(this._nonCasterLightPasses[i]);\n\t\t\t}\n\n\t\t\tif (this._screenPass)\n\t\t\t\tthis._pAddScreenPass(this._screenPass);\n\t\t}\n\t}\n\n\t/**\n\t * Initializes all the passes and their dependent passes.\n\t */\n\tprivate initPasses()\n\t{\n\t\t// let the effects pass handle everything if there are no lights, when there are effect methods applied\n\t\t// after shading, or when the material mode is single pass.\n\t\tif (this.numLights == 0 || this.numEffectMethods > 0 || this._materialMode == TriangleMaterialMode.SINGLE_PASS)\n\t\t\tthis.initEffectPass();\n\t\telse if (this._screenPass)\n\t\t\tthis.removeEffectPass();\n\n\t\t// only use a caster light pass if shadows need to be rendered\n\t\tif (this._shadowMethod && this._materialMode == TriangleMaterialMode.MULTI_PASS)\n\t\t\tthis.initCasterLightPass();\n\t\telse if (this._casterLightPass)\n\t\t\tthis.removeCasterLightPass();\n\n\t\t// only use non caster light passes if there are lights that don't cast\n\t\tif (this.numNonCasters > 0 && this._materialMode == TriangleMaterialMode.MULTI_PASS)\n\t\t\tthis.initNonCasterLightPasses();\n\t\telse if (this._nonCasterLightPasses)\n\t\t\tthis.removeNonCasterLightPasses();\n\t}\n\n\t/**\n\t * Sets up the various blending modes for all screen passes, based on whether or not there are previous passes.\n\t */\n\tprivate setBlendAndCompareModes()\n\t{\n\t\tvar forceSeparateMVP:boolean = Boolean(this._casterLightPass || this._screenPass);\n\n\t\t// caster light pass is always first if it exists, hence it uses normal blending\n\t\tif (this._casterLightPass) {\n\t\t\tthis._casterLightPass.forceSeparateMVP = forceSeparateMVP;\n\t\t\tthis._casterLightPass.setBlendMode(BlendMode.NORMAL);\n\t\t\tthis._casterLightPass.depthCompareMode = this._depthCompareMode;\n\t\t}\n\n\t\tif (this._nonCasterLightPasses) {\n\t\t\tvar firstAdditiveIndex:number = 0;\n\n\t\t\t// if there's no caster light pass, the first non caster light pass will be the first\n\t\t\t// and should use normal blending\n\t\t\tif (!this._casterLightPass) {\n\t\t\t\tthis._nonCasterLightPasses[0].forceSeparateMVP = forceSeparateMVP;\n\t\t\t\tthis._nonCasterLightPasses[0].setBlendMode(BlendMode.NORMAL);\n\t\t\t\tthis._nonCasterLightPasses[0].depthCompareMode = this._depthCompareMode;\n\t\t\t\tfirstAdditiveIndex = 1;\n\t\t\t}\n\n\t\t\t// all lighting passes following the first light pass should use additive blending\n\t\t\tfor (var i:number = firstAdditiveIndex; i < this._nonCasterLightPasses.length; ++i) {\n\t\t\t\tthis._nonCasterLightPasses[i].forceSeparateMVP = forceSeparateMVP;\n\t\t\t\tthis._nonCasterLightPasses[i].setBlendMode(BlendMode.ADD);\n\t\t\t\tthis._nonCasterLightPasses[i].depthCompareMode = ContextGLCompareMode.LESS_EQUAL;\n\t\t\t}\n\t\t}\n\n\t\tif (this._casterLightPass || this._nonCasterLightPasses) {\n\t\t\t//cannot be blended by blendmode property if multipass enabled\n\t\t\tthis._pRequiresBlending = false;\n\n\t\t\t// there are light passes, so this should be blended in\n\t\t\tif (this._screenPass) {\n\t\t\t\tthis._screenPass.passMode = MaterialPassMode.EFFECTS;\n\t\t\t\tthis._screenPass.depthCompareMode = ContextGLCompareMode.LESS_EQUAL;\n\t\t\t\tthis._screenPass.setBlendMode(BlendMode.LAYER);\n\t\t\t\tthis._screenPass.forceSeparateMVP = forceSeparateMVP;\n\t\t\t}\n\n\t\t} else if (this._screenPass) {\n\t\t\tthis._pRequiresBlending = (this._pBlendMode != BlendMode.NORMAL || this._alphaBlending || (this._colorTransform && this._colorTransform.alphaMultiplier < 1));\n\t\t\t// effects pass is the only pass, so it should just blend normally\n\t\t\tthis._screenPass.passMode = MaterialPassMode.SUPER_SHADER;\n\t\t\tthis._screenPass.depthCompareMode = this._depthCompareMode;\n\t\t\tthis._screenPass.preserveAlpha = this._pRequiresBlending;\n\t\t\tthis._screenPass.colorTransform = this._colorTransform;\n\t\t\tthis._screenPass.setBlendMode((this._pBlendMode == BlendMode.NORMAL && this._pRequiresBlending)? BlendMode.LAYER : this._pBlendMode);\n\t\t\tthis._screenPass.forceSeparateMVP = false;\n\t\t}\n\t}\n\n\tprivate initCasterLightPass()\n\t{\n\n\t\tif (this._casterLightPass == null)\n\t\t\tthis._casterLightPass = new TriangleMethodPass(MaterialPassMode.LIGHTING);\n\n\t\tthis._casterLightPass.lightPicker = new StaticLightPicker([this._shadowMethod.castingLight]);\n\t\tthis._casterLightPass.shadowMethod = this._shadowMethod;\n\t\tthis._casterLightPass.diffuseMethod = this._diffuseMethod;\n\t\tthis._casterLightPass.ambientMethod = this._ambientMethod;\n\t\tthis._casterLightPass.normalMethod = this._normalMethod;\n\t\tthis._casterLightPass.specularMethod = this._specularMethod;\n\t}\n\n\tprivate removeCasterLightPass()\n\t{\n\t\tthis._casterLightPass.dispose();\n\t\tthis._pRemoveScreenPass(this._casterLightPass);\n\t\tthis._casterLightPass = null;\n\t}\n\n\tprivate initNonCasterLightPasses()\n\t{\n\t\tthis.removeNonCasterLightPasses();\n\t\tvar pass:TriangleMethodPass;\n\t\tvar numDirLights:number = this._pLightPicker.numDirectionalLights;\n\t\tvar numPointLights:number = this._pLightPicker.numPointLights;\n\t\tvar numLightProbes:number = this._pLightPicker.numLightProbes;\n\t\tvar dirLightOffset:number = 0;\n\t\tvar pointLightOffset:number = 0;\n\t\tvar probeOffset:number = 0;\n\n\t\tif (!this._casterLightPass) {\n\t\t\tnumDirLights += this._pLightPicker.numCastingDirectionalLights;\n\t\t\tnumPointLights += this._pLightPicker.numCastingPointLights;\n\t\t}\n\n\t\tthis._nonCasterLightPasses = new Array<TriangleMethodPass>();\n\n\t\twhile (dirLightOffset < numDirLights || pointLightOffset < numPointLights || probeOffset < numLightProbes) {\n\t\t\tpass = new TriangleMethodPass(MaterialPassMode.LIGHTING);\n\t\t\tpass.includeCasters = this._shadowMethod == null;\n\t\t\tpass.directionalLightsOffset = dirLightOffset;\n\t\t\tpass.pointLightsOffset = pointLightOffset;\n\t\t\tpass.lightProbesOffset = probeOffset;\n\t\t\tpass.lightPicker = this._pLightPicker;\n\t\t\tpass.diffuseMethod = this._diffuseMethod;\n\t\t\tpass.ambientMethod = this._ambientMethod;\n\t\t\tpass.normalMethod = this._normalMethod;\n\t\t\tpass.specularMethod = this._specularMethod;\n\t\t\tthis._nonCasterLightPasses.push(pass);\n\n\t\t\tdirLightOffset += pass.iNumDirectionalLights;\n\t\t\tpointLightOffset += pass.iNumPointLights;\n\t\t\tprobeOffset += pass.iNumLightProbes;\n\t\t}\n\t}\n\n\tprivate removeNonCasterLightPasses()\n\t{\n\t\tif (!this._nonCasterLightPasses)\n\t\t\treturn;\n\n\t\tfor (var i:number = 0; i < this._nonCasterLightPasses.length; ++i)\n\t\t\tthis._pRemoveScreenPass(this._nonCasterLightPasses[i]);\n\n\t\tthis._nonCasterLightPasses = null;\n\t}\n\n\tprivate removeEffectPass()\n\t{\n\t\tif (this._screenPass.ambientMethod != this._ambientMethod)\n\t\t\tthis._screenPass.ambientMethod.dispose();\n\n\t\tif (this._screenPass.diffuseMethod != this._diffuseMethod)\n\t\t\tthis._screenPass.diffuseMethod.dispose();\n\n\t\tif (this._screenPass.specularMethod != this._specularMethod)\n\t\t\tthis._screenPass.specularMethod.dispose();\n\n\t\tif (this._screenPass.normalMethod != this._normalMethod)\n\t\t\tthis._screenPass.normalMethod.dispose();\n\n\t\tthis._pRemoveScreenPass(this._screenPass);\n\t\tthis._screenPass = null;\n\t}\n\n\tprivate initEffectPass()\n\t{\n\t\tif (this._screenPass == null)\n\t\t\tthis._screenPass = new TriangleMethodPass();\n\n\t\tif (this._materialMode == TriangleMaterialMode.SINGLE_PASS) {\n\t\t\tthis._screenPass.ambientMethod = this._ambientMethod;\n\t\t\tthis._screenPass.diffuseMethod = this._diffuseMethod;\n\t\t\tthis._screenPass.specularMethod = this._specularMethod;\n\t\t\tthis._screenPass.normalMethod = this._normalMethod;\n\t\t\tthis._screenPass.shadowMethod = this._shadowMethod;\n\t\t} else if (this._materialMode == TriangleMaterialMode.MULTI_PASS) {\n\t\t\tif (this.numLights == 0) {\n\t\t\t\tthis._screenPass.ambientMethod = this._ambientMethod;\n\t\t\t} else {\n\t\t\t\tthis._screenPass.ambientMethod = null;\n\t\t\t}\n\n\t\t\tthis._screenPass.preserveAlpha = false;\n\t\t\tthis._screenPass.normalMethod = this._normalMethod;\n\t\t}\n\t}\n\n\t/**\n\t * The maximum total number of lights provided by the light picker.\n\t */\n\tprivate get numLights():number\n\t{\n\t\treturn this._pLightPicker? this._pLightPicker.numLightProbes + this._pLightPicker.numDirectionalLights + this._pLightPicker.numPointLights + this._pLightPicker.numCastingDirectionalLights + this._pLightPicker.numCastingPointLights : 0;\n\t}\n\n\t/**\n\t * The amount of lights that don't cast shadows.\n\t */\n\tprivate get numNonCasters():number\n\t{\n\t\treturn this._pLightPicker? this._pLightPicker.numLightProbes + this._pLightPicker.numDirectionalLights + this._pLightPicker.numPointLights : 0;\n\t}\n}\n\nexport = TriangleMethodMaterial;","import ShadingMethodBase\t\t\t= require(\"awayjs-stagegl/lib/materials/methods/ShadingMethodBase\");\n\n/**\n * MethodVO contains data for a given shader object for the use within a single material.\n * This allows shader methods to be shared across materials while their non-public state differs.\n */\nclass MethodVO\n{\n\tpublic useMethod:boolean = true;\n\n\tpublic method:ShadingMethodBase;\n\n\t// public register indices\n\tpublic texturesIndex:number;\n\tpublic secondaryTexturesIndex:number; // sometimes needed for composites\n\tpublic vertexConstantsIndex:number;\n\tpublic secondaryVertexConstantsIndex:number; // sometimes needed for composites\n\tpublic fragmentConstantsIndex:number;\n\tpublic secondaryFragmentConstantsIndex:number; // sometimes needed for composites\n\n\t// internal stuff for the material to know before assembling code\n\tpublic needsProjection:boolean;\n\tpublic needsView:boolean;\n\tpublic needsNormals:boolean;\n\tpublic needsTangents:boolean;\n\tpublic needsUV:boolean;\n\tpublic needsSecondaryUV:boolean;\n\tpublic needsGlobalVertexPos:boolean;\n\tpublic needsGlobalFragmentPos:boolean;\n\n\tpublic usesTexture:boolean;\n\n\t/**\n\t * Creates a new MethodVO object.\n\t */\n\tconstructor(method:ShadingMethodBase)\n\t{\n\t\tthis.method = method;\n\t}\n\n\t/**\n\t * Resets the values of the value object to their \"unused\" state.\n\t */\n\tpublic reset()\n\t{\n\t\tthis.method.iReset();\n\n\t\tthis.texturesIndex = -1;\n\t\tthis.vertexConstantsIndex = -1;\n\t\tthis.fragmentConstantsIndex = -1;\n\n\t\tthis.needsProjection = false;\n\t\tthis.needsView = false;\n\t\tthis.needsNormals = false;\n\t\tthis.needsTangents = false;\n\t\tthis.needsUV = false;\n\t\tthis.needsSecondaryUV = false;\n\t\tthis.needsGlobalVertexPos = false;\n\t\tthis.needsGlobalFragmentPos = false;\n\t}\n}\n\nexport = MethodVO;\n","import ShaderRegisterElement\t\t= require(\"awayjs-stagegl/lib/materials/compilation/ShaderRegisterElement\");\n\n/**\n * RegisterPool is used by the shader compilation process to keep track of which registers of a certain type are\n * currently used and should not be allowed to be written to. Either entire registers can be requested and locked,\n * or single components (x, y, z, w) of a single register.\n * It is used by ShaderRegisterCache to track usages of individual register types.\n *\n * @see away.materials.ShaderRegisterCache\n */\nclass RegisterPool\n{\n\tprivate static _regPool:Object = new Object();\n\tprivate static _regCompsPool:Object = new Object();\n\n\tprivate _vectorRegisters:Array<ShaderRegisterElement>;\n\tprivate _registerComponents;\n\n\tprivate _regName:string;\n\tprivate _usedSingleCount:Array<Array<number>>;\n\tprivate _usedVectorCount:Array<number> /*uint*/;\n\tprivate _regCount:number;\n\n\tprivate _persistent:boolean;\n\n\t/**\n\t * Creates a new RegisterPool object.\n\t * @param regName The base name of the register type (\"ft\" for fragment temporaries, \"vc\" for vertex constants, etc)\n\t * @param regCount The amount of available registers of this type.\n\t * @param persistent Whether or not registers, once reserved, can be freed again. For example, temporaries are not persistent, but constants are.\n\t */\n\tconstructor(regName:string, regCount:number, persistent:boolean = true)\n\t{\n\t\tthis._regName = regName;\n\t\tthis._regCount = regCount;\n\t\tthis._persistent = persistent;\n\t\tthis.initRegisters(regName, regCount);\n\t}\n\n\t/**\n\t * Retrieve an entire vector register that's still available.\n\t */\n\tpublic requestFreeVectorReg():ShaderRegisterElement\n\t{\n\t\tfor (var i:number = 0; i < this._regCount; ++i) {\n\t\t\tif (!this.isRegisterUsed(i)) {\n\t\t\t\tif (this._persistent)\n\t\t\t\t\tthis._usedVectorCount[i]++;\n\n\t\t\t\treturn this._vectorRegisters[i];\n\t\t\t}\n\t\t}\n\n\t\tthrow new Error(\"Register overflow!\");\n\t}\n\n\t/**\n\t * Retrieve a single vector component that's still available.\n\t */\n\tpublic requestFreeRegComponent():ShaderRegisterElement\n\t{\n\t\tfor (var i:number = 0; i < this._regCount; ++i) {\n\t\t\tif (this._usedVectorCount[i] > 0)\n\t\t\t\tcontinue;\n\n\t\t\tfor (var j:number = 0; j < 4; ++j) {\n\t\t\t\tif (this._usedSingleCount[j][i] == 0) {\n\t\t\t\t\tif (this._persistent)\n\t\t\t\t\t\tthis._usedSingleCount[j][i]++;\n\n\t\t\t\t\treturn this._registerComponents[j][i];\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t\tthrow new Error(\"Register overflow!\");\n\t}\n\n\t/**\n\t * Marks a register as used, so it cannot be retrieved. The register won't be able to be used until removeUsage\n\t * has been called usageCount times again.\n\t * @param register The register to mark as used.\n\t * @param usageCount The amount of usages to add.\n\t */\n\tpublic addUsage(register:ShaderRegisterElement, usageCount:number)\n\t{\n\t\tif (register._component > -1)\n\t\t\tthis._usedSingleCount[register._component][register.index] += usageCount;\n\t\telse\n\t\t\tthis._usedVectorCount[register.index] += usageCount;\n\t}\n\n\t/**\n\t * Removes a usage from a register. When usages reach 0, the register is freed again.\n\t * @param register The register for which to remove a usage.\n\t */\n\tpublic removeUsage(register:ShaderRegisterElement)\n\t{\n\t\tif (register._component > -1) {\n\t\t\tif (--this._usedSingleCount[register._component][register.index] < 0)\n\t\t\t\tthrow new Error(\"More usages removed than exist!\");\n\t\t} else {\n\t\t\tif (--this._usedVectorCount[register.index] < 0)\n\t\t\t\tthrow new Error(\"More usages removed than exist!\");\n\t\t}\n\t}\n\n\t/**\n\t * Disposes any resources used by the current RegisterPool object.\n\t */\n\tpublic dispose()\n\t{\n\t\tthis._vectorRegisters = null;\n\t\tthis._registerComponents = null;\n\t\tthis._usedSingleCount = null;\n\t\tthis._usedVectorCount = null;\n\t}\n\n\t/**\n\t * Indicates whether or not any registers are in use.\n\t */\n\tpublic hasRegisteredRegs():boolean\n\t{\n\t\tfor (var i:number = 0; i < this._regCount; ++i)\n\t\t\tif (this.isRegisterUsed(i))\n\t\t\t\treturn true;\n\n\t\treturn false;\n\t}\n\n\t/**\n\t * Initializes all registers.\n\t */\n\tprivate initRegisters(regName:string, regCount:number)\n\t{\n\t\tvar hash:string = RegisterPool._initPool(regName, regCount);\n\n\t\tthis._vectorRegisters = RegisterPool._regPool[hash];\n\t\tthis._registerComponents = RegisterPool._regCompsPool[hash];\n\n\t\tthis._usedVectorCount = this._initArray(Array<number>(regCount), 0);\n\n\t\tthis._usedSingleCount = new Array<Array<number>>(4);\n\t\tthis._usedSingleCount[0] = this._initArray(new Array<number>(regCount), 0);\n\t\tthis._usedSingleCount[1] = this._initArray(new Array<number>(regCount), 0);\n\t\tthis._usedSingleCount[2] = this._initArray(new Array<number>(regCount), 0);\n\t\tthis._usedSingleCount[3] = this._initArray(new Array<number>(regCount), 0);\n\t}\n\n\tprivate static _initPool(regName:string, regCount:number):string\n\t{\n\t\tvar hash:string = regName + regCount;\n\n\t\tif (RegisterPool._regPool[hash] != undefined)\n\t\t\treturn hash;\n\n\t\tvar vectorRegisters:Array<ShaderRegisterElement> = new Array<ShaderRegisterElement>(regCount);\n\t\tRegisterPool._regPool[hash] = vectorRegisters;\n\n\t\tvar registerComponents = [\n\t\t\t[],\n\t\t\t[],\n\t\t\t[],\n\t\t\t[]\n\t\t];\n\t\tRegisterPool._regCompsPool[hash] = registerComponents;\n\n\t\tfor (var i:number = 0; i < regCount; ++i) {\n\n\t\t\tvectorRegisters[i] = new ShaderRegisterElement(regName, i);\n\n\t\t\tfor (var j:number = 0; j < 4; ++j)\n\t\t\t\tregisterComponents[j][i] = new ShaderRegisterElement(regName, i, j);\n\t\t}\n\n\t\treturn hash;\n\t}\n\n\n\t/**\n\t * Check if the temp register is either used for single or vector use\n\t */\n\tprivate isRegisterUsed(index:number):boolean\n\t{\n\t\tif (this._usedVectorCount[index] > 0)\n\t\t\treturn true;\n\n\t\tfor (var i:number = 0; i < 4; ++i)\n\t\t\tif (this._usedSingleCount[i][index] > 0)\n\t\t\t\treturn true;\n\n\t\treturn false;\n\t}\n\n\n\tprivate _initArray(a:Array<any>, val:any):Array<any>\n\t{\n\t\tvar l:number = a.length;\n\n\t\tfor (var c:number = 0; c < l; c++)\n\t\t\ta[c] = val;\n\n\t\treturn a;\n\t}\n}\n\nexport = RegisterPool;\n","import AnimationSetBase\t\t\t\t= require(\"awayjs-stagegl/lib/animators/AnimationSetBase\");\nimport StageGLMaterialBase\t\t\t= require(\"awayjs-stagegl/lib/materials/StageGLMaterialBase\");\nimport ShaderObjectBase\t\t\t\t= require(\"awayjs-stagegl/lib/materials/compilation/ShaderObjectBase\");\nimport ShaderRegisterCache\t\t\t= require(\"awayjs-stagegl/lib/materials/compilation/ShaderRegisterCache\");\nimport ShaderRegisterData\t\t\t= require(\"awayjs-stagegl/lib/materials/compilation/ShaderRegisterData\");\nimport ShaderRegisterElement\t\t= require(\"awayjs-stagegl/lib/materials/compilation/ShaderRegisterElement\");\nimport IMaterialPassStageGL\t\t\t= require(\"awayjs-stagegl/lib/materials/passes/IMaterialPassStageGL\");\nimport MaterialPassMode\t\t\t\t= require(\"awayjs-stagegl/lib/materials/passes/MaterialPassMode\");\n\n/**\n * ShaderCompilerBase is an abstract base class for shader compilers that use modular shader methods to assemble a\n * material. Concrete subclasses are used by the default materials.\n *\n * @see away.materials.ShadingMethodBase\n */\nclass ShaderCompilerBase\n{\n\tpublic _pShaderObject:ShaderObjectBase;\n\tpublic _pSharedRegisters:ShaderRegisterData;\n\tpublic _pRegisterCache:ShaderRegisterCache;\n\tpublic _pMaterialPass:IMaterialPassStageGL;\n\tpublic _pMaterial:StageGLMaterialBase;\n\n\tpublic _pVertexCode:string = ''; // Changed to emtpy string- AwayTS\n\tpublic _pFragmentCode:string = '';// Changed to emtpy string - AwayTS\n\tpublic _pPostAnimationFragmentCode:string = '';// Changed to emtpy string - AwayTS\n\n\t//The attributes that need to be animated by animators.\n\tpublic _pAnimatableAttributes:Array<string>;\n\n\t//The target registers for animated properties, written to by the animators.\n\tpublic _pAnimationTargetRegisters:Array<string>;\n\n\t//The target register to place the animated UV coordinate.\n\tprivate _uvTarget:string;\n\n\t//The souce register providing the UV coordinate to animate.\n\tprivate _uvSource:string;\n\n\tpublic _pProfile:string;\n\n\t/**\n\t * Creates a new ShaderCompilerBase object.\n\t * @param profile The compatibility profile of the renderer.\n\t */\n\tconstructor(material:StageGLMaterialBase, materialPass:IMaterialPassStageGL, shaderObject:ShaderObjectBase)\n\t{\n\t\tthis._pMaterial = material;\n\t\tthis._pMaterialPass = materialPass;\n\n\t\tthis._pShaderObject = shaderObject;\n\t\tthis._pProfile = shaderObject.profile;\n\n\t\tthis._pSharedRegisters = new ShaderRegisterData();\n\n\t\tthis._pRegisterCache = new ShaderRegisterCache(this._pProfile);\n\t\tthis._pRegisterCache.vertexAttributesOffset = 1;\n\t\tthis._pRegisterCache.reset();\n\t}\n\n\t/**\n\t * Compiles the code after all setup on the compiler has finished.\n\t */\n\tpublic compile()\n\t{\n\t\tthis._pShaderObject.reset();\n\n\t\tthis.pCalculateDependencies();\n\n\t\tthis.pInitRegisterIndices();\n\n\t\tthis.pCompileDependencies();\n\n\t\t//compile custom vertex & fragment codes\n\t\tthis._pVertexCode += this._pMaterialPass._iGetVertexCode(this._pShaderObject, this._pRegisterCache, this._pSharedRegisters);\n\t\tthis._pPostAnimationFragmentCode += this._pMaterialPass._iGetFragmentCode(this._pShaderObject, this._pRegisterCache, this._pSharedRegisters);\n\n\t\t//assign the final output color to the output register\n\t\tthis._pPostAnimationFragmentCode += \"mov \" + this._pRegisterCache.fragmentOutputRegister + \", \" + this._pSharedRegisters.shadedTarget + \"\\n\";\n\t\tthis._pRegisterCache.removeFragmentTempUsage(this._pSharedRegisters.shadedTarget);\n\n\t\t//initialise the required shader constants\n\t\tthis._pShaderObject.initConstantData(this._pRegisterCache, this._pAnimatableAttributes, this._pAnimationTargetRegisters, this._uvSource, this._uvTarget);\n\t\tthis._pMaterialPass._iInitConstantData(this._pShaderObject);\n\t}\n\n\t/**\n\t * Compile the code for the methods.\n\t */\n\tpublic pCompileDependencies()\n\t{\n\t\tthis._pSharedRegisters.shadedTarget = this._pRegisterCache.getFreeFragmentVectorTemp();\n\t\tthis._pRegisterCache.addFragmentTempUsages(this._pSharedRegisters.shadedTarget, 1);\n\n\t\t//compile the world-space position if required\n\t\tif (this._pShaderObject.globalPosDependencies > 0)\n\t\t\tthis.compileGlobalPositionCode();\n\n\t\t//Calculate the (possibly animated) UV coordinates.\n\t\tif (this._pShaderObject.uvDependencies > 0)\n\t\t\tthis.compileUVCode();\n\n\t\tif (this._pShaderObject.secondaryUVDependencies > 0)\n\t\t\tthis.compileSecondaryUVCode();\n\n\t\tif (this._pShaderObject.normalDependencies > 0)\n\t\t\tthis.compileNormalCode();\n\n\t\tif (this._pShaderObject.viewDirDependencies > 0)\n\t\t\tthis.compileViewDirCode();\n\n\t\t//collect code from material\n\t\tthis._pVertexCode += this._pMaterial._iGetVertexCode(this._pShaderObject, this._pRegisterCache, this._pSharedRegisters);\n\t\tthis._pFragmentCode += this._pMaterial._iGetFragmentCode(this._pShaderObject, this._pRegisterCache, this._pSharedRegisters);\n\n\t\t//collect code from pass\n\t\tthis._pVertexCode += this._pMaterialPass._iGetPreLightingVertexCode(this._pShaderObject, this._pRegisterCache, this._pSharedRegisters);\n\t\tthis._pFragmentCode += this._pMaterialPass._iGetPreLightingFragmentCode(this._pShaderObject, this._pRegisterCache, this._pSharedRegisters);\n\n\n\n\t}\n\n\tprivate compileGlobalPositionCode()\n\t{\n\t\tthis._pRegisterCache.addVertexTempUsages(this._pSharedRegisters.globalPositionVertex = this._pRegisterCache.getFreeVertexVectorTemp(), this._pShaderObject.globalPosDependencies);\n\n\t\tvar sceneMatrixReg:ShaderRegisterElement = this._pRegisterCache.getFreeVertexConstant();\n\t\tthis._pRegisterCache.getFreeVertexConstant();\n\t\tthis._pRegisterCache.getFreeVertexConstant();\n\t\tthis._pRegisterCache.getFreeVertexConstant();\n\n\t\tthis._pShaderObject.sceneMatrixIndex = sceneMatrixReg.index*4;\n\n\t\tthis._pVertexCode += \"m44 \" + this._pSharedRegisters.globalPositionVertex + \", \" + this._pSharedRegisters.localPosition + \", \" + sceneMatrixReg + \"\\n\";\n\n\t\tif (this._pShaderObject.usesGlobalPosFragment) {\n\t\t\tthis._pSharedRegisters.globalPositionVarying = this._pRegisterCache.getFreeVarying();\n\t\t\tthis._pVertexCode += \"mov \" + this._pSharedRegisters.globalPositionVarying + \", \" + this._pSharedRegisters.globalPositionVertex + \"\\n\";\n\t\t}\n\t}\n\n\t/**\n\t * Calculate the (possibly animated) UV coordinates.\n\t */\n\tprivate compileUVCode()\n\t{\n\t\tvar uvAttributeReg:ShaderRegisterElement = this._pRegisterCache.getFreeVertexAttribute();\n\t\tthis._pShaderObject.uvBufferIndex = uvAttributeReg.index;\n\n\t\tvar varying:ShaderRegisterElement = this._pRegisterCache.getFreeVarying();\n\n\t\tthis._pSharedRegisters.uvVarying = varying;\n\n\t\tif (this._pShaderObject.usesUVTransform) {\n\t\t\t// a, b, 0, tx\n\t\t\t// c, d, 0, ty\n\t\t\tvar uvTransform1:ShaderRegisterElement = this._pRegisterCache.getFreeVertexConstant();\n\t\t\tvar uvTransform2:ShaderRegisterElement = this._pRegisterCache.getFreeVertexConstant();\n\t\t\tthis._pShaderObject.uvTransformIndex = uvTransform1.index*4;\n\n\t\t\tthis._pVertexCode += \"dp4 \" + varying + \".x, \" + uvAttributeReg + \", \" + uvTransform1 + \"\\n\" +\n\t\t\t\t\t\t\t\t \"dp4 \" + varying + \".y, \" + uvAttributeReg + \", \" + uvTransform2 + \"\\n\" +\n\t\t\t\t\t\t\t\t \"mov \" + varying + \".zw, \" + uvAttributeReg + \".zw \\n\";\n\t\t} else {\n\t\t\tthis._pShaderObject.uvTransformIndex = -1;\n\t\t\tthis._uvTarget = varying.toString();\n\t\t\tthis._uvSource = uvAttributeReg.toString();\n\t\t}\n\t}\n\n\t/**\n\t * Provide the secondary UV coordinates.\n\t */\n\tprivate compileSecondaryUVCode()\n\t{\n\t\tvar uvAttributeReg:ShaderRegisterElement = this._pRegisterCache.getFreeVertexAttribute();\n\t\tthis._pShaderObject.secondaryUVBufferIndex = uvAttributeReg.index;\n\t\tthis._pSharedRegisters.secondaryUVVarying = this._pRegisterCache.getFreeVarying();\n\t\tthis._pVertexCode += \"mov \" + this._pSharedRegisters.secondaryUVVarying + \", \" + uvAttributeReg + \"\\n\";\n\t}\n\n\t/**\n\t * Calculate the view direction.\n\t */\n\tpublic compileViewDirCode()\n\t{\n\t\tvar cameraPositionReg:ShaderRegisterElement = this._pRegisterCache.getFreeVertexConstant();\n\t\tthis._pSharedRegisters.viewDirVarying = this._pRegisterCache.getFreeVarying();\n\t\tthis._pSharedRegisters.viewDirFragment = this._pRegisterCache.getFreeFragmentVectorTemp();\n\t\tthis._pRegisterCache.addFragmentTempUsages(this._pSharedRegisters.viewDirFragment, this._pShaderObject.viewDirDependencies);\n\n\t\tthis._pShaderObject.cameraPositionIndex = cameraPositionReg.index*4;\n\n\t\tif (this._pShaderObject.usesTangentSpace) {\n\t\t\tvar temp:ShaderRegisterElement = this._pRegisterCache.getFreeVertexVectorTemp();\n\t\t\tthis._pVertexCode += \"sub \" + temp + \", \" + cameraPositionReg + \", \" + this._pSharedRegisters.localPosition + \"\\n\" +\n\t\t\t\t\"m33 \" + this._pSharedRegisters.viewDirVarying + \".xyz, \" + temp + \", \" + this._pSharedRegisters.animatedTangent + \"\\n\" +\n\t\t\t\t\"mov \" + this._pSharedRegisters.viewDirVarying + \".w, \" + this._pSharedRegisters.localPosition + \".w\\n\";\n\t\t} else {\n\t\t\tthis._pVertexCode += \"sub \" + this._pSharedRegisters.viewDirVarying + \", \" + cameraPositionReg + \", \" + this._pSharedRegisters.globalPositionVertex + \"\\n\";\n\t\t\tthis._pRegisterCache.removeVertexTempUsage(this._pSharedRegisters.globalPositionVertex);\n\t\t}\n\n\t\t//TODO is this required in all cases? (re: distancemappass)\n\t\tthis._pFragmentCode += \"nrm \" + this._pSharedRegisters.viewDirFragment + \".xyz, \" + this._pSharedRegisters.viewDirVarying + \"\\n\" +\n\t\t\t\"mov \" + this._pSharedRegisters.viewDirFragment + \".w,   \" + this._pSharedRegisters.viewDirVarying + \".w\\n\";\n\t}\n\n\t/**\n\t * Calculate the normal.\n\t */\n\tpublic compileNormalCode()\n\t{\n\t\tthis._pSharedRegisters.normalFragment = this._pRegisterCache.getFreeFragmentVectorTemp();\n\t\tthis._pRegisterCache.addFragmentTempUsages(this._pSharedRegisters.normalFragment, this._pShaderObject.normalDependencies);\n\n\t\t//simple normal aquisition if no tangent space is being used\n\t\tif (this._pShaderObject.outputsNormals && !this._pShaderObject.outputsTangentNormals) {\n\t\t\tthis._pVertexCode += this._pMaterialPass._iGetNormalVertexCode(this._pShaderObject, this._pRegisterCache, this._pSharedRegisters);\n\t\t\tthis._pFragmentCode += this._pMaterialPass._iGetNormalFragmentCode(this._pShaderObject, this._pRegisterCache, this._pSharedRegisters);\n\n\t\t\treturn;\n\t\t}\n\n\t\tvar normalMatrix:Array<ShaderRegisterElement>;\n\n\t\tif (!this._pShaderObject.outputsNormals || !this._pShaderObject.usesTangentSpace) {\n\t\t\tnormalMatrix = new Array<ShaderRegisterElement>(3);\n\t\t\tnormalMatrix[0] = this._pRegisterCache.getFreeVertexConstant();\n\t\t\tnormalMatrix[1] = this._pRegisterCache.getFreeVertexConstant();\n\t\t\tnormalMatrix[2] = this._pRegisterCache.getFreeVertexConstant();\n\n\t\t\tthis._pRegisterCache.getFreeVertexConstant();\n\n\t\t\tthis._pShaderObject.sceneNormalMatrixIndex = normalMatrix[0].index*4;\n\n\t\t\tthis._pSharedRegisters.normalVarying = this._pRegisterCache.getFreeVarying();\n\t\t}\n\n\t\tif (this._pShaderObject.outputsNormals) {\n\t\t\tif (this._pShaderObject.usesTangentSpace) {\n\t\t\t\t// normalize normal + tangent vector and generate (approximated) bitangent used in m33 operation for view\n\t\t\t\tthis._pVertexCode += \"nrm \" + this._pSharedRegisters.animatedNormal + \".xyz, \" + this._pSharedRegisters.animatedNormal + \"\\n\" +\n\t\t\t\t\t\"nrm \" + this._pSharedRegisters.animatedTangent + \".xyz, \" + this._pSharedRegisters.animatedTangent + \"\\n\" +\n\t\t\t\t\t\"crs \" + this._pSharedRegisters.bitangent + \".xyz, \" + this._pSharedRegisters.animatedNormal + \", \" + this._pSharedRegisters.animatedTangent + \"\\n\";\n\n\t\t\t\tthis._pFragmentCode += this._pMaterialPass._iGetNormalFragmentCode(this._pShaderObject, this._pRegisterCache, this._pSharedRegisters);\n\t\t\t} else {\n\t\t\t\t//Compiles the vertex shader code for tangent-space normal maps.\n\t\t\t\tthis._pSharedRegisters.tangentVarying = this._pRegisterCache.getFreeVarying();\n\t\t\t\tthis._pSharedRegisters.bitangentVarying = this._pRegisterCache.getFreeVarying();\n\t\t\t\tvar temp:ShaderRegisterElement = this._pRegisterCache.getFreeVertexVectorTemp();\n\n\t\t\t\tthis._pVertexCode += \"m33 \" + temp + \".xyz, \" + this._pSharedRegisters.animatedNormal + \", \" + normalMatrix[0] + \"\\n\" +\n\t\t\t\t\t\"nrm \" + this._pSharedRegisters.animatedNormal + \".xyz, \" + temp + \"\\n\" +\n\t\t\t\t\t\"m33 \" + temp + \".xyz, \" + this._pSharedRegisters.animatedTangent + \", \" + normalMatrix[0] + \"\\n\" +\n\t\t\t\t\t\"nrm \" + this._pSharedRegisters.animatedTangent + \".xyz, \" + temp + \"\\n\" +\n\t\t\t\t\t\"mov \" + this._pSharedRegisters.tangentVarying + \".x, \" + this._pSharedRegisters.animatedTangent + \".x  \\n\" +\n\t\t\t\t\t\"mov \" + this._pSharedRegisters.tangentVarying + \".z, \" + this._pSharedRegisters.animatedNormal + \".x  \\n\" +\n\t\t\t\t\t\"mov \" + this._pSharedRegisters.tangentVarying + \".w, \" + this._pSharedRegisters.normalInput + \".w  \\n\" +\n\t\t\t\t\t\"mov \" + this._pSharedRegisters.bitangentVarying + \".x, \" + this._pSharedRegisters.animatedTangent + \".y  \\n\" +\n\t\t\t\t\t\"mov \" + this._pSharedRegisters.bitangentVarying + \".z, \" + this._pSharedRegisters.animatedNormal + \".y  \\n\" +\n\t\t\t\t\t\"mov \" + this._pSharedRegisters.bitangentVarying + \".w, \" + this._pSharedRegisters.normalInput + \".w  \\n\" +\n\t\t\t\t\t\"mov \" + this._pSharedRegisters.normalVarying + \".x, \" + this._pSharedRegisters.animatedTangent + \".z  \\n\" +\n\t\t\t\t\t\"mov \" + this._pSharedRegisters.normalVarying + \".z, \" + this._pSharedRegisters.animatedNormal + \".z  \\n\" +\n\t\t\t\t\t\"mov \" + this._pSharedRegisters.normalVarying + \".w, \" + this._pSharedRegisters.normalInput + \".w  \\n\" +\n\t\t\t\t\t\"crs \" + temp + \".xyz, \" + this._pSharedRegisters.animatedNormal + \", \" + this._pSharedRegisters.animatedTangent + \"\\n\" +\n\t\t\t\t\t\"mov \" + this._pSharedRegisters.tangentVarying + \".y, \" + temp + \".x    \\n\" +\n\t\t\t\t\t\"mov \" + this._pSharedRegisters.bitangentVarying + \".y, \" + temp + \".y  \\n\" +\n\t\t\t\t\t\"mov \" + this._pSharedRegisters.normalVarying + \".y, \" + temp + \".z    \\n\";\n\n\t\t\t\tthis._pRegisterCache.removeVertexTempUsage(this._pSharedRegisters.animatedTangent);\n\n\t\t\t\t//Compiles the fragment shader code for tangent-space normal maps.\n\t\t\t\tvar t:ShaderRegisterElement;\n\t\t\t\tvar b:ShaderRegisterElement;\n\t\t\t\tvar n:ShaderRegisterElement;\n\n\t\t\t\tt = this._pRegisterCache.getFreeFragmentVectorTemp();\n\t\t\t\tthis._pRegisterCache.addFragmentTempUsages(t, 1);\n\t\t\t\tb = this._pRegisterCache.getFreeFragmentVectorTemp();\n\t\t\t\tthis._pRegisterCache.addFragmentTempUsages(b, 1);\n\t\t\t\tn = this._pRegisterCache.getFreeFragmentVectorTemp();\n\t\t\t\tthis._pRegisterCache.addFragmentTempUsages(n, 1);\n\n\t\t\t\tthis._pFragmentCode += \"nrm \" + t + \".xyz, \" + this._pSharedRegisters.tangentVarying + \"\\n\" +\n\t\t\t\t\t\"mov \" + t + \".w, \" + this._pSharedRegisters.tangentVarying + \".w\t\\n\" +\n\t\t\t\t\t\"nrm \" + b + \".xyz, \" + this._pSharedRegisters.bitangentVarying + \"\\n\" +\n\t\t\t\t\t\"nrm \" + n + \".xyz, \" + this._pSharedRegisters.normalVarying + \"\\n\";\n\n\t\t\t\t//compile custom fragment code for normal calcs\n\t\t\t\tthis._pFragmentCode += this._pMaterialPass._iGetNormalFragmentCode(this._pShaderObject, this._pRegisterCache, this._pSharedRegisters) +\n\t\t\t\t\t\"m33 \" + this._pSharedRegisters.normalFragment + \".xyz, \" + this._pSharedRegisters.normalFragment + \", \" + t + \"\\n\" +\n\t\t\t\t\t\"mov \" + this._pSharedRegisters.normalFragment + \".w, \" + this._pSharedRegisters.normalVarying + \".w\\n\";\n\n\t\t\t\tthis._pRegisterCache.removeFragmentTempUsage(b);\n\t\t\t\tthis._pRegisterCache.removeFragmentTempUsage(t);\n\t\t\t\tthis._pRegisterCache.removeFragmentTempUsage(n);\n\t\t\t}\n\t\t} else {\n\t\t\t// no output, world space is enough\n\t\t\tthis._pVertexCode += \"m33 \" + this._pSharedRegisters.normalVarying + \".xyz, \" + this._pSharedRegisters.animatedNormal + \", \" + normalMatrix[0] + \"\\n\" +\n\t\t\t\t\"mov \" + this._pSharedRegisters.normalVarying + \".w, \" + this._pSharedRegisters.animatedNormal + \".w\\n\";\n\n\t\t\tthis._pFragmentCode += \"nrm \" + this._pSharedRegisters.normalFragment + \".xyz, \" + this._pSharedRegisters.normalVarying + \"\\n\" +\n\t\t\t\t\"mov \" + this._pSharedRegisters.normalFragment + \".w, \" + this._pSharedRegisters.normalVarying + \".w\\n\";\n\n\t\t\tif (this._pShaderObject.tangentDependencies > 0) {\n\t\t\t\tthis._pSharedRegisters.tangentVarying = this._pRegisterCache.getFreeVarying();\n\n\t\t\t\tthis._pVertexCode += \"m33 \" + this._pSharedRegisters.tangentVarying + \".xyz, \" + this._pSharedRegisters.animatedTangent + \", \" + normalMatrix[0] + \"\\n\" +\n\t\t\t\t\t\"mov \" + this._pSharedRegisters.tangentVarying + \".w, \" + this._pSharedRegisters.animatedTangent + \".w\\n\";\n\t\t\t}\n\t\t}\n\n\t\tif (!this._pShaderObject.usesTangentSpace)\n\t\t\tthis._pRegisterCache.removeVertexTempUsage(this._pSharedRegisters.animatedNormal);\n\t}\n\n\t/**\n\t * Reset all the indices to \"unused\".\n\t */\n\tpublic pInitRegisterIndices()\n\t{\n\t\tthis._pShaderObject.pInitRegisterIndices();\n\n\t\tthis._pAnimatableAttributes = new Array<string>(\"va0\");\n\t\tthis._pAnimationTargetRegisters = new Array<string>(\"vt0\");\n\t\tthis._pVertexCode = \"\";\n\t\tthis._pFragmentCode = \"\";\n\t\tthis._pPostAnimationFragmentCode = \"\";\n\n\t\tthis._pRegisterCache.addVertexTempUsages(this._pSharedRegisters.localPosition = this._pRegisterCache.getFreeVertexVectorTemp(), 1);\n\n\t\t//create commonly shared constant registers\n\t\tthis._pSharedRegisters.commons = this._pRegisterCache.getFreeFragmentConstant();\n\t\tthis._pShaderObject.commonsDataIndex = this._pSharedRegisters.commons.index*4;\n\n\t\t//Creates the registers to contain the tangent data.\n\t\t// need to be created FIRST and in this order (for when using tangent space)\n\t\tif (this._pShaderObject.tangentDependencies > 0 || this._pShaderObject.outputsNormals) {\n\t\t\tthis._pSharedRegisters.tangentInput = this._pRegisterCache.getFreeVertexAttribute();\n\t\t\tthis._pShaderObject.tangentBufferIndex = this._pSharedRegisters.tangentInput.index;\n\n\t\t\tthis._pSharedRegisters.animatedTangent = this._pRegisterCache.getFreeVertexVectorTemp();\n\t\t\tthis._pRegisterCache.addVertexTempUsages(this._pSharedRegisters.animatedTangent, 1);\n\n\t\t\tif (this._pShaderObject.usesTangentSpace) {\n\t\t\t\tthis._pSharedRegisters.bitangent = this._pRegisterCache.getFreeVertexVectorTemp();\n\t\t\t\tthis._pRegisterCache.addVertexTempUsages(this._pSharedRegisters.bitangent, 1);\n\t\t\t}\n\n\t\t\tthis._pAnimatableAttributes.push(this._pSharedRegisters.tangentInput.toString());\n\t\t\tthis._pAnimationTargetRegisters.push(this._pSharedRegisters.animatedTangent.toString());\n\t\t}\n\n\t\tif (this._pShaderObject.normalDependencies > 0) {\n\t\t\tthis._pSharedRegisters.normalInput = this._pRegisterCache.getFreeVertexAttribute();\n\t\t\tthis._pShaderObject.normalBufferIndex = this._pSharedRegisters.normalInput.index;\n\n\t\t\tthis._pSharedRegisters.animatedNormal = this._pRegisterCache.getFreeVertexVectorTemp();\n\t\t\tthis._pRegisterCache.addVertexTempUsages(this._pSharedRegisters.animatedNormal, 1);\n\n\t\t\tthis._pAnimatableAttributes.push(this._pSharedRegisters.normalInput.toString());\n\t\t\tthis._pAnimationTargetRegisters.push(this._pSharedRegisters.animatedNormal.toString());\n\t\t}\n\t}\n\n\t/**\n\t * Figure out which named registers are required, and how often.\n\t */\n\tpublic pCalculateDependencies()\n\t{\n\t\tthis._pShaderObject.useAlphaPremultiplied = this._pMaterial.alphaPremultiplied;\n\t\tthis._pShaderObject.useBothSides = this._pMaterial.bothSides;\n\t\tthis._pShaderObject.useMipmapping = this._pMaterial.mipmap;\n\t\tthis._pShaderObject.useSmoothTextures = this._pMaterial.smooth;\n\t\tthis._pShaderObject.repeatTextures = this._pMaterial.repeat;\n\t\tthis._pShaderObject.usesUVTransform = this._pMaterial.animateUVs;\n\t\tthis._pShaderObject.alphaThreshold = this._pMaterial.alphaThreshold;\n\t\tthis._pShaderObject.texture = this._pMaterial.texture;\n\t\tthis._pShaderObject.color = this._pMaterial.color;\n\t\t//TODO: fragment animtion should be compatible with lighting pass\n\t\tthis._pShaderObject.usesFragmentAnimation = Boolean(this._pMaterialPass.passMode == MaterialPassMode.SUPER_SHADER);\n\n\t\tthis._pMaterialPass._iIncludeDependencies(this._pShaderObject);\n\t}\n\n\t/**\n\t * Disposes all resources used by the compiler.\n\t */\n\tpublic dispose()\n\t{\n\t\tthis._pRegisterCache.dispose();\n\t\tthis._pRegisterCache = null;\n\t\tthis._pSharedRegisters = null;\n\t}\n\n\t/**\n\t * The generated vertex code.\n\t */\n\tpublic get vertexCode():string\n\t{\n\t\treturn this._pVertexCode;\n\t}\n\n\t/**\n\t * The generated fragment code.\n\t */\n\tpublic get fragmentCode():string\n\t{\n\t\treturn this._pFragmentCode;\n\t}\n\n\t/**\n\t * The generated fragment code.\n\t */\n\tpublic get postAnimationFragmentCode():string\n\t{\n\t\treturn this._pPostAnimationFragmentCode;\n\t}\n\n\t/**\n\t * The register name containing the final shaded colour.\n\t */\n\tpublic get shadedTarget():string\n\t{\n\t\treturn this._pSharedRegisters.shadedTarget.toString();\n\t}\n}\n\nexport = ShaderCompilerBase;","import LightSources\t\t\t\t\t= require(\"awayjs-display/lib/materials/LightSources\");\n\nimport ContextGLProfile\t\t\t\t= require(\"awayjs-stagegl/lib/base/ContextGLProfile\");\nimport StageGLMaterialBase\t\t\t= require(\"awayjs-stagegl/lib/materials/StageGLMaterialBase\");\nimport ShaderCompilerBase\t\t\t= require(\"awayjs-stagegl/lib/materials/compilation/ShaderCompilerBase\");\nimport ShaderLightingObject\t\t\t= require(\"awayjs-stagegl/lib/materials/compilation/ShaderLightingObject\");\nimport ShaderRegisterElement\t\t= require(\"awayjs-stagegl/lib/materials/compilation/ShaderRegisterElement\");\nimport ILightingPassStageGL\t\t\t= require(\"awayjs-stagegl/lib/materials/passes/ILightingPassStageGL\");\n\n/**\n * ShaderCompilerBase is an abstract base class for shader compilers that use modular shader methods to assemble a\n * material. Concrete subclasses are used by the default materials.\n *\n * @see away.materials.ShadingMethodBase\n */\nclass ShaderLightingCompiler extends ShaderCompilerBase\n{\n\tprivate _materialLightingPass:ILightingPassStageGL;\n\tprivate _shaderLightingObject:ShaderLightingObject;\n\tpublic _pointLightFragmentConstants:Array<ShaderRegisterElement>;\n\tpublic _pointLightVertexConstants:Array<ShaderRegisterElement>;\n\tpublic _dirLightFragmentConstants:Array<ShaderRegisterElement>;\n\tpublic _dirLightVertexConstants:Array<ShaderRegisterElement>;\n\n\tpublic _pNumProbeRegisters:number;\n\n\t/**\n\t * Creates a new ShaderCompilerBase object.\n\t * @param profile The compatibility profile of the renderer.\n\t */\n\tconstructor(material:StageGLMaterialBase, materialPass:ILightingPassStageGL, shaderObject:ShaderLightingObject)\n\t{\n\t\tsuper(material, materialPass, shaderObject);\n\n\t\tthis._materialLightingPass = materialPass;\n\t\tthis._shaderLightingObject = shaderObject;\n\t}\n\n\t/**\n\t * Compile the code for the methods.\n\t */\n\tpublic pCompileDependencies()\n\t{\n\t\tsuper.pCompileDependencies();\n\n\t\t//compile the lighting code\n\t\tif (this._shaderLightingObject.usesShadows)\n\t\t\tthis.pCompileShadowCode();\n\n\t\tif (this._shaderLightingObject.usesLights) {\n\t\t\tthis.initLightRegisters();\n\t\t\tthis.compileLightCode();\n\t\t}\n\n\t\tif (this._shaderLightingObject.usesProbes)\n\t\t\tthis.compileLightProbeCode();\n\n\t\tthis._pVertexCode += this._materialLightingPass._iGetPostLightingVertexCode(this._shaderLightingObject, this._pRegisterCache, this._pSharedRegisters);\n\t\tthis._pFragmentCode += this._materialLightingPass._iGetPostLightingFragmentCode(this._shaderLightingObject, this._pRegisterCache, this._pSharedRegisters);\n\t}\n\n\t/**\n\t * Provides the code to provide shadow mapping.\n\t */\n\tpublic pCompileShadowCode()\n\t{\n\t\tif (this._shaderLightingObject.normalDependencies > 0) {\n\t\t\tthis._pSharedRegisters.shadowTarget = this._pSharedRegisters.normalFragment;\n\t\t} else {\n\t\t\tthis._pSharedRegisters.shadowTarget = this._pRegisterCache.getFreeFragmentVectorTemp();\n\t\t\tthis._pRegisterCache.addFragmentTempUsages(this._pSharedRegisters.shadowTarget, 1);\n\t\t}\n\t}\n\n\t/**\n\t * Initializes constant registers to contain light data.\n\t */\n\tprivate initLightRegisters()\n\t{\n\t\t// init these first so we're sure they're in sequence\n\t\tvar i:number, len:number;\n\n\t\tif (this._dirLightVertexConstants) {\n\t\t\tlen = this._dirLightVertexConstants.length;\n\t\t\tfor (i = 0; i < len; ++i) {\n\t\t\t\tthis._dirLightVertexConstants[i] = this._pRegisterCache.getFreeVertexConstant();\n\n\t\t\t\tif (this._shaderLightingObject.lightVertexConstantIndex == -1)\n\t\t\t\t\tthis._shaderLightingObject.lightVertexConstantIndex = this._dirLightVertexConstants[i].index*4;\n\t\t\t}\n\t\t}\n\n\t\tif (this._pointLightVertexConstants) {\n\t\t\tlen = this._pointLightVertexConstants.length;\n\t\t\tfor (i = 0; i < len; ++i) {\n\t\t\t\tthis._pointLightVertexConstants[i] = this._pRegisterCache.getFreeVertexConstant();\n\n\t\t\t\tif (this._shaderLightingObject.lightVertexConstantIndex == -1)\n\t\t\t\t\tthis._shaderLightingObject.lightVertexConstantIndex = this._pointLightVertexConstants[i].index*4;\n\t\t\t}\n\t\t}\n\n\t\tlen = this._dirLightFragmentConstants.length;\n\t\tfor (i = 0; i < len; ++i) {\n\t\t\tthis._dirLightFragmentConstants[i] = this._pRegisterCache.getFreeFragmentConstant();\n\n\t\t\tif (this._shaderLightingObject.lightFragmentConstantIndex == -1)\n\t\t\t\tthis._shaderLightingObject.lightFragmentConstantIndex = this._dirLightFragmentConstants[i].index*4;\n\t\t}\n\n\t\tlen = this._pointLightFragmentConstants.length;\n\t\tfor (i = 0; i < len; ++i) {\n\t\t\tthis._pointLightFragmentConstants[i] = this._pRegisterCache.getFreeFragmentConstant();\n\n\t\t\tif (this._shaderLightingObject.lightFragmentConstantIndex == -1)\n\t\t\t\tthis._shaderLightingObject.lightFragmentConstantIndex = this._pointLightFragmentConstants[i].index*4;\n\t\t}\n\t}\n\n\t/**\n\t * Compiles the shading code for directional and point lights.\n\t */\n\tprivate compileLightCode()\n\t{\n\t\tvar diffuseColorReg:ShaderRegisterElement;\n\t\tvar specularColorReg:ShaderRegisterElement;\n\t\tvar lightPosReg:ShaderRegisterElement;\n\t\tvar lightDirReg:ShaderRegisterElement;\n\t\tvar vertexRegIndex:number = 0;\n\t\tvar fragmentRegIndex:number = 0;\n\t\tvar addSpec:boolean = this._shaderLightingObject.usesLightsForSpecular;\n\t\tvar addDiff:boolean = this._shaderLightingObject.usesLightsForDiffuse;\n\n\t\t//compile the shading code for directional lights.\n\t\tfor (var i:number = 0; i < this._materialLightingPass.iNumDirectionalLights; ++i) {\n\t\t\tif (this._shaderLightingObject.usesTangentSpace) {\n\t\t\t\tlightDirReg = this._dirLightVertexConstants[vertexRegIndex++];\n\n\t\t\t\tvar lightVarying:ShaderRegisterElement = this._pRegisterCache.getFreeVarying();\n\n\t\t\t\tthis._pVertexCode += \"m33 \" + lightVarying + \".xyz, \" + lightDirReg + \", \" + this._pSharedRegisters.animatedTangent + \"\\n\" +\n\t\t\t\t\t\"mov \" + lightVarying + \".w, \" + lightDirReg + \".w\\n\";\n\n\t\t\t\tlightDirReg = this._pRegisterCache.getFreeFragmentVectorTemp();\n\t\t\t\tthis._pRegisterCache.addVertexTempUsages(lightDirReg, 1);\n\n\t\t\t\tthis._pFragmentCode += \"nrm \" + lightDirReg + \".xyz, \" + lightVarying + \"\\n\" +\n\t\t\t\t\t\"mov \" + lightDirReg + \".w, \" + lightVarying + \".w\\n\";\n\n\t\t\t} else {\n\t\t\t\tlightDirReg = this._dirLightFragmentConstants[fragmentRegIndex++];\n\t\t\t}\n\n\t\t\tdiffuseColorReg = this._dirLightFragmentConstants[fragmentRegIndex++];\n\t\t\tspecularColorReg = this._dirLightFragmentConstants[fragmentRegIndex++];\n\n\t\t\tif (addDiff)\n\t\t\t\tthis._pFragmentCode += this._materialLightingPass._iGetPerLightDiffuseFragmentCode(this._shaderLightingObject, lightDirReg, diffuseColorReg, this._pRegisterCache, this._pSharedRegisters);\n\n\t\t\tif (addSpec)\n\t\t\t\tthis._pFragmentCode += this._materialLightingPass._iGetPerLightSpecularFragmentCode(this._shaderLightingObject, lightDirReg, specularColorReg, this._pRegisterCache, this._pSharedRegisters);\n\n\t\t\tif (this._shaderLightingObject.usesTangentSpace)\n\t\t\t\tthis._pRegisterCache.removeVertexTempUsage(lightDirReg);\n\t\t}\n\n\t\tvertexRegIndex = 0;\n\t\tfragmentRegIndex = 0;\n\n\t\t//compile the shading code for point lights\n\t\tfor (var i:number = 0; i < this._materialLightingPass.iNumPointLights; ++i) {\n\n\t\t\tif (this._shaderLightingObject.usesTangentSpace || !this._shaderLightingObject.usesGlobalPosFragment)\n\t\t\t\tlightPosReg = this._pointLightVertexConstants[vertexRegIndex++];\n\t\t\telse\n\t\t\t\tlightPosReg = this._pointLightFragmentConstants[fragmentRegIndex++];\n\n\t\t\tdiffuseColorReg = this._pointLightFragmentConstants[fragmentRegIndex++];\n\t\t\tspecularColorReg = this._pointLightFragmentConstants[fragmentRegIndex++];\n\n\t\t\tlightDirReg = this._pRegisterCache.getFreeFragmentVectorTemp();\n\t\t\tthis._pRegisterCache.addFragmentTempUsages(lightDirReg, 1);\n\n\t\t\tvar lightVarying:ShaderRegisterElement;\n\n\t\t\tif (this._shaderLightingObject.usesTangentSpace) {\n\t\t\t\tlightVarying = this._pRegisterCache.getFreeVarying();\n\t\t\t\tvar temp:ShaderRegisterElement = this._pRegisterCache.getFreeVertexVectorTemp();\n\t\t\t\tthis._pVertexCode += \"sub \" + temp + \", \" + lightPosReg + \", \" + this._pSharedRegisters.localPosition + \"\\n\" +\n\t\t\t\t\t\"m33 \" + lightVarying + \".xyz, \" + temp + \", \" + this._pSharedRegisters.animatedTangent + \"\\n\" +\n\t\t\t\t\t\"mov \" + lightVarying + \".w, \" + this._pSharedRegisters.localPosition + \".w\\n\";\n\t\t\t} else if (!this._shaderLightingObject.usesGlobalPosFragment) {\n\t\t\t\tlightVarying = this._pRegisterCache.getFreeVarying();\n\t\t\t\tthis._pVertexCode += \"sub \" + lightVarying + \", \" + lightPosReg + \", \" + this._pSharedRegisters.globalPositionVertex + \"\\n\";\n\t\t\t} else {\n\t\t\t\tlightVarying = lightDirReg;\n\t\t\t\tthis._pFragmentCode += \"sub \" + lightDirReg + \", \" + lightPosReg + \", \" + this._pSharedRegisters.globalPositionVarying + \"\\n\";\n\t\t\t}\n\n\t\t\tif (this._shaderLightingObject.usesLightFallOff) {\n\t\t\t\t// calculate attenuation\n\t\t\t\tthis._pFragmentCode += // attenuate\n\t\t\t\t\t\"dp3 \" + lightDirReg + \".w, \" + lightVarying + \", \" + lightVarying + \"\\n\" + // w = d - radius\n\t\t\t\t\t\"sub \" + lightDirReg + \".w, \" + lightDirReg + \".w, \" + diffuseColorReg + \".w\\n\" + // w = (d - radius)/(max-min)\n\t\t\t\t\t\"mul \" + lightDirReg + \".w, \" + lightDirReg + \".w, \" + specularColorReg + \".w\\n\" + // w = clamp(w, 0, 1)\n\t\t\t\t\t\"sat \" + lightDirReg + \".w, \" + lightDirReg + \".w\\n\" + // w = 1-w\n\t\t\t\t\t\"sub \" + lightDirReg + \".w, \" + this._pSharedRegisters.commons + \".w, \" + lightDirReg + \".w\\n\" + // normalize\n\t\t\t\t\t\"nrm \" + lightDirReg + \".xyz, \" + lightVarying + \"\\n\";\n\t\t\t} else {\n\t\t\t\tthis._pFragmentCode += \"nrm \" + lightDirReg + \".xyz, \" + lightVarying + \"\\n\" +\n\t\t\t\t\t\"mov \" + lightDirReg + \".w, \" + lightVarying + \".w\\n\";\n\t\t\t}\n\n\t\t\tif (this._shaderLightingObject.lightFragmentConstantIndex == -1)\n\t\t\t\tthis._shaderLightingObject.lightFragmentConstantIndex = lightPosReg.index*4;\n\n\t\t\tif (addDiff)\n\t\t\t\tthis._pFragmentCode += this._materialLightingPass._iGetPerLightDiffuseFragmentCode(this._shaderLightingObject, lightDirReg, diffuseColorReg, this._pRegisterCache, this._pSharedRegisters);\n\n\t\t\tif (addSpec)\n\t\t\t\tthis._pFragmentCode += this._materialLightingPass._iGetPerLightSpecularFragmentCode(this._shaderLightingObject, lightDirReg, specularColorReg, this._pRegisterCache, this._pSharedRegisters);\n\n\t\t\tthis._pRegisterCache.removeFragmentTempUsage(lightDirReg);\n\t\t}\n\t}\n\n\t/**\n\t * Compiles shading code for light probes.\n\t */\n\tprivate compileLightProbeCode()\n\t{\n\t\tvar weightReg:string;\n\t\tvar weightComponents = [ \".x\", \".y\", \".z\", \".w\" ];\n\t\tvar weightRegisters:Array<ShaderRegisterElement> = new Array<ShaderRegisterElement>();\n\t\tvar i:number;\n\t\tvar texReg:ShaderRegisterElement;\n\t\tvar addSpec:boolean = this._shaderLightingObject.usesProbesForSpecular;\n\t\tvar addDiff:boolean = this._shaderLightingObject.usesProbesForDiffuse;\n\n\t\tif (addDiff)\n\t\t\tthis._shaderLightingObject.lightProbeDiffuseIndices = new Array<number>();\n\n\t\tif (addSpec)\n\t\t\tthis._shaderLightingObject.lightProbeSpecularIndices = new Array<number>();\n\n\t\tfor (i = 0; i < this._pNumProbeRegisters; ++i) {\n\t\t\tweightRegisters[i] = this._pRegisterCache.getFreeFragmentConstant();\n\n\t\t\tif (i == 0)\n\t\t\t\tthis._shaderLightingObject.probeWeightsIndex = weightRegisters[i].index*4;\n\t\t}\n\n\t\tfor (i = 0; i < this._materialLightingPass.iNumLightProbes; ++i) {\n\t\t\tweightReg = weightRegisters[Math.floor(i/4)].toString() + weightComponents[i%4];\n\n\t\t\tif (addDiff) {\n\t\t\t\ttexReg = this._pRegisterCache.getFreeTextureReg();\n\t\t\t\tthis._shaderLightingObject.lightProbeDiffuseIndices[i] = texReg.index;\n\t\t\t\tthis._pFragmentCode += this._materialLightingPass._iGetPerProbeDiffuseFragmentCode(this._shaderLightingObject, texReg, weightReg, this._pRegisterCache, this._pSharedRegisters);\n\t\t\t}\n\n\t\t\tif (addSpec) {\n\t\t\t\ttexReg = this._pRegisterCache.getFreeTextureReg();\n\t\t\t\tthis._shaderLightingObject.lightProbeSpecularIndices[i] = texReg.index;\n\t\t\t\tthis._pFragmentCode += this._materialLightingPass._iGetPerProbeSpecularFragmentCode(this._shaderLightingObject, texReg, weightReg, this._pRegisterCache, this._pSharedRegisters);\n\t\t\t}\n\t\t}\n\t}\n\n\t/**\n\t * Reset all the indices to \"unused\".\n\t */\n\tpublic pInitRegisterIndices()\n\t{\n\t\tsuper.pInitRegisterIndices();\n\n\t\tthis._shaderLightingObject.lightVertexConstantIndex = -1;\n\t\tthis._shaderLightingObject.lightFragmentConstantIndex = -1;\n\t\tthis._shaderLightingObject.probeWeightsIndex = -1;\n\n\t\tthis._pNumProbeRegisters = Math.ceil(this._materialLightingPass.iNumLightProbes/4);\n\n\t\t//init light data\n\t\tif (this._shaderLightingObject.usesTangentSpace || !this._shaderLightingObject.usesGlobalPosFragment) {\n\t\t\tthis._pointLightVertexConstants = new Array<ShaderRegisterElement>(this._materialLightingPass.iNumPointLights);\n\t\t\tthis._pointLightFragmentConstants = new Array<ShaderRegisterElement>(this._materialLightingPass.iNumPointLights*2);\n\t\t} else {\n\t\t\tthis._pointLightFragmentConstants = new Array<ShaderRegisterElement>(this._materialLightingPass.iNumPointLights*3);\n\t\t}\n\n\t\tif (this._shaderLightingObject.usesTangentSpace) {\n\t\t\tthis._dirLightVertexConstants = new Array<ShaderRegisterElement>(this._materialLightingPass.iNumDirectionalLights);\n\t\t\tthis._dirLightFragmentConstants = new Array<ShaderRegisterElement>(this._materialLightingPass.iNumDirectionalLights*2);\n\t\t} else {\n\t\t\tthis._dirLightFragmentConstants = new Array<ShaderRegisterElement>(this._materialLightingPass.iNumDirectionalLights*3);\n\t\t}\n\t}\n\n\n\t/**\n\t * Figure out which named registers are required, and how often.\n\t */\n\tpublic pCalculateDependencies()\n\t{\n\t\tvar numAllLights:number = this._materialLightingPass.iNumPointLights + this._materialLightingPass.iNumDirectionalLights;\n\t\tvar numLightProbes:number = this._materialLightingPass.iNumLightProbes;\n\t\tvar diffuseLightSources:number = this._pMaterial.diffuseLightSources;\n\t\tvar specularLightSources:number = this._materialLightingPass._iUsesSpecular()? this._pMaterial.specularLightSources : 0x00;\n\t\tvar combinedLightSources:number = diffuseLightSources | specularLightSources;\n\n\t\tthis._shaderLightingObject.usesLightFallOff = this._pMaterial.enableLightFallOff && this._shaderLightingObject.profile != ContextGLProfile.BASELINE_CONSTRAINED;\n\t\tthis._shaderLightingObject.numLights = numAllLights + numLightProbes;\n\t\tthis._shaderLightingObject.numPointLights = this._materialLightingPass.iNumPointLights;\n\t\tthis._shaderLightingObject.numDirectionalLights = this._materialLightingPass.iNumDirectionalLights;\n\t\tthis._shaderLightingObject.numLightProbes = numLightProbes;\n\t\tthis._shaderLightingObject.pointLightsOffset = this._materialLightingPass.pointLightsOffset;\n\t\tthis._shaderLightingObject.directionalLightsOffset = this._materialLightingPass.directionalLightsOffset;\n\t\tthis._shaderLightingObject.lightProbesOffset = this._materialLightingPass.lightProbesOffset;\n\t\tthis._shaderLightingObject.lightPicker = this._materialLightingPass.lightPicker;\n\t\tthis._shaderLightingObject.usesLights = numAllLights > 0 && (combinedLightSources & LightSources.LIGHTS) != 0;\n\t\tthis._shaderLightingObject.usesProbes = numLightProbes > 0 && (combinedLightSources & LightSources.PROBES) != 0;\n\t\tthis._shaderLightingObject.usesLightsForSpecular = numAllLights > 0 && (specularLightSources & LightSources.LIGHTS) != 0;\n\t\tthis._shaderLightingObject.usesProbesForSpecular = numLightProbes > 0 && (specularLightSources & LightSources.PROBES) != 0;\n\t\tthis._shaderLightingObject.usesLightsForDiffuse = numAllLights > 0 && (diffuseLightSources & LightSources.LIGHTS) != 0;\n\t\tthis._shaderLightingObject.usesProbesForDiffuse = numLightProbes > 0 && (diffuseLightSources & LightSources.PROBES) != 0;\n\t\tthis._shaderLightingObject.usesShadows = this._materialLightingPass._iUsesShadows();\n\n\t\tsuper.pCalculateDependencies();\n\t}\n}\n\nexport = ShaderLightingCompiler;","import Matrix3D\t\t\t\t\t\t= require(\"awayjs-core/lib/geom/Matrix3D\");\nimport Vector3D\t\t\t\t\t\t= require(\"awayjs-core/lib/geom/Vector3D\");\n\nimport Camera\t\t\t\t\t\t= require(\"awayjs-display/lib/entities/Camera\");\nimport DirectionalLight\t\t\t\t= require(\"awayjs-display/lib/entities/DirectionalLight\");\nimport LightProbe\t\t\t\t\t= require(\"awayjs-display/lib/entities/LightProbe\");\nimport PointLight\t\t\t\t\t= require(\"awayjs-display/lib/entities/PointLight\");\nimport LightPickerBase\t\t\t\t= require(\"awayjs-display/lib/materials/lightpickers/LightPickerBase\");\n\nimport Stage\t\t\t\t\t\t= require(\"awayjs-stagegl/lib/base/Stage\");\nimport RenderableBase\t\t\t\t= require(\"awayjs-stagegl/lib/pool/RenderableBase\");\nimport IContextStageGL\t\t\t\t= require(\"awayjs-stagegl/lib/base/IContextStageGL\");\nimport StageGLMaterialBase\t\t\t= require(\"awayjs-stagegl/lib/materials/StageGLMaterialBase\");\nimport ShaderCompilerBase\t\t\t= require(\"awayjs-stagegl/lib/materials/compilation/ShaderCompilerBase\");\nimport ShaderLightingCompiler\t\t= require(\"awayjs-stagegl/lib/materials/compilation/ShaderLightingCompiler\");\nimport ShaderObjectBase\t\t\t\t= require(\"awayjs-stagegl/lib/materials/compilation/ShaderObjectBase\");\nimport ILightingPassStageGL\t\t\t= require(\"awayjs-stagegl/lib/materials/passes/ILightingPassStageGL\");\n\n/**\n * ShaderObjectBase keeps track of the number of dependencies for \"named registers\" used across a pass.\n * Named registers are that are not necessarily limited to a single method. They are created by the compiler and\n * passed on to methods. The compiler uses the results to reserve usages through RegisterPool, which can be removed\n * each time a method has been compiled into the shader.\n *\n * @see RegisterPool.addUsage\n */\nclass ShaderLightingObject extends ShaderObjectBase\n{\n\t/**\n\t * The first index for the fragment constants containing the light data.\n\t */\n\tpublic lightFragmentConstantIndex:number;\n\n\t/**\n\t * The starting index if the vertex constant to which light data needs to be uploaded.\n\t */\n\tpublic lightVertexConstantIndex:number;\n\n\t/**\n\t * Indices for the light probe diffuse textures.\n\t */\n\tpublic lightProbeDiffuseIndices:Array<number> /*uint*/;\n\n\t/**\n\t * Indices for the light probe specular textures.\n\t */\n\tpublic lightProbeSpecularIndices:Array<number> /*uint*/;\n\n\t/**\n\t * The index of the fragment constant containing the weights for the light probes.\n\t */\n\tpublic probeWeightsIndex:number;\n\n\tpublic numLights:number;\n\tpublic usesLightFallOff:boolean;\n\n\tpublic usesShadows:boolean;\n\n\tpublic numPointLights:number;\n\tpublic numDirectionalLights:number;\n\tpublic numLightProbes:number;\n\tpublic pointLightsOffset:number;\n\tpublic directionalLightsOffset:number;\n\tpublic lightProbesOffset:number;\n\tpublic lightPicker:LightPickerBase;\n\n\t/**\n\t * Indicates whether the shader uses any lights.\n\t */\n\tpublic usesLights:boolean;\n\n\t/**\n\t * Indicates whether the shader uses any light probes.\n\t */\n\tpublic usesProbes:boolean;\n\n\t/**\n\t * Indicates whether the lights uses any specular components.\n\t */\n\tpublic usesLightsForSpecular:boolean;\n\n\t/**\n\t * Indicates whether the probes uses any specular components.\n\t */\n\tpublic usesProbesForSpecular:boolean;\n\n\t/**\n\t * Indicates whether the lights uses any diffuse components.\n\t */\n\tpublic usesLightsForDiffuse:boolean;\n\n\t/**\n\t * Indicates whether the probes uses any diffuse components.\n\t */\n\tpublic usesProbesForDiffuse:boolean;\n\n\t/**\n\t * Creates a new MethodCompilerVO object.\n\t */\n\tconstructor(profile)\n\t{\n\t\tsuper(profile);\n\t}\n\n\t/**\n\t * Factory method to create a concrete compiler object for this object\n\t *\n\t * @param materialPassVO\n\t * @returns {away.materials.ShaderLightingCompiler}\n\t */\n\tpublic createCompiler(material:StageGLMaterialBase, materialPass:ILightingPassStageGL):ShaderCompilerBase\n\t{\n\t\treturn new ShaderLightingCompiler(material, materialPass, this);\n\t}\n\n\t/**\n\t * Clears dependency counts for all registers. Called when recompiling a pass.\n\t */\n\tpublic reset()\n\t{\n\t\tsuper.reset();\n\n\t\tthis.numLights = 0;\n\t\tthis.usesLightFallOff = true;\n\t}\n\n\t/**\n\t * Adds any external world space dependencies, used to force world space calculations.\n\t */\n\tpublic addWorldSpaceDependencies(fragmentLights:boolean)\n\t{\n\t\tsuper.addWorldSpaceDependencies(fragmentLights);\n\n\t\tif (this.numPointLights > 0 && this.usesLights) {\n\t\t\t++this.globalPosDependencies;\n\n\t\t\tif (fragmentLights)\n\t\t\t\tthis.usesGlobalPosFragment = true;\n\t\t}\n\t}\n\n\t/**\n\t *\n\t *\n\t * @param renderable\n\t * @param stage\n\t * @param camera\n\t */\n\tpublic setRenderState(renderable:RenderableBase, stage:Stage, camera:Camera, viewProjection:Matrix3D)\n\t{\n\t\tsuper.setRenderState(renderable, stage, camera, viewProjection);\n\n\t\tif (this.usesLights)\n\t\t\tthis.updateLights();\n\n\t\tif (this.usesProbes)\n\t\t\tthis.updateProbes(stage);\n\t}\n\n\t/**\n\t * Updates constant data render state used by the lights. This method is optional for subclasses to implement.\n\t */\n\tprivate updateLights()\n\t{\n\t\tvar dirLight:DirectionalLight;\n\t\tvar pointLight:PointLight;\n\t\tvar i:number = 0;\n\t\tvar k:number = 0;\n\t\tvar len:number;\n\t\tvar dirPos:Vector3D;\n\t\tvar total:number = 0;\n\t\tvar numLightTypes:number = this.usesShadows? 2 : 1;\n\t\tvar l:number;\n\t\tvar offset:number;\n\n\t\tthis.ambientR = this.ambientG = this.ambientB = 0;\n\n\t\tl = this.lightVertexConstantIndex;\n\t\tk = this.lightFragmentConstantIndex;\n\n\t\tvar cast:number = 0;\n\t\tvar dirLights:Array<DirectionalLight> = this.lightPicker.directionalLights;\n\t\toffset = this.directionalLightsOffset;\n\t\tlen = this.lightPicker.directionalLights.length;\n\n\t\tif (offset > len) {\n\t\t\tcast = 1;\n\t\t\toffset -= len;\n\t\t}\n\n\t\tfor (; cast < numLightTypes; ++cast) {\n\t\t\tif (cast)\n\t\t\t\tdirLights = this.lightPicker.castingDirectionalLights;\n\n\t\t\tlen = dirLights.length;\n\n\t\t\tif (len > this.numDirectionalLights)\n\t\t\t\tlen = this.numDirectionalLights;\n\n\t\t\tfor (i = 0; i < len; ++i) {\n\t\t\t\tdirLight = dirLights[offset + i];\n\t\t\t\tdirPos = dirLight.sceneDirection;\n\n\t\t\t\tthis.ambientR += dirLight._iAmbientR;\n\t\t\t\tthis.ambientG += dirLight._iAmbientG;\n\t\t\t\tthis.ambientB += dirLight._iAmbientB;\n\n\t\t\t\tif (this.usesTangentSpace) {\n\t\t\t\t\tvar x:number = -dirPos.x;\n\t\t\t\t\tvar y:number = -dirPos.y;\n\t\t\t\t\tvar z:number = -dirPos.z;\n\n\t\t\t\t\tthis.vertexConstantData[l++] = this._pInverseSceneMatrix[0]*x + this._pInverseSceneMatrix[4]*y + this._pInverseSceneMatrix[8]*z;\n\t\t\t\t\tthis.vertexConstantData[l++] = this._pInverseSceneMatrix[1]*x + this._pInverseSceneMatrix[5]*y + this._pInverseSceneMatrix[9]*z;\n\t\t\t\t\tthis.vertexConstantData[l++] = this._pInverseSceneMatrix[2]*x + this._pInverseSceneMatrix[6]*y + this._pInverseSceneMatrix[10]*z;\n\t\t\t\t\tthis.vertexConstantData[l++] = 1;\n\t\t\t\t} else {\n\t\t\t\t\tthis.fragmentConstantData[k++] = -dirPos.x;\n\t\t\t\t\tthis.fragmentConstantData[k++] = -dirPos.y;\n\t\t\t\t\tthis.fragmentConstantData[k++] = -dirPos.z;\n\t\t\t\t\tthis.fragmentConstantData[k++] = 1;\n\t\t\t\t}\n\n\t\t\t\tthis.fragmentConstantData[k++] = dirLight._iDiffuseR;\n\t\t\t\tthis.fragmentConstantData[k++] = dirLight._iDiffuseG;\n\t\t\t\tthis.fragmentConstantData[k++] = dirLight._iDiffuseB;\n\t\t\t\tthis.fragmentConstantData[k++] = 1;\n\n\t\t\t\tthis.fragmentConstantData[k++] = dirLight._iSpecularR;\n\t\t\t\tthis.fragmentConstantData[k++] = dirLight._iSpecularG;\n\t\t\t\tthis.fragmentConstantData[k++] = dirLight._iSpecularB;\n\t\t\t\tthis.fragmentConstantData[k++] = 1;\n\n\t\t\t\tif (++total == this.numDirectionalLights) {\n\t\t\t\t\t// break loop\n\t\t\t\t\ti = len;\n\t\t\t\t\tcast = numLightTypes;\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t\t// more directional supported than currently picked, need to clamp all to 0\n\t\tif (this.numDirectionalLights > total) {\n\t\t\ti = k + (this.numDirectionalLights - total)*12;\n\n\t\t\twhile (k < i)\n\t\t\t\tthis.fragmentConstantData[k++] = 0;\n\t\t}\n\n\t\ttotal = 0;\n\n\t\tvar pointLights:Array<PointLight> = this.lightPicker.pointLights;\n\t\toffset = this.pointLightsOffset;\n\t\tlen = this.lightPicker.pointLights.length;\n\n\t\tif (offset > len) {\n\t\t\tcast = 1;\n\t\t\toffset -= len;\n\t\t} else {\n\t\t\tcast = 0;\n\t\t}\n\n\t\tfor (; cast < numLightTypes; ++cast) {\n\t\t\tif (cast)\n\t\t\t\tpointLights = this.lightPicker.castingPointLights;\n\n\t\t\tlen = pointLights.length;\n\n\t\t\tfor (i = 0; i < len; ++i) {\n\t\t\t\tpointLight = pointLights[offset + i];\n\t\t\t\tdirPos = pointLight.scenePosition;\n\n\t\t\t\tthis.ambientR += pointLight._iAmbientR;\n\t\t\t\tthis.ambientG += pointLight._iAmbientG;\n\t\t\t\tthis.ambientB += pointLight._iAmbientB;\n\n\t\t\t\tif (this.usesTangentSpace) {\n\t\t\t\t\tx = dirPos.x;\n\t\t\t\t\ty = dirPos.y;\n\t\t\t\t\tz = dirPos.z;\n\n\t\t\t\t\tthis.vertexConstantData[l++] = this._pInverseSceneMatrix[0]*x + this._pInverseSceneMatrix[4]*y + this._pInverseSceneMatrix[8]*z + this._pInverseSceneMatrix[12];\n\t\t\t\t\tthis.vertexConstantData[l++] = this._pInverseSceneMatrix[1]*x + this._pInverseSceneMatrix[5]*y + this._pInverseSceneMatrix[9]*z + this._pInverseSceneMatrix[13];\n\t\t\t\t\tthis.vertexConstantData[l++] = this._pInverseSceneMatrix[2]*x + this._pInverseSceneMatrix[6]*y + this._pInverseSceneMatrix[10]*z + this._pInverseSceneMatrix[14];\n\t\t\t\t\tthis.vertexConstantData[l++] = 1;\n\t\t\t\t} else if (!this.usesGlobalPosFragment) {\n\t\t\t\t\tthis.vertexConstantData[l++] = dirPos.x;\n\t\t\t\t\tthis.vertexConstantData[l++] = dirPos.y;\n\t\t\t\t\tthis.vertexConstantData[l++] = dirPos.z;\n\t\t\t\t\tthis.vertexConstantData[l++] = 1;\n\t\t\t\t} else {\n\t\t\t\t\tthis.fragmentConstantData[k++] = dirPos.x;\n\t\t\t\t\tthis.fragmentConstantData[k++] = dirPos.y;\n\t\t\t\t\tthis.fragmentConstantData[k++] = dirPos.z;\n\t\t\t\t\tthis.fragmentConstantData[k++] = 1;\n\t\t\t\t}\n\n\t\t\t\tthis.fragmentConstantData[k++] = pointLight._iDiffuseR;\n\t\t\t\tthis.fragmentConstantData[k++] = pointLight._iDiffuseG;\n\t\t\t\tthis.fragmentConstantData[k++] = pointLight._iDiffuseB;\n\n\t\t\t\tvar radius:number = pointLight._pRadius;\n\t\t\t\tthis.fragmentConstantData[k++] = radius*radius;\n\n\t\t\t\tthis.fragmentConstantData[k++] = pointLight._iSpecularR;\n\t\t\t\tthis.fragmentConstantData[k++] = pointLight._iSpecularG;\n\t\t\t\tthis.fragmentConstantData[k++] = pointLight._iSpecularB;\n\t\t\t\tthis.fragmentConstantData[k++] = pointLight._pFallOffFactor;\n\n\t\t\t\tif (++total == this.numPointLights) {\n\t\t\t\t\t// break loop\n\t\t\t\t\ti = len;\n\t\t\t\t\tcast = numLightTypes;\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t\t// more directional supported than currently picked, need to clamp all to 0\n\t\tif (this.numPointLights > total) {\n\t\t\ti = k + (total - this.numPointLights)*12;\n\n\t\t\tfor (; k < i; ++k)\n\t\t\t\tthis.fragmentConstantData[k] = 0;\n\t\t}\n\t}\n\n\t/**\n\t * Updates constant data render state used by the light probes. This method is optional for subclasses to implement.\n\t */\n\tprivate updateProbes(stage:Stage)\n\t{\n\t\tvar probe:LightProbe;\n\t\tvar lightProbes:Array<LightProbe> = this.lightPicker.lightProbes;\n\t\tvar weights:Array<number> = this.lightPicker.lightProbeWeights;\n\t\tvar len:number = lightProbes.length - this.lightProbesOffset;\n\t\tvar addDiff:boolean = this.usesProbesForDiffuse;\n\t\tvar addSpec:boolean = this.usesProbesForSpecular;\n\n\t\tif (!(addDiff || addSpec))\n\t\t\treturn;\n\n\t\tif (len > this.numLightProbes)\n\t\t\tlen = this.numLightProbes;\n\n\t\tfor (var i:number = 0; i < len; ++i) {\n\t\t\tprobe = lightProbes[ this.lightProbesOffset + i];\n\n\t\t\tif (addDiff)\n\t\t\t\t(<IContextStageGL> stage.context).activateCubeTexture(this.lightProbeDiffuseIndices[i], probe.diffuseMap);\n\n\t\t\tif (addSpec)\n\t\t\t\t(<IContextStageGL> stage.context).activateCubeTexture(this.lightProbeSpecularIndices[i], probe.specularMap);\n\t\t}\n\n\t\tfor (i = 0; i < len; ++i)\n\t\t\tthis.fragmentConstantData[this.probeWeightsIndex + i] = weights[this.lightProbesOffset + i];\n\t}\n}\n\nexport = ShaderLightingObject;","import Matrix\t\t\t\t\t\t= require(\"awayjs-core/lib/geom/Matrix\");\nimport Matrix3D\t\t\t\t\t\t= require(\"awayjs-core/lib/geom/Matrix3D\");\nimport Matrix3DUtils\t\t\t\t= require(\"awayjs-core/lib/geom/Matrix3DUtils\");\nimport Rectangle\t\t\t\t\t= require(\"awayjs-core/lib/geom/Rectangle\");\nimport Vector3D\t\t\t\t\t\t= require(\"awayjs-core/lib/geom/Vector3D\");\nimport Texture2DBase\t\t\t\t= require(\"awayjs-core/lib/textures/Texture2DBase\");\n\nimport TriangleSubGeometry\t\t\t= require(\"awayjs-display/lib/base/TriangleSubGeometry\");\nimport Camera\t\t\t\t\t\t= require(\"awayjs-display/lib/entities/Camera\");\n\nimport Stage\t\t\t\t\t\t= require(\"awayjs-stagegl/lib/base/Stage\");\nimport AnimationSetBase\t\t\t\t= require(\"awayjs-stagegl/lib/animators/AnimationSetBase\");\nimport AnimatorBase\t\t\t\t\t= require(\"awayjs-stagegl/lib/animators/AnimatorBase\");\nimport AnimationRegisterCache\t\t= require(\"awayjs-stagegl/lib/animators/data/AnimationRegisterCache\");\nimport RenderableBase\t\t\t\t= require(\"awayjs-stagegl/lib/pool/RenderableBase\");\nimport IContextStageGL\t\t\t\t= require(\"awayjs-stagegl/lib/base/IContextStageGL\");\nimport ContextGLTriangleFace\t\t= require(\"awayjs-stagegl/lib/base/ContextGLTriangleFace\");\nimport StageGLMaterialBase\t\t\t= require(\"awayjs-stagegl/lib/materials/StageGLMaterialBase\");\nimport ShaderCompilerBase\t\t\t= require(\"awayjs-stagegl/lib/materials/compilation/ShaderCompilerBase\");\nimport ShaderRegisterCache\t\t\t= require(\"awayjs-stagegl/lib/materials/compilation/ShaderRegisterCache\");\nimport IMaterialPassStageGL\t\t\t= require(\"awayjs-stagegl/lib/materials/passes/IMaterialPassStageGL\");\n\n/**\n * ShaderObjectBase keeps track of the number of dependencies for \"named registers\" used across a pass.\n * Named registers are that are not necessarily limited to a single method. They are created by the compiler and\n * passed on to methods. The compiler uses the results to reserve usages through RegisterPool, which can be removed\n * each time a method has been compiled into the shader.\n *\n * @see RegisterPool.addUsage\n */\nclass ShaderObjectBase\n{\n\n\tprivate _defaultCulling:string = ContextGLTriangleFace.BACK;\n\n\tpublic _pInverseSceneMatrix:Array<number> = new Array<number>();\n\n\tpublic animationRegisterCache:AnimationRegisterCache;\n\n\tpublic profile:string;\n\n\t/**\n\t * The amount of used vertex constants in the vertex code. Used by the animation code generation to know from which index on registers are available.\n\t */\n\tpublic numUsedVertexConstants:number;\n\n\t/**\n\t * The amount of used fragment constants in the fragment code. Used by the animation code generation to know from which index on registers are available.\n\t */\n\tpublic numUsedFragmentConstants:number;\n\n\t/**\n\t * The amount of used vertex streams in the vertex code. Used by the animation code generation to know from which index on streams are available.\n\t */\n\tpublic numUsedStreams:number;\n\n\t/**\n\t *\n\t */\n\tpublic numUsedTextures:number;\n\n\t/**\n\t *\n\t */\n\tpublic numUsedVaryings:number;\n\n\tpublic animatableAttributes:Array<string>;\n\tpublic animationTargetRegisters:Array<string>;\n\tpublic uvSource:string;\n\tpublic uvTarget:string;\n\n\tpublic useAlphaPremultiplied:boolean;\n\tpublic useBothSides:boolean;\n\tpublic useMipmapping:boolean;\n\tpublic useSmoothTextures:boolean;\n\tpublic repeatTextures:boolean;\n\tpublic usesUVTransform:boolean;\n\tpublic alphaThreshold:number;\n\tpublic texture:Texture2DBase;\n\tpublic color:number;\n\n\n\t//set ambient values to default\n\tpublic ambientR:number = 0xFF;\n\tpublic ambientG:number = 0xFF;\n\tpublic ambientB:number = 0xFF;\n\n\t/**\n\t * Indicates whether the pass requires any fragment animation code.\n\t */\n\tpublic usesFragmentAnimation:boolean;\n\n\t/**\n\t * The amount of dependencies on the projected position.\n\t */\n\tpublic projectionDependencies:number;\n\n\t/**\n\t * The amount of dependencies on the normal vector.\n\t */\n\tpublic normalDependencies:number;\n\n\t/**\n\t * The amount of dependencies on the view direction.\n\t */\n\tpublic viewDirDependencies:number;\n\n\t/**\n\t * The amount of dependencies on the primary UV coordinates.\n\t */\n\tpublic uvDependencies:number;\n\n\t/**\n\t * The amount of dependencies on the secondary UV coordinates.\n\t */\n\tpublic secondaryUVDependencies:number;\n\n\t/**\n\t * The amount of dependencies on the local position. This can be 0 while hasGlobalPosDependencies is true when\n\t * the global position is used as a temporary value (fe to calculate the view direction)\n\t */\n\tpublic localPosDependencies:number;\n\n\t/**\n\t * The amount of dependencies on the global position. This can be 0 while hasGlobalPosDependencies is true when\n\t * the global position is used as a temporary value (fe to calculate the view direction)\n\t */\n\tpublic globalPosDependencies:number;\n\n\t/**\n\t * The amount of tangent vector dependencies (fragment shader).\n\t */\n\tpublic tangentDependencies:number;\n\n\t/**\n\t *\n\t */\n\tpublic outputsNormals:boolean;\n\n\t/**\n\t * Indicates whether or not normal calculations are expected in tangent space. This is only the case if no world-space\n\t * dependencies exist.\n\t */\n\tpublic usesTangentSpace:boolean;\n\n\t/**\n\t * Indicates whether or not normal calculations are output in tangent space.\n\t */\n\tpublic outputsTangentNormals:boolean;\n\n\t/**\n\t * Indicates whether there are any dependencies on the world-space position vector.\n\t */\n\tpublic usesGlobalPosFragment:boolean = false;\n\n\tpublic vertexConstantData:Array<number> = new Array<number>();\n\tpublic fragmentConstantData:Array<number> = new Array<number>();\n\n\t/**\n\t * The index for the common data register.\n\t */\n\tpublic commonsDataIndex:number;\n\n\t/**\n\t * The index for the UV vertex attribute stream.\n\t */\n\tpublic uvBufferIndex:number;\n\n\t/**\n\t * The index for the secondary UV vertex attribute stream.\n\t */\n\tpublic secondaryUVBufferIndex:number;\n\n\t/**\n\t * The index for the vertex normal attribute stream.\n\t */\n\tpublic normalBufferIndex:number;\n\n\t/**\n\t * The index for the vertex tangent attribute stream.\n\t */\n\tpublic tangentBufferIndex:number;\n\n\t/**\n\t * The index of the vertex constant containing the view matrix.\n\t */\n\tpublic viewMatrixIndex:number;\n\n\t/**\n\t * The index of the vertex constant containing the scene matrix.\n\t */\n\tpublic sceneMatrixIndex:number;\n\n\t/**\n\t * The index of the vertex constant containing the uniform scene matrix (the inverse transpose).\n\t */\n\tpublic sceneNormalMatrixIndex:number;\n\n\t/**\n\t * The index of the vertex constant containing the camera position.\n\t */\n\tpublic cameraPositionIndex:number;\n\n\t/**\n\t * The index for the UV transformation matrix vertex constant.\n\t */\n\tpublic uvTransformIndex:number;\n\n\t/**\n\t * Creates a new MethodCompilerVO object.\n\t */\n\tconstructor(profile)\n\t{\n\t\tthis.profile = profile;\n\t}\n\n\t/**\n\t * Factory method to create a concrete compiler object for this object\n\t *\n\t * @param materialPassVO\n\t * @returns {away.materials.ShaderCompilerBase}\n\t */\n\tpublic createCompiler(material:StageGLMaterialBase, materialPass:IMaterialPassStageGL):ShaderCompilerBase\n\t{\n\t\treturn new ShaderCompilerBase(material, materialPass, this);\n\t}\n\n\t/**\n\t * Clears dependency counts for all registers. Called when recompiling a pass.\n\t */\n\tpublic reset()\n\t{\n\t\tthis.projectionDependencies = 0;\n\t\tthis.normalDependencies = 0;\n\t\tthis.viewDirDependencies = 0;\n\t\tthis.uvDependencies = 0;\n\t\tthis.secondaryUVDependencies = 0;\n\t\tthis.globalPosDependencies = 0;\n\t\tthis.tangentDependencies = 0;\n\t\tthis.usesGlobalPosFragment = false;\n\t\tthis.usesFragmentAnimation = false;\n\t\tthis.usesTangentSpace = false;\n\t\tthis.outputsNormals = false;\n\t\tthis.outputsTangentNormals = false;\n\t}\n\n\t/**\n\t * Adds any external world space dependencies, used to force world space calculations.\n\t */\n\tpublic addWorldSpaceDependencies(fragmentLights:boolean)\n\t{\n\t\tif (this.viewDirDependencies > 0)\n\t\t\t++this.globalPosDependencies;\n\t}\n\n\tpublic pInitRegisterIndices()\n\t{\n\t\tthis.commonsDataIndex = -1;\n\t\tthis.cameraPositionIndex = -1;\n\t\tthis.uvBufferIndex = -1;\n\t\tthis.uvTransformIndex = -1;\n\t\tthis.secondaryUVBufferIndex = -1;\n\t\tthis.normalBufferIndex = -1;\n\t\tthis.tangentBufferIndex = -1;\n\t\tthis.sceneMatrixIndex = -1;\n\t\tthis.sceneNormalMatrixIndex = -1;\n\t}\n\n\t/**\n\t * Initializes the unchanging constant data for this shader object.\n\t */\n\tpublic initConstantData(registerCache:ShaderRegisterCache, animatableAttributes:Array<string>, animationTargetRegisters:Array<string>, uvSource:string, uvTarget:string)\n\t{\n\t\t//Updates the amount of used register indices.\n\t\tthis.numUsedVertexConstants = registerCache.numUsedVertexConstants;\n\t\tthis.numUsedFragmentConstants = registerCache.numUsedFragmentConstants;\n\t\tthis.numUsedStreams = registerCache.numUsedStreams;\n\t\tthis.numUsedTextures = registerCache.numUsedTextures;\n\t\tthis.numUsedVaryings = registerCache.numUsedVaryings;\n\t\tthis.numUsedFragmentConstants = registerCache.numUsedFragmentConstants;\n\n\t\tthis.animatableAttributes = animatableAttributes;\n\t\tthis.animationTargetRegisters = animationTargetRegisters;\n\t\tthis.uvSource = uvSource;\n\t\tthis.uvTarget = uvTarget;\n\n\t\tthis.vertexConstantData.length = this.numUsedVertexConstants*4;\n\t\tthis.fragmentConstantData.length = this.numUsedFragmentConstants*4;\n\n\t\t//Initializes commonly required constant values.\n\t\tthis.fragmentConstantData[this.commonsDataIndex] = .5;\n\t\tthis.fragmentConstantData[this.commonsDataIndex + 1] = 0;\n\t\tthis.fragmentConstantData[this.commonsDataIndex + 2] = 1/255;\n\t\tthis.fragmentConstantData[this.commonsDataIndex + 3] = 1;\n\n\t\t//Initializes the default UV transformation matrix.\n\t\tif (this.uvTransformIndex >= 0) {\n\t\t\tthis.vertexConstantData[this.uvTransformIndex] = 1;\n\t\t\tthis.vertexConstantData[this.uvTransformIndex + 1] = 0;\n\t\t\tthis.vertexConstantData[this.uvTransformIndex + 2] = 0;\n\t\t\tthis.vertexConstantData[this.uvTransformIndex + 3] = 0;\n\t\t\tthis.vertexConstantData[this.uvTransformIndex + 4] = 0;\n\t\t\tthis.vertexConstantData[this.uvTransformIndex + 5] = 1;\n\t\t\tthis.vertexConstantData[this.uvTransformIndex + 6] = 0;\n\t\t\tthis.vertexConstantData[this.uvTransformIndex + 7] = 0;\n\t\t}\n\n\t\tif (this.cameraPositionIndex >= 0)\n\t\t\tthis.vertexConstantData[this.cameraPositionIndex + 3] = 1;\n\t}\n\n\n\t/**\n\t * @inheritDoc\n\t */\n\tpublic iActivate(stage:Stage, camera:Camera)\n\t{\n\t\t(<IContextStageGL> stage.context).setCulling(this.useBothSides? ContextGLTriangleFace.NONE : this._defaultCulling, camera.projection.coordinateSystem);\n\n\t\tif (!this.usesTangentSpace && this.cameraPositionIndex >= 0) {\n\t\t\tvar pos:Vector3D = camera.scenePosition;\n\n\t\t\tthis.vertexConstantData[this.cameraPositionIndex] = pos.x;\n\t\t\tthis.vertexConstantData[this.cameraPositionIndex + 1] = pos.y;\n\t\t\tthis.vertexConstantData[this.cameraPositionIndex + 2] = pos.z;\n\t\t}\n\t}\n\n\t/**\n\t * @inheritDoc\n\t */\n\tpublic iDeactivate(stage:Stage)\n\t{\n\n\t}\n\n\n\t/**\n\t *\n\t *\n\t * @param renderable\n\t * @param stage\n\t * @param camera\n\t */\n\tpublic setRenderState(renderable:RenderableBase, stage:Stage, camera:Camera, viewProjection:Matrix3D)\n\t{\n\t\tvar context:IContextStageGL = <IContextStageGL> stage.context;\n\n\t\tif (renderable.materialOwner.animator)\n\t\t\t(<AnimatorBase> renderable.materialOwner.animator).setRenderState(this, renderable, stage, camera, this.numUsedVertexConstants, this.numUsedStreams);\n\n\t\tif (this.uvBufferIndex >= 0)\n\t\t\tcontext.activateBuffer(this.uvBufferIndex, renderable.getVertexData(TriangleSubGeometry.UV_DATA), renderable.getVertexOffset(TriangleSubGeometry.UV_DATA), TriangleSubGeometry.UV_FORMAT);\n\n\t\tif (this.secondaryUVBufferIndex >= 0)\n\t\t\tcontext.activateBuffer(this.secondaryUVBufferIndex, renderable.getVertexData(TriangleSubGeometry.SECONDARY_UV_DATA), renderable.getVertexOffset(TriangleSubGeometry.SECONDARY_UV_DATA), TriangleSubGeometry.SECONDARY_UV_FORMAT);\n\n\t\tif (this.normalBufferIndex >= 0)\n\t\t\tcontext.activateBuffer(this.normalBufferIndex, renderable.getVertexData(TriangleSubGeometry.NORMAL_DATA), renderable.getVertexOffset(TriangleSubGeometry.NORMAL_DATA), TriangleSubGeometry.NORMAL_FORMAT);\n\n\t\tif (this.tangentBufferIndex >= 0)\n\t\t\tcontext.activateBuffer(this.tangentBufferIndex, renderable.getVertexData(TriangleSubGeometry.TANGENT_DATA), renderable.getVertexOffset(TriangleSubGeometry.TANGENT_DATA), TriangleSubGeometry.TANGENT_FORMAT);\n\n\n\t\tif (this.usesUVTransform) {\n\t\t\tvar uvTransform:Matrix = renderable.materialOwner.uvTransform.matrix;\n\n\t\t\tif (uvTransform) {\n\t\t\t\tthis.vertexConstantData[this.uvTransformIndex] = uvTransform.a;\n\t\t\t\tthis.vertexConstantData[this.uvTransformIndex + 1] = uvTransform.b;\n\t\t\t\tthis.vertexConstantData[this.uvTransformIndex + 3] = uvTransform.tx;\n\t\t\t\tthis.vertexConstantData[this.uvTransformIndex + 4] = uvTransform.c;\n\t\t\t\tthis.vertexConstantData[this.uvTransformIndex + 5] = uvTransform.d;\n\t\t\t\tthis.vertexConstantData[this.uvTransformIndex + 7] = uvTransform.ty;\n\t\t\t} else {\n\t\t\t\tthis.vertexConstantData[this.uvTransformIndex] = 1;\n\t\t\t\tthis.vertexConstantData[this.uvTransformIndex + 1] = 0;\n\t\t\t\tthis.vertexConstantData[this.uvTransformIndex + 3] = 0;\n\t\t\t\tthis.vertexConstantData[this.uvTransformIndex + 4] = 0;\n\t\t\t\tthis.vertexConstantData[this.uvTransformIndex + 5] = 1;\n\t\t\t\tthis.vertexConstantData[this.uvTransformIndex + 7] = 0;\n\t\t\t}\n\t\t}\n\n\t\tif (this.sceneNormalMatrixIndex >= 0)\n\t\t\trenderable.sourceEntity.inverseSceneTransform.copyRawDataTo(this.vertexConstantData, this.sceneNormalMatrixIndex, false);\n\n\t\tif (this.usesTangentSpace && this.cameraPositionIndex >= 0) {\n\n\t\t\trenderable.sourceEntity.inverseSceneTransform.copyRawDataTo(this._pInverseSceneMatrix);\n\t\t\tvar pos:Vector3D = camera.scenePosition;\n\t\t\tvar x:number = pos.x;\n\t\t\tvar y:number = pos.y;\n\t\t\tvar z:number = pos.z;\n\n\t\t\tthis.vertexConstantData[this.cameraPositionIndex] = this._pInverseSceneMatrix[0]*x + this._pInverseSceneMatrix[4]*y + this._pInverseSceneMatrix[8]*z + this._pInverseSceneMatrix[12];\n\t\t\tthis.vertexConstantData[this.cameraPositionIndex + 1] = this._pInverseSceneMatrix[1]*x + this._pInverseSceneMatrix[5]*y + this._pInverseSceneMatrix[9]*z + this._pInverseSceneMatrix[13];\n\t\t\tthis.vertexConstantData[this.cameraPositionIndex + 2] = this._pInverseSceneMatrix[2]*x + this._pInverseSceneMatrix[6]*y + this._pInverseSceneMatrix[10]*z + this._pInverseSceneMatrix[14];\n\t\t}\n\t}\n\n\tpublic dispose()\n\t{\n\t\t//TODO uncount associated program data\n\t}\n}\n\nexport = ShaderObjectBase;","import RegisterPool\t\t\t\t\t= require(\"awayjs-stagegl/lib/materials/compilation/RegisterPool\");\nimport ShaderRegisterElement\t\t= require(\"awayjs-stagegl/lib/materials/compilation/ShaderRegisterElement\");\n\n/**\n * ShaderRegister Cache provides the usage management system for all registers during shading compilation.\n */\nclass ShaderRegisterCache\n{\n\tprivate _fragmentTempCache:RegisterPool;\n\tprivate _vertexTempCache:RegisterPool;\n\tprivate _varyingCache:RegisterPool;\n\tprivate _fragmentConstantsCache:RegisterPool;\n\tprivate _vertexConstantsCache:RegisterPool;\n\tprivate _textureCache:RegisterPool;\n\tprivate _vertexAttributesCache:RegisterPool;\n\tprivate _vertexConstantOffset:number; //TODO: check if this should be initialised to 0\n\tprivate _vertexAttributesOffset:number;//TODO: check if this should be initialised to 0\n\tprivate _varyingsOffset:number;//TODO: check if this should be initialised to 0\n\tprivate _fragmentConstantOffset:number;//TODO: check if this should be initialised to 0\n\n\tprivate _fragmentOutputRegister:ShaderRegisterElement;\n\tprivate _vertexOutputRegister:ShaderRegisterElement;\n\tprivate _numUsedVertexConstants:number = 0;\n\tprivate _numUsedFragmentConstants:number = 0;\n\tprivate _numUsedStreams:number = 0;\n\tprivate _numUsedTextures:number = 0;\n\tprivate _numUsedVaryings:number = 0;\n\tprivate _profile:string;\n\n\t/**\n\t * Create a new ShaderRegisterCache object.\n\t *\n\t * @param profile The compatibility profile used by the renderer.\n\t */\n\tconstructor(profile:string)\n\t{\n\t\tthis._profile = profile;\n\t}\n\n\t/**\n\t * Resets all registers.\n\t */\n\tpublic reset()\n\t{\n\t\tthis._fragmentTempCache = new RegisterPool(\"ft\", 8, false);\n\t\tthis._vertexTempCache = new RegisterPool(\"vt\", 8, false);\n\t\tthis._varyingCache = new RegisterPool(\"v\", 8);\n\t\tthis._textureCache = new RegisterPool(\"fs\", 8);\n\t\tthis._vertexAttributesCache = new RegisterPool(\"va\", 8);\n\t\tthis._fragmentConstantsCache = new RegisterPool(\"fc\", 28);\n\t\tthis._vertexConstantsCache = new RegisterPool(\"vc\", 128);\n\t\tthis._fragmentOutputRegister = new ShaderRegisterElement(\"oc\", -1);\n\t\tthis._vertexOutputRegister = new ShaderRegisterElement(\"op\", -1);\n\t\tthis._numUsedVertexConstants = 0;\n\t\tthis._numUsedStreams = 0;\n\t\tthis._numUsedTextures = 0;\n\t\tthis._numUsedVaryings = 0;\n\t\tthis._numUsedFragmentConstants = 0;\n\n\t\tvar i:number;\n\n\t\tfor (i = 0; i < this._vertexAttributesOffset; ++i)\n\t\t\tthis.getFreeVertexAttribute();\n\n\t\tfor (i = 0; i < this._vertexConstantOffset; ++i)\n\t\t\tthis.getFreeVertexConstant();\n\n\t\tfor (i = 0; i < this._varyingsOffset; ++i)\n\t\t\tthis.getFreeVarying();\n\n\t\tfor (i = 0; i < this._fragmentConstantOffset; ++i)\n\t\t\tthis.getFreeFragmentConstant();\n\t}\n\n\t/**\n\t * Disposes all resources used.\n\t */\n\tpublic dispose()\n\t{\n\t\tthis._fragmentTempCache.dispose();\n\t\tthis._vertexTempCache.dispose();\n\t\tthis._varyingCache.dispose();\n\t\tthis._fragmentConstantsCache.dispose();\n\t\tthis._vertexAttributesCache.dispose();\n\n\t\tthis._fragmentTempCache = null;\n\t\tthis._vertexTempCache = null;\n\t\tthis._varyingCache = null;\n\t\tthis._fragmentConstantsCache = null;\n\t\tthis._vertexAttributesCache = null;\n\t\tthis._fragmentOutputRegister = null;\n\t\tthis._vertexOutputRegister = null;\n\t}\n\n\t/**\n\t * Marks a fragment temporary register as used, so it cannot be retrieved. The register won't be able to be used until removeUsage\n\t * has been called usageCount times again.\n\t * @param register The register to mark as used.\n\t * @param usageCount The amount of usages to add.\n\t */\n\tpublic addFragmentTempUsages(register:ShaderRegisterElement, usageCount:number)\n\t{\n\t\tthis._fragmentTempCache.addUsage(register, usageCount);\n\t}\n\n\t/**\n\t * Removes a usage from a fragment temporary register. When usages reach 0, the register is freed again.\n\t * @param register The register for which to remove a usage.\n\t */\n\tpublic removeFragmentTempUsage(register:ShaderRegisterElement)\n\t{\n\t\tthis._fragmentTempCache.removeUsage(register);\n\t}\n\n\t/**\n\t * Marks a vertex temporary register as used, so it cannot be retrieved. The register won't be able to be used\n\t * until removeUsage has been called usageCount times again.\n\t * @param register The register to mark as used.\n\t * @param usageCount The amount of usages to add.\n\t */\n\tpublic addVertexTempUsages(register:ShaderRegisterElement, usageCount:number)\n\t{\n\t\tthis._vertexTempCache.addUsage(register, usageCount);\n\t}\n\n\t/**\n\t * Removes a usage from a vertex temporary register. When usages reach 0, the register is freed again.\n\t * @param register The register for which to remove a usage.\n\t */\n\tpublic removeVertexTempUsage(register:ShaderRegisterElement)\n\t{\n\t\tthis._vertexTempCache.removeUsage(register);\n\t}\n\n\t/**\n\t * Retrieve an entire fragment temporary register that's still available. The register won't be able to be used until removeUsage\n\t * has been called usageCount times again.\n\t */\n\tpublic getFreeFragmentVectorTemp():ShaderRegisterElement\n\t{\n\t\treturn this._fragmentTempCache.requestFreeVectorReg();\n\t}\n\n\t/**\n\t * Retrieve a single component from a fragment temporary register that's still available.\n\t */\n\tpublic getFreeFragmentSingleTemp():ShaderRegisterElement\n\t{\n\t\treturn this._fragmentTempCache.requestFreeRegComponent();\n\t}\n\n\t/**\n\t * Retrieve an available varying register\n\t */\n\tpublic getFreeVarying():ShaderRegisterElement\n\t{\n\t\t++this._numUsedVaryings;\n\t\treturn this._varyingCache.requestFreeVectorReg();\n\t}\n\n\t/**\n\t * Retrieve an available fragment constant register\n\t */\n\tpublic getFreeFragmentConstant():ShaderRegisterElement\n\t{\n\t\t++this._numUsedFragmentConstants;\n\t\treturn this._fragmentConstantsCache.requestFreeVectorReg();\n\t}\n\n\t/**\n\t * Retrieve an available vertex constant register\n\t */\n\tpublic getFreeVertexConstant():ShaderRegisterElement\n\t{\n\t\t++this._numUsedVertexConstants;\n\t\treturn this._vertexConstantsCache.requestFreeVectorReg();\n\t}\n\n\t/**\n\t * Retrieve an entire vertex temporary register that's still available.\n\t */\n\tpublic getFreeVertexVectorTemp():ShaderRegisterElement\n\t{\n\t\treturn this._vertexTempCache.requestFreeVectorReg();\n\t}\n\n\t/**\n\t * Retrieve a single component from a vertex temporary register that's still available.\n\t */\n\tpublic getFreeVertexSingleTemp():ShaderRegisterElement\n\t{\n\t\treturn this._vertexTempCache.requestFreeRegComponent();\n\t}\n\n\t/**\n\t * Retrieve an available vertex attribute register\n\t */\n\tpublic getFreeVertexAttribute():ShaderRegisterElement\n\t{\n\t\t++this._numUsedStreams;\n\t\treturn this._vertexAttributesCache.requestFreeVectorReg();\n\t}\n\n\t/**\n\t * Retrieve an available texture register\n\t */\n\tpublic getFreeTextureReg():ShaderRegisterElement\n\t{\n\t\t++this._numUsedTextures;\n\t\treturn this._textureCache.requestFreeVectorReg();\n\t}\n\n\t/**\n\t * Indicates the start index from which to retrieve vertex constants.\n\t */\n\tpublic get vertexConstantOffset():number\n\t{\n\t\treturn this._vertexConstantOffset;\n\t}\n\n\tpublic set vertexConstantOffset(vertexConstantOffset:number)\n\t{\n\t\tthis._vertexConstantOffset = vertexConstantOffset;\n\t}\n\n\t/**\n\t * Indicates the start index from which to retrieve vertex attributes.\n\t */\n\tpublic get vertexAttributesOffset():number\n\t{\n\t\treturn this._vertexAttributesOffset;\n\t}\n\n\tpublic set vertexAttributesOffset(value:number)\n\t{\n\t\tthis._vertexAttributesOffset = value;\n\t}\n\n\t/**\n\t * Indicates the start index from which to retrieve varying registers.\n\t */\n\tpublic get varyingsOffset():number\n\t{\n\t\treturn this._varyingsOffset;\n\t}\n\n\tpublic set varyingsOffset(value:number)\n\t{\n\t\tthis._varyingsOffset = value;\n\t}\n\n\t/**\n\t * Indicates the start index from which to retrieve fragment constants.\n\t */\n\tpublic get fragmentConstantOffset():number\n\t{\n\t\treturn this._fragmentConstantOffset;\n\t}\n\n\tpublic set fragmentConstantOffset(value:number)\n\t{\n\t\tthis._fragmentConstantOffset = value;\n\t}\n\n\t/**\n\t * The fragment output register.\n\t */\n\tpublic get fragmentOutputRegister():ShaderRegisterElement\n\t{\n\t\treturn this._fragmentOutputRegister;\n\t}\n\n\t/**\n\t * The amount of used vertex constant registers.\n\t */\n\tpublic get numUsedVertexConstants():number\n\t{\n\t\treturn this._numUsedVertexConstants;\n\t}\n\n\t/**\n\t * The amount of used fragment constant registers.\n\t */\n\tpublic get numUsedFragmentConstants():number\n\t{\n\t\treturn this._numUsedFragmentConstants;\n\t}\n\n\t/**\n\t * The amount of used vertex streams.\n\t */\n\tpublic get numUsedStreams():number\n\t{\n\t\treturn this._numUsedStreams;\n\t}\n\n\t/**\n\t * The amount of used texture slots.\n\t */\n\tpublic get numUsedTextures():number\n\t{\n\t\treturn this._numUsedTextures;\n\t}\n\n\t/**\n\t * The amount of used varying registers.\n\t */\n\tpublic get numUsedVaryings():number\n\t{\n\t\treturn this._numUsedVaryings;\n\t}\n}\n\nexport = ShaderRegisterCache;","import ShaderRegisterElement\t\t= require(\"awayjs-stagegl/lib/materials/compilation/ShaderRegisterElement\");\n\n/**\n * ShaderRegisterData contains the \"named\" registers, generated by the compiler and to be passed on to the methods.\n */\nclass ShaderRegisterData\n{\n\tpublic normalVarying:ShaderRegisterElement;\n\tpublic tangentVarying:ShaderRegisterElement;\n\tpublic bitangentVarying:ShaderRegisterElement;\n\tpublic uvVarying:ShaderRegisterElement;\n\tpublic secondaryUVVarying:ShaderRegisterElement;\n\tpublic viewDirVarying:ShaderRegisterElement;\n\tpublic shadowTarget:ShaderRegisterElement;\n\tpublic shadedTarget:ShaderRegisterElement;\n\tpublic globalPositionVertex:ShaderRegisterElement;\n\tpublic globalPositionVarying:ShaderRegisterElement;\n\tpublic localPosition:ShaderRegisterElement;\n\tpublic normalInput:ShaderRegisterElement;\n\tpublic tangentInput:ShaderRegisterElement;\n\tpublic animatedNormal:ShaderRegisterElement;\n\tpublic animatedTangent:ShaderRegisterElement;\n\tpublic commons:ShaderRegisterElement;\n\tpublic projectionFragment:ShaderRegisterElement;\n\tpublic normalFragment:ShaderRegisterElement;\n\tpublic viewDirFragment:ShaderRegisterElement;\n\tpublic bitangent:ShaderRegisterElement;\n\n\tconstructor()\n\t{\n\n\t}\n}\n\nexport = ShaderRegisterData;","/**\n * A single register element (an entire register or a single register's component) used by the RegisterPool.\n */\nclass ShaderRegisterElement\n{\n\tprivate _regName:string;\n\tprivate _index:number;\n\tprivate _toStr:string;\n\n\tprivate static COMPONENTS = [\"x\", \"y\", \"z\", \"w\"];\n\n\tpublic _component:number;\n\n\t/**\n\t * Creates a new ShaderRegisterElement object.\n\t *\n\t * @param regName The name of the register.\n\t * @param index The index of the register.\n\t * @param component The register's component, if not the entire register is represented.\n\t */\n\tconstructor(regName:string, index:number, component:number = -1)\n\t{\n\t\tthis._component = component;\n\t\tthis._regName = regName;\n\t\tthis._index = index;\n\n\t\tthis._toStr = this._regName;\n\n\t\tif (this._index >= 0)\n\t\t\tthis._toStr += this._index;\n\n\t\tif (component > -1)\n\t\t\tthis._toStr += \".\" + ShaderRegisterElement.COMPONENTS[component];\n\t}\n\n\t/**\n\t * Converts the register or the components AGAL string representation.\n\t */\n\tpublic toString():string\n\t{\n\t\treturn this._toStr;\n\t}\n\n\t/**\n\t * The register's name.\n\t */\n\tpublic get regName():string\n\t{\n\t\treturn this._regName;\n\t}\n\n\t/**\n\t * The register's index.\n\t */\n\tpublic get index():number\n\t{\n\t\treturn this._index;\n\t}\n}\n\nexport = ShaderRegisterElement;","import Texture2DBase\t\t\t\t= require(\"awayjs-core/lib/textures/Texture2DBase\");\n\nimport Stage\t\t\t\t\t\t= require(\"awayjs-stagegl/lib/base/Stage\");\nimport IContextStageGL\t\t\t\t= require(\"awayjs-stagegl/lib/base/IContextStageGL\");\nimport ContextGLMipFilter\t\t\t= require(\"awayjs-stagegl/lib/base/ContextGLMipFilter\");\nimport ContextGLTextureFilter\t\t= require(\"awayjs-stagegl/lib/base/ContextGLTextureFilter\");\nimport ContextGLWrapMode\t\t\t= require(\"awayjs-stagegl/lib/base/ContextGLWrapMode\");\nimport MethodVO\t\t\t\t\t\t= require(\"awayjs-stagegl/lib/materials/compilation/MethodVO\");\nimport ShaderObjectBase\t\t\t\t= require(\"awayjs-stagegl/lib/materials/compilation/ShaderObjectBase\");\nimport ShaderRegisterCache\t\t\t= require(\"awayjs-stagegl/lib/materials/compilation/ShaderRegisterCache\");\nimport ShaderRegisterData\t\t\t= require(\"awayjs-stagegl/lib/materials/compilation/ShaderRegisterData\");\nimport ShaderRegisterElement\t\t= require(\"awayjs-stagegl/lib/materials/compilation/ShaderRegisterElement\");\nimport ShadingMethodBase\t\t\t= require(\"awayjs-stagegl/lib/materials/methods/ShadingMethodBase\");\nimport ShaderCompilerHelper\t\t\t= require(\"awayjs-stagegl/lib/materials/utils/ShaderCompilerHelper\");\n\n/**\n * AmbientBasicMethod provides the default shading method for uniform ambient lighting.\n */\nclass AmbientBasicMethod extends ShadingMethodBase\n{\n\tprivate _color:number = 0xffffff;\n\tprivate _alpha:number = 1;\n\n\tprivate _colorR:number = 1;\n\tprivate _colorG:number = 1;\n\tprivate _colorB:number = 1;\n\n\tprivate _ambient:number = 1;\n\n\t/**\n\t * Creates a new AmbientBasicMethod object.\n\t */\n\tconstructor()\n\t{\n\t\tsuper();\n\t}\n\n\t/**\n\t * @inheritDoc\n\t */\n\tpublic iInitVO(shaderObject:ShaderObjectBase, methodVO:MethodVO)\n\t{\n\t\tmethodVO.needsUV = Boolean(shaderObject.texture != null);\n\t}\n\n\t/**\n\t * @inheritDoc\n\t */\n\tpublic iInitConstants(shaderObject:ShaderObjectBase, methodVO:MethodVO)\n\t{\n\t\tif (!methodVO.needsUV) {\n\t\t\tthis._color = shaderObject.color;\n\t\t\tthis.updateColor();\n\t\t}\n\t}\n\n\t/**\n\t * The strength of the ambient reflection of the surface.\n\t */\n\tpublic get ambient():number\n\t{\n\t\treturn this._ambient;\n\t}\n\n\tpublic set ambient(value:number)\n\t{\n\t\tif (this._ambient == value)\n\t\t\treturn;\n\n\t\tthis._ambient = value;\n\n\t\tthis.updateColor();\n\t}\n\n\t/**\n\t * The alpha component of the surface.\n\t */\n\tpublic get alpha():number\n\t{\n\t\treturn this._alpha;\n\t}\n\n\tpublic set alpha(value:number)\n\t{\n\t\tif (this._alpha == value)\n\t\t\treturn;\n\n\t\tthis._alpha = value;\n\n\t\tthis.updateColor();\n\t}\n\n\t/**\n\t * @inheritDoc\n\t */\n\tpublic copyFrom(method:ShadingMethodBase)\n\t{\n\t\tvar m:any = method;\n\t\tvar b:AmbientBasicMethod = <AmbientBasicMethod> m;\n\t}\n\n\t/**\n\t * @inheritDoc\n\t */\n\tpublic iGetFragmentCode(shaderObject:ShaderObjectBase, methodVO:MethodVO, targetReg:ShaderRegisterElement, registerCache:ShaderRegisterCache, sharedRegisters:ShaderRegisterData):string\n\t{\n\t\tvar code:string = \"\";\n\t\tvar ambientInputRegister:ShaderRegisterElement;\n\n\t\tif (methodVO.needsUV) {\n\t\t\tambientInputRegister = registerCache.getFreeTextureReg();\n\n\t\t\tmethodVO.texturesIndex = ambientInputRegister.index;\n\n\t\t\tcode += ShaderCompilerHelper.getTex2DSampleCode(targetReg, sharedRegisters, ambientInputRegister, shaderObject.texture, shaderObject.useSmoothTextures, shaderObject.repeatTextures, shaderObject.useMipmapping);\n\n\t\t\tif (shaderObject.alphaThreshold > 0) {\n\t\t\t\tvar cutOffReg:ShaderRegisterElement = registerCache.getFreeFragmentConstant();\n\t\t\t\tmethodVO.fragmentConstantsIndex = cutOffReg.index*4;\n\n\t\t\t\tcode += \"sub \" + targetReg + \".w, \" + targetReg + \".w, \" + cutOffReg + \".x\\n\" +\n\t\t\t\t\t\"kil \" + targetReg + \".w\\n\" +\n\t\t\t\t\t\"add \" + targetReg + \".w, \" + targetReg + \".w, \" + cutOffReg + \".x\\n\";\n\t\t\t}\n\n\t\t} else {\n\t\t\tambientInputRegister = registerCache.getFreeFragmentConstant();\n\t\t\tmethodVO.fragmentConstantsIndex = ambientInputRegister.index*4;\n\n\t\t\tcode += \"mov \" + targetReg + \", \" + ambientInputRegister + \"\\n\";\n\t\t}\n\n\t\treturn code;\n\t}\n\n\t/**\n\t * @inheritDoc\n\t */\n\tpublic iActivate(shaderObject:ShaderObjectBase, methodVO:MethodVO, stage:Stage)\n\t{\n\t\tif (methodVO.needsUV) {\n\t\t\t(<IContextStageGL> stage.context).setSamplerStateAt(methodVO.texturesIndex, shaderObject.repeatTextures? ContextGLWrapMode.REPEAT:ContextGLWrapMode.CLAMP, shaderObject.useSmoothTextures? ContextGLTextureFilter.LINEAR:ContextGLTextureFilter.NEAREST, shaderObject.useMipmapping? ContextGLMipFilter.MIPLINEAR:ContextGLMipFilter.MIPNONE);\n\t\t\t(<IContextStageGL> stage.context).activateTexture(methodVO.texturesIndex, shaderObject.texture);\n\n\t\t\tif (shaderObject.alphaThreshold > 0)\n\t\t\t\tshaderObject.fragmentConstantData[methodVO.fragmentConstantsIndex] = shaderObject.alphaThreshold;\n\t\t} else {\n\t\t\tvar index:number = methodVO.fragmentConstantsIndex;\n\t\t\tvar data:Array<number> = shaderObject.fragmentConstantData;\n\t\t\tdata[index] = this._colorR;\n\t\t\tdata[index + 1] = this._colorG;\n\t\t\tdata[index + 2] = this._colorB;\n\t\t\tdata[index + 3] = this._alpha;\n\t\t}\n\t}\n\n\t/**\n\t * Updates the ambient color data used by the render state.\n\t */\n\tprivate updateColor()\n\t{\n\t\tthis._colorR = ((this._color >> 16) & 0xff)/0xff*this._ambient;\n\t\tthis._colorG = ((this._color >> 8) & 0xff)/0xff*this._ambient;\n\t\tthis._colorB = (this._color & 0xff)/0xff*this._ambient;\n\t}\n}\n\nexport = AmbientBasicMethod;","import Texture2DBase\t\t\t\t= require(\"awayjs-core/lib/textures/Texture2DBase\");\n\nimport Camera\t\t\t\t\t\t= require(\"awayjs-display/lib/entities/Camera\");\n\nimport Stage\t\t\t\t\t\t= require(\"awayjs-stagegl/lib/base/Stage\");\nimport RenderableBase\t\t\t\t= require(\"awayjs-stagegl/lib/pool/RenderableBase\");\nimport ContextGLMipFilter\t\t\t= require(\"awayjs-stagegl/lib/base/ContextGLMipFilter\");\nimport ContextGLTextureFilter\t\t= require(\"awayjs-stagegl/lib/base/ContextGLTextureFilter\");\nimport ContextGLWrapMode\t\t\t= require(\"awayjs-stagegl/lib/base/ContextGLWrapMode\");\nimport IContextStageGL\t\t\t\t= require(\"awayjs-stagegl/lib/base/IContextStageGL\");\nimport MethodVO\t\t\t\t\t\t= require(\"awayjs-stagegl/lib/materials/compilation/MethodVO\");\nimport ShaderLightingObject\t\t\t= require(\"awayjs-stagegl/lib/materials/compilation/ShaderLightingObject\");\nimport ShaderRegisterCache\t\t\t= require(\"awayjs-stagegl/lib/materials/compilation/ShaderRegisterCache\");\nimport ShaderRegisterData\t\t\t= require(\"awayjs-stagegl/lib/materials/compilation/ShaderRegisterData\");\nimport ShaderRegisterElement\t\t= require(\"awayjs-stagegl/lib/materials/compilation/ShaderRegisterElement\");\nimport ShadingMethodBase\t\t\t= require(\"awayjs-stagegl/lib/materials/methods/ShadingMethodBase\");\nimport LightingMethodBase\t\t\t= require(\"awayjs-stagegl/lib/materials/methods/LightingMethodBase\");\nimport ShaderCompilerHelper\t\t\t= require(\"awayjs-stagegl/lib/materials/utils/ShaderCompilerHelper\");\n\n/**\n * DiffuseBasicMethod provides the default shading method for Lambert (dot3) diffuse lighting.\n */\nclass DiffuseBasicMethod extends LightingMethodBase\n{\n\tprivate _multiply:boolean = true;\n\n\tpublic _pUseTexture:boolean;\n\tpublic _pTotalLightColorReg:ShaderRegisterElement;\n\tpublic _pDiffuseInputRegister:ShaderRegisterElement;\n\n\tprivate _texture:Texture2DBase;\n\tprivate _diffuseColor:number = 0xffffff;\n\tprivate _ambientColor:number = 0xffffff;\n\tprivate _diffuseR:number = 1;\n\tprivate _diffuseG:number = 1;\n\tprivate _diffuseB:number = 1;\n\tprivate _ambientR:number = 1;\n\tprivate _ambientG:number = 1;\n\tprivate _ambientB:number = 1;\n\n\tpublic _pIsFirstLight:boolean;\n\n\t/**\n\t * Creates a new DiffuseBasicMethod object.\n\t */\n\tconstructor()\n\t{\n\t\tsuper();\n\t}\n\n\tpublic iIsUsed(shaderObject:ShaderLightingObject):boolean\n\t{\n\t\tif (!shaderObject.numLights)\n\t\t\treturn false;\n\n\t\treturn true;\n\t}\n\n\t/**\n\t * Set internally if diffuse color component multiplies or replaces the ambient color\n\t */\n\tpublic get multiply():boolean\n\t{\n\t\treturn this._multiply;\n\t}\n\n\tpublic set multiply(value:boolean)\n\t{\n\t\tif (this._multiply == value)\n\t\t\treturn;\n\n\t\tthis._multiply = value;\n\n\t\tthis.iInvalidateShaderProgram();\n\t}\n\n\tpublic iInitVO(shaderObject:ShaderLightingObject, methodVO:MethodVO)\n\t{\n\t\tmethodVO.needsUV = this._pUseTexture;\n\t\tmethodVO.needsNormals = shaderObject.numLights > 0;\n\t}\n\n\t/**\n\t * Forces the creation of the texture.\n\t * @param stage The Stage used by the renderer\n\t */\n\tpublic generateMip(stage:Stage)\n\t{\n\t\tif (this._pUseTexture)\n\t\t\t(<IContextStageGL> stage.context).activateTexture(0, this._texture);\n\t}\n\n\t/**\n\t * The color of the diffuse reflection when not using a texture.\n\t */\n\tpublic get diffuseColor():number\n\t{\n\t\treturn this._diffuseColor;\n\t}\n\n\tpublic set diffuseColor(value:number)\n\t{\n\t\tif (this._diffuseColor == value)\n\t\t\treturn;\n\n\t\tthis._diffuseColor = value;\n\n\t\tthis.updateDiffuse();\n\t}\n\n\t/**\n\t * The color of the ambient reflection\n\t */\n\tpublic get ambientColor():number\n\t{\n\t\treturn this._ambientColor;\n\t}\n\n\tpublic set ambientColor(value:number)\n\t{\n\t\tif (this._ambientColor == value)\n\t\t\treturn;\n\n\t\tthis._ambientColor = value;\n\n\t\tthis.updateAmbient();\n\t}\n\n\n\t/**\n\t * The bitmapData to use to define the diffuse reflection color per texel.\n\t */\n\tpublic get texture():Texture2DBase\n\t{\n\t\treturn this._texture;\n\t}\n\n\tpublic set texture(value:Texture2DBase)\n\t{\n\t\tvar b:boolean = (value != null);\n\n\t\tif (b != this._pUseTexture || (value && this._texture && (value.hasMipmaps != this._texture.hasMipmaps || value.format != this._texture.format)))\n\t\t\tthis.iInvalidateShaderProgram();\n\n\t\tthis._pUseTexture = b;\n\t\tthis._texture = value;\n\t}\n\n\t/**\n\t * @inheritDoc\n\t */\n\tpublic dispose()\n\t{\n\t\tthis._texture = null;\n\t}\n\n\t/**\n\t * @inheritDoc\n\t */\n\tpublic copyFrom(method:ShadingMethodBase)\n\t{\n\t\tvar diff:DiffuseBasicMethod = <DiffuseBasicMethod> method;\n\n\t\tthis.texture = diff.texture;\n\t\tthis.multiply = diff.multiply;\n\t\tthis.diffuseColor = diff.diffuseColor;\n\t\tthis.ambientColor = diff.ambientColor;\n\t}\n\n\t/**\n\t * @inheritDoc\n\t */\n\tpublic iCleanCompilationData()\n\t{\n\t\tsuper.iCleanCompilationData();\n\n\t\tthis._pTotalLightColorReg = null;\n\t\tthis._pDiffuseInputRegister = null;\n\t}\n\n\t/**\n\t * @inheritDoc\n\t */\n\tpublic iGetFragmentPreLightingCode(shaderObject:ShaderLightingObject, methodVO:MethodVO, registerCache:ShaderRegisterCache, sharedRegisters:ShaderRegisterData):string\n\t{\n\t\tvar code:string = \"\";\n\n\t\tthis._pIsFirstLight = true;\n\n\t\tthis._pTotalLightColorReg = registerCache.getFreeFragmentVectorTemp();\n\t\tregisterCache.addFragmentTempUsages(this._pTotalLightColorReg, 1);\n\n\t\treturn code;\n\t}\n\n\t/**\n\t * @inheritDoc\n\t */\n\tpublic iGetFragmentCodePerLight(shaderObject:ShaderLightingObject, methodVO:MethodVO, lightDirReg:ShaderRegisterElement, lightColReg:ShaderRegisterElement, registerCache:ShaderRegisterCache, sharedRegisters:ShaderRegisterData):string\n\t{\n\t\tvar code:string = \"\";\n\t\tvar t:ShaderRegisterElement;\n\n\t\t// write in temporary if not first light, so we can add to total diffuse colour\n\t\tif (this._pIsFirstLight) {\n\t\t\tt = this._pTotalLightColorReg;\n\t\t} else {\n\t\t\tt = registerCache.getFreeFragmentVectorTemp();\n\t\t\tregisterCache.addFragmentTempUsages(t, 1);\n\t\t}\n\n\t\tcode += \"dp3 \" + t + \".x, \" + lightDirReg + \", \" + sharedRegisters.normalFragment + \"\\n\" +\n\t\t\t\t\"max \" + t + \".w, \" + t + \".x, \" + sharedRegisters.commons + \".y\\n\";\n\n\t\tif (shaderObject.usesLightFallOff)\n\t\t\tcode += \"mul \" + t + \".w, \" + t + \".w, \" + lightDirReg + \".w\\n\";\n\n\t\tif (this._iModulateMethod != null)\n\t\t\tcode += this._iModulateMethod(shaderObject, methodVO, t, registerCache, sharedRegisters);\n\n\t\tcode += \"mul \" + t + \", \" + t + \".w, \" + lightColReg + \"\\n\";\n\n\t\tif (!this._pIsFirstLight) {\n\t\t\tcode += \"add \" + this._pTotalLightColorReg + \".xyz, \" + this._pTotalLightColorReg + \", \" + t + \"\\n\";\n\t\t\tregisterCache.removeFragmentTempUsage(t);\n\t\t}\n\n\t\tthis._pIsFirstLight = false;\n\n\t\treturn code;\n\t}\n\n\t/**\n\t * @inheritDoc\n\t */\n\tpublic iGetFragmentCodePerProbe(shaderObject:ShaderLightingObject, methodVO:MethodVO, cubeMapReg:ShaderRegisterElement, weightRegister:string, registerCache:ShaderRegisterCache, sharedRegisters:ShaderRegisterData):string\n\t{\n\t\tvar code:string = \"\";\n\t\tvar t:ShaderRegisterElement;\n\n\t\t// write in temporary if not first light, so we can add to total diffuse colour\n\t\tif (this._pIsFirstLight) {\n\t\t\tt = this._pTotalLightColorReg;\n\t\t} else {\n\t\t\tt = registerCache.getFreeFragmentVectorTemp();\n\t\t\tregisterCache.addFragmentTempUsages(t, 1);\n\t\t}\n\n\t\tcode += \"tex \" + t + \", \" + sharedRegisters.normalFragment + \", \" + cubeMapReg + \" <cube,linear,miplinear>\\n\" +\n\t\t\t\t\"mul \" + t + \".xyz, \" + t + \".xyz, \" + weightRegister + \"\\n\";\n\n\t\tif (this._iModulateMethod != null)\n\t\t\tcode += this._iModulateMethod(shaderObject, methodVO, t, registerCache, sharedRegisters);\n\n\t\tif (!this._pIsFirstLight) {\n\t\t\tcode += \"add \" + this._pTotalLightColorReg + \".xyz, \" + this._pTotalLightColorReg + \", \" + t + \"\\n\";\n\t\t\tregisterCache.removeFragmentTempUsage(t);\n\t\t}\n\n\t\tthis._pIsFirstLight = false;\n\n\t\treturn code;\n\t}\n\n\t/**\n\t * @inheritDoc\n\t */\n\tpublic iGetFragmentPostLightingCode(shaderObject:ShaderLightingObject, methodVO:MethodVO, targetReg:ShaderRegisterElement, registerCache:ShaderRegisterCache, sharedRegisters:ShaderRegisterData):string\n\t{\n\t\tvar code:string = \"\";\n\n\t\tvar albedo:ShaderRegisterElement;\n\t\tvar cutOffReg:ShaderRegisterElement;\n\n\t\t// incorporate input from ambient\n\t\tif (sharedRegisters.shadowTarget)\n\t\t\tcode += this.pApplyShadow(shaderObject, methodVO, registerCache, sharedRegisters);\n\n\t\talbedo = registerCache.getFreeFragmentVectorTemp();\n\t\tregisterCache.addFragmentTempUsages(albedo, 1);\n\n\t\tvar ambientColorRegister:ShaderRegisterElement = registerCache.getFreeFragmentConstant();\n\t\tmethodVO.fragmentConstantsIndex = ambientColorRegister.index*4;\n\n\t\tif (this._pUseTexture) {\n\t\t\tthis._pDiffuseInputRegister = registerCache.getFreeTextureReg();\n\n\t\t\tmethodVO.texturesIndex = this._pDiffuseInputRegister.index;\n\n\t\t\tcode += ShaderCompilerHelper.getTex2DSampleCode(albedo, sharedRegisters, this._pDiffuseInputRegister, this._texture, shaderObject.useSmoothTextures, shaderObject.repeatTextures, shaderObject.useMipmapping);\n\n\t\t} else {\n\t\t\tthis._pDiffuseInputRegister = registerCache.getFreeFragmentConstant();\n\n\t\t\tcode += \"mov \" + albedo + \", \" + this._pDiffuseInputRegister + \"\\n\";\n\t\t}\n\n\t\tcode += \"sat \" + this._pTotalLightColorReg + \", \" + this._pTotalLightColorReg + \"\\n\" +\n\t\t\t\"mul \" + albedo + \".xyz, \" + albedo + \", \" + this._pTotalLightColorReg + \"\\n\";\n\n\t\tif (this._multiply) {\n\t\t\tcode += \"add \" + albedo + \".xyz, \" + albedo + \", \" + ambientColorRegister + \"\\n\" +\n\t\t\t\t\"mul \" + targetReg + \".xyz, \" + targetReg + \", \" + albedo + \"\\n\";\n\t\t} else {\n\t\t\tcode += \"mul \" + targetReg + \".xyz, \" + targetReg + \", \" + ambientColorRegister + \"\\n\" +\n\t\t\t\t\"mul \" + this._pTotalLightColorReg + \".xyz, \" + targetReg + \", \" + this._pTotalLightColorReg + \"\\n\" +\n\t\t\t\t\"sub \" + targetReg + \".xyz, \" + targetReg + \", \" + this._pTotalLightColorReg + \"\\n\" +\n\t\t\t\t\"add \" + targetReg + \".xyz, \" + targetReg + \", \" + albedo + \"\\n\";\n\t\t}\n\n\t\tregisterCache.removeFragmentTempUsage(this._pTotalLightColorReg);\n\t\tregisterCache.removeFragmentTempUsage(albedo);\n\n\t\treturn code;\n\t}\n\n\t/**\n\t * Generate the code that applies the calculated shadow to the diffuse light\n\t * @param methodVO The MethodVO object for which the compilation is currently happening.\n\t * @param regCache The register cache the compiler is currently using for the register management.\n\t */\n\tpublic pApplyShadow(shaderObject:ShaderLightingObject, methodVO:MethodVO, regCache:ShaderRegisterCache, sharedRegisters:ShaderRegisterData):string\n\t{\n\t\treturn \"mul \" + this._pTotalLightColorReg + \".xyz, \" + this._pTotalLightColorReg + \", \" + sharedRegisters.shadowTarget + \".w\\n\";\n\t}\n\n\t/**\n\t * @inheritDoc\n\t */\n\tpublic iActivate(shaderObject:ShaderLightingObject, methodVO:MethodVO, stage:Stage)\n\t{\n\t\tif (this._pUseTexture) {\n\t\t\t(<IContextStageGL> stage.context).setSamplerStateAt(methodVO.texturesIndex, shaderObject.repeatTextures? ContextGLWrapMode.REPEAT:ContextGLWrapMode.CLAMP, shaderObject.useSmoothTextures? ContextGLTextureFilter.LINEAR : ContextGLTextureFilter.NEAREST, shaderObject.useMipmapping? ContextGLMipFilter.MIPLINEAR : ContextGLMipFilter.MIPNONE);\n\t\t\t(<IContextStageGL> stage.context).activateTexture(methodVO.texturesIndex, this._texture);\n\t\t} else {\n\t\t\tvar index:number = methodVO.fragmentConstantsIndex;\n\t\t\tvar data:Array<number> = shaderObject.fragmentConstantData;\n\t\t\tdata[index + 4] = this._diffuseR;\n\t\t\tdata[index + 5] = this._diffuseG;\n\t\t\tdata[index + 6] = this._diffuseB;\n\t\t\tdata[index + 7] = 1;\n\t\t}\n\t}\n\n\t/**\n\t * Updates the diffuse color data used by the render state.\n\t */\n\tprivate updateDiffuse()\n\t{\n\t\tthis._diffuseR = ((this._diffuseColor >> 16) & 0xff)/0xff;\n\t\tthis._diffuseG = ((this._diffuseColor >> 8) & 0xff)/0xff;\n\t\tthis._diffuseB = (this._diffuseColor & 0xff)/0xff;\n\t}\n\n\t/**\n\t * Updates the ambient color data used by the render state.\n\t */\n\tprivate updateAmbient()\n\t{\n\t\tthis._ambientR = ((this._ambientColor >> 16) & 0xff)/0xff;\n\t\tthis._ambientG = ((this._ambientColor >> 8) & 0xff)/0xff;\n\t\tthis._ambientB = (this._ambientColor & 0xff)/0xff;\n\t}\n\n\t/**\n\t * @inheritDoc\n\t */\n\tpublic iSetRenderState(shaderObject:ShaderLightingObject, methodVO:MethodVO, renderable:RenderableBase, stage:Stage, camera:Camera)\n\t{\n\t\t//TODO move this to Activate (ambientR/G/B currently calc'd in render state)\n\t\tif (shaderObject.numLights > 0) {\n\t\t\tvar index:number = methodVO.fragmentConstantsIndex;\n\t\t\tvar data:Array<number> = shaderObject.fragmentConstantData;\n\t\t\tdata[index] = shaderObject.ambientR*this._ambientR;\n\t\t\tdata[index + 1] = shaderObject.ambientG*this._ambientG;\n\t\t\tdata[index + 2] = shaderObject.ambientB*this._ambientB;\n\t\t\tdata[index + 3] = 1;\n\t\t}\n\t}\n}\n\nexport = DiffuseBasicMethod;","import ColorTransform\t\t\t\t= require(\"awayjs-core/lib/geom/ColorTransform\");\n\nimport Stage\t\t\t\t\t\t= require(\"awayjs-stagegl/lib/base/Stage\");\nimport MethodVO\t\t\t\t\t\t= require(\"awayjs-stagegl/lib/materials/compilation/MethodVO\");\nimport ShaderObjectBase\t\t\t\t= require(\"awayjs-stagegl/lib/materials/compilation/ShaderObjectBase\");\nimport ShaderRegisterCache\t\t\t= require(\"awayjs-stagegl/lib/materials/compilation/ShaderRegisterCache\");\nimport ShaderRegisterData\t\t\t= require(\"awayjs-stagegl/lib/materials/compilation/ShaderRegisterData\");\nimport ShaderRegisterElement\t\t= require(\"awayjs-stagegl/lib/materials/compilation/ShaderRegisterElement\");\nimport EffectMethodBase\t\t\t\t= require(\"awayjs-stagegl/lib/materials/methods/EffectMethodBase\");\n\n/**\n * EffectColorTransformMethod provides a shading method that changes the colour of a material analogous to a\n * ColorTransform object.\n */\nclass EffectColorTransformMethod extends EffectMethodBase\n{\n\tprivate _colorTransform:ColorTransform;\n\n\t/**\n\t * Creates a new EffectColorTransformMethod.\n\t */\n\tconstructor()\n\t{\n\t\tsuper();\n\t}\n\n\t/**\n\t * The ColorTransform object to transform the colour of the material with.\n\t */\n\tpublic get colorTransform():ColorTransform\n\t{\n\t\treturn this._colorTransform;\n\t}\n\n\tpublic set colorTransform(value:ColorTransform)\n\t{\n\t\tthis._colorTransform = value;\n\t}\n\n\t/**\n\t * @inheritDoc\n\t */\n\tpublic iGetFragmentCode(shaderObject:ShaderObjectBase, methodVO:MethodVO, targetReg:ShaderRegisterElement, registerCache:ShaderRegisterCache, sharedRegisters:ShaderRegisterData):string\n\t{\n\t\tvar code:string = \"\";\n\t\tvar colorMultReg:ShaderRegisterElement = registerCache.getFreeFragmentConstant();\n\t\tvar colorOffsReg:ShaderRegisterElement = registerCache.getFreeFragmentConstant();\n\n\t\tmethodVO.fragmentConstantsIndex = colorMultReg.index*4;\n\n\t\t//TODO: AGAL <> GLSL\n\n\t\tcode += \"mul \" + targetReg + \", \" + targetReg + \", \" + colorMultReg + \"\\n\" + \"add \" + targetReg + \", \" + targetReg + \", \" + colorOffsReg + \"\\n\";\n\n\t\treturn code;\n\t}\n\n\t/**\n\t * @inheritDoc\n\t */\n\tpublic iActivate(shaderObject:ShaderObjectBase, methodVO:MethodVO, stage:Stage)\n\t{\n\t\tvar inv:number = 1/0xff;\n\t\tvar index:number = methodVO.fragmentConstantsIndex;\n\t\tvar data:Array<number> = shaderObject.fragmentConstantData;\n\n\t\tdata[index] = this._colorTransform.redMultiplier;\n\t\tdata[index + 1] = this._colorTransform.greenMultiplier;\n\t\tdata[index + 2] = this._colorTransform.blueMultiplier;\n\t\tdata[index + 3] = this._colorTransform.alphaMultiplier;\n\t\tdata[index + 4] = this._colorTransform.redOffset*inv;\n\t\tdata[index + 5] = this._colorTransform.greenOffset*inv;\n\t\tdata[index + 6] = this._colorTransform.blueOffset*inv;\n\t\tdata[index + 7] = this._colorTransform.alphaOffset*inv;\n\n\t}\n}\n\nexport = EffectColorTransformMethod;","import AssetType\t\t\t\t\t= require(\"awayjs-core/lib/library/AssetType\");\nimport IAsset\t\t\t\t\t\t= require(\"awayjs-core/lib/library/IAsset\");\nimport AbstractMethodError\t\t\t= require(\"awayjs-core/lib/errors/AbstractMethodError\");\n\nimport MethodVO\t\t\t\t\t\t= require(\"awayjs-stagegl/lib/materials/compilation/MethodVO\");\nimport ShaderObjectBase\t\t\t\t= require(\"awayjs-stagegl/lib/materials/compilation/ShaderObjectBase\");\nimport ShaderRegisterCache\t\t\t= require(\"awayjs-stagegl/lib/materials/compilation/ShaderRegisterCache\");\nimport ShaderRegisterData\t\t\t= require(\"awayjs-stagegl/lib/materials/compilation/ShaderRegisterData\");\nimport ShaderRegisterElement\t\t= require(\"awayjs-stagegl/lib/materials/compilation/ShaderRegisterElement\");\nimport ShadingMethodBase\t\t\t= require(\"awayjs-stagegl/lib/materials/methods/ShadingMethodBase\");\n\n/**\n * EffectMethodBase forms an abstract base class for shader methods that are not dependent on light sources,\n * and are in essence post-process effects on the materials.\n */\nclass EffectMethodBase extends ShadingMethodBase implements IAsset\n{\n\tconstructor()\n\t{\n\t\tsuper();\n\t}\n\n\t/**\n\t * @inheritDoc\n\t */\n\tpublic get assetType():string\n\t{\n\t\treturn AssetType.EFFECTS_METHOD;\n\t}\n\n\t/**\n\t * Get the fragment shader code that should be added after all per-light code. Usually composits everything to the target register.\n\t * @param methodVO The MethodVO object containing the method data for the currently compiled material pass.\n\t * @param regCache The register cache used during the compilation.\n\t * @param targetReg The register that will be containing the method's output.\n\t * @private\n\t */\n\tpublic iGetFragmentCode(shaderObject:ShaderObjectBase, methodVO:MethodVO, targetReg:ShaderRegisterElement, registerCache:ShaderRegisterCache, sharedRegisters:ShaderRegisterData):string\n\t{\n\t\tthrow new AbstractMethodError();\n\t\treturn \"\";\n\t}\n}\n\nexport = EffectMethodBase;","import MethodVO\t\t\t\t\t\t= require(\"awayjs-stagegl/lib/materials/compilation/MethodVO\");\nimport ShaderObjectBase\t\t\t\t= require(\"awayjs-stagegl/lib/materials/compilation/ShaderObjectBase\");\nimport ShaderLightingObject\t\t\t= require(\"awayjs-stagegl/lib/materials/compilation/ShaderLightingObject\");\nimport ShaderRegisterCache\t\t\t= require(\"awayjs-stagegl/lib/materials/compilation/ShaderRegisterCache\");\nimport ShaderRegisterData\t\t\t= require(\"awayjs-stagegl/lib/materials/compilation/ShaderRegisterData\");\nimport ShaderRegisterElement\t\t= require(\"awayjs-stagegl/lib/materials/compilation/ShaderRegisterElement\");\nimport ShadingMethodBase\t\t\t= require(\"awayjs-stagegl/lib/materials/methods/ShadingMethodBase\");\n\n/**\n * LightingMethodBase provides an abstract base method for shading methods that uses lights.\n * Used for diffuse and specular shaders only.\n */\nclass LightingMethodBase extends ShadingMethodBase\n{\n\t/**\n\t * A method that is exposed to wrappers in case the strength needs to be controlled\n\t */\n\tpublic _iModulateMethod:(shaderObject:ShaderObjectBase, methodVO:MethodVO, targetReg:ShaderRegisterElement, registerCache:ShaderRegisterCache, sharedRegisters:ShaderRegisterData) => string;\n\n\t/**\n\t * Creates a new LightingMethodBase.\n\t */\n\tconstructor()\n\t{\n\t\tsuper();\n\t}\n\n\t/**\n\t * Get the fragment shader code that will be needed before any per-light code is added.\n\t * @param methodVO The MethodVO object containing the method data for the currently compiled material pass.\n\t * @param regCache The register cache used during the compilation.\n\t * @private\n\t */\n\tpublic iGetFragmentPreLightingCode(shaderObject:ShaderLightingObject, methodVO:MethodVO, registerCache:ShaderRegisterCache, sharedRegisters:ShaderRegisterData):string\n\t{\n\t\treturn \"\";\n\t}\n\n\t/**\n\t * Get the fragment shader code that will generate the code relevant to a single light.\n\t *\n\t * @param methodVO The MethodVO object containing the method data for the currently compiled material pass.\n\t * @param lightDirReg The register containing the light direction vector.\n\t * @param lightColReg The register containing the light colour.\n\t * @param regCache The register cache used during the compilation.\n\t */\n\tpublic iGetFragmentCodePerLight(shaderObject:ShaderLightingObject, methodVO:MethodVO, lightDirReg:ShaderRegisterElement, lightColReg:ShaderRegisterElement, registerCache:ShaderRegisterCache, sharedRegisters:ShaderRegisterData):string\n\t{\n\t\treturn \"\";\n\t}\n\n\t/**\n\t * Get the fragment shader code that will generate the code relevant to a single light probe object.\n\t *\n\t * @param methodVO The MethodVO object containing the method data for the currently compiled material pass.\n\t * @param cubeMapReg The register containing the cube map for the current probe\n\t * @param weightRegister A string representation of the register + component containing the current weight\n\t * @param regCache The register cache providing any necessary registers to the shader\n\t */\n\tpublic iGetFragmentCodePerProbe(shaderObject:ShaderLightingObject, methodVO:MethodVO, cubeMapReg:ShaderRegisterElement, weightRegister:string, registerCache:ShaderRegisterCache, sharedRegisters:ShaderRegisterData):string\n\t{\n\t\treturn \"\";\n\t}\n\n\t/**\n\t * Get the fragment shader code that should be added after all per-light code. Usually composits everything to the target register.\n\t *\n\t * @param methodVO The MethodVO object containing the method data for the currently compiled material pass.\n\t * @param regCache The register cache used during the compilation.\n\t * @param targetReg The register containing the final shading output.\n\t * @private\n\t */\n\tpublic iGetFragmentPostLightingCode(shaderObject:ShaderLightingObject, methodVO:MethodVO, targetReg:ShaderRegisterElement, registerCache:ShaderRegisterCache, sharedRegisters:ShaderRegisterData):string\n\t{\n\t\treturn \"\";\n\t}\n}\n\nexport = LightingMethodBase;","import Texture2DBase\t\t\t\t= require(\"awayjs-core/lib/textures/Texture2DBase\");\n\nimport Stage\t\t\t\t\t\t= require(\"awayjs-stagegl/lib/base/Stage\");\nimport ContextGLMipFilter\t\t\t= require(\"awayjs-stagegl/lib/base/ContextGLMipFilter\");\nimport ContextGLTextureFilter\t\t= require(\"awayjs-stagegl/lib/base/ContextGLTextureFilter\");\nimport ContextGLWrapMode\t\t\t= require(\"awayjs-stagegl/lib/base/ContextGLWrapMode\");\nimport IContextStageGL\t\t\t\t= require(\"awayjs-stagegl/lib/base/IContextStageGL\");\nimport MethodVO\t\t\t\t\t\t= require(\"awayjs-stagegl/lib/materials/compilation/MethodVO\");\nimport ShaderObjectBase\t\t\t\t= require(\"awayjs-stagegl/lib/materials/compilation/ShaderObjectBase\");\nimport ShaderRegisterCache\t\t\t= require(\"awayjs-stagegl/lib/materials/compilation/ShaderRegisterCache\");\nimport ShaderRegisterData\t\t\t= require(\"awayjs-stagegl/lib/materials/compilation/ShaderRegisterData\");\nimport ShaderRegisterElement\t\t= require(\"awayjs-stagegl/lib/materials/compilation/ShaderRegisterElement\");\nimport ShadingMethodBase\t\t\t= require(\"awayjs-stagegl/lib/materials/methods/ShadingMethodBase\");\nimport ShaderCompilerHelper\t\t\t= require(\"awayjs-stagegl/lib/materials/utils/ShaderCompilerHelper\");\n\n/**\n * NormalBasicMethod is the default method for standard tangent-space normal mapping.\n */\nclass NormalBasicMethod extends ShadingMethodBase\n{\n\tprivate _texture:Texture2DBase;\n\tprivate _useTexture:boolean;\n\tpublic _pNormalTextureRegister:ShaderRegisterElement;\n\n\t/**\n\t * Creates a new NormalBasicMethod object.\n\t */\n\tconstructor()\n\t{\n\t\tsuper();\n\t}\n\n\tpublic iIsUsed(shaderObject:ShaderObjectBase):boolean\n\t{\n\t\tif (!this._useTexture || !shaderObject.normalDependencies)\n\t\t\treturn false;\n\n\t\treturn true;\n\t}\n\n\t/**\n\t * @inheritDoc\n\t */\n\tpublic iInitVO(shaderObject:ShaderObjectBase, methodVO:MethodVO)\n\t{\n\t\tmethodVO.needsUV = this._useTexture;\n\t}\n\n\t/**\n\t * Indicates whether or not this method outputs normals in tangent space. Override for object-space normals.\n\t */\n\tpublic iOutputsTangentNormals():boolean\n\t{\n\t\treturn true;\n\t}\n\n\t/**\n\t * @inheritDoc\n\t */\n\tpublic copyFrom(method:ShadingMethodBase)\n\t{\n\t\tvar s:any = method;\n\t\tvar bnm:NormalBasicMethod = <NormalBasicMethod> method;\n\n\t\tif (bnm.normalMap != null)\n\t\t\tthis.normalMap = bnm.normalMap;\n\t}\n\n\t/**\n\t * The texture containing the normals per pixel.\n\t */\n\tpublic get normalMap():Texture2DBase\n\t{\n\t\treturn this._texture;\n\t}\n\n\tpublic set normalMap(value:Texture2DBase)\n\t{\n\t\tvar b:boolean = (value != null);\n\n\t\tif (b != this._useTexture || (value && this._texture && (value.hasMipmaps != this._texture.hasMipmaps || value.format != this._texture.format)))\n\t\t\tthis.iInvalidateShaderProgram();\n\n\t\tthis._useTexture = b;\n\t\tthis._texture = value;\n\n\t}\n\n\t/**\n\t * @inheritDoc\n\t */\n\tpublic iCleanCompilationData()\n\t{\n\t\tsuper.iCleanCompilationData();\n\t\tthis._pNormalTextureRegister = null;\n\t}\n\n\t/**\n\t * @inheritDoc\n\t */\n\tpublic dispose()\n\t{\n\t\tif (this._texture)\n\t\t\tthis._texture = null;\n\t}\n\n\t/**\n\t * @inheritDoc\n\t */\n\tpublic iActivate(shaderObject:ShaderObjectBase, methodVO:MethodVO, stage:Stage)\n\t{\n\t\tif (methodVO.texturesIndex >= 0) {\n\t\t\t(<IContextStageGL> stage.context).setSamplerStateAt(methodVO.texturesIndex, shaderObject.repeatTextures? ContextGLWrapMode.REPEAT:ContextGLWrapMode.CLAMP, shaderObject.useSmoothTextures? ContextGLTextureFilter.LINEAR : ContextGLTextureFilter.NEAREST, shaderObject.useMipmapping? ContextGLMipFilter.MIPLINEAR : ContextGLMipFilter.MIPNONE);\n\t\t\t(<IContextStageGL> stage.context).activateTexture(methodVO.texturesIndex, this._texture);\n\t\t}\n\t}\n\n\t/**\n\t * @inheritDoc\n\t */\n\tpublic iGetFragmentCode(shaderObject:ShaderObjectBase, methodVO:MethodVO, targetReg:ShaderRegisterElement, registerCache:ShaderRegisterCache, sharedRegisters:ShaderRegisterData):string\n\t{\n\t\tthis._pNormalTextureRegister = registerCache.getFreeTextureReg();\n\n\t\tmethodVO.texturesIndex = this._pNormalTextureRegister.index;\n\n\t\treturn ShaderCompilerHelper.getTex2DSampleCode(targetReg, sharedRegisters, this._pNormalTextureRegister, this._texture, shaderObject.useSmoothTextures, shaderObject.repeatTextures, shaderObject.useMipmapping) +\n\t\t\t\"sub \" + targetReg + \".xyz, \" + targetReg + \".xyz, \" + sharedRegisters.commons + \".xxx\\n\" +\n\t\t\t\"nrm \" + targetReg + \".xyz, \" + targetReg + \"\\n\";\n\t}\n}\n\nexport = NormalBasicMethod;","import NamedAssetBase\t\t\t\t= require(\"awayjs-core/lib/library/NamedAssetBase\");\n\nimport Camera\t\t\t\t\t\t= require(\"awayjs-display/lib/entities/Camera\");\n\nimport Stage\t\t\t\t\t\t= require(\"awayjs-stagegl/lib/base/Stage\");\nimport RenderableBase\t\t\t\t= require(\"awayjs-stagegl/lib/pool/RenderableBase\");\nimport ShadingMethodEvent\t\t\t= require(\"awayjs-stagegl/lib/events/ShadingMethodEvent\");\nimport MethodVO\t\t\t\t\t\t= require(\"awayjs-stagegl/lib/materials/compilation/MethodVO\");\nimport ShaderObjectBase\t\t\t\t= require(\"awayjs-stagegl/lib/materials/compilation/ShaderObjectBase\");\nimport ShaderRegisterCache\t\t\t= require(\"awayjs-stagegl/lib/materials/compilation/ShaderRegisterCache\");\nimport ShaderRegisterData\t\t\t= require(\"awayjs-stagegl/lib/materials/compilation/ShaderRegisterData\");\nimport ShaderRegisterElement\t\t= require(\"awayjs-stagegl/lib/materials/compilation/ShaderRegisterElement\");\nimport MaterialPassBase\t\t\t\t= require(\"awayjs-stagegl/lib/materials/passes/MaterialPassBase\");\n\n\n/**\n * ShadingMethodBase provides an abstract base method for shading methods, used by compiled passes to compile\n * the final shading program.\n */\nclass ShadingMethodBase extends NamedAssetBase\n{\n\tpublic _passes:Array<MaterialPassBase>; // should be protected\n\n\t/**\n\t * Create a new ShadingMethodBase object.\n\t */\n\tconstructor()\n\t{\n\t\tsuper();\n\t}\n\n\tpublic iIsUsed(shaderObject:ShaderObjectBase):boolean\n\t{\n\t\treturn true;\n\t}\n\n\t/**\n\t * Initializes the properties for a MethodVO, including register and texture indices.\n\t *\n\t * @param methodVO The MethodVO object linking this method with the pass currently being compiled.\n\t *\n\t * @internal\n\t */\n\tpublic iInitVO(shaderObject:ShaderObjectBase, methodVO:MethodVO)\n\t{\n\n\t}\n\n\t/**\n\t * Initializes unchanging shader constants using the data from a MethodVO.\n\t *\n\t * @param methodVO The MethodVO object linking this method with the pass currently being compiled.\n\t *\n\t * @internal\n\t */\n\tpublic iInitConstants(shaderObject:ShaderObjectBase, methodVO:MethodVO)\n\t{\n\n\n\t}\n\n\t/**\n\t * Indicates whether or not this method expects normals in tangent space. Override for object-space normals.\n\t */\n\tpublic iUsesTangentSpace():boolean\n\t{\n\t\treturn true;\n\t}\n\n\t/**\n\t * Any passes required that render to a texture used by this method.\n\t */\n\tpublic get passes():Array<MaterialPassBase>\n\t{\n\t\treturn this._passes;\n\t}\n\n\t/**\n\t * Cleans up any resources used by the current object.\n\t */\n\tpublic dispose()\n\t{\n\n\t}\n\n\t/**\n\t * Resets the compilation state of the method.\n\t *\n\t * @internal\n\t */\n\tpublic iReset()\n\t{\n\t\tthis.iCleanCompilationData();\n\t}\n\n\t/**\n\t * Resets the method's state for compilation.\n\t *\n\t * @internal\n\t */\n\tpublic iCleanCompilationData()\n\t{\n\t}\n\n\t/**\n\t * Get the vertex shader code for this method.\n\t * @param vo The MethodVO object linking this method with the pass currently being compiled.\n\t * @param regCache The register cache used during the compilation.\n\t *\n\t * @internal\n\t */\n\tpublic iGetVertexCode(shaderObject:ShaderObjectBase, methodVO:MethodVO, registerCache:ShaderRegisterCache, sharedRegisters:ShaderRegisterData):string\n\t{\n\t\treturn \"\";\n\t}\n\n\t/**\n\t * @inheritDoc\n\t */\n\tpublic iGetFragmentCode(shaderObject:ShaderObjectBase, methodVO:MethodVO, targetReg:ShaderRegisterElement, registerCache:ShaderRegisterCache, sharedRegisters:ShaderRegisterData):string\n\t{\n\t\treturn null;\n\t}\n\n\t/**\n\t * Sets the render state for this method.\n\t *\n\t * @param methodVO The MethodVO object linking this method with the pass currently being compiled.\n\t * @param stage The Stage object currently used for rendering.\n\t *\n\t * @internal\n\t */\n\tpublic iActivate(shaderObject:ShaderObjectBase, methodVO:MethodVO, stage:Stage)\n\t{\n\n\t}\n\n\t/**\n\t * Sets the render state for a single renderable.\n\t *\n\t * @param vo The MethodVO object linking this method with the pass currently being compiled.\n\t * @param renderable The renderable currently being rendered.\n\t * @param stage The Stage object currently used for rendering.\n\t * @param camera The camera from which the scene is currently rendered.\n\t *\n\t * @internal\n\t */\n\tpublic iSetRenderState(shaderObject:ShaderObjectBase, methodVO:MethodVO, renderable:RenderableBase, stage:Stage, camera:Camera)\n\t{\n\n\t}\n\n\t/**\n\t * Clears the render state for this method.\n\t * @param vo The MethodVO object linking this method with the pass currently being compiled.\n\t * @param stage The Stage object currently used for rendering.\n\t *\n\t * @internal\n\t */\n\tpublic iDeactivate(shaderObject:ShaderObjectBase, methodVO:MethodVO, stage:Stage)\n\t{\n\n\t}\n\n\t/**\n\t * Marks the shader program as invalid, so it will be recompiled before the next render.\n\t *\n\t * @internal\n\t */\n\tpublic iInvalidateShaderProgram()\n\t{\n\t\tthis.dispatchEvent(new ShadingMethodEvent(ShadingMethodEvent.SHADER_INVALIDATED));\n\t}\n\n\t/**\n\t * Copies the state from a ShadingMethodBase object into the current object.\n\t */\n\tpublic copyFrom(method:ShadingMethodBase)\n\t{\n\t}\n}\n\nexport = ShadingMethodBase;","import LightBase\t\t\t\t\t= require(\"awayjs-display/lib/base/LightBase\");\n\nimport Stage\t\t\t\t\t\t= require(\"awayjs-stagegl/lib/base/Stage\");\nimport MethodVO\t\t\t\t\t\t= require(\"awayjs-stagegl/lib/materials/compilation/MethodVO\");\nimport ShaderObjectBase\t\t\t\t= require(\"awayjs-stagegl/lib/materials/compilation/ShaderObjectBase\");\nimport ShaderRegisterCache\t\t\t= require(\"awayjs-stagegl/lib/materials/compilation/ShaderRegisterCache\");\nimport ShaderRegisterData\t\t\t= require(\"awayjs-stagegl/lib/materials/compilation/ShaderRegisterData\");\nimport ShaderRegisterElement\t\t= require(\"awayjs-stagegl/lib/materials/compilation/ShaderRegisterElement\");\nimport ShadowMethodBase\t\t\t\t= require(\"awayjs-stagegl/lib/materials/methods/ShadowMethodBase\");\n\n/**\n * ShadowHardMethod provides the cheapest shadow map method by using a single tap without any filtering.\n */\nclass ShadowHardMethod extends ShadowMethodBase\n{\n\t/**\n\t * Creates a new ShadowHardMethod object.\n\t */\n\tconstructor(castingLight:LightBase)\n\t{\n\t\tsuper(castingLight);\n\t}\n\n\t/**\n\t * @inheritDoc\n\t */\n\tpublic _pGetPlanarFragmentCode(methodVO:MethodVO, targetReg:ShaderRegisterElement, regCache:ShaderRegisterCache, sharedRegisters:ShaderRegisterData):string\n\t{\n\t\tvar depthMapRegister:ShaderRegisterElement = regCache.getFreeTextureReg();\n\t\tvar decReg:ShaderRegisterElement = regCache.getFreeFragmentConstant();\n\n\t\t// needs to be reserved anyway. DO NOT REMOVE\n\t\tvar dataReg:ShaderRegisterElement = regCache.getFreeFragmentConstant();\n\n\t\tvar depthCol:ShaderRegisterElement = regCache.getFreeFragmentVectorTemp();\n\t\tvar code:string = \"\";\n\n\t\tmethodVO.fragmentConstantsIndex = decReg.index*4;\n\t\tmethodVO.texturesIndex = depthMapRegister.index;\n\n\t\tcode += \"tex \" + depthCol + \", \" + this._pDepthMapCoordReg + \", \" + depthMapRegister + \" <2d, nearest, clamp>\\n\" +\n\t\t\t\"dp4 \" + depthCol + \".z, \" + depthCol + \", \" + decReg + \"\\n\" +\n\t\t\t\"slt \" + targetReg + \".w, \" + this._pDepthMapCoordReg + \".z, \" + depthCol + \".z\\n\"; // 0 if in shadow\n\n\t\treturn code;\n\t}\n\n\t/**\n\t * @inheritDoc\n\t */\n\tpublic _pGetPointFragmentCode(methodVO:MethodVO, targetReg:ShaderRegisterElement, regCache:ShaderRegisterCache, sharedRegisters:ShaderRegisterData):string\n\t{\n\t\tvar depthMapRegister:ShaderRegisterElement = regCache.getFreeTextureReg();\n\t\tvar decReg:ShaderRegisterElement = regCache.getFreeFragmentConstant();\n\t\tvar epsReg:ShaderRegisterElement = regCache.getFreeFragmentConstant();\n\t\tvar posReg:ShaderRegisterElement = regCache.getFreeFragmentConstant();\n\t\tvar depthSampleCol:ShaderRegisterElement = regCache.getFreeFragmentVectorTemp();\n\t\tregCache.addFragmentTempUsages(depthSampleCol, 1);\n\t\tvar lightDir:ShaderRegisterElement = regCache.getFreeFragmentVectorTemp();\n\t\tvar code:string = \"\";\n\n\t\tmethodVO.fragmentConstantsIndex = decReg.index*4;\n\t\tmethodVO.texturesIndex = depthMapRegister.index;\n\n\t\tcode += \"sub \" + lightDir + \", \" + sharedRegisters.globalPositionVarying + \", \" + posReg + \"\\n\" +\n\t\t\t\"dp3 \" + lightDir + \".w, \" + lightDir + \".xyz, \" + lightDir + \".xyz\\n\" +\n\t\t\t\"mul \" + lightDir + \".w, \" + lightDir + \".w, \" + posReg + \".w\\n\" +\n\t\t\t\"nrm \" + lightDir + \".xyz, \" + lightDir + \".xyz\\n\" +\n\n\t\t\t\"tex \" + depthSampleCol + \", \" + lightDir + \", \" + depthMapRegister + \" <cube, nearest, clamp>\\n\" +\n\t\t\t\"dp4 \" + depthSampleCol + \".z, \" + depthSampleCol + \", \" + decReg + \"\\n\" +\n\t\t\t\"add \" + targetReg + \".w, \" + lightDir + \".w, \" + epsReg + \".x\\n\" +    // offset by epsilon\n\n\t\t\t\"slt \" + targetReg + \".w, \" + targetReg + \".w, \" + depthSampleCol + \".z\\n\"; // 0 if in shadow\n\n\t\tregCache.removeFragmentTempUsage(depthSampleCol);\n\n\t\treturn code;\n\t}\n\n\t/**\n\t * @inheritDoc\n\t */\n\tpublic _iGetCascadeFragmentCode(shaderObject:ShaderObjectBase, methodVO:MethodVO, decodeRegister:ShaderRegisterElement, depthTexture:ShaderRegisterElement, depthProjection:ShaderRegisterElement, targetRegister:ShaderRegisterElement, registerCache:ShaderRegisterCache, sharedRegisters:ShaderRegisterData):string\n\t{\n\t\tvar temp:ShaderRegisterElement = registerCache.getFreeFragmentVectorTemp();\n\t\treturn \"tex \" + temp + \", \" + depthProjection + \", \" + depthTexture + \" <2d, nearest, clamp>\\n\" +\n\t\t\t\"dp4 \" + temp + \".z, \" + temp + \", \" + decodeRegister + \"\\n\" +\n\t\t\t\"slt \" + targetRegister + \".w, \" + depthProjection + \".z, \" + temp + \".z\\n\"; // 0 if in shadow\n\t}\n\n\t/**\n\t * @inheritDoc\n\t */\n\tpublic iActivateForCascade(shaderObject:ShaderObjectBase, methodVO:MethodVO, stage:Stage)\n\t{\n\t}\n}\n\nexport = ShadowHardMethod;","import AssetType\t\t\t\t\t= require(\"awayjs-core/lib/library/AssetType\");\nimport IAsset\t\t\t\t\t\t= require(\"awayjs-core/lib/library/IAsset\");\n\nimport LightBase\t\t\t\t\t= require(\"awayjs-display/lib/base/LightBase\");\nimport ShadowMapperBase\t\t\t\t= require(\"awayjs-display/lib/materials/shadowmappers/ShadowMapperBase\");\n\nimport ShadingMethodBase\t\t\t= require(\"awayjs-stagegl/lib/materials/methods/ShadingMethodBase\");\n\n/**\n * ShadowMapMethodBase provides an abstract base method for shadow map methods.\n */\nclass ShadowMapMethodBase extends ShadingMethodBase implements IAsset\n{\n\tpublic _pCastingLight:LightBase;\n\tpublic _pShadowMapper:ShadowMapperBase;\n\n\tpublic _pEpsilon:number = .02;\n\tpublic _pAlpha:number = 1;\n\n\t/**\n\t * Creates a new ShadowMapMethodBase object.\n\t * @param castingLight The light used to cast shadows.\n\t */\n\tconstructor(castingLight:LightBase)\n\t{\n\t\tsuper();\n\t\tthis._pCastingLight = castingLight;\n\t\tcastingLight.castsShadows = true;\n\t\tthis._pShadowMapper = castingLight.shadowMapper;\n\n\t}\n\n\t/**\n\t * @inheritDoc\n\t */\n\tpublic get assetType():string\n\t{\n\t\treturn AssetType.SHADOW_MAP_METHOD;\n\t}\n\n\t/**\n\t * The \"transparency\" of the shadows. This allows making shadows less strong.\n\t */\n\tpublic get alpha():number\n\t{\n\t\treturn this._pAlpha;\n\t}\n\n\tpublic set alpha(value:number)\n\t{\n\t\tthis._pAlpha = value;\n\t}\n\n\t/**\n\t * The light casting the shadows.\n\t */\n\tpublic get castingLight():LightBase\n\t{\n\t\treturn this._pCastingLight;\n\t}\n\n\t/**\n\t * A small value to counter floating point precision errors when comparing values in the shadow map with the\n\t * calculated depth value. Increase this if shadow banding occurs, decrease it if the shadow seems to be too detached.\n\t */\n\tpublic get epsilon():number\n\t{\n\t\treturn this._pEpsilon;\n\t}\n\n\tpublic set epsilon(value:number)\n\t{\n\t\tthis._pEpsilon = value;\n\t}\n}\n\nexport = ShadowMapMethodBase;","import Vector3D\t\t\t\t\t\t= require(\"awayjs-core/lib/geom/Vector3D\");\nimport AbstractMethodError\t\t\t= require(\"awayjs-core/lib/errors/AbstractMethodError\");\nimport CubeTextureBase\t\t\t\t= require(\"awayjs-core/lib/textures/CubeTextureBase\");\nimport Texture2DBase\t\t\t\t= require(\"awayjs-core/lib/textures/Texture2DBase\");\n\nimport LightBase\t\t\t\t\t= require(\"awayjs-display/lib/base/LightBase\");\nimport Camera\t\t\t\t\t\t= require(\"awayjs-display/lib/entities/Camera\");\nimport DirectionalLight\t\t\t\t= require(\"awayjs-display/lib/entities/DirectionalLight\");\nimport PointLight\t\t\t\t\t= require(\"awayjs-display/lib/entities/PointLight\");\nimport DirectionalShadowMapper\t\t= require(\"awayjs-display/lib/materials/shadowmappers/DirectionalShadowMapper\");\n\nimport Stage\t\t\t\t\t\t= require(\"awayjs-stagegl/lib/base/Stage\");\nimport RenderableBase\t\t\t\t= require(\"awayjs-stagegl/lib/pool/RenderableBase\");\nimport IContextStageGL\t\t\t\t= require(\"awayjs-stagegl/lib/base/IContextStageGL\");\nimport MethodVO\t\t\t\t\t\t= require(\"awayjs-stagegl/lib/materials/compilation/MethodVO\");\nimport ShaderLightingObject\t\t\t= require(\"awayjs-stagegl/lib/materials/compilation/ShaderLightingObject\");\nimport ShaderObjectBase\t\t\t\t= require(\"awayjs-stagegl/lib/materials/compilation/ShaderObjectBase\");\nimport ShaderRegisterCache\t\t\t= require(\"awayjs-stagegl/lib/materials/compilation/ShaderRegisterCache\");\nimport ShaderRegisterData\t\t\t= require(\"awayjs-stagegl/lib/materials/compilation/ShaderRegisterData\");\nimport ShaderRegisterElement\t\t= require(\"awayjs-stagegl/lib/materials/compilation/ShaderRegisterElement\");\nimport ShadowMapMethodBase\t\t\t= require(\"awayjs-stagegl/lib/materials/methods/ShadowMapMethodBase\");\n\n/**\n * ShadowMethodBase provides an abstract method for simple (non-wrapping) shadow map methods.\n */\nclass ShadowMethodBase extends ShadowMapMethodBase\n{\n\tpublic _pDepthMapCoordReg:ShaderRegisterElement;\n\tpublic _pUsePoint:boolean;\n\n\t/**\n\t * Creates a new ShadowMethodBase object.\n\t * @param castingLight The light used to cast shadows.\n\t */\n\tconstructor(castingLight:LightBase)\n\t{\n\t\tthis._pUsePoint = (castingLight instanceof PointLight);\n\n\t\tsuper(castingLight);\n\t}\n\n\t/**\n\t * @inheritDoc\n\t */\n\tpublic iInitVO(shaderObject:ShaderLightingObject, methodVO:MethodVO)\n\t{\n\t\tmethodVO.needsView = true;\n\t\tmethodVO.needsGlobalVertexPos = true;\n\t\tmethodVO.needsGlobalFragmentPos = this._pUsePoint;\n\t\tmethodVO.needsNormals = shaderObject.numLights > 0;\n\t}\n\n\t/**\n\t * @inheritDoc\n\t */\n\tpublic iInitConstants(shaderObject:ShaderObjectBase, methodVO:MethodVO)\n\t{\n\t\tvar fragmentData:Array<number> = shaderObject.fragmentConstantData;\n\t\tvar vertexData:Array<number> = shaderObject.vertexConstantData;\n\t\tvar index:number /*int*/ = methodVO.fragmentConstantsIndex;\n\t\tfragmentData[index] = 1.0;\n\t\tfragmentData[index + 1] = 1/255.0;\n\t\tfragmentData[index + 2] = 1/65025.0;\n\t\tfragmentData[index + 3] = 1/16581375.0;\n\n\t\tfragmentData[index + 6] = 0;\n\t\tfragmentData[index + 7] = 1;\n\n\t\tif (this._pUsePoint) {\n\t\t\tfragmentData[index + 8] = 0;\n\t\t\tfragmentData[index + 9] = 0;\n\t\t\tfragmentData[index + 10] = 0;\n\t\t\tfragmentData[index + 11] = 1;\n\t\t}\n\n\t\tindex = methodVO.vertexConstantsIndex;\n\t\tif (index != -1) {\n\t\t\tvertexData[index] = .5;\n\t\t\tvertexData[index + 1] = .5;\n\t\t\tvertexData[index + 2] = 0.0;\n\t\t\tvertexData[index + 3] = 1.0;\n\t\t}\n\t}\n\n\t/**\n\t * Wrappers that override the vertex shader need to set this explicitly\n\t */\n\tpublic get _iDepthMapCoordReg():ShaderRegisterElement\n\t{\n\t\treturn this._pDepthMapCoordReg;\n\t}\n\n\tpublic set _iDepthMapCoordReg(value:ShaderRegisterElement)\n\t{\n\t\tthis._pDepthMapCoordReg = value;\n\t}\n\n\t/**\n\t * @inheritDoc\n\t */\n\tpublic iCleanCompilationData()\n\t{\n\t\tsuper.iCleanCompilationData();\n\n\t\tthis._pDepthMapCoordReg = null;\n\t}\n\n\t/**\n\t * @inheritDoc\n\t */\n\tpublic iGetVertexCode(shaderObject:ShaderObjectBase, methodVO:MethodVO, regCache:ShaderRegisterCache, sharedRegisters:ShaderRegisterData):string\n\t{\n\t\treturn this._pUsePoint? this._pGetPointVertexCode(methodVO, regCache, sharedRegisters):this.pGetPlanarVertexCode(methodVO, regCache, sharedRegisters);\n\t}\n\n\t/**\n\t * Gets the vertex code for shadow mapping with a point light.\n\t *\n\t * @param methodVO The MethodVO object linking this method with the pass currently being compiled.\n\t * @param regCache The register cache used during the compilation.\n\t */\n\tpublic _pGetPointVertexCode(methodVO:MethodVO, regCache:ShaderRegisterCache, sharedRegisters:ShaderRegisterData):string\n\t{\n\t\tmethodVO.vertexConstantsIndex = -1;\n\t\treturn \"\";\n\t}\n\n\t/**\n\t * Gets the vertex code for shadow mapping with a planar shadow map (fe: directional lights).\n\t *\n\t * @param methodVO The MethodVO object linking this method with the pass currently being compiled.\n\t * @param regCache The register cache used during the compilation.\n\t */\n\tpublic pGetPlanarVertexCode(methodVO:MethodVO, regCache:ShaderRegisterCache, sharedRegisters:ShaderRegisterData):string\n\t{\n\t\tvar code:string = \"\";\n\t\tvar temp:ShaderRegisterElement = regCache.getFreeVertexVectorTemp();\n\t\tvar dataReg:ShaderRegisterElement = regCache.getFreeVertexConstant();\n\t\tvar depthMapProj:ShaderRegisterElement = regCache.getFreeVertexConstant();\n\t\tregCache.getFreeVertexConstant();\n\t\tregCache.getFreeVertexConstant();\n\t\tregCache.getFreeVertexConstant();\n\t\tthis._pDepthMapCoordReg = regCache.getFreeVarying();\n\t\tmethodVO.vertexConstantsIndex = dataReg.index*4;\n\n\t\t// todo: can epsilon be applied here instead of fragment shader?\n\n\t\tcode += \"m44 \" + temp + \", \" + sharedRegisters.globalPositionVertex + \", \" + depthMapProj + \"\\n\" + \"div \" + temp + \", \" + temp + \", \" + temp + \".w\\n\" + \"mul \" + temp + \".xy, \" + temp + \".xy, \" + dataReg + \".xy\\n\" + \"add \" + this._pDepthMapCoordReg + \", \" + temp + \", \" + dataReg + \".xxwz\\n\";\n\t\t//\"sub \" + this._pDepthMapCoordReg + \".z, \" + this._pDepthMapCoordReg + \".z, \" + this._pDepthMapCoordReg + \".w\\n\";\n\n\t\treturn code;\n\t}\n\n\t/**\n\t * @inheritDoc\n\t */\n\tpublic iGetFragmentCode(shaderObject:ShaderObjectBase, methodVO:MethodVO, targetReg:ShaderRegisterElement, registerCache:ShaderRegisterCache, sharedRegisters:ShaderRegisterData):string\n\t{\n\t\tvar code:string = this._pUsePoint? this._pGetPointFragmentCode(methodVO, targetReg, registerCache, sharedRegisters):this._pGetPlanarFragmentCode(methodVO, targetReg, registerCache, sharedRegisters);\n\t\tcode += \"add \" + targetReg + \".w, \" + targetReg + \".w, fc\" + (methodVO.fragmentConstantsIndex/4 + 1) + \".y\\n\" + \"sat \" + targetReg + \".w, \" + targetReg + \".w\\n\";\n\t\treturn code;\n\t}\n\n\t/**\n\t * Gets the fragment code for shadow mapping with a planar shadow map.\n\t * @param methodVO The MethodVO object linking this method with the pass currently being compiled.\n\t * @param regCache The register cache used during the compilation.\n\t * @param targetReg The register to contain the shadow coverage\n\t * @return\n\t */\n\tpublic _pGetPlanarFragmentCode(methodVO:MethodVO, targetReg:ShaderRegisterElement, regCache:ShaderRegisterCache, sharedRegisters:ShaderRegisterData):string\n\t{\n\t\tthrow new AbstractMethodError();\n\t\treturn \"\";\n\t}\n\n\t/**\n\t * Gets the fragment code for shadow mapping with a point light.\n\t * @param methodVO The MethodVO object linking this method with the pass currently being compiled.\n\t * @param regCache The register cache used during the compilation.\n\t * @param targetReg The register to contain the shadow coverage\n\t * @return\n\t */\n\tpublic _pGetPointFragmentCode(methodVO:MethodVO, targetReg:ShaderRegisterElement, regCache:ShaderRegisterCache, sharedRegisters:ShaderRegisterData):string\n\t{\n\t\tthrow new AbstractMethodError();\n\t\treturn \"\";\n\t}\n\n\t/**\n\t * @inheritDoc\n\t */\n\tpublic iSetRenderState(shaderObject:ShaderObjectBase, methodVO:MethodVO, renderable:RenderableBase, stage:Stage, camera:Camera)\n\t{\n\t\tif (!this._pUsePoint)\n\t\t\t(<DirectionalShadowMapper> this._pShadowMapper).iDepthProjection.copyRawDataTo(shaderObject.vertexConstantData, methodVO.vertexConstantsIndex + 4, true);\n\t}\n\n\t/**\n\t * Gets the fragment code for combining this method with a cascaded shadow map method.\n\t * @param methodVO The MethodVO object linking this method with the pass currently being compiled.\n\t * @param regCache The register cache used during the compilation.\n\t * @param decodeRegister The register containing the data to decode the shadow map depth value.\n\t * @param depthTexture The texture containing the shadow map.\n\t * @param depthProjection The projection of the fragment relative to the light.\n\t * @param targetRegister The register to contain the shadow coverage\n\t * @return\n\t */\n\tpublic _iGetCascadeFragmentCode(shaderObject:ShaderObjectBase, methodVO:MethodVO, decodeRegister:ShaderRegisterElement, depthTexture:ShaderRegisterElement, depthProjection:ShaderRegisterElement, targetRegister:ShaderRegisterElement, registerCache:ShaderRegisterCache, sharedRegisters:ShaderRegisterData):string\n\t{\n\t\tthrow new Error(\"This shadow method is incompatible with cascade shadows\");\n\t}\n\n\t/**\n\t * @inheritDoc\n\t */\n\tpublic iActivate(shaderObject:ShaderObjectBase, methodVO:MethodVO, stage:Stage)\n\t{\n\t\tvar fragmentData:Array<number> = shaderObject.fragmentConstantData;\n\t\tvar index:number /*int*/ = methodVO.fragmentConstantsIndex;\n\n\t\tif (this._pUsePoint)\n\t\t\tfragmentData[index + 4] = -Math.pow(1/((<PointLight> this._pCastingLight).fallOff*this._pEpsilon), 2);\n\t\telse\n\t\t\tshaderObject.vertexConstantData[methodVO.vertexConstantsIndex + 3] = -1/((<DirectionalShadowMapper> this._pShadowMapper).depth*this._pEpsilon);\n\n\t\tfragmentData[index + 5] = 1 - this._pAlpha;\n\n\t\tif (this._pUsePoint) {\n\t\t\tvar pos:Vector3D = this._pCastingLight.scenePosition;\n\t\t\tfragmentData[index + 8] = pos.x;\n\t\t\tfragmentData[index + 9] = pos.y;\n\t\t\tfragmentData[index + 10] = pos.z;\n\t\t\t// used to decompress distance\n\t\t\tvar f:number = (<PointLight> this._pCastingLight).fallOff;\n\t\t\tfragmentData[index + 11] = 1/(2*f*f);\n\t\t}\n\n\t\tif (!this._pUsePoint)\n\t\t\t(<IContextStageGL> stage.context).activateRenderTexture(methodVO.texturesIndex, <Texture2DBase> this._pCastingLight.shadowMapper.depthMap);\n\t\t//else\n\t\t//\t(<IContextStageGL> stage.context).activateCubeRenderTexture(methodVO.texturesIndex, <CubeTextureBase> this._pCastingLight.shadowMapper.depthMap);\n\t}\n\n\t/**\n\t * Sets the method state for cascade shadow mapping.\n\t */\n\tpublic iActivateForCascade(shaderObject:ShaderObjectBase, methodVO:MethodVO, stage:Stage)\n\t{\n\t\tthrow new Error(\"This shadow method is incompatible with cascade shadows\");\n\t}\n}\n\nexport = ShadowMethodBase;","import Texture2DBase\t\t\t\t= require(\"awayjs-core/lib/textures/Texture2DBase\");\n\nimport Stage\t\t\t\t\t\t= require(\"awayjs-stagegl/lib/base/Stage\");\nimport ContextGLMipFilter\t\t\t= require(\"awayjs-stagegl/lib/base/ContextGLMipFilter\");\nimport ContextGLTextureFilter\t\t= require(\"awayjs-stagegl/lib/base/ContextGLTextureFilter\");\nimport ContextGLWrapMode\t\t\t= require(\"awayjs-stagegl/lib/base/ContextGLWrapMode\");\nimport IContextStageGL\t\t\t\t= require(\"awayjs-stagegl/lib/base/IContextStageGL\");\nimport MethodVO\t\t\t\t\t\t= require(\"awayjs-stagegl/lib/materials/compilation/MethodVO\");\nimport ShaderLightingObject\t\t\t= require(\"awayjs-stagegl/lib/materials/compilation/ShaderLightingObject\");\nimport ShaderRegisterCache\t\t\t= require(\"awayjs-stagegl/lib/materials/compilation/ShaderRegisterCache\");\nimport ShaderRegisterData\t\t\t= require(\"awayjs-stagegl/lib/materials/compilation/ShaderRegisterData\");\nimport ShaderRegisterElement\t\t= require(\"awayjs-stagegl/lib/materials/compilation/ShaderRegisterElement\");\nimport LightingMethodBase\t\t\t= require(\"awayjs-stagegl/lib/materials/methods/LightingMethodBase\");\nimport ShadingMethodBase\t\t\t= require(\"awayjs-stagegl/lib/materials/methods/ShadingMethodBase\");\nimport ShaderCompilerHelper\t\t\t= require(\"awayjs-stagegl/lib/materials/utils/ShaderCompilerHelper\");\n\n/**\n * SpecularBasicMethod provides the default shading method for Blinn-Phong specular highlights (an optimized but approximated\n * version of Phong specularity).\n */\nclass SpecularBasicMethod extends LightingMethodBase\n{\n\tpublic _pUseTexture:boolean;\n\tpublic _pTotalLightColorReg:ShaderRegisterElement;\n\tpublic _pSpecularTextureRegister:ShaderRegisterElement;\n\tpublic _pSpecularTexData:ShaderRegisterElement;\n\tpublic _pSpecularDataRegister:ShaderRegisterElement;\n\n\tprivate _texture:Texture2DBase;\n\n\tprivate _gloss:number = 50;\n\tprivate _specular:number = 1;\n\tprivate _specularColor:number = 0xffffff;\n\tpublic _iSpecularR:number = 1;\n\tpublic _iSpecularG:number = 1;\n\tpublic _iSpecularB:number = 1;\n\tpublic _pIsFirstLight:boolean;\n\n\t/**\n\t * Creates a new SpecularBasicMethod object.\n\t */\n\tconstructor()\n\t{\n\t\tsuper();\n\t}\n\n\tpublic iIsUsed(shaderObject:ShaderLightingObject):boolean\n\t{\n\t\tif (!shaderObject.numLights)\n\t\t\treturn false;\n\n\t\treturn true;\n\t}\n\n\t/**\n\t * @inheritDoc\n\t */\n\tpublic iInitVO(shaderObject:ShaderLightingObject, methodVO:MethodVO)\n\t{\n\t\tmethodVO.needsUV = this._pUseTexture;\n\t\tmethodVO.needsNormals = shaderObject.numLights > 0;\n\t\tmethodVO.needsView = shaderObject.numLights > 0;\n\t}\n\n\t/**\n\t * The sharpness of the specular highlight.\n\t */\n\tpublic get gloss():number\n\t{\n\t\treturn this._gloss;\n\t}\n\n\tpublic set gloss(value:number)\n\t{\n\t\tthis._gloss = value;\n\t}\n\n\t/**\n\t * The overall strength of the specular highlights.\n\t */\n\tpublic get specular():number\n\t{\n\t\treturn this._specular;\n\t}\n\n\tpublic set specular(value:number)\n\t{\n\t\tif (value == this._specular)\n\t\t\treturn;\n\n\t\tthis._specular = value;\n\t\tthis.updateSpecular();\n\t}\n\n\t/**\n\t * The colour of the specular reflection of the surface.\n\t */\n\tpublic get specularColor():number\n\t{\n\t\treturn this._specularColor;\n\t}\n\n\tpublic set specularColor(value:number)\n\t{\n\t\tif (this._specularColor == value)\n\t\t\treturn;\n\n\t\t// specular is now either enabled or disabled\n\t\tif (this._specularColor == 0 || value == 0)\n\t\t\tthis.iInvalidateShaderProgram();\n\n\t\tthis._specularColor = value;\n\t\tthis.updateSpecular();\n\t}\n\n\t/**\n\t * The bitmapData that encodes the specular highlight strength per texel in the red channel, and the sharpness\n\t * in the green channel. You can use SpecularBitmapTexture if you want to easily set specular and gloss maps\n\t * from grayscale images, but prepared images are preferred.\n\t */\n\tpublic get texture():Texture2DBase\n\t{\n\t\treturn this._texture;\n\t}\n\n\tpublic set texture(value:Texture2DBase)\n\t{\n\t\tvar b:boolean = ( value != null );\n\n\t\tif (b != this._pUseTexture || (value && this._texture && (value.hasMipmaps != this._texture.hasMipmaps || value.format != this._texture.format)))\n\t\t\tthis.iInvalidateShaderProgram();\n\n\t\tthis._pUseTexture = b;\n\t\tthis._texture = value;\n\n\t}\n\n\t/**\n\t * @inheritDoc\n\t */\n\tpublic copyFrom(method:ShadingMethodBase)\n\t{\n\n\t\tvar m:any = method;\n\t\tvar bsm:SpecularBasicMethod = <SpecularBasicMethod> method;\n\n\t\tvar spec:SpecularBasicMethod = bsm;//SpecularBasicMethod(method);\n\t\tthis.texture = spec.texture;\n\t\tthis.specular = spec.specular;\n\t\tthis.specularColor = spec.specularColor;\n\t\tthis.gloss = spec.gloss;\n\t}\n\n\t/**\n\t * @inheritDoc\n\t */\n\tpublic iCleanCompilationData()\n\t{\n\t\tsuper.iCleanCompilationData();\n\t\tthis._pTotalLightColorReg = null;\n\t\tthis._pSpecularTextureRegister = null;\n\t\tthis._pSpecularTexData = null;\n\t\tthis._pSpecularDataRegister = null;\n\t}\n\n\t/**\n\t * @inheritDoc\n\t */\n\tpublic iGetFragmentPreLightingCode(shaderObject:ShaderLightingObject, methodVO:MethodVO, registerCache:ShaderRegisterCache, sharedRegisters:ShaderRegisterData):string\n\t{\n\t\tvar code:string = \"\";\n\n\t\tthis._pIsFirstLight = true;\n\n\t\tthis._pSpecularDataRegister = registerCache.getFreeFragmentConstant();\n\t\tmethodVO.fragmentConstantsIndex = this._pSpecularDataRegister.index*4;\n\n\t\tif (this._pUseTexture) {\n\n\t\t\tthis._pSpecularTexData = registerCache.getFreeFragmentVectorTemp();\n\t\t\tregisterCache.addFragmentTempUsages(this._pSpecularTexData, 1);\n\t\t\tthis._pSpecularTextureRegister = registerCache.getFreeTextureReg();\n\t\t\tmethodVO.texturesIndex = this._pSpecularTextureRegister.index;\n\t\t\tcode = ShaderCompilerHelper.getTex2DSampleCode(this._pSpecularTexData, sharedRegisters, this._pSpecularTextureRegister, this._texture, shaderObject.useSmoothTextures, shaderObject.repeatTextures, shaderObject.useMipmapping);\n\n\t\t} else {\n\n\t\t\tthis._pSpecularTextureRegister = null;\n\t\t}\n\n\t\tthis._pTotalLightColorReg = registerCache.getFreeFragmentVectorTemp();\n\t\tregisterCache.addFragmentTempUsages(this._pTotalLightColorReg, 1);\n\n\t\treturn code;\n\t}\n\n\t/**\n\t * @inheritDoc\n\t */\n\tpublic iGetFragmentCodePerLight(shaderObject:ShaderLightingObject, methodVO:MethodVO, lightDirReg:ShaderRegisterElement, lightColReg:ShaderRegisterElement, registerCache:ShaderRegisterCache, sharedRegisters:ShaderRegisterData):string\n\t{\n\t\tvar code:string = \"\";\n\t\tvar t:ShaderRegisterElement;\n\n\t\tif (this._pIsFirstLight) {\n\t\t\tt = this._pTotalLightColorReg;\n\t\t} else {\n\t\t\tt = registerCache.getFreeFragmentVectorTemp();\n\t\t\tregisterCache.addFragmentTempUsages(t, 1);\n\t\t}\n\n\t\tvar viewDirReg:ShaderRegisterElement = sharedRegisters.viewDirFragment;\n\t\tvar normalReg:ShaderRegisterElement = sharedRegisters.normalFragment;\n\n\t\t// blinn-phong half vector model\n\t\tcode += \"add \" + t + \", \" + lightDirReg + \", \" + viewDirReg + \"\\n\" +\n\t\t\t\t\"nrm \" + t + \".xyz, \" + t + \"\\n\" +\n\t\t\t\t\"dp3 \" + t + \".w, \" + normalReg + \", \" + t + \"\\n\" +\n\t\t\t\t\"sat \" + t + \".w, \" + t + \".w\\n\";\n\n\t\tif (this._pUseTexture) {\n\t\t\t// apply gloss modulation from texture\n\t\t\tcode += \"mul \" + this._pSpecularTexData + \".w, \" + this._pSpecularTexData + \".y, \" + this._pSpecularDataRegister + \".w\\n\" +\n\t\t\t\t\t\"pow \" + t + \".w, \" + t + \".w, \" + this._pSpecularTexData + \".w\\n\";\n\t\t} else {\n\t\t\tcode += \"pow \" + t + \".w, \" + t + \".w, \" + this._pSpecularDataRegister + \".w\\n\";\n\t\t}\n\n\t\t// attenuate\n\t\tif (shaderObject.usesLightFallOff)\n\t\t\tcode += \"mul \" + t + \".w, \" + t + \".w, \" + lightDirReg + \".w\\n\";\n\n\t\tif (this._iModulateMethod != null)\n\t\t\tcode += this._iModulateMethod(shaderObject, methodVO, t, registerCache, sharedRegisters);\n\n\t\tcode += \"mul \" + t + \".xyz, \" + lightColReg + \", \" + t + \".w\\n\";\n\n\t\tif (!this._pIsFirstLight) {\n\t\t\tcode += \"add \" + this._pTotalLightColorReg + \".xyz, \" + this._pTotalLightColorReg + \", \" + t + \"\\n\";\n\t\t\tregisterCache.removeFragmentTempUsage(t);\n\t\t}\n\n\t\tthis._pIsFirstLight = false;\n\n\t\treturn code;\n\t}\n\n\t/**\n\t * @inheritDoc\n\t */\n\tpublic iGetFragmentCodePerProbe(shaderObject:ShaderLightingObject, methodVO:MethodVO, cubeMapReg:ShaderRegisterElement, weightRegister:string, registerCache:ShaderRegisterCache, sharedRegisters:ShaderRegisterData):string\n\t{\n\t\tvar code:string = \"\";\n\t\tvar t:ShaderRegisterElement;\n\n\t\t// write in temporary if not first light, so we can add to total diffuse colour\n\t\tif (this._pIsFirstLight) {\n\t\t\tt = this._pTotalLightColorReg;\n\t\t} else {\n\t\t\tt = registerCache.getFreeFragmentVectorTemp();\n\t\t\tregisterCache.addFragmentTempUsages(t, 1);\n\t\t}\n\n\t\tvar normalReg:ShaderRegisterElement = sharedRegisters.normalFragment;\n\t\tvar viewDirReg:ShaderRegisterElement = sharedRegisters.viewDirFragment;\n\n\t\tcode += \"dp3 \" + t + \".w, \" + normalReg + \", \" + viewDirReg + \"\\n\" +\n\t\t\t\t\"add \" + t + \".w, \" + t + \".w, \" + t + \".w\\n\" +\n\t\t\t\t\"mul \" + t + \", \" + t + \".w, \" + normalReg + \"\\n\" +\n\t\t\t\t\"sub \" + t + \", \" + t + \", \" + viewDirReg + \"\\n\" +\n\t\t\t\t\"tex \" + t + \", \" + t + \", \" + cubeMapReg + \" <cube,\" + (shaderObject.useSmoothTextures? \"linear\":\"nearest\") + \",miplinear>\\n\" +\n\t\t\t\t\"mul \" + t + \".xyz, \" + t + \", \" + weightRegister + \"\\n\";\n\n\t\tif (this._iModulateMethod != null)\n\t\t\tcode += this._iModulateMethod(shaderObject, methodVO, t, registerCache, sharedRegisters);\n\n\t\tif (!this._pIsFirstLight) {\n\t\t\tcode += \"add \" + this._pTotalLightColorReg + \".xyz, \" + this._pTotalLightColorReg + \", \" + t + \"\\n\";\n\t\t\tregisterCache.removeFragmentTempUsage(t);\n\t\t}\n\n\t\tthis._pIsFirstLight = false;\n\n\t\treturn code;\n\t}\n\n\t/**\n\t * @inheritDoc\n\t */\n\tpublic iGetFragmentPostLightingCode(shaderObject:ShaderLightingObject, methodVO:MethodVO, targetReg:ShaderRegisterElement, registerCache:ShaderRegisterCache, sharedRegisters:ShaderRegisterData):string\n\t{\n\t\tvar code:string = \"\";\n\n\t\tif (sharedRegisters.shadowTarget)\n\t\t\tcode += \"mul \" + this._pTotalLightColorReg + \".xyz, \" + this._pTotalLightColorReg + \", \" + sharedRegisters.shadowTarget + \".w\\n\";\n\n\t\tif (this._pUseTexture) {\n\t\t\t// apply strength modulation from texture\n\t\t\tcode += \"mul \" + this._pTotalLightColorReg + \".xyz, \" + this._pTotalLightColorReg + \", \" + this._pSpecularTexData + \".x\\n\";\n\t\t\tregisterCache.removeFragmentTempUsage(this._pSpecularTexData);\n\t\t}\n\n\t\t// apply material's specular reflection\n\t\tcode += \"mul \" + this._pTotalLightColorReg + \".xyz, \" + this._pTotalLightColorReg + \", \" + this._pSpecularDataRegister + \"\\n\" +\n\t\t\t\"add \" + targetReg + \".xyz, \" + targetReg + \", \" + this._pTotalLightColorReg + \"\\n\";\n\t\tregisterCache.removeFragmentTempUsage(this._pTotalLightColorReg);\n\n\t\treturn code;\n\t}\n\n\t/**\n\t * @inheritDoc\n\t */\n\tpublic iActivate(shaderObject:ShaderLightingObject, methodVO:MethodVO, stage:Stage)\n\t{\n\t\tif (this._pUseTexture) {\n\t\t\t(<IContextStageGL> stage.context).setSamplerStateAt(methodVO.texturesIndex, shaderObject.repeatTextures? ContextGLWrapMode.REPEAT:ContextGLWrapMode.CLAMP, shaderObject.useSmoothTextures? ContextGLTextureFilter.LINEAR:ContextGLTextureFilter.NEAREST, shaderObject.useMipmapping? ContextGLMipFilter.MIPLINEAR:ContextGLMipFilter.MIPNONE);\n\t\t\t(<IContextStageGL> stage.context).activateTexture(methodVO.texturesIndex, this._texture);\n\t\t}\n\n\t\tvar index:number = methodVO.fragmentConstantsIndex;\n\t\tvar data:Array<number> = shaderObject.fragmentConstantData;\n\t\tdata[index] = this._iSpecularR;\n\t\tdata[index + 1] = this._iSpecularG;\n\t\tdata[index + 2] = this._iSpecularB;\n\t\tdata[index + 3] = this._gloss;\n\t}\n\n\t/**\n\t * Updates the specular color data used by the render state.\n\t */\n\tprivate updateSpecular()\n\t{\n\t\tthis._iSpecularR = (( this._specularColor >> 16) & 0xff)/0xff*this._specular;\n\t\tthis._iSpecularG = (( this._specularColor >> 8) & 0xff)/0xff*this._specular;\n\t\tthis._iSpecularB = ( this._specularColor & 0xff)/0xff*this._specular;\n\t}\n}\n\nexport = SpecularBasicMethod;","﻿import Matrix3D\t\t\t\t\t\t= require(\"awayjs-core/lib/geom/Matrix3D\");\nimport Matrix3DUtils\t\t\t\t= require(\"awayjs-core/lib/geom/Matrix3DUtils\");\nimport Texture2DBase\t\t\t\t= require(\"awayjs-core/lib/textures/Texture2DBase\");\n\nimport Camera\t\t\t\t\t\t= require(\"awayjs-display/lib/entities/Camera\");\n\nimport Stage\t\t\t\t\t\t= require(\"awayjs-stagegl/lib/base/Stage\");\nimport MaterialPassData\t\t\t\t= require(\"awayjs-stagegl/lib/pool/MaterialPassData\");\nimport RenderableBase\t\t\t\t= require(\"awayjs-stagegl/lib/pool/RenderableBase\");\nimport ContextGLMipFilter\t\t\t= require(\"awayjs-stagegl/lib/base/ContextGLMipFilter\");\nimport ContextGLTextureFilter\t\t= require(\"awayjs-stagegl/lib/base/ContextGLTextureFilter\");\nimport ContextGLWrapMode\t\t\t= require(\"awayjs-stagegl/lib/base/ContextGLWrapMode\");\nimport ContextGLProgramType\t\t\t= require(\"awayjs-stagegl/lib/base/ContextGLProgramType\");\nimport ContextGLTextureFormat\t\t= require(\"awayjs-stagegl/lib/base/ContextGLTextureFormat\");\nimport IContextStageGL\t\t\t\t= require(\"awayjs-stagegl/lib/base/IContextStageGL\");\nimport ShaderObjectBase\t\t\t\t= require(\"awayjs-stagegl/lib/materials/compilation/ShaderObjectBase\");\nimport ShaderRegisterCache\t\t\t= require(\"awayjs-stagegl/lib/materials/compilation/ShaderRegisterCache\");\nimport ShaderRegisterData\t\t\t= require(\"awayjs-stagegl/lib/materials/compilation/ShaderRegisterData\");\nimport ShaderRegisterElement\t\t= require(\"awayjs-stagegl/lib/materials/compilation/ShaderRegisterElement\");\nimport MaterialPassBase\t\t\t\t= require(\"awayjs-stagegl/lib/materials/passes/MaterialPassBase\");\nimport ShaderCompilerHelper\t\t\t= require(\"awayjs-stagegl/lib/materials/utils/ShaderCompilerHelper\");\n\n/**\n * DepthMapPass is a pass that writes depth values to a depth map as a 32-bit value exploded over the 4 texture channels.\n * This is used to render shadow maps, depth maps, etc.\n */\nclass DepthMapPass extends MaterialPassBase\n{\n\tprivate _fragmentConstantsIndex:number;\n\tprivate _texturesIndex:number;\n\n\t/**\n\t * Creates a new DepthMapPass object.\n\t *\n\t * @param material The material to which this pass belongs.\n\t */\n\tconstructor()\n\t{\n\t\tsuper();\n\t}\n\n\t/**\n\t * Initializes the unchanging constant data for this material.\n\t */\n\tpublic _iInitConstantData(shaderObject:ShaderObjectBase)\n\t{\n\t\tsuper._iInitConstantData(shaderObject);\n\n\t\tvar index:number = this._fragmentConstantsIndex;\n\t\tvar data:Array<number> = shaderObject.fragmentConstantData;\n\t\tdata[index] = 1.0;\n\t\tdata[index + 1] = 255.0;\n\t\tdata[index + 2] = 65025.0;\n\t\tdata[index + 3] = 16581375.0;\n\t\tdata[index + 4] = 1.0/255.0;\n\t\tdata[index + 5] = 1.0/255.0;\n\t\tdata[index + 6] = 1.0/255.0;\n\t\tdata[index + 7] = 0.0;\n\t}\n\n\tpublic _iIncludeDependencies(shaderObject:ShaderObjectBase)\n\t{\n\t\tshaderObject.projectionDependencies++;\n\n\t\tif (shaderObject.alphaThreshold > 0)\n\t\t\tshaderObject.uvDependencies++;\n\t}\n\n\t/**\n\t * @inheritDoc\n\t */\n\tpublic _iGetFragmentCode(shaderObject:ShaderObjectBase, registerCache:ShaderRegisterCache, sharedRegisters:ShaderRegisterData):string\n\t{\n\t\tvar code:string = \"\";\n\t\tvar targetReg:ShaderRegisterElement = sharedRegisters.shadedTarget;\n\t\tvar diffuseInputReg:ShaderRegisterElement = registerCache.getFreeTextureReg();\n\t\tvar dataReg1:ShaderRegisterElement = registerCache.getFreeFragmentConstant();\n\t\tvar dataReg2:ShaderRegisterElement = registerCache.getFreeFragmentConstant();\n\n\t\tthis._fragmentConstantsIndex = dataReg1.index*4;\n\n\t\tvar temp1:ShaderRegisterElement = registerCache.getFreeFragmentVectorTemp();\n\t\tregisterCache.addFragmentTempUsages(temp1, 1);\n\t\tvar temp2:ShaderRegisterElement = registerCache.getFreeFragmentVectorTemp();\n\t\tregisterCache.addFragmentTempUsages(temp2, 1);\n\n\t\tcode += \"div \" + temp1 + \", \" + sharedRegisters.projectionFragment + \", \" + sharedRegisters.projectionFragment + \".w\\n\" + //\"sub ft2.z, fc0.x, ft2.z\\n\" +    //invert\n\t\t\t\"mul \" + temp1 + \", \" + dataReg1 + \", \" + temp1 + \".z\\n\" +\n\t\t\t\"frc \" + temp1 + \", \" + temp1 + \"\\n\" +\n\t\t\t\"mul \" + temp2 + \", \" + temp1 + \".yzww, \" + dataReg2 + \"\\n\";\n\n\t\t//codeF += \"mov ft1.w, fc1.w\t\\n\" +\n\t\t//    \"mov ft0.w, fc0.x\t\\n\";\n\n\t\tif (shaderObject.alphaThreshold > 0) {\n\t\t\tdiffuseInputReg = registerCache.getFreeTextureReg();\n\n\t\t\tthis._texturesIndex = diffuseInputReg.index;\n\n\t\t\tvar albedo:ShaderRegisterElement = registerCache.getFreeFragmentVectorTemp();\n\t\t\tcode += ShaderCompilerHelper.getTex2DSampleCode(albedo, sharedRegisters, diffuseInputReg, shaderObject.texture, shaderObject.useSmoothTextures, shaderObject.repeatTextures, shaderObject.useMipmapping);\n\n\t\t\tvar cutOffReg:ShaderRegisterElement = registerCache.getFreeFragmentConstant();\n\n\t\t\tcode += \"sub \" + albedo + \".w, \" + albedo + \".w, \" + cutOffReg + \".x\\n\" +\n\t\t\t\t\"kil \" + albedo + \".w\\n\";\n\t\t}\n\n\t\tcode += \"sub \" + targetReg + \", \" + temp1 + \", \" + temp2 + \"\\n\";\n\n\t\tregisterCache.removeFragmentTempUsage(temp1);\n\t\tregisterCache.removeFragmentTempUsage(temp2);\n\n\t\treturn code;\n\t}\n\n\tpublic _iRender(pass:MaterialPassData, renderable:RenderableBase, stage:Stage, camera:Camera, viewProjection:Matrix3D)\n\t{\n\t\t//this.setRenderState(pass, renderable, stage, camera, viewProjection);\n\t}\n\n\t/**\n\t * @inheritDoc\n\t */\n\tpublic _iActivate(pass:MaterialPassData, stage:Stage, camera:Camera)\n\t{\n\t\tsuper._iActivate(pass, stage, camera);\n\n\t\tvar context:IContextStageGL = <IContextStageGL> stage.context;\n\t\tvar shaderObject:ShaderObjectBase = pass.shaderObject;\n\n\t\tif (shaderObject.alphaThreshold > 0) {\n\t\t\tcontext.setSamplerStateAt(this._texturesIndex, shaderObject.repeatTextures? ContextGLWrapMode.REPEAT:ContextGLWrapMode.CLAMP, shaderObject.useSmoothTextures? ContextGLTextureFilter.LINEAR : ContextGLTextureFilter.NEAREST, shaderObject.useMipmapping? ContextGLMipFilter.MIPLINEAR : ContextGLMipFilter.MIPNONE);\n\t\t\tcontext.activateTexture(this._texturesIndex, shaderObject.texture);\n\n\t\t\tshaderObject.fragmentConstantData[this._fragmentConstantsIndex + 8] = pass.shaderObject.alphaThreshold;\n\t\t}\n\t}\n}\n\nexport = DepthMapPass;","﻿import Matrix3D\t\t\t\t\t\t= require(\"awayjs-core/lib/geom/Matrix3D\");\nimport Matrix3DUtils\t\t\t\t= require(\"awayjs-core/lib/geom/Matrix3DUtils\");\nimport Texture2DBase\t\t\t\t= require(\"awayjs-core/lib/textures/Texture2DBase\");\n\nimport Camera\t\t\t\t\t\t= require(\"awayjs-display/lib/entities/Camera\");\n\nimport Stage\t\t\t\t\t\t= require(\"awayjs-stagegl/lib/base/Stage\");\nimport MaterialPassData\t\t\t\t= require(\"awayjs-stagegl/lib/pool/MaterialPassData\");\nimport RenderableBase\t\t\t\t= require(\"awayjs-stagegl/lib/pool/RenderableBase\");\nimport ContextGLMipFilter\t\t\t= require(\"awayjs-stagegl/lib/base/ContextGLMipFilter\");\nimport ContextGLTextureFilter\t\t= require(\"awayjs-stagegl/lib/base/ContextGLTextureFilter\");\nimport ContextGLWrapMode\t\t\t= require(\"awayjs-stagegl/lib/base/ContextGLWrapMode\");\nimport IContextStageGL\t\t\t\t= require(\"awayjs-stagegl/lib/base/IContextStageGL\");\nimport ShaderObjectBase\t\t\t\t= require(\"awayjs-stagegl/lib/materials/compilation/ShaderObjectBase\");\nimport ShaderRegisterCache\t\t\t= require(\"awayjs-stagegl/lib/materials/compilation/ShaderRegisterCache\");\nimport ShaderRegisterData\t\t\t= require(\"awayjs-stagegl/lib/materials/compilation/ShaderRegisterData\");\nimport ShaderRegisterElement\t\t= require(\"awayjs-stagegl/lib/materials/compilation/ShaderRegisterElement\");\nimport MaterialPassBase\t\t\t\t= require(\"awayjs-stagegl/lib/materials/passes/MaterialPassBase\");\nimport ShaderCompilerHelper\t\t\t= require(\"awayjs-stagegl/lib/materials/utils/ShaderCompilerHelper\");\n\n/**\n * DistanceMapPass is a pass that writes distance values to a depth map as a 32-bit value exploded over the 4 texture channels.\n * This is used to render omnidirectional shadow maps.\n */\nclass DistanceMapPass extends MaterialPassBase\n{\n\tprivate _fragmentConstantsIndex:number;\n\tprivate _texturesIndex:number;\n\n\t/**\n\t * Creates a new DistanceMapPass object.\n\t *\n\t * @param material The material to which this pass belongs.\n\t */\n\tconstructor()\n\t{\n\t\tsuper();\n\t}\n\n\t/**\n\t * Initializes the unchanging constant data for this material.\n\t */\n\tpublic _iInitConstantData(shaderObject:ShaderObjectBase)\n\t{\n\t\tsuper._iInitConstantData(shaderObject);\n\n\t\tvar index:number = this._fragmentConstantsIndex;\n\t\tvar data:Array<number> = shaderObject.fragmentConstantData;\n\t\tdata[index + 4] = 1.0/255.0;\n\t\tdata[index + 5] = 1.0/255.0;\n\t\tdata[index + 6] = 1.0/255.0;\n\t\tdata[index + 7] = 0.0;\n\t}\n\n\tpublic _iIncludeDependencies(shaderObject:ShaderObjectBase)\n\t{\n\t\tshaderObject.projectionDependencies++;\n\t\tshaderObject.viewDirDependencies++;\n\n\t\tif (shaderObject.alphaThreshold > 0)\n\t\t\tshaderObject.uvDependencies++;\n\n\t\tshaderObject.addWorldSpaceDependencies(false);\n\t}\n\n\t/**\n\t * @inheritDoc\n\t */\n\tpublic _iGetFragmentCode(shaderObject:ShaderObjectBase, registerCache:ShaderRegisterCache, sharedRegisters:ShaderRegisterData):string\n\t{\n\t\tvar code:string;\n\t\tvar targetReg:ShaderRegisterElement = sharedRegisters.shadedTarget;\n\t\tvar diffuseInputReg:ShaderRegisterElement = registerCache.getFreeTextureReg();\n\t\tvar dataReg1:ShaderRegisterElement = registerCache.getFreeFragmentConstant();\n\t\tvar dataReg2:ShaderRegisterElement = registerCache.getFreeFragmentConstant()\n\n\t\tthis._fragmentConstantsIndex = dataReg1.index*4;\n\n\t\tvar temp1:ShaderRegisterElement = registerCache.getFreeFragmentVectorTemp();\n\t\tregisterCache.addFragmentTempUsages(temp1, 1);\n\t\tvar temp2:ShaderRegisterElement = registerCache.getFreeFragmentVectorTemp();\n\t\tregisterCache.addFragmentTempUsages(temp2, 1);\n\n\t\t// squared distance to view\n\t\tcode = \"dp3 \" + temp1 + \".z, \" + sharedRegisters.viewDirVarying + \".xyz, \" + sharedRegisters.viewDirVarying + \".xyz\\n\" +\n\t\t\t   \"mul \" + temp1 + \", \" + dataReg1 + \", \" + temp1 + \".z\\n\" +\n\t\t\t   \"frc \" + temp1 + \", \" + temp1 + \"\\n\" +\n\t\t\t   \"mul \" + temp2 + \", \" + temp1 + \".yzww, \" + dataReg2 + \"\\n\";\n\n\t\tif (shaderObject.alphaThreshold > 0) {\n\t\t\tdiffuseInputReg = registerCache.getFreeTextureReg();\n\n\t\t\tthis._texturesIndex = diffuseInputReg.index;\n\n\t\t\tvar albedo:ShaderRegisterElement = registerCache.getFreeFragmentVectorTemp();\n\t\t\tcode += ShaderCompilerHelper.getTex2DSampleCode(albedo, sharedRegisters, diffuseInputReg, shaderObject.texture, shaderObject.useSmoothTextures, shaderObject.repeatTextures, shaderObject.useMipmapping);\n\n\t\t\tvar cutOffReg:ShaderRegisterElement = registerCache.getFreeFragmentConstant();\n\n\t\t\tcode += \"sub \" + albedo + \".w, \" + albedo + \".w, \" + cutOffReg + \".x\\n\" +\n\t\t\t\t\"kil \" + albedo + \".w\\n\";\n\t\t}\n\n\t\tcode += \"sub \" + targetReg + \", \" + temp1 + \", \" + temp2 + \"\\n\";\n\n\t\treturn code;\n\t}\n\n\t/**\n\t * @inheritDoc\n\t */\n\tpublic _iActivate(pass:MaterialPassData, stage:Stage, camera:Camera)\n\t{\n\t\tsuper._iActivate(pass, stage, camera);\n\n\t\tvar context:IContextStageGL = <IContextStageGL> stage.context;\n\t\tvar shaderObject:ShaderObjectBase = pass.shaderObject;\n\n\t\tvar f:number = camera.projection.far;\n\n\t\tf = 1/(2*f*f);\n\t\t// sqrt(f*f+f*f) is largest possible distance for any frustum, so we need to divide by it. Rarely a tight fit, but with 32 bits precision, it's enough.\n\t\tvar index:number = this._fragmentConstantsIndex;\n\t\tvar data:Array<number> = shaderObject.fragmentConstantData;\n\t\tdata[index] = 1.0*f;\n\t\tdata[index + 1] = 255.0*f;\n\t\tdata[index + 2] = 65025.0*f;\n\t\tdata[index + 3] = 16581375.0*f;\n\n\t\tif (shaderObject.alphaThreshold > 0) {\n\t\t\tcontext.setSamplerStateAt(this._texturesIndex, shaderObject.repeatTextures? ContextGLWrapMode.REPEAT:ContextGLWrapMode.CLAMP, shaderObject.useSmoothTextures? ContextGLTextureFilter.LINEAR : ContextGLTextureFilter.NEAREST, shaderObject.useMipmapping? ContextGLMipFilter.MIPLINEAR : ContextGLMipFilter.MIPNONE);\n\t\t\tcontext.activateTexture(this._texturesIndex, shaderObject.texture);\n\n\t\t\tdata[index + 8] = pass.shaderObject.alphaThreshold;\n\t\t}\n\t}\n}\n\nexport = DistanceMapPass;","﻿import ShaderObjectBase\t\t\t\t= require(\"awayjs-stagegl/lib/materials/compilation/ShaderObjectBase\");\nimport ShaderRegisterCache\t\t\t= require(\"awayjs-stagegl/lib/materials/compilation/ShaderRegisterCache\");\nimport ShaderRegisterData\t\t\t= require(\"awayjs-stagegl/lib/materials/compilation/ShaderRegisterData\");\nimport ShaderRegisterElement\t\t= require(\"awayjs-stagegl/lib/materials/compilation/ShaderRegisterElement\");\nimport MaterialPassBase\t\t\t\t= require(\"awayjs-stagegl/lib/materials/passes/MaterialPassBase\");\n\n/**\n * LineBasicPass is a material pass that draws wireframe segments.\n */\nclass LineBasicPass extends MaterialPassBase\n{\n\t/**\n\t * Creates a new SegmentPass object.\n\t *\n\t * @param material The material to which this pass belongs.\n\t */\n\tconstructor()\n\t{\n\t\tsuper();\n\t}\n\n\t/**\n\t * @inheritDoc\n\t */\n\tpublic _iGetFragmentCode(shaderObject:ShaderObjectBase, regCache:ShaderRegisterCache, sharedReg:ShaderRegisterData):string\n\t{\n\t\tvar targetReg:ShaderRegisterElement = sharedReg.shadedTarget;\n\n\t\treturn \"mov \" + targetReg + \", v0\\n\";\n\t}\n}\n\nexport = LineBasicPass;","import Matrix3D\t\t\t\t\t\t= require(\"awayjs-core/lib/geom/Matrix3D\");\nimport Matrix3DUtils\t\t\t\t= require(\"awayjs-core/lib/geom/Matrix3DUtils\");\nimport NamedAssetBase\t\t\t\t= require(\"awayjs-core/lib/library/NamedAssetBase\");\nimport ArgumentError\t\t\t\t= require(\"awayjs-core/lib/errors/ArgumentError\");\nimport Event\t\t\t\t\t\t= require(\"awayjs-core/lib/events/Event\");\n\nimport BlendMode\t\t\t\t\t= require(\"awayjs-display/lib/base/BlendMode\");\nimport Camera\t\t\t\t\t\t= require(\"awayjs-display/lib/entities/Camera\");\nimport LightPickerBase\t\t\t\t= require(\"awayjs-display/lib/materials/lightpickers/LightPickerBase\");\nimport IMaterialPass\t\t\t\t= require(\"awayjs-display/lib/materials/passes/IMaterialPass\");\n\nimport Stage\t\t\t\t\t\t= require(\"awayjs-stagegl/lib/base/Stage\");\nimport MaterialPassData\t\t\t\t= require(\"awayjs-stagegl/lib/pool/MaterialPassData\");\nimport RenderableBase\t\t\t\t= require(\"awayjs-stagegl/lib/pool/RenderableBase\");\nimport ContextGLBlendFactor\t\t\t= require(\"awayjs-stagegl/lib/base/ContextGLBlendFactor\");\nimport ContextGLCompareMode\t\t\t= require(\"awayjs-stagegl/lib/base/ContextGLCompareMode\");\nimport IContextStageGL\t\t\t\t= require(\"awayjs-stagegl/lib/base/IContextStageGL\");\nimport ShaderObjectBase\t\t\t\t= require(\"awayjs-stagegl/lib/materials/compilation/ShaderObjectBase\");\nimport ShaderRegisterCache\t\t\t= require(\"awayjs-stagegl/lib/materials/compilation/ShaderRegisterCache\");\nimport ShaderRegisterData\t\t\t= require(\"awayjs-stagegl/lib/materials/compilation/ShaderRegisterData\");\nimport IMaterialPassStageGL\t\t\t= require(\"awayjs-stagegl/lib/materials/passes/IMaterialPassStageGL\");\nimport MaterialPassMode\t\t\t\t= require(\"awayjs-stagegl/lib/materials/passes/MaterialPassMode\");\n\n/**\n * MaterialPassBase provides an abstract base class for material shader passes. A material pass constitutes at least\n * a render call per required renderable.\n */\nclass MaterialPassBase extends NamedAssetBase implements IMaterialPass, IMaterialPassStageGL\n{\n\tprivate _materialPassData:Array<MaterialPassData> = new Array<MaterialPassData>();\n\tprivate _maxLights:number = 3;\n\tprivate _preserveAlpha:boolean = true;\n\tprivate _includeCasters:boolean = true;\n\tprivate _forceSeparateMVP:boolean = false;\n\n\tprivate _directionalLightsOffset:number = 0;\n\tprivate _pointLightsOffset:number = 0;\n\tprivate _lightProbesOffset:number = 0;\n\n\tpublic _pNumPointLights:number = 0;\n\tpublic _pNumDirectionalLights:number = 0;\n\tpublic _pNumLightProbes:number = 0;\n\tpublic _pNumLights:number = 0;\n\n\tprivate _passMode:number;\n\n\tprivate _depthCompareMode:string = ContextGLCompareMode.LESS_EQUAL;\n\n\tprivate _blendFactorSource:string = ContextGLBlendFactor.ONE;\n\tprivate _blendFactorDest:string = ContextGLBlendFactor.ZERO;\n\n\tpublic _pEnableBlending:boolean = false;\n\n\tpublic  _pLightPicker:LightPickerBase;\n\n\tprivate _writeDepth:boolean = true;\n\tprivate _onLightsChangeDelegate:(event:Event) => void;\n\n\t/**\n\t * Indicates whether the output alpha value should remain unchanged compared to the material's original alpha.\n\t */\n\tpublic get preserveAlpha():boolean\n\t{\n\t\treturn this._preserveAlpha;\n\t}\n\n\tpublic set preserveAlpha(value:boolean)\n\t{\n\t\tif (this._preserveAlpha == value)\n\t\t\treturn;\n\n\t\tthis._preserveAlpha = value;\n\n\t\tthis._pInvalidatePass();\n\t}\n\n\t/**\n\t * Indicates whether or not shadow casting lights need to be included.\n\t */\n\tpublic get includeCasters():boolean\n\t{\n\t\treturn this._includeCasters;\n\t}\n\n\tpublic set includeCasters(value:boolean)\n\t{\n\t\tif (this._includeCasters == value)\n\t\t\treturn;\n\n\t\tthis._includeCasters = value;\n\n\t\tthis._pInvalidatePass();\n\t}\n\n\t/**\n\t * Indicates whether the screen projection should be calculated by forcing a separate scene matrix and\n\t * view-projection matrix. This is used to prevent rounding errors when using multiple passes with different\n\t * projection code.\n\t */\n\tpublic get forceSeparateMVP():boolean\n\t{\n\t\treturn this._forceSeparateMVP;\n\t}\n\n\tpublic set forceSeparateMVP(value:boolean)\n\t{\n\t\tif (this._forceSeparateMVP == value)\n\t\t\treturn;\n\n\t\tthis._forceSeparateMVP = value;\n\n\t\tthis._pInvalidatePass();\n\t}\n\t/**\n\t * Indicates the offset in the light picker's directional light vector for which to start including lights.\n\t * This needs to be set before the light picker is assigned.\n\t */\n\tpublic get directionalLightsOffset():number\n\t{\n\t\treturn this._directionalLightsOffset;\n\t}\n\n\tpublic set directionalLightsOffset(value:number)\n\t{\n\t\tthis._directionalLightsOffset = value;\n\t}\n\n\t/**\n\t * Indicates the offset in the light picker's point light vector for which to start including lights.\n\t * This needs to be set before the light picker is assigned.\n\t */\n\tpublic get pointLightsOffset():number\n\t{\n\t\treturn this._pointLightsOffset;\n\t}\n\n\tpublic set pointLightsOffset(value:number)\n\t{\n\t\tthis._pointLightsOffset = value;\n\t}\n\n\t/**\n\t * Indicates the offset in the light picker's light probes vector for which to start including lights.\n\t * This needs to be set before the light picker is assigned.\n\t */\n\tpublic get lightProbesOffset():number\n\t{\n\t\treturn this._lightProbesOffset;\n\t}\n\n\tpublic set lightProbesOffset(value:number)\n\t{\n\t\tthis._lightProbesOffset = value;\n\t}\n\n\t/**\n\t *\n\t */\n\tpublic get passMode():number\n\t{\n\t\treturn this._passMode;\n\t}\n\n\tpublic set passMode(value:number)\n\t{\n\t\tthis._passMode = value;\n\n\t\tthis._pInvalidatePass();\n\t}\n\n\t/**\n\t * Creates a new MaterialPassBase object.\n\t */\n\tconstructor(passMode:number = 0x03)\n\t{\n\t\tsuper();\n\n\t\tthis._passMode = passMode;\n\n\t\tthis._onLightsChangeDelegate = (event:Event) => this.onLightsChange(event);\n\t}\n\n\t/**\n\t * Factory method to create a concrete shader object for this pass.\n\t *\n\t * @param profile The compatibility profile used by the renderer.\n\t */\n\tpublic createShaderObject(profile:string):ShaderObjectBase\n\t{\n\t\treturn new ShaderObjectBase(profile);\n\t}\n\n\t/**\n\t * Indicate whether this pass should write to the depth buffer or not. Ignored when blending is enabled.\n\t */\n\tpublic get writeDepth():boolean\n\t{\n\t\treturn this._writeDepth;\n\t}\n\n\tpublic set writeDepth(value:boolean)\n\t{\n\t\tthis._writeDepth = value;\n\t}\n\n\t/**\n\t * The depth compare mode used to render the renderables using this material.\n\t *\n\t * @see away.stagegl.ContextGLCompareMode\n\t */\n\tpublic get depthCompareMode():string\n\t{\n\t\treturn this._depthCompareMode;\n\t}\n\n\tpublic set depthCompareMode(value:string)\n\t{\n\t\tthis._depthCompareMode = value;\n\t}\n\n\t/**\n\t * Cleans up any resources used by the current object.\n\t * @param deep Indicates whether other resources should be cleaned up, that could potentially be shared across different instances.\n\t */\n\tpublic dispose()\n\t{\n\t\tif (this._pLightPicker)\n\t\t\tthis._pLightPicker.removeEventListener(Event.CHANGE, this._onLightsChangeDelegate);\n\n\t\twhile (this._materialPassData.length)\n\t\t\tthis._materialPassData[0].dispose();\n\n\t\tthis._materialPassData = null;\n\t}\n\n\t/**\n\t * Renders an object to the current render target.\n\t *\n\t * @private\n\t */\n\tpublic _iRender(pass:MaterialPassData, renderable:RenderableBase, stage:Stage, camera:Camera, viewProjection:Matrix3D)\n\t{\n\t\tthis.setRenderState(pass, renderable, stage, camera, viewProjection);\n\t}\n\n\t/**\n\t *\n\t *\n\t * @param renderable\n\t * @param stage\n\t * @param camera\n\t */\n\tpublic setRenderState(pass:MaterialPassData, renderable:RenderableBase, stage:Stage, camera:Camera, viewProjection:Matrix3D)\n\t{\n\t\tpass.shaderObject.setRenderState(renderable, stage, camera, viewProjection);\n\t}\n\n\t/**\n\t * The blend mode to use when drawing this renderable. The following blend modes are supported:\n\t * <ul>\n\t * <li>BlendMode.NORMAL: No blending, unless the material inherently needs it</li>\n\t * <li>BlendMode.LAYER: Force blending. This will draw the object the same as NORMAL, but without writing depth writes.</li>\n\t * <li>BlendMode.MULTIPLY</li>\n\t * <li>BlendMode.ADD</li>\n\t * <li>BlendMode.ALPHA</li>\n\t * </ul>\n\t */\n\tpublic setBlendMode(value:string)\n\t{\n\t\tswitch (value) {\n\n\t\t\tcase BlendMode.NORMAL:\n\n\t\t\t\tthis._blendFactorSource = ContextGLBlendFactor.ONE;\n\t\t\t\tthis._blendFactorDest = ContextGLBlendFactor.ZERO;\n\t\t\t\tthis._pEnableBlending = false;\n\n\t\t\t\tbreak;\n\n\t\t\tcase BlendMode.LAYER:\n\n\t\t\t\tthis._blendFactorSource = ContextGLBlendFactor.SOURCE_ALPHA;\n\t\t\t\tthis._blendFactorDest = ContextGLBlendFactor.ONE_MINUS_SOURCE_ALPHA;\n\t\t\t\tthis._pEnableBlending = true;\n\n\t\t\t\tbreak;\n\n\t\t\tcase BlendMode.MULTIPLY:\n\n\t\t\t\tthis._blendFactorSource = ContextGLBlendFactor.ZERO;\n\t\t\t\tthis._blendFactorDest = ContextGLBlendFactor.SOURCE_COLOR;\n\t\t\t\tthis._pEnableBlending = true;\n\n\t\t\t\tbreak;\n\n\t\t\tcase BlendMode.ADD:\n\n\t\t\t\tthis._blendFactorSource = ContextGLBlendFactor.SOURCE_ALPHA;\n\t\t\t\tthis._blendFactorDest = ContextGLBlendFactor.ONE;\n\t\t\t\tthis._pEnableBlending = true;\n\n\t\t\t\tbreak;\n\n\t\t\tcase BlendMode.ALPHA:\n\n\t\t\t\tthis._blendFactorSource = ContextGLBlendFactor.ZERO;\n\t\t\t\tthis._blendFactorDest = ContextGLBlendFactor.SOURCE_ALPHA;\n\t\t\t\tthis._pEnableBlending = true;\n\n\t\t\t\tbreak;\n\n\t\t\tdefault:\n\n\t\t\t\tthrow new ArgumentError(\"Unsupported blend mode!\");\n\n\t\t}\n\t}\n\n\t/**\n\t * Sets the render state for the pass that is independent of the rendered object. This needs to be called before\n\t * calling renderPass. Before activating a pass, the previously used pass needs to be deactivated.\n\t * @param stage The Stage object which is currently used for rendering.\n\t * @param camera The camera from which the scene is viewed.\n\t * @private\n\t */\n\tpublic _iActivate(pass:MaterialPassData, stage:Stage, camera:Camera)\n\t{\n\t\tvar context:IContextStageGL = <IContextStageGL> stage.context;\n\n\t\tcontext.setDepthTest(( this._writeDepth && !this._pEnableBlending ), this._depthCompareMode);\n\n\t\tif (this._pEnableBlending)\n\t\t\tcontext.setBlendFactors(this._blendFactorSource, this._blendFactorDest);\n\n\t\tcontext.activateMaterialPass(pass, stage, camera);\n\t}\n\n\t/**\n\t * Clears the render state for the pass. This needs to be called before activating another pass.\n\t * @param stage The Stage used for rendering\n\t *\n\t * @private\n\t */\n\tpublic _iDeactivate(pass:MaterialPassData, stage:Stage)\n\t{\n\t\t(<IContextStageGL> stage.context).deactivateMaterialPass(pass, stage);\n\n\t\t(<IContextStageGL> stage.context).setDepthTest(true, ContextGLCompareMode.LESS_EQUAL); // TODO : imeplement\n\t}\n\n\t/**\n\t * Marks the shader program as invalid, so it will be recompiled before the next render.\n\t *\n\t * @param updateMaterial Indicates whether the invalidation should be performed on the entire material. Should always pass \"true\" unless it's called from the material itself.\n\t */\n\tpublic _pInvalidatePass()\n\t{\n\t\tvar len:number = this._materialPassData.length;\n\t\tfor (var i:number = 0; i < len; i++)\n\t\t\tthis._materialPassData[i].invalidate();\n\n\t\tthis.dispatchEvent(new Event(Event.CHANGE));\n\t}\n\n\t/**\n\t * The light picker used by the material to provide lights to the material if it supports lighting.\n\t *\n\t * @see away.materials.LightPickerBase\n\t * @see away.materials.StaticLightPicker\n\t */\n\tpublic get lightPicker():LightPickerBase\n\t{\n\t\treturn this._pLightPicker;\n\t}\n\n\tpublic set lightPicker(value:LightPickerBase)\n\t{\n\t\tif (this._pLightPicker)\n\t\t\tthis._pLightPicker.removeEventListener(Event.CHANGE, this._onLightsChangeDelegate);\n\n\t\tthis._pLightPicker = value;\n\n\t\tif (this._pLightPicker)\n\t\t\tthis._pLightPicker.addEventListener(Event.CHANGE, this._onLightsChangeDelegate);\n\n\t\tthis.pUpdateLights();\n\t}\n\n\t/**\n\t * Called when the light picker's configuration changes.\n\t */\n\tprivate onLightsChange(event:Event)\n\t{\n\t\tthis.pUpdateLights();\n\t}\n\n\t/**\n\t * Implemented by subclasses if the pass uses lights to update the shader.\n\t */\n\tpublic pUpdateLights()\n\t{\n\t\tvar numDirectionalLightsOld:number = this._pNumDirectionalLights;\n\t\tvar numPointLightsOld:number = this._pNumPointLights;\n\t\tvar numLightProbesOld:number = this._pNumLightProbes;\n\n\t\tif (this._pLightPicker && (this._passMode & MaterialPassMode.LIGHTING)) {\n\t\t\tthis._pNumDirectionalLights = this.calculateNumDirectionalLights(this._pLightPicker.numDirectionalLights);\n\t\t\tthis._pNumPointLights = this.calculateNumPointLights(this._pLightPicker.numPointLights);\n\t\t\tthis._pNumLightProbes = this.calculateNumProbes(this._pLightPicker.numLightProbes);\n\n\t\t\tif (this._includeCasters) {\n\t\t\t\tthis._pNumDirectionalLights += this._pLightPicker.numCastingDirectionalLights;\n\t\t\t\tthis._pNumPointLights += this._pLightPicker.numCastingPointLights;\n\t\t\t}\n\n\t\t} else {\n\t\t\tthis._pNumDirectionalLights = 0;\n\t\t\tthis._pNumPointLights = 0;\n\t\t\tthis._pNumLightProbes = 0;\n\t\t}\n\n\t\tthis._pNumLights = this._pNumDirectionalLights + this._pNumPointLights;\n\n\t\tif (numDirectionalLightsOld != this._pNumDirectionalLights || numPointLightsOld != this._pNumPointLights || numLightProbesOld != this._pNumLightProbes)\n\t\t\tthis._pInvalidatePass();\n\t}\n\n\tpublic _iIncludeDependencies(shaderObject:ShaderObjectBase)\n\t{\n\t\tif (this._forceSeparateMVP)\n\t\t\tshaderObject.globalPosDependencies++;\n\n\t\tshaderObject.outputsNormals = this._pOutputsNormals(shaderObject);\n\t\tshaderObject.outputsTangentNormals = shaderObject.outputsNormals && this._pOutputsTangentNormals(shaderObject);\n\t\tshaderObject.usesTangentSpace = shaderObject.outputsTangentNormals && this._pUsesTangentSpace(shaderObject);\n\n\t\tif (!shaderObject.usesTangentSpace)\n\t\t\tshaderObject.addWorldSpaceDependencies(Boolean(this._passMode & MaterialPassMode.EFFECTS));\n\t}\n\n\n\tpublic _iInitConstantData(shaderObject:ShaderObjectBase)\n\t{\n\n\t}\n\n\tpublic _iGetPreLightingVertexCode(shaderObject:ShaderObjectBase, registerCache:ShaderRegisterCache, sharedRegisters:ShaderRegisterData):string\n\t{\n\t\treturn \"\";\n\t}\n\n\tpublic _iGetPreLightingFragmentCode(shaderObject:ShaderObjectBase, registerCache:ShaderRegisterCache, sharedRegisters:ShaderRegisterData):string\n\t{\n\t\treturn \"\";\n\t}\n\n\tpublic _iGetVertexCode(shaderObject:ShaderObjectBase, registerCache:ShaderRegisterCache, sharedRegisters:ShaderRegisterData):string\n\t{\n\t\treturn \"\";\n\t}\n\n\tpublic _iGetFragmentCode(shaderObject:ShaderObjectBase, registerCache:ShaderRegisterCache, sharedRegisters:ShaderRegisterData):string\n\t{\n\t\treturn \"\";\n\t}\n\n\tpublic _iGetNormalVertexCode(shaderObject:ShaderObjectBase, registerCache:ShaderRegisterCache, sharedRegisters:ShaderRegisterData):string\n\t{\n\t\treturn \"\";\n\t}\n\n\tpublic _iGetNormalFragmentCode(shaderObject:ShaderObjectBase, registerCache:ShaderRegisterCache, sharedRegisters:ShaderRegisterData):string\n\t{\n\t\treturn \"\";\n\t}\n\n\t/**\n\t * The amount of point lights that need to be supported.\n\t */\n\tpublic get iNumPointLights():number\n\t{\n\t\treturn this._pNumPointLights;\n\t}\n\n\t/**\n\t * The amount of directional lights that need to be supported.\n\t */\n\tpublic get iNumDirectionalLights():number\n\t{\n\t\treturn this._pNumDirectionalLights;\n\t}\n\n\t/**\n\t * The amount of light probes that need to be supported.\n\t */\n\tpublic get iNumLightProbes():number\n\t{\n\t\treturn this._pNumLightProbes;\n\t}\n\n\t/**\n\t * Indicates whether or not normals are calculated at all.\n\t */\n\tpublic _pOutputsNormals(shaderObject:ShaderObjectBase):boolean\n\t{\n\t\treturn false;\n\t}\n\n\t/**\n\t * Indicates whether or not normals are calculated in tangent space.\n\t */\n\tpublic _pOutputsTangentNormals(shaderObject:ShaderObjectBase):boolean\n\t{\n\t\treturn false;\n\t}\n\n\t/**\n\t * Indicates whether or not normals are allowed in tangent space. This is only the case if no object-space\n\t * dependencies exist.\n\t */\n\tpublic _pUsesTangentSpace(shaderObject:ShaderObjectBase):boolean\n\t{\n\t\treturn false;\n\t}\n\n\t/**\n\t * Calculates the amount of directional lights this material will support.\n\t * @param numDirectionalLights The maximum amount of directional lights to support.\n\t * @return The amount of directional lights this material will support, bounded by the amount necessary.\n\t */\n\tprivate calculateNumDirectionalLights(numDirectionalLights:number):number\n\t{\n\t\treturn Math.min(numDirectionalLights - this._directionalLightsOffset, this._maxLights);\n\t}\n\n\t/**\n\t * Calculates the amount of point lights this material will support.\n\t * @param numDirectionalLights The maximum amount of point lights to support.\n\t * @return The amount of point lights this material will support, bounded by the amount necessary.\n\t */\n\tprivate calculateNumPointLights(numPointLights:number):number\n\t{\n\t\tvar numFree:number = this._maxLights - this._pNumDirectionalLights;\n\t\treturn Math.min(numPointLights - this._pointLightsOffset, numFree);\n\t}\n\n\t/**\n\t * Calculates the amount of light probes this material will support.\n\t * @param numDirectionalLights The maximum amount of light probes to support.\n\t * @return The amount of light probes this material will support, bounded by the amount necessary.\n\t */\n\tprivate calculateNumProbes(numLightProbes:number):number\n\t{\n\t\tvar numChannels:number = 0;\n\t\t//\t\t\tif ((this._pSpecularLightSources & LightSources.PROBES) != 0)\n\t\t//\t\t\t\t++numChannels;\n\t\t//\n\t\t//\t\t\tif ((this._pDiffuseLightSources & LightSources.PROBES) != 0)\n\t\t//\t\t\t\t++numChannels;\n\n\t\t// 4 channels available\n\t\treturn Math.min(numLightProbes - this._lightProbesOffset, (4/numChannels) | 0);\n\t}\n\n\tpublic _iAddMaterialPassData(materialPassData:MaterialPassData):MaterialPassData\n\t{\n\t\tthis._materialPassData.push(materialPassData);\n\n\t\treturn materialPassData;\n\t}\n\n\tpublic _iRemoveMaterialPassData(materialPassData:MaterialPassData):MaterialPassData\n\t{\n\t\tthis._materialPassData.splice(this._materialPassData.indexOf(materialPassData), 1);\n\n\t\treturn materialPassData;\n\t}\n}\n\nexport = MaterialPassBase;","class MaterialPassMode\n{\n\tpublic static EFFECTS:number = 0x01\n\t/**\n\t *\n\t */\n\tpublic static LIGHTING:number = 0x02;\n\t/**\n\t *\n\t */\n\tpublic static SUPER_SHADER:number = 0x03;\n}\n\nexport = MaterialPassMode;","import ShaderLightingObject\t\t\t= require(\"awayjs-stagegl/lib/materials/compilation/ShaderLightingObject\");\nimport MaterialPassBase\t\t\t\t= require(\"awayjs-stagegl/lib/materials/passes/MaterialPassBase\");\n\n/**\n * SkyboxPass provides a material pass exclusively used to render sky boxes from a cube texture.\n */\nclass SkyboxPass extends MaterialPassBase\n{\n\t/**\n\t * Creates a new SkyboxPass object.\n\t *\n\t * @param material The material to which this pass belongs.\n\t */\n\tconstructor()\n\t{\n\t\tsuper();\n\t}\n\n\n\tpublic _iIncludeDependencies(shaderObject:ShaderLightingObject)\n\t{\n\t\tshaderObject.useMipmapping = false;\n\t}\n}\n\nexport = SkyboxPass;","﻿import Camera\t\t\t\t\t\t= require(\"awayjs-display/lib/entities/Camera\");\n\nimport Stage\t\t\t\t\t\t= require(\"awayjs-stagegl/lib/base/Stage\");\nimport MaterialPassData\t\t\t\t= require(\"awayjs-stagegl/lib/pool/MaterialPassData\");\nimport ContextGLMipFilter\t\t\t= require(\"awayjs-stagegl/lib/base/ContextGLMipFilter\");\nimport ContextGLTextureFilter\t\t= require(\"awayjs-stagegl/lib/base/ContextGLTextureFilter\");\nimport ContextGLWrapMode\t\t\t= require(\"awayjs-stagegl/lib/base/ContextGLWrapMode\");\nimport IContextStageGL\t\t\t\t= require(\"awayjs-stagegl/lib/base/IContextStageGL\");\nimport ShadingMethodEvent\t\t\t= require(\"awayjs-stagegl/lib/events/ShadingMethodEvent\");\nimport ShaderObjectBase\t\t\t\t= require(\"awayjs-stagegl/lib/materials/compilation/ShaderObjectBase\");\nimport ShaderRegisterCache\t\t\t= require(\"awayjs-stagegl/lib/materials/compilation/ShaderRegisterCache\");\nimport ShaderRegisterData\t\t\t= require(\"awayjs-stagegl/lib/materials/compilation/ShaderRegisterData\");\nimport ShaderRegisterElement\t\t= require(\"awayjs-stagegl/lib/materials/compilation/ShaderRegisterElement\");\nimport MaterialPassBase\t\t\t\t= require(\"awayjs-stagegl/lib/materials/passes/MaterialPassBase\");\nimport ShaderCompilerHelper\t\t\t= require(\"awayjs-stagegl/lib/materials/utils/ShaderCompilerHelper\");\n\n/**\n * CompiledPass forms an abstract base class for the default compiled pass materials provided by Away3D,\n * using material methods to define their appearance.\n */\nclass TriangleBasicPass extends MaterialPassBase\n{\n\tprivate _diffuseColor:number = 0xffffff;\n\tprivate _diffuseR:number = 1;\n\tprivate _diffuseG:number = 1;\n\tprivate _diffuseB:number = 1;\n\tprivate _diffuseA:number = 1;\n\n\tprivate _fragmentConstantsIndex:number;\n\tprivate _texturesIndex:number;\n\n\t/**\n\t * The alpha component of the diffuse reflection.\n\t */\n\tpublic get diffuseAlpha():number\n\t{\n\t\treturn this._diffuseA;\n\t}\n\n\tpublic set diffuseAlpha(value:number)\n\t{\n\t\tthis._diffuseA = value;\n\t}\n\n\t/**\n\t * The color of the diffuse reflection when not using a texture.\n\t */\n\tpublic get diffuseColor():number\n\t{\n\t\treturn this._diffuseColor;\n\t}\n\n\tpublic set diffuseColor(diffuseColor:number)\n\t{\n\t\tthis._diffuseColor = diffuseColor;\n\n\t\tthis._diffuseR = ((this._diffuseColor >> 16) & 0xff)/0xff;\n\t\tthis._diffuseG = ((this._diffuseColor >> 8) & 0xff)/0xff;\n\t\tthis._diffuseB = (this._diffuseColor & 0xff)/0xff;\n\t}\n\n\t/**\n\t * Creates a new CompiledPass object.\n\t *\n\t * @param material The material to which this pass belongs.\n\t */\n\tconstructor()\n\t{\n\t\tsuper();\n\t}\n\n\t/**\n\t * @inheritDoc\n\t */\n\tpublic _iGetFragmentCode(shaderObject:ShaderObjectBase, regCache:ShaderRegisterCache, sharedReg:ShaderRegisterData):string\n\t{\n\t\tvar code:string = \"\";\n\t\tvar targetReg:ShaderRegisterElement = sharedReg.shadedTarget;\n\t\tvar diffuseInputReg:ShaderRegisterElement;\n\n\t\tif (shaderObject.texture != null) {\n\t\t\tdiffuseInputReg = regCache.getFreeTextureReg();\n\n\t\t\tthis._texturesIndex = diffuseInputReg.index;\n\n\t\t\tcode += ShaderCompilerHelper.getTex2DSampleCode(targetReg, sharedReg, diffuseInputReg, shaderObject.texture, shaderObject.useSmoothTextures, shaderObject.repeatTextures, shaderObject.useMipmapping);\n\n\t\t\tif (shaderObject.alphaThreshold > 0) {\n\t\t\t\tvar cutOffReg:ShaderRegisterElement = regCache.getFreeFragmentConstant();\n\t\t\t\tthis._fragmentConstantsIndex = cutOffReg.index*4;\n\n\t\t\t\tcode += \"sub \" + targetReg + \".w, \" + targetReg + \".w, \" + cutOffReg + \".x\\n\" +\n\t\t\t\t\t\"kil \" + targetReg + \".w\\n\" +\n\t\t\t\t\t\"add \" + targetReg + \".w, \" + targetReg + \".w, \" + cutOffReg + \".x\\n\";\n\t\t\t}\n\n\t\t} else {\n\t\t\tdiffuseInputReg = regCache.getFreeFragmentConstant();\n\n\t\t\tthis._fragmentConstantsIndex = diffuseInputReg.index*4;\n\n\t\t\tcode += \"mov \" + targetReg + \", \" + diffuseInputReg + \"\\n\";\n\t\t}\n\n\t\treturn code;\n\t}\n\n\tpublic _iIncludeDependencies(dependencyCounter:ShaderObjectBase)\n\t{\n\t\tif (dependencyCounter.texture != null)\n\t\t\tdependencyCounter.uvDependencies++;\n\t}\n\n\t/**\n\t * @inheritDoc\n\t */\n\tpublic _iActivate(pass:MaterialPassData, stage:Stage, camera:Camera)\n\t{\n\t\tsuper._iActivate(pass, stage, camera);\n\n\t\tvar shaderObject:ShaderObjectBase = pass.shaderObject;\n\n\t\tif (shaderObject.texture != null) {\n\t\t\t(<IContextStageGL> stage.context).setSamplerStateAt(this._texturesIndex, shaderObject.repeatTextures? ContextGLWrapMode.REPEAT:ContextGLWrapMode.CLAMP, shaderObject.useSmoothTextures? ContextGLTextureFilter.LINEAR : ContextGLTextureFilter.NEAREST, shaderObject.useMipmapping? ContextGLMipFilter.MIPLINEAR : ContextGLMipFilter.MIPNONE);\n\t\t\t(<IContextStageGL> stage.context).activateTexture(this._texturesIndex, shaderObject.texture);\n\n\t\t\tif (shaderObject.alphaThreshold > 0)\n\t\t\t\tshaderObject.fragmentConstantData[this._fragmentConstantsIndex] = shaderObject.alphaThreshold;\n\t\t} else {\n\t\t\tvar index:number = this._fragmentConstantsIndex;\n\t\t\tvar data:Array<number> = shaderObject.fragmentConstantData;\n\t\t\tdata[index] = this._diffuseR;\n\t\t\tdata[index + 1] = this._diffuseG;\n\t\t\tdata[index + 2] = this._diffuseB;\n\t\t\tdata[index + 3] = this._diffuseA;\n\t\t}\n\t}\n}\n\nexport = TriangleBasicPass;","import ColorTransform\t\t\t\t= require(\"awayjs-core/lib/geom/ColorTransform\");\nimport Matrix\t\t\t\t\t\t= require(\"awayjs-core/lib/geom/Matrix\");\nimport Matrix3D\t\t\t\t\t\t= require(\"awayjs-core/lib/geom/Matrix3D\");\nimport Matrix3DUtils\t\t\t\t= require(\"awayjs-core/lib/geom/Matrix3DUtils\");\nimport Vector3D\t\t\t\t\t\t= require(\"awayjs-core/lib/geom/Vector3D\");\nimport AbstractMethodError\t\t\t= require(\"awayjs-core/lib/errors/AbstractMethodError\");\nimport Texture2DBase\t\t\t\t= require(\"awayjs-core/lib/textures/Texture2DBase\");\n\nimport TriangleSubGeometry\t\t\t= require(\"awayjs-display/lib/base/TriangleSubGeometry\");\nimport Camera\t\t\t\t\t\t= require(\"awayjs-display/lib/entities/Camera\");\n\nimport Stage\t\t\t\t\t\t= require(\"awayjs-stagegl/lib/base/Stage\");\nimport MaterialPassData\t\t\t\t= require(\"awayjs-stagegl/lib/pool/MaterialPassData\");\nimport RenderableBase\t\t\t\t= require(\"awayjs-stagegl/lib/pool/RenderableBase\");\nimport ShadingMethodEvent\t\t\t= require(\"awayjs-stagegl/lib/events/ShadingMethodEvent\");\nimport MethodVO\t\t\t\t\t\t= require(\"awayjs-stagegl/lib/materials/compilation/MethodVO\");\nimport ShaderLightingObject\t\t\t= require(\"awayjs-stagegl/lib/materials/compilation/ShaderLightingObject\");\nimport ShaderObjectBase\t\t\t\t= require(\"awayjs-stagegl/lib/materials/compilation/ShaderObjectBase\");\nimport ShaderRegisterCache\t\t\t= require(\"awayjs-stagegl/lib/materials/compilation/ShaderRegisterCache\");\nimport ShaderRegisterData\t\t\t= require(\"awayjs-stagegl/lib/materials/compilation/ShaderRegisterData\");\nimport ShaderRegisterElement\t\t= require(\"awayjs-stagegl/lib/materials/compilation/ShaderRegisterElement\");\nimport AmbientBasicMethod\t\t\t= require(\"awayjs-stagegl/lib/materials/methods/AmbientBasicMethod\");\nimport DiffuseBasicMethod\t\t\t= require(\"awayjs-stagegl/lib/materials/methods/DiffuseBasicMethod\");\nimport EffectColorTransformMethod\t= require(\"awayjs-stagegl/lib/materials/methods/EffectColorTransformMethod\");\nimport EffectMethodBase\t\t\t\t= require(\"awayjs-stagegl/lib/materials/methods/EffectMethodBase\");\nimport LightingMethodBase\t\t\t= require(\"awayjs-stagegl/lib/materials/methods/LightingMethodBase\");\nimport NormalBasicMethod\t\t\t= require(\"awayjs-stagegl/lib/materials/methods/NormalBasicMethod\");\nimport ShadowMapMethodBase\t\t\t= require(\"awayjs-stagegl/lib/materials/methods/ShadowMapMethodBase\");\nimport SpecularBasicMethod\t\t\t= require(\"awayjs-stagegl/lib/materials/methods/SpecularBasicMethod\");\nimport ILightingPassStageGL\t\t\t= require(\"awayjs-stagegl/lib/materials/passes/ILightingPassStageGL\");\nimport MaterialPassBase\t\t\t\t= require(\"awayjs-stagegl/lib/materials/passes/MaterialPassBase\");\nimport MaterialPassMode\t\t\t\t= require(\"awayjs-stagegl/lib/materials/passes/MaterialPassMode\");\n\n/**\n * CompiledPass forms an abstract base class for the default compiled pass materials provided by Away3D,\n * using material methods to define their appearance.\n */\nclass TriangleMethodPass extends MaterialPassBase implements ILightingPassStageGL\n{\n\tpublic _iColorTransformMethodVO:MethodVO;\n\tpublic _iNormalMethodVO:MethodVO;\n\tpublic _iAmbientMethodVO:MethodVO;\n\tpublic _iShadowMethodVO:MethodVO;\n\tpublic _iDiffuseMethodVO:MethodVO;\n\tpublic _iSpecularMethodVO:MethodVO;\n\tpublic _iMethodVOs:Array<MethodVO> = new Array<MethodVO>();\n\n\tpublic _numEffectDependencies:number = 0;\n\n\tprivate _onShaderInvalidatedDelegate:(event:ShadingMethodEvent) => void;\n\n\t/**\n\t * Creates a new CompiledPass object.\n\t *\n\t * @param material The material to which this pass belongs.\n\t */\n\tconstructor(passMode:number = 0x03)\n\t{\n\t\tsuper(passMode);\n\n\t\tthis._onShaderInvalidatedDelegate = (event:ShadingMethodEvent) => this.onShaderInvalidated(event);\n\t}\n\n\t/**\n\t * Factory method to create a concrete shader object for this pass.\n\t *\n\t * @param profile The compatibility profile used by the renderer.\n\t */\n\tpublic createShaderObject(profile:string):ShaderObjectBase\n\t{\n\t\tif (this._pLightPicker && (this.passMode & MaterialPassMode.LIGHTING))\n\t\t\treturn new ShaderLightingObject(profile);\n\n\t\treturn new ShaderObjectBase(profile);\n\t}\n\n\t/**\n\t * Initializes the unchanging constant data for this material.\n\t */\n\tpublic _iInitConstantData(shaderObject:ShaderObjectBase)\n\t{\n\t\tsuper._iInitConstantData(shaderObject);\n\n\t\t//Updates method constants if they have changed.\n\t\tvar len:number = this._iMethodVOs.length;\n\t\tfor (var i:number = 0; i < len; ++i)\n\t\t\tthis._iMethodVOs[i].method.iInitConstants(shaderObject, this._iMethodVOs[i]);\n\t}\n\n\t/**\n\t * The ColorTransform object to transform the colour of the material with. Defaults to null.\n\t */\n\tpublic get colorTransform():ColorTransform\n\t{\n\t\treturn this.colorTransformMethod? this.colorTransformMethod.colorTransform : null;\n\t}\n\n\tpublic set colorTransform(value:ColorTransform)\n\t{\n\t\tif (value) {\n\t\t\tif (this.colorTransformMethod == null)\n\t\t\t\tthis.colorTransformMethod = new EffectColorTransformMethod();\n\n\t\t\tthis.colorTransformMethod.colorTransform = value;\n\n\t\t} else if (!value) {\n\t\t\tif (this.colorTransformMethod)\n\t\t\t\tthis.colorTransformMethod = null;\n\t\t}\n\t}\n\n\t/**\n\t * The EffectColorTransformMethod object to transform the colour of the material with. Defaults to null.\n\t */\n\tpublic get colorTransformMethod():EffectColorTransformMethod\n\t{\n\t\treturn this._iColorTransformMethodVO? <EffectColorTransformMethod> this._iColorTransformMethodVO.method : null;\n\t}\n\n\tpublic set colorTransformMethod(value:EffectColorTransformMethod)\n\t{\n\t\tif (this._iColorTransformMethodVO && this._iColorTransformMethodVO.method == value)\n\t\t\treturn;\n\n\t\tif (this._iColorTransformMethodVO) {\n\t\t\tthis._removeDependency(this._iColorTransformMethodVO);\n\t\t\tthis._iColorTransformMethodVO = null;\n\t\t}\n\n\t\tif (value) {\n\t\t\tthis._iColorTransformMethodVO = new MethodVO(value);\n\t\t\tthis._addDependency(this._iColorTransformMethodVO);\n\t\t}\n\t}\n\n\tprivate _removeDependency(methodVO:MethodVO, effectsDependency:boolean = false)\n\t{\n\t\tvar index:number = this._iMethodVOs.indexOf(methodVO);\n\n\t\tif (!effectsDependency)\n\t\t\tthis._numEffectDependencies--;\n\n\t\tmethodVO.method.removeEventListener(ShadingMethodEvent.SHADER_INVALIDATED, this._onShaderInvalidatedDelegate);\n\t\tthis._iMethodVOs.splice(index, 1);\n\n\t\tthis._pInvalidatePass();\n\t}\n\n\tprivate _addDependency(methodVO:MethodVO, effectsDependency:boolean = false, index:number = -1)\n\t{\n\t\tmethodVO.method.addEventListener(ShadingMethodEvent.SHADER_INVALIDATED, this._onShaderInvalidatedDelegate);\n\n\t\tif (effectsDependency) {\n\t\t\tif (index != -1)\n\t\t\t\tthis._iMethodVOs.splice(index + this._iMethodVOs.length - this._numEffectDependencies, 0, methodVO);\n\t\t\telse\n\t\t\t\tthis._iMethodVOs.push(methodVO);\n\t\t\tthis._numEffectDependencies++;\n\t\t} else {\n\t\t\tthis._iMethodVOs.splice(this._iMethodVOs.length - this._numEffectDependencies, 0, methodVO);\n\t\t}\n\n\t\tthis._pInvalidatePass();\n\t}\n\n\t/**\n\t * Appends an \"effect\" shading method to the shader. Effect methods are those that do not influence the lighting\n\t * but modulate the shaded colour, used for fog, outlines, etc. The method will be applied to the result of the\n\t * methods added prior.\n\t */\n\tpublic addEffectMethod(method:EffectMethodBase)\n\t{\n\t\tthis._addDependency(new MethodVO(method), true);\n\t}\n\n\t/**\n\t * The number of \"effect\" methods added to the material.\n\t */\n\tpublic get numEffectMethods():number\n\t{\n\t\treturn this._numEffectDependencies;\n\t}\n\n\t/**\n\t * Queries whether a given effects method was added to the material.\n\t *\n\t * @param method The method to be queried.\n\t * @return true if the method was added to the material, false otherwise.\n\t */\n\tpublic hasEffectMethod(method:EffectMethodBase):boolean\n\t{\n\t\treturn this.getDependencyForMethod(method) != null;\n\t}\n\n\t/**\n\t * Returns the method added at the given index.\n\t * @param index The index of the method to retrieve.\n\t * @return The method at the given index.\n\t */\n\tpublic getEffectMethodAt(index:number):EffectMethodBase\n\t{\n\t\tif (index < 0 || index > this._numEffectDependencies - 1)\n\t\t\treturn null;\n\n\t\treturn <EffectMethodBase> this._iMethodVOs[index + this._iMethodVOs.length - this._numEffectDependencies].method;\n\t}\n\n\t/**\n\t * Adds an effect method at the specified index amongst the methods already added to the material. Effect\n\t * methods are those that do not influence the lighting but modulate the shaded colour, used for fog, outlines,\n\t * etc. The method will be applied to the result of the methods with a lower index.\n\t */\n\tpublic addEffectMethodAt(method:EffectMethodBase, index:number)\n\t{\n\t\tthis._addDependency(new MethodVO(method), true, index);\n\t}\n\n\t/**\n\t * Removes an effect method from the material.\n\t * @param method The method to be removed.\n\t */\n\tpublic removeEffectMethod(method:EffectMethodBase)\n\t{\n\t\tvar methodVO:MethodVO = this.getDependencyForMethod(method);\n\n\t\tif (methodVO != null)\n\t\t\tthis._removeDependency(methodVO, true);\n\t}\n\n\n\tprivate getDependencyForMethod(method:EffectMethodBase):MethodVO\n\t{\n\t\tvar len:number = this._iMethodVOs.length;\n\t\tfor (var i:number = 0; i < len; ++i)\n\t\t\tif (this._iMethodVOs[i].method == method)\n\t\t\t\treturn this._iMethodVOs[i];\n\n\t\treturn null;\n\t}\n\n\t/**\n\t * The method used to generate the per-pixel normals. Defaults to NormalBasicMethod.\n\t */\n\tpublic get normalMethod():NormalBasicMethod\n\t{\n\t\treturn this._iNormalMethodVO? <NormalBasicMethod> this._iNormalMethodVO.method : null;\n\t}\n\n\tpublic set normalMethod(value:NormalBasicMethod)\n\t{\n\t\tif (this._iNormalMethodVO && this._iNormalMethodVO.method == value)\n\t\t\treturn;\n\n\t\tif (this._iNormalMethodVO) {\n\t\t\tthis._removeDependency(this._iNormalMethodVO);\n\t\t\tthis._iNormalMethodVO = null;\n\t\t}\n\n\t\tif (value) {\n\t\t\tthis._iNormalMethodVO = new MethodVO(value);\n\t\t\tthis._addDependency(this._iNormalMethodVO);\n\t\t}\n\t}\n\n\t/**\n\t * The method that provides the ambient lighting contribution. Defaults to AmbientBasicMethod.\n\t */\n\tpublic get ambientMethod():AmbientBasicMethod\n\t{\n\t\treturn this._iAmbientMethodVO? <AmbientBasicMethod> this._iAmbientMethodVO.method : null;\n\t}\n\n\tpublic set ambientMethod(value:AmbientBasicMethod)\n\t{\n\t\tif (this._iAmbientMethodVO && this._iAmbientMethodVO.method == value)\n\t\t\treturn;\n\n\t\tif (this._iAmbientMethodVO) {\n\t\t\tthis._removeDependency(this._iAmbientMethodVO);\n\t\t\tthis._iAmbientMethodVO = null;\n\t\t}\n\n\t\tif (value) {\n\t\t\tthis._iAmbientMethodVO = new MethodVO(value);\n\t\t\tthis._addDependency(this._iAmbientMethodVO);\n\t\t}\n\t}\n\n\t/**\n\t * The method used to render shadows cast on this surface, or null if no shadows are to be rendered. Defaults to null.\n\t */\n\tpublic get shadowMethod():ShadowMapMethodBase\n\t{\n\t\treturn this._iShadowMethodVO? <ShadowMapMethodBase> this._iShadowMethodVO.method : null;\n\t}\n\n\tpublic set shadowMethod(value:ShadowMapMethodBase)\n\t{\n\t\tif (this._iShadowMethodVO && this._iShadowMethodVO.method == value)\n\t\t\treturn;\n\n\t\tif (this._iShadowMethodVO) {\n\t\t\tthis._removeDependency(this._iShadowMethodVO);\n\t\t\tthis._iShadowMethodVO = null;\n\t\t}\n\n\t\tif (value) {\n\t\t\tthis._iShadowMethodVO = new MethodVO(value);\n\t\t\tthis._addDependency(this._iShadowMethodVO);\n\t\t}\n\t}\n\n\t/**\n\t * The method that provides the diffuse lighting contribution. Defaults to DiffuseBasicMethod.\n\t */\n\tpublic get diffuseMethod():DiffuseBasicMethod\n\t{\n\t\treturn this._iDiffuseMethodVO? <DiffuseBasicMethod> this._iDiffuseMethodVO.method : null;\n\t}\n\n\tpublic set diffuseMethod(value:DiffuseBasicMethod)\n\t{\n\t\tif (this._iDiffuseMethodVO && this._iDiffuseMethodVO.method == value)\n\t\t\treturn;\n\n\t\tif (this._iDiffuseMethodVO) {\n\t\t\tthis._removeDependency(this._iDiffuseMethodVO);\n\t\t\tthis._iDiffuseMethodVO = null;\n\t\t}\n\n\t\tif (value) {\n\t\t\tthis._iDiffuseMethodVO = new MethodVO(value);\n\t\t\tthis._addDependency(this._iDiffuseMethodVO);\n\t\t}\n\t}\n\n\t/**\n\t * The method that provides the specular lighting contribution. Defaults to SpecularBasicMethod.\n\t */\n\tpublic get specularMethod():SpecularBasicMethod\n\t{\n\t\treturn this._iSpecularMethodVO? <SpecularBasicMethod> this._iSpecularMethodVO.method : null;\n\t}\n\n\tpublic set specularMethod(value:SpecularBasicMethod)\n\t{\n\t\tif (this._iSpecularMethodVO && this._iSpecularMethodVO.method == value)\n\t\t\treturn;\n\n\t\tif (this._iSpecularMethodVO) {\n\t\t\tthis._removeDependency(this._iSpecularMethodVO);\n\t\t\tthis._iSpecularMethodVO = null;\n\t\t}\n\n\t\tif (value) {\n\t\t\tthis._iSpecularMethodVO = new MethodVO(value);\n\t\t\tthis._addDependency(this._iSpecularMethodVO);\n\t\t}\n\t}\n\n\t/**\n\t * @inheritDoc\n\t */\n\tpublic dispose()\n\t{\n\t\tsuper.dispose();\n\n\t\twhile (this._iMethodVOs.length)\n\t\t\tthis._removeDependency(this._iMethodVOs[0]);\n\n\t\tthis._iMethodVOs = null;\n\t}\n\n\t/**\n\t * Called when any method's shader code is invalidated.\n\t */\n\tprivate onShaderInvalidated(event:ShadingMethodEvent)\n\t{\n\t\tthis._pInvalidatePass();\n\t}\n\n\t// RENDER LOOP\n\n\t/**\n\t * @inheritDoc\n\t */\n\tpublic _iActivate(pass:MaterialPassData, stage:Stage, camera:Camera)\n\t{\n\t\tsuper._iActivate(pass, stage, camera);\n\n\t\tvar methodVO:MethodVO;\n\t\tvar len:number = this._iMethodVOs.length;\n\t\tfor (var i:number = 0; i < len; ++i) {\n\t\t\tmethodVO = this._iMethodVOs[i];\n\t\t\tif (methodVO.useMethod)\n\t\t\t\tmethodVO.method.iActivate(pass.shaderObject, methodVO, stage);\n\t\t}\n\t}\n\n\t/**\n\t *\n\t *\n\t * @param renderable\n\t * @param stage\n\t * @param camera\n\t */\n\tpublic setRenderState(pass:MaterialPassData, renderable:RenderableBase, stage:Stage, camera:Camera, viewProjection:Matrix3D)\n\t{\n\t\tsuper.setRenderState(pass, renderable, stage, camera, viewProjection);\n\n\t\tvar methodVO:MethodVO;\n\t\tvar len:number = this._iMethodVOs.length;\n\t\tfor (var i:number = 0; i < len; ++i) {\n\t\t\tmethodVO = this._iMethodVOs[i];\n\t\t\tif (methodVO.useMethod)\n\t\t\t\tmethodVO.method.iSetRenderState(pass.shaderObject, methodVO, renderable, stage, camera);\n\t\t}\n\t}\n\n\t/**\n\t * @inheritDoc\n\t */\n\tpublic _iDeactivate(pass:MaterialPassData, stage:Stage)\n\t{\n\t\tsuper._iDeactivate(pass, stage);\n\n\t\tvar methodVO:MethodVO;\n\t\tvar len:number = this._iMethodVOs.length;\n\t\tfor (var i:number = 0; i < len; ++i) {\n\t\t\tmethodVO = this._iMethodVOs[i];\n\t\t\tif (methodVO.useMethod)\n\t\t\t\tmethodVO.method.iDeactivate(pass.shaderObject, methodVO, stage);\n\t\t}\n\t}\n\n\tpublic _iIncludeDependencies(shaderObject:ShaderLightingObject)\n\t{\n\t\tvar i:number;\n\t\tvar len:number = this._iMethodVOs.length;\n\t\tfor (i = 0; i < len; ++i)\n\t\t\tthis.setupAndCountDependencies(shaderObject, this._iMethodVOs[i]);\n\n\t\tfor (i = 0; i < len; ++i)\n\t\t\tthis._iMethodVOs[i].useMethod = this._iMethodVOs[i].method.iIsUsed(shaderObject);\n\n\t\tsuper._iIncludeDependencies(shaderObject);\n\t}\n\n\n\t/**\n\t * Counts the dependencies for a given method.\n\t * @param method The method to count the dependencies for.\n\t * @param methodVO The method's data for this material.\n\t */\n\tprivate setupAndCountDependencies(shaderObject:ShaderObjectBase, methodVO:MethodVO)\n\t{\n\t\tmethodVO.reset();\n\n\t\tmethodVO.method.iInitVO(shaderObject, methodVO);\n\n\t\tif (methodVO.needsProjection)\n\t\t\tshaderObject.projectionDependencies++;\n\n\t\tif (methodVO.needsGlobalVertexPos) {\n\n\t\t\tshaderObject.globalPosDependencies++;\n\n\t\t\tif (methodVO.needsGlobalFragmentPos)\n\t\t\t\tshaderObject.usesGlobalPosFragment = true;\n\n\t\t} else if (methodVO.needsGlobalFragmentPos) {\n\t\t\tshaderObject.globalPosDependencies++;\n\t\t\tshaderObject.usesGlobalPosFragment = true;\n\t\t}\n\n\t\tif (methodVO.needsNormals)\n\t\t\tshaderObject.normalDependencies++;\n\n\t\tif (methodVO.needsTangents)\n\t\t\tshaderObject.tangentDependencies++;\n\n\t\tif (methodVO.needsView)\n\t\t\tshaderObject.viewDirDependencies++;\n\n\t\tif (methodVO.needsUV)\n\t\t\tshaderObject.uvDependencies++;\n\n\t\tif (methodVO.needsSecondaryUV)\n\t\t\tshaderObject.secondaryUVDependencies++;\n\t}\n\n\tpublic _iGetPreLightingVertexCode(shaderObject:ShaderObjectBase, registerCache:ShaderRegisterCache, sharedRegisters:ShaderRegisterData):string\n\t{\n\t\tvar code:string = \"\";\n\n\t\tif (this._iAmbientMethodVO && this._iAmbientMethodVO.useMethod)\n\t\t\tcode += this._iAmbientMethodVO.method.iGetVertexCode(shaderObject, this._iAmbientMethodVO, registerCache, sharedRegisters);\n\n\t\tif (this._iDiffuseMethodVO && this._iDiffuseMethodVO.useMethod)\n\t\t\tcode += this._iDiffuseMethodVO.method.iGetVertexCode(shaderObject, this._iDiffuseMethodVO, registerCache, sharedRegisters);\n\n\t\tif (this._iSpecularMethodVO && this._iSpecularMethodVO.useMethod)\n\t\t\tcode += this._iSpecularMethodVO.method.iGetVertexCode(shaderObject, this._iSpecularMethodVO, registerCache, sharedRegisters);\n\n\t\treturn code;\n\t}\n\n\tpublic _iGetPreLightingFragmentCode(shaderObject:ShaderObjectBase, registerCache:ShaderRegisterCache, sharedRegisters:ShaderRegisterData):string\n\t{\n\t\tvar code:string = \"\";\n\n\t\tif (this._iAmbientMethodVO && this._iAmbientMethodVO.useMethod) {\n\t\t\tcode += this._iAmbientMethodVO.method.iGetFragmentCode(shaderObject, this._iAmbientMethodVO, sharedRegisters.shadedTarget, registerCache, sharedRegisters);\n\n\t\t\tif (this._iAmbientMethodVO.needsNormals)\n\t\t\t\tregisterCache.removeFragmentTempUsage(sharedRegisters.normalFragment);\n\n\t\t\tif (this._iAmbientMethodVO.needsView)\n\t\t\t\tregisterCache.removeFragmentTempUsage(sharedRegisters.viewDirFragment);\n\t\t}\n\n\t\tif (this._iDiffuseMethodVO && this._iDiffuseMethodVO.useMethod)\n\t\t\tcode += (<LightingMethodBase> this._iDiffuseMethodVO.method).iGetFragmentPreLightingCode(<ShaderLightingObject> shaderObject, this._iDiffuseMethodVO, registerCache, sharedRegisters);\n\n\t\tif (this._iSpecularMethodVO && this._iSpecularMethodVO.useMethod)\n\t\t\tcode += (<LightingMethodBase> this._iSpecularMethodVO.method).iGetFragmentPreLightingCode(<ShaderLightingObject> shaderObject, this._iSpecularMethodVO, registerCache, sharedRegisters);\n\n\t\treturn code;\n\t}\n\n\tpublic _iGetPerLightDiffuseFragmentCode(shaderObject:ShaderLightingObject, lightDirReg:ShaderRegisterElement, diffuseColorReg:ShaderRegisterElement, registerCache:ShaderRegisterCache, sharedRegisters:ShaderRegisterData):string\n\t{\n\t\treturn (<LightingMethodBase> this._iDiffuseMethodVO.method).iGetFragmentCodePerLight(shaderObject, this._iDiffuseMethodVO, lightDirReg, diffuseColorReg, registerCache, sharedRegisters);\n\t}\n\n\tpublic _iGetPerLightSpecularFragmentCode(shaderObject:ShaderLightingObject, lightDirReg:ShaderRegisterElement, specularColorReg:ShaderRegisterElement, registerCache:ShaderRegisterCache, sharedRegisters:ShaderRegisterData):string\n\t{\n\t\treturn (<LightingMethodBase> this._iSpecularMethodVO.method).iGetFragmentCodePerLight(shaderObject, this._iSpecularMethodVO, lightDirReg, specularColorReg, registerCache, sharedRegisters);\n\t}\n\n\tpublic _iGetPerProbeDiffuseFragmentCode(shaderObject:ShaderLightingObject, texReg:ShaderRegisterElement, weightReg:string, registerCache:ShaderRegisterCache, sharedRegisters:ShaderRegisterData):string\n\t{\n\t\treturn (<LightingMethodBase> this._iDiffuseMethodVO.method).iGetFragmentCodePerProbe(shaderObject, this._iDiffuseMethodVO, texReg, weightReg, registerCache, sharedRegisters);\n\t}\n\n\tpublic _iGetPerProbeSpecularFragmentCode(shaderObject:ShaderLightingObject, texReg:ShaderRegisterElement, weightReg:string, registerCache:ShaderRegisterCache, sharedRegisters:ShaderRegisterData):string\n\t{\n\t\treturn (<LightingMethodBase> this._iSpecularMethodVO.method).iGetFragmentCodePerProbe(shaderObject, this._iSpecularMethodVO, texReg, weightReg, registerCache, sharedRegisters);\n\t}\n\n\tpublic _iGetPostLightingVertexCode(shaderObject:ShaderLightingObject, registerCache:ShaderRegisterCache, sharedRegisters:ShaderRegisterData):string\n\t{\n\t\tvar code:string = \"\";\n\n\t\tif (this._iShadowMethodVO)\n\t\t\tcode += this._iShadowMethodVO.method.iGetVertexCode(shaderObject, this._iShadowMethodVO, registerCache, sharedRegisters);\n\n\t\treturn code;\n\t}\n\n\tpublic _iGetPostLightingFragmentCode(shaderObject:ShaderLightingObject, registerCache:ShaderRegisterCache, sharedRegisters:ShaderRegisterData):string\n\t{\n\t\tvar code:string = \"\";\n\n\t\tif (shaderObject.useAlphaPremultiplied && this._pEnableBlending) {\n\t\t\tcode += \"add \" + sharedRegisters.shadedTarget + \".w, \" + sharedRegisters.shadedTarget + \".w, \" + sharedRegisters.commons + \".z\\n\" +\n\t\t\t\t\"div \" + sharedRegisters.shadedTarget + \".xyz, \" + sharedRegisters.shadedTarget + \", \" + sharedRegisters.shadedTarget + \".w\\n\" +\n\t\t\t\t\"sub \" + sharedRegisters.shadedTarget + \".w, \" + sharedRegisters.shadedTarget + \".w, \" + sharedRegisters.commons + \".z\\n\" +\n\t\t\t\t\"sat \" + sharedRegisters.shadedTarget + \".xyz, \" + sharedRegisters.shadedTarget + \"\\n\";\n\t\t}\n\n\t\tif (this._iShadowMethodVO)\n\t\t\tcode += this._iShadowMethodVO.method.iGetFragmentCode(shaderObject, this._iShadowMethodVO, sharedRegisters.shadowTarget, registerCache, sharedRegisters);\n\n\t\tif (this._iDiffuseMethodVO && this._iDiffuseMethodVO.useMethod) {\n\t\t\tcode += (<LightingMethodBase> this._iDiffuseMethodVO.method).iGetFragmentPostLightingCode(shaderObject, this._iDiffuseMethodVO, sharedRegisters.shadedTarget, registerCache, sharedRegisters);\n\n\t\t\t// resolve other dependencies as well?\n\t\t\tif (this._iDiffuseMethodVO.needsNormals)\n\t\t\t\tregisterCache.removeFragmentTempUsage(sharedRegisters.normalFragment);\n\n\t\t\tif (this._iDiffuseMethodVO.needsView)\n\t\t\t\tregisterCache.removeFragmentTempUsage(sharedRegisters.viewDirFragment);\n\t\t}\n\n\t\tif (this._iSpecularMethodVO && this._iSpecularMethodVO.useMethod) {\n\t\t\tcode += (<LightingMethodBase> this._iSpecularMethodVO.method).iGetFragmentPostLightingCode(shaderObject, this._iSpecularMethodVO, sharedRegisters.shadedTarget, registerCache, sharedRegisters);\n\t\t\tif (this._iSpecularMethodVO.needsNormals)\n\t\t\t\tregisterCache.removeFragmentTempUsage(sharedRegisters.normalFragment);\n\t\t\tif (this._iSpecularMethodVO.needsView)\n\t\t\t\tregisterCache.removeFragmentTempUsage(sharedRegisters.viewDirFragment);\n\t\t}\n\n\t\tif (this._iShadowMethodVO)\n\t\t\tregisterCache.removeFragmentTempUsage(sharedRegisters.shadowTarget);\n\n\t\treturn code;\n\t}\n\n\t/**\n\t * Indicates whether or not normals are allowed in tangent space. This is only the case if no object-space\n\t * dependencies exist.\n\t */\n\tpublic _pUsesTangentSpace(shaderObject:ShaderLightingObject):boolean\n\t{\n\t\tif (shaderObject.usesProbes)\n\t\t\treturn false;\n\n\t\tvar methodVO:MethodVO;\n\t\tvar len:number = this._iMethodVOs.length;\n\t\tfor (var i:number = 0; i < len; ++i) {\n\t\t\tmethodVO = this._iMethodVOs[i];\n\t\t\tif (methodVO.useMethod && !methodVO.method.iUsesTangentSpace())\n\t\t\t\treturn false;\n\t\t}\n\n\t\treturn true;\n\t}\n\n\t/**\n\t * Indicates whether or not normals are output in tangent space.\n\t */\n\tpublic _pOutputsTangentNormals(shaderObject:ShaderObjectBase):boolean\n\t{\n\t\treturn (<NormalBasicMethod> this._iNormalMethodVO.method).iOutputsTangentNormals();\n\t}\n\n\t/**\n\t * Indicates whether or not normals are output by the pass.\n\t */\n\tpublic _pOutputsNormals(shaderObject:ShaderObjectBase):boolean\n\t{\n\t\treturn this._iNormalMethodVO && this._iNormalMethodVO.useMethod;\n\t}\n\n\n\tpublic _iGetNormalVertexCode(shaderObject:ShaderObjectBase, registerCache:ShaderRegisterCache, sharedRegisters:ShaderRegisterData):string\n\t{\n\t\treturn this._iNormalMethodVO.method.iGetVertexCode(shaderObject, this._iNormalMethodVO, registerCache, sharedRegisters);\n\t}\n\n\tpublic _iGetNormalFragmentCode(shaderObject:ShaderObjectBase, registerCache:ShaderRegisterCache, sharedRegisters:ShaderRegisterData):string\n\t{\n\t\tvar code:string = this._iNormalMethodVO.method.iGetFragmentCode(shaderObject, this._iNormalMethodVO, sharedRegisters.normalFragment, registerCache, sharedRegisters);\n\n\t\tif (this._iNormalMethodVO.needsView)\n\t\t\tregisterCache.removeFragmentTempUsage(sharedRegisters.viewDirFragment);\n\n\t\tif (this._iNormalMethodVO.needsGlobalFragmentPos || this._iNormalMethodVO.needsGlobalVertexPos)\n\t\t\tregisterCache.removeVertexTempUsage(sharedRegisters.globalPositionVertex);\n\n\t\treturn code;\n\t}\n\n\t/**\n\t * @inheritDoc\n\t */\n\tpublic _iGetVertexCode(shaderObject:ShaderObjectBase, regCache:ShaderRegisterCache, sharedReg:ShaderRegisterData):string\n\t{\n\t\tvar code:string = \"\";\n\t\tvar methodVO:MethodVO;\n\t\tvar len:number = this._iMethodVOs.length;\n\t\tfor (var i:number = len - this._numEffectDependencies; i < len; i++) {\n\t\t\tmethodVO = this._iMethodVOs[i];\n\t\t\tif (methodVO.useMethod) {\n\t\t\t\tcode += methodVO.method.iGetVertexCode(shaderObject, methodVO, regCache, sharedReg);\n\n\t\t\t\tif (methodVO.needsGlobalVertexPos || methodVO.needsGlobalFragmentPos)\n\t\t\t\t\tregCache.removeVertexTempUsage(sharedReg.globalPositionVertex);\n\t\t\t}\n\t\t}\n\n\t\tif (this._iColorTransformMethodVO && this._iColorTransformMethodVO.useMethod)\n\t\t\tcode += this._iColorTransformMethodVO.method.iGetVertexCode(shaderObject, this._iColorTransformMethodVO, regCache, sharedReg);\n\n\t\treturn code;\n\t}\n\n\t/**\n\t * @inheritDoc\n\t */\n\tpublic _iGetFragmentCode(shaderObject:ShaderObjectBase, regCache:ShaderRegisterCache, sharedReg:ShaderRegisterData):string\n\t{\n\t\tvar code:string = \"\";\n\t\tvar alphaReg:ShaderRegisterElement;\n\n\t\tif (this.preserveAlpha && this._numEffectDependencies > 0) {\n\t\t\talphaReg = regCache.getFreeFragmentSingleTemp();\n\t\t\tregCache.addFragmentTempUsages(alphaReg, 1);\n\t\t\tcode += \"mov \" + alphaReg + \", \" + sharedReg.shadedTarget + \".w\\n\";\n\t\t}\n\n\t\tvar methodVO:MethodVO;\n\t\tvar len:number = this._iMethodVOs.length;\n\t\tfor (var i:number = len - this._numEffectDependencies; i < len; i++) {\n\t\t\tmethodVO = this._iMethodVOs[i];\n\t\t\tif (methodVO.useMethod) {\n\t\t\t\tcode += methodVO.method.iGetFragmentCode(shaderObject, methodVO, sharedReg.shadedTarget, regCache, sharedReg);\n\n\t\t\t\tif (methodVO.needsNormals)\n\t\t\t\t\tregCache.removeFragmentTempUsage(sharedReg.normalFragment);\n\n\t\t\t\tif (methodVO.needsView)\n\t\t\t\t\tregCache.removeFragmentTempUsage(sharedReg.viewDirFragment);\n\n\t\t\t}\n\t\t}\n\n\t\tif (this.preserveAlpha && this._numEffectDependencies > 0) {\n\t\t\tcode += \"mov \" + sharedReg.shadedTarget + \".w, \" + alphaReg + \"\\n\";\n\t\t\tregCache.removeFragmentTempUsage(alphaReg);\n\t\t}\n\n\t\tif (this._iColorTransformMethodVO && this._iColorTransformMethodVO.useMethod)\n\t\t\tcode += this._iColorTransformMethodVO.method.iGetFragmentCode(shaderObject, this._iColorTransformMethodVO, sharedReg.shadedTarget, regCache, sharedReg);\n\n\t\treturn code;\n\t}\n\t/**\n\t * Indicates whether the shader uses any shadows.\n\t */\n\tpublic _iUsesShadows():boolean\n\t{\n\t\treturn Boolean(this._iShadowMethodVO || this.lightPicker.castingDirectionalLights.length > 0 || this.lightPicker.castingPointLights.length > 0);\n\t}\n\n\t/**\n\t * Indicates whether the shader uses any specular component.\n\t */\n\tpublic _iUsesSpecular():boolean\n\t{\n\t\treturn Boolean(this._iSpecularMethodVO);\n\t}\n}\n\nexport = TriangleMethodPass;","import BitmapData\t\t\t\t\t= require(\"awayjs-core/lib/base/BitmapData\");\nimport AssetType\t\t\t\t\t= require(\"awayjs-core/lib/library/AssetType\");\nimport BitmapTexture\t\t\t\t= require(\"awayjs-core/lib/textures/BitmapTexture\");\n\nimport IMaterialOwner\t\t\t\t= require(\"awayjs-display/lib/base/IMaterialOwner\");\nimport MaterialBase\t\t\t\t\t= require(\"awayjs-display/lib/materials/MaterialBase\");\n\nimport LineBasicMaterial\t\t\t= require(\"awayjs-stagegl/lib/materials/LineBasicMaterial\");\nimport TriangleBasicMaterial\t\t= require(\"awayjs-stagegl/lib/materials/TriangleBasicMaterial\");\n\nclass DefaultMaterialManager\n{\n\tprivate static _defaultBitmapData:BitmapData;\n\tprivate static _defaultTriangleMaterial:TriangleBasicMaterial;\n\tprivate static _defaultLineMaterial:LineBasicMaterial;\n\tprivate static _defaultTexture:BitmapTexture;\n\n\tpublic static getDefaultMaterial(materialOwner:IMaterialOwner = null):MaterialBase\n\t{\n\t\tif (materialOwner != null && materialOwner.assetType == AssetType.LINE_SUB_MESH) {\n\t\t\tif (!DefaultMaterialManager._defaultLineMaterial)\n\t\t\t\tDefaultMaterialManager.createDefaultLineMaterial();\n\n\t\t\treturn DefaultMaterialManager._defaultLineMaterial;\n\t\t} else {\n\t\t\tif (!DefaultMaterialManager._defaultTriangleMaterial)\n\t\t\t\tDefaultMaterialManager.createDefaultTriangleMaterial();\n\n\t\t\treturn DefaultMaterialManager._defaultTriangleMaterial;\n\t\t}\n\t}\n\n\tpublic static getDefaultTexture(materialOwner:IMaterialOwner = null):BitmapTexture\n\t{\n\t\tif (!DefaultMaterialManager._defaultTexture)\n\t\t\tDefaultMaterialManager.createDefaultTexture();\n\n\t\treturn DefaultMaterialManager._defaultTexture;\n\t}\n\n\tprivate static createDefaultTexture()\n\t{\n\t\tDefaultMaterialManager._defaultBitmapData = DefaultMaterialManager.createCheckeredBitmapData();\n\t\tDefaultMaterialManager._defaultTexture = new BitmapTexture(DefaultMaterialManager._defaultBitmapData, true);\n\t\tDefaultMaterialManager._defaultTexture.name = \"defaultTexture\";\n\t}\n\n\tpublic static createCheckeredBitmapData():BitmapData\n\t{\n\t\tvar b:BitmapData = new BitmapData(8, 8, false, 0x000000);\n\n\t\t//create chekerboard\n\t\tvar i:number, j:number;\n\t\tfor (i = 0; i < 8; i++) {\n\t\t\tfor (j = 0; j < 8; j++) {\n\t\t\t\tif ((j & 1) ^ (i & 1)) {\n\t\t\t\t\tb.setPixel(i, j, 0XFFFFFF);\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t\treturn b;\n\t}\n\n\tprivate static createDefaultTriangleMaterial()\n\t{\n\t\tif (!DefaultMaterialManager._defaultTexture)\n\t\t\tDefaultMaterialManager.createDefaultTexture();\n\n\t\tDefaultMaterialManager._defaultTriangleMaterial = new TriangleBasicMaterial(DefaultMaterialManager._defaultTexture);\n\t\tDefaultMaterialManager._defaultTriangleMaterial.mipmap = false;\n\t\tDefaultMaterialManager._defaultTriangleMaterial.smooth = false;\n\t\tDefaultMaterialManager._defaultTriangleMaterial.name = \"defaultTriangleMaterial\";\n\t}\n\n\tprivate static createDefaultLineMaterial()\n\t{\n\t\tDefaultMaterialManager._defaultLineMaterial = new LineBasicMaterial();\n\t\tDefaultMaterialManager._defaultLineMaterial.name = \"defaultSegmentMaterial\";\n\t}\n}\n\nexport = DefaultMaterialManager;","import TextureProxyBase\t\t\t\t= require(\"awayjs-core/lib/textures/TextureProxyBase\");\n\nimport ContextGLTextureFormat\t\t= require(\"awayjs-stagegl/lib/base/ContextGLTextureFormat\");\nimport ShaderRegisterData\t\t\t= require(\"awayjs-stagegl/lib/materials/compilation/ShaderRegisterData\");\nimport ShaderRegisterElement\t\t= require(\"awayjs-stagegl/lib/materials/compilation/ShaderRegisterElement\");\n\nclass ShaderCompilerHelper\n{\n\t/**\n\t * A helper method that generates standard code for sampling from a texture using the normal uv coordinates.\n\t * @param vo The MethodVO object linking this method with the pass currently being compiled.\n\t * @param sharedReg The shared register object for the shader.\n\t * @param inputReg The texture stream register.\n\t * @param texture The texture which will be assigned to the given slot.\n\t * @param uvReg An optional uv register if coordinates different from the primary uv coordinates are to be used.\n\t * @param forceWrap If true, texture wrapping is enabled regardless of the material setting.\n\t * @return The fragment code that performs the sampling.\n\t *\n\t * @protected\n\t */\n\tpublic static getTex2DSampleCode(targetReg:ShaderRegisterElement, sharedReg:ShaderRegisterData, inputReg:ShaderRegisterElement, texture:TextureProxyBase, smooth:boolean, repeat:boolean, mipmaps:boolean, uvReg:ShaderRegisterElement = null, forceWrap:string = null):string\n\t{\n\t\tvar wrap:string = forceWrap || (repeat? \"wrap\":\"clamp\");\n\t\tvar format:string = ShaderCompilerHelper.getFormatStringForTexture(texture);\n\t\tvar enableMipMaps:boolean = mipmaps && texture.hasMipmaps;\n\t\tvar filter:string = (smooth)? (enableMipMaps? \"linear,miplinear\" : \"linear\") : (enableMipMaps? \"nearest,mipnearest\" : \"nearest\");\n\n\t\tif (uvReg == null)\n\t\t\tuvReg = sharedReg.uvVarying;\n\n\t\treturn \"tex \" + targetReg + \", \" + uvReg + \", \" + inputReg + \" <2d,\" + filter + \",\" + format + wrap + \">\\n\";\n\n\t}\n\n\n\t/**\n\t * A helper method that generates standard code for sampling from a cube texture.\n\t * @param vo The MethodVO object linking this method with the pass currently being compiled.\n\t * @param targetReg The register in which to store the sampled colour.\n\t * @param inputReg The texture stream register.\n\t * @param texture The cube map which will be assigned to the given slot.\n\t * @param uvReg The direction vector with which to sample the cube map.\n\t *\n\t * @protected\n\t */\n\tpublic static getTexCubeSampleCode(targetReg:ShaderRegisterElement, inputReg:ShaderRegisterElement, texture:TextureProxyBase, smooth:boolean, mipmaps:boolean, uvReg:ShaderRegisterElement):string\n\t{\n\t\tvar filter:string;\n\t\tvar format:string = ShaderCompilerHelper.getFormatStringForTexture(texture);\n\t\tvar enableMipMaps:boolean = mipmaps && texture.hasMipmaps;\n\t\tvar filter:string = (smooth)? (enableMipMaps? \"linear,miplinear\" : \"linear\") : (enableMipMaps? \"nearest,mipnearest\" : \"nearest\");\n\n\t\treturn \"tex \" + targetReg + \", \" + uvReg + \", \" + inputReg + \" <cube,\" + format + filter + \">\\n\";\n\t}\n\n\t/**\n\t * Generates a texture format string for the sample instruction.\n\t * @param texture The texture for which to get the format string.\n\t * @return\n\t *\n\t * @protected\n\t */\n\tpublic static getFormatStringForTexture(texture:TextureProxyBase):string\n\t{\n\t\tswitch (texture.format) {\n\t\t\tcase ContextGLTextureFormat.COMPRESSED:\n\t\t\t\treturn \"dxt1,\";\n\t\t\t\tbreak;\n\t\t\tcase ContextGLTextureFormat.COMPRESSED_ALPHA:\n\t\t\t\treturn \"dxt5,\";\n\t\t\t\tbreak;\n\t\t\tdefault:\n\t\t\t\treturn \"\";\n\t\t}\n\t}\n}\n\nexport = ShaderCompilerHelper;","import SubGeometryBase\t\t\t\t= require(\"awayjs-display/lib/base/SubGeometryBase\");\nimport TriangleSubGeometry\t\t\t= require(\"awayjs-display/lib/base/TriangleSubGeometry\");\nimport RenderablePool\t\t\t\t= require(\"awayjs-display/lib/pool/RenderablePool\");\nimport Billboard\t\t\t\t\t= require(\"awayjs-display/lib/entities/Billboard\");\nimport MaterialBase\t\t\t\t\t= require(\"awayjs-display/lib/materials/MaterialBase\");\n\nimport RenderableBase\t\t\t\t= require(\"awayjs-stagegl/lib/pool/RenderableBase\");\n\n/**\n * @class away.pool.RenderableListItem\n */\nclass BillboardRenderable extends RenderableBase\n{\n\tprivate static _materialGeometry:Object = new Object();\n\n\t/**\n\t *\n\t */\n\tpublic static id:string = \"billboard\";\n\n\t/**\n\t *\n\t */\n\tprivate _billboard:Billboard;\n\n\t/**\n\t * //TODO\n\t *\n\t * @param pool\n\t * @param billboard\n\t */\n\tconstructor(pool:RenderablePool, billboard:Billboard)\n\t{\n\t\tsuper(pool, billboard, billboard);\n\n\t\tthis._billboard = billboard;\n\t}\n\n\t/**\n\t * //TODO\n\t *\n\t * @returns {away.base.TriangleSubGeometry}\n\t */\n\tpublic _pGetSubGeometry():SubGeometryBase\n\t{\n\t\tvar material:MaterialBase = this._billboard.material;\n\n\t\tvar geometry:TriangleSubGeometry = BillboardRenderable._materialGeometry[material.id];\n\n\t\tif (!geometry) {\n\t\t\tgeometry = BillboardRenderable._materialGeometry[material.id] = new TriangleSubGeometry(true);\n\t\t\tgeometry.autoDeriveNormals = false;\n\t\t\tgeometry.autoDeriveTangents = false;\n\t\t\tgeometry.updateIndices(Array<number>(0, 1, 2, 0, 2, 3));\n\t\t\tgeometry.updatePositions(Array<number>(0, material.height, 0, material.width, material.height, 0, material.width, 0, 0, 0, 0, 0));\n\t\t\tgeometry.updateVertexNormals(Array<number>(1, 0, 0, 1, 0, 0, 1, 0, 0, 1, 0, 0));\n\t\t\tgeometry.updateVertexTangents(Array<number>(0, 0, -1, 0, 0, -1, 0, 0, -1, 0, 0, -1));\n\t\t\tgeometry.updateUVs(Array<number>(0, 0, 1, 0, 1, 1, 0, 1));\n\t\t} else {\n\t\t\tgeometry.updatePositions(Array<number>(0, material.height, 0, material.width, material.height, 0, material.width, 0, 0, 0, 0, 0));\n\t\t}\n\n\t\tthis._pVertexDataDirty[TriangleSubGeometry.POSITION_DATA] = true;\n\t\tthis._pVertexDataDirty[TriangleSubGeometry.NORMAL_DATA] = true;\n\t\tthis._pVertexDataDirty[TriangleSubGeometry.TANGENT_DATA] = true;\n\t\tthis._pVertexDataDirty[TriangleSubGeometry.UV_DATA] = true;\n\n\t\treturn geometry;\n\t}\n}\n\nexport = BillboardRenderable;","import SubGeometryBase\t\t\t\t= require(\"awayjs-display/lib/base/SubGeometryBase\");\n\nimport IndexData\t\t\t\t\t= require(\"awayjs-stagegl/lib/pool/IndexData\");\n\n/**\n *\n */\nclass IndexDataPool\n{\n\tprivate static _pool:Object = new Object();\n\n\tconstructor()\n\t{\n\t}\n\n\tpublic static getItem(subGeometry:SubGeometryBase, level:number, indexOffset:number):IndexData\n\t{\n\t\tvar subGeometryData:Array<IndexData> = <Array<IndexData>> (IndexDataPool._pool[subGeometry.id] || (IndexDataPool._pool[subGeometry.id] = new Array<IndexData>()));\n\n\t\tvar indexData:IndexData = subGeometryData[level] || (subGeometryData[level] = new IndexData(level));\n\t\tindexData.updateData(indexOffset, subGeometry.indices, subGeometry.numVertices);\n\n\t\treturn indexData;\n\t}\n\n\tpublic static disposeItem(id:number, level:number)\n\t{\n\t\tvar subGeometryData:Array<IndexData> = <Array<IndexData>> this._pool[id];\n\n\t\tsubGeometryData[level].dispose();\n\t\tsubGeometryData[level] = null;\n\t}\n\n\tpublic disposeData(id:number)\n\t{\n\t\tvar subGeometryData:Array<IndexData> = <Array<IndexData>> IndexDataPool._pool[id];\n\n\t\tvar len:number = subGeometryData.length;\n\t\tfor (var i:number = 0; i < len; i++) {\n\t\t\tsubGeometryData[i].dispose();\n\t\t\tsubGeometryData[i] = null;\n\t\t}\n\n\t\tIndexDataPool._pool[id] = null;\n\t}\n}\n\nexport = IndexDataPool;","import SubGeometryBase\t\t\t\t= require(\"awayjs-display/lib/base/SubGeometryBase\");\n\nimport ContextGLBase\t\t\t\t= require(\"awayjs-stagegl/lib/base/ContextGLBase\");\nimport IIndexBuffer\t\t\t\t\t= require(\"awayjs-stagegl/lib/base/IIndexBuffer\");\n\n/**\n *\n */\nclass IndexData\n{\n\tprivate static LIMIT_VERTS:number = 0xffff;\n\n\tprivate static LIMIT_INDICES:number = 0xffffff;\n\n\tprivate _dataDirty = true;\n\n\tpublic invalid:Array<boolean> = new Array(8);\n\n\tpublic contexts:Array<ContextGLBase> = new Array<ContextGLBase>(8);\n\n\tpublic buffers:Array<IIndexBuffer> = new Array<IIndexBuffer>(8);\n\n\tpublic data:Array<number>;\n\n\tpublic indexMappings:Array<number>;\n\n\tpublic originalIndices:Array<number>;\n\n\tpublic offset:number;\n\n\tpublic level:number;\n\n\tconstructor(level:number)\n\t{\n\t\tthis.level = level;\n\t}\n\n\tpublic updateData(offset:number, indices:Array<number>, numVertices:number)\n\t{\n\t\tif (this._dataDirty) {\n\t\t\tthis._dataDirty = false;\n\n\t\t\tif (indices.length < IndexData.LIMIT_INDICES && numVertices < IndexData.LIMIT_VERTS) {\n\t\t\t\t//shortcut for those buffers that fit into the maximum buffer sizes\n\t\t\t\tthis.indexMappings = null;\n\t\t\t\tthis.originalIndices = null;\n\t\t\t\tthis.setData(indices);\n\t\t\t\tthis.offset = indices.length;\n\t\t\t} else {\n\t\t\t\tvar i:number;\n\t\t\t\tvar len:number;\n\t\t\t\tvar outIndex:number;\n\t\t\t\tvar j:number;\n\t\t\t\tvar k:number;\n\t\t\t\tvar splitIndices:Array<number> = new Array<number>();\n\n\t\t\t\tthis.indexMappings = new Array<number>(indices.length);\n\t\t\t\tthis.originalIndices = new Array<number>();\n\n\t\t\t\ti = this.indexMappings.length;\n\n\t\t\t\twhile (i--)\n\t\t\t\t\tthis.indexMappings[i] = -1;\n\n\t\t\t\tvar originalIndex:number;\n\t\t\t\tvar splitIndex:number;\n\n\t\t\t\t// Loop over all triangles\n\t\t\t\toutIndex = 0;\n\t\t\t\tlen = indices.length;\n\t\t\t\ti = offset;\n\t\t\t\tk = 0;\n\t\t\t\twhile (i < len && outIndex + 3 < IndexData.LIMIT_INDICES && k + 3 < IndexData.LIMIT_VERTS) {\n\t\t\t\t\t// Loop over all vertices in a triangle //TODO ensure this works for segments or any grouping\n\t\t\t\t\tfor (j = 0; j < 3; j++) {\n\n\t\t\t\t\t\toriginalIndex = indices[i + j];\n\n\t\t\t\t\t\tif (this.indexMappings[originalIndex] >= 0) {\n\t\t\t\t\t\t\tsplitIndex = this.indexMappings[originalIndex];\n\t\t\t\t\t\t} else {\n\n\t\t\t\t\t\t\t// This vertex does not yet exist in the split list and\n\t\t\t\t\t\t\t// needs to be copied from the long list.\n\t\t\t\t\t\t\tsplitIndex = k++;\n\t\t\t\t\t\t\tthis.indexMappings[originalIndex] = splitIndex;\n\t\t\t\t\t\t\tthis.originalIndices.push(originalIndex);\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\t// Store new index, which may have come from the mapping look-up,\n\t\t\t\t\t\t// or from copying a new set of vertex data from the original vector\n\t\t\t\t\t\tsplitIndices[outIndex + j] = splitIndex;\n\t\t\t\t\t}\n\n\t\t\t\t\toutIndex += 3;\n\t\t\t\t\ti += 3\n\t\t\t\t}\n\n\t\t\t\tthis.setData(splitIndices);\n\t\t\t\tthis.offset = i;\n\t\t\t}\n\t\t}\n\t}\n\n\tpublic invalidateData()\n\t{\n\t\tthis._dataDirty = true;\n\t}\n\n\tpublic dispose()\n\t{\n\t\tfor (var i:number = 0; i < 8; ++i) {\n\t\t\tif (this.contexts[i]) {\n\t\t\t\tthis.contexts[i].disposeIndexData(this);\n\t\t\t\tthis.contexts[i] = null\n\t\t\t}\n\t\t}\n\t}\n\n\t/**\n\t * @private\n\t */\n\tprivate disposeBuffers()\n\t{\n\t\tfor (var i:number = 0; i < 8; ++i) {\n\t\t\tif (this.buffers[i]) {\n\t\t\t\tthis.buffers[i].dispose();\n\t\t\t\tthis.buffers[i] = null;\n\t\t\t}\n\t\t}\n\t}\n\n\t/**\n\t * @private\n\t */\n\tprivate invalidateBuffers()\n\t{\n\t\tfor (var i:number = 0; i < 8; ++i)\n\t\t\tthis.invalid[i] = true;\n\t}\n\n\t/**\n\t *\n\t * @param data\n\t * @private\n\t */\n\tprivate setData(data:Array<number>)\n\t{\n\t\tif (this.data && this.data.length != data.length)\n\t\t\tthis.disposeBuffers();\n\t\telse\n\t\t\tthis.invalidateBuffers();\n\n\t\tthis.data = data;\n\t}\n}\n\nexport = IndexData;","import IMaterialOwner\t\t\t\t= require(\"awayjs-display/lib/base/IMaterialOwner\");\nimport LineSubMesh\t\t\t\t\t= require(\"awayjs-display/lib/base/LineSubMesh\");\nimport LineSubGeometry\t\t\t\t= require(\"awayjs-display/lib/base/LineSubGeometry\");\nimport RenderablePool\t\t\t\t= require(\"awayjs-display/lib/pool/RenderablePool\");\nimport SubGeometryEvent\t\t\t\t= require(\"awayjs-display/lib/events/SubGeometryEvent\");\n\nimport RenderableBase\t\t\t\t= require(\"awayjs-stagegl/lib/pool/RenderableBase\");\n\n/**\n * @class away.pool.LineSubMeshRenderable\n */\nclass LineSubMeshRenderable extends RenderableBase\n{\n\t/**\n\t *\n\t */\n\tpublic static id:string = \"linesubmesh\";\n\n\t/**\n\t *\n\t */\n\tpublic subMesh:LineSubMesh;\n\n\t/**\n\t * //TODO\n\t *\n\t * @param pool\n\t * @param subMesh\n\t * @param level\n\t * @param dataOffset\n\t */\n\tconstructor(pool:RenderablePool, subMesh:LineSubMesh, level:number = 0, indexOffset:number = 0)\n\t{\n\t\tsuper(pool, subMesh.parentMesh, subMesh, level, indexOffset);\n\n\t\tthis.subMesh = subMesh;\n\t}\n\n\t/**\n\t * //TODO\n\t *\n\t * @returns {base.LineSubGeometry}\n\t * @protected\n\t */\n\tpublic _pGetSubGeometry():LineSubGeometry\n\t{\n\t\tvar subGeometry:LineSubGeometry = this.subMesh.subGeometry;\n\n\t\tthis._pVertexDataDirty[LineSubGeometry.START_POSITION_DATA] = true;\n\t\tthis._pVertexDataDirty[LineSubGeometry.END_POSITION_DATA] = true;\n\n\t\tif (subGeometry.thickness)\n\t\t\tthis._pVertexDataDirty[LineSubGeometry.THICKNESS_DATA] = true;\n\n\t\tif (subGeometry.startColors)\n\t\t\tthis._pVertexDataDirty[LineSubGeometry.COLOR_DATA] = true;\n\n\t\treturn subGeometry;\n\t}\n\n\t/**\n\t * //TODO\n\t *\n\t * @param pool\n\t * @param materialOwner\n\t * @param level\n\t * @param indexOffset\n\t * @returns {away.pool.LineSubMeshRenderable}\n\t * @private\n\t */\n\tpublic _pGetOverflowRenderable(pool:RenderablePool, materialOwner:IMaterialOwner, level:number, indexOffset:number):RenderableBase\n\t{\n\t\treturn new LineSubMeshRenderable(pool, <LineSubMesh> materialOwner, level, indexOffset);\n\t}\n}\n\nexport = LineSubMeshRenderable;","import MaterialData\t\t\t\t\t= require(\"awayjs-stagegl/lib/pool/MaterialData\");\nimport ContextGLBase\t\t\t\t= require(\"awayjs-stagegl/lib/base/ContextGLBase\");\nimport StageGLMaterialBase\t\t\t= require(\"awayjs-stagegl/lib/materials/StageGLMaterialBase\");\n\n/**\n * @class away.pool.MaterialDataPool\n */\nclass MaterialDataPool\n{\n\tprivate _pool:Object = new Object();\n\tprivate _context:ContextGLBase;\n\n\t/**\n\t * //TODO\n\t *\n\t * @param textureDataClass\n\t */\n\tconstructor(context:ContextGLBase)\n\t{\n\t\tthis._context = context;\n\t}\n\n\t/**\n\t * //TODO\n\t *\n\t * @param materialOwner\n\t * @returns ITexture\n\t */\n\tpublic getItem(material:StageGLMaterialBase):MaterialData\n\t{\n\t\treturn (this._pool[material.id] || (this._pool[material.id] = material._iAddMaterialData(new MaterialData(this, this._context, material))))\n\t}\n\n\t/**\n\t * //TODO\n\t *\n\t * @param materialOwner\n\t */\n\tpublic disposeItem(material:StageGLMaterialBase)\n\t{\n\t\tmaterial._iRemoveMaterialData(this._pool[material.id]);\n\n\t\tthis._pool[material.id] = null;\n\t}\n}\n\nexport = MaterialDataPool;","import IMaterialData\t\t\t\t= require(\"awayjs-display/lib/pool/IMaterialData\");\n\nimport MaterialDataPool\t\t\t\t= require(\"awayjs-stagegl/lib/pool/MaterialDataPool\");\nimport MaterialPassData\t\t\t\t= require(\"awayjs-stagegl/lib/pool/MaterialPassData\");\nimport MaterialPassDataPool\t\t\t= require(\"awayjs-stagegl/lib/pool/MaterialPassDataPool\");\nimport ContextGLBase\t\t\t\t= require(\"awayjs-stagegl/lib/base/ContextGLBase\");\nimport StageGLMaterialBase\t\t\t= require(\"awayjs-stagegl/lib/materials/StageGLMaterialBase\");\nimport MaterialPassBase\t\t\t\t= require(\"awayjs-stagegl/lib/materials/passes/MaterialPassBase\");\nimport ShaderCompilerBase\t\t\t= require(\"awayjs-stagegl/lib/materials/compilation/ShaderCompilerBase\");\nimport ShaderObjectBase\t\t\t\t= require(\"awayjs-stagegl/lib/materials/compilation/ShaderObjectBase\");\n\n/**\n *\n * @class away.pool.MaterialData\n */\nclass MaterialData implements IMaterialData\n{\n\tprivate _pool:MaterialDataPool;\n\n\tprivate _materialPassDataPool:MaterialPassDataPool;\n\n\tprivate _passes:Array<MaterialPassData>;\n\n\tpublic context:ContextGLBase;\n\n\tpublic material:StageGLMaterialBase;\n\n\tpublic renderOrderId:number;\n\n\tpublic invalidAnimation:boolean = true;\n\n\tconstructor(pool:MaterialDataPool, context:ContextGLBase, material:StageGLMaterialBase)\n\t{\n\t\tthis._pool = pool;\n\t\tthis.context = context;\n\t\tthis.material = material;\n\n\t\tthis._materialPassDataPool = new MaterialPassDataPool(material);\n\t}\n\n\tpublic getMaterialPass(materialPass:MaterialPassBase, profile:string):MaterialPassData\n\t{\n\t\tvar materialPassData:MaterialPassData = this._materialPassDataPool.getItem(materialPass);\n\n\t\tif (!materialPassData.shaderObject) {\n\t\t\tmaterialPassData.shaderObject = materialPass.createShaderObject(profile);\n\t\t\tmaterialPassData.invalid = true;\n\t\t}\n\n\t\tif (materialPassData.invalid) {\n\t\t\tmaterialPassData.invalid = false;\n\t\t\tvar compiler:ShaderCompilerBase = materialPassData.shaderObject.createCompiler(this.material, materialPass);\n\t\t\tcompiler.compile();\n\n\t\t\tmaterialPassData.shadedTarget = compiler.shadedTarget;\n\t\t\tmaterialPassData.vertexCode = compiler.vertexCode;\n\t\t\tmaterialPassData.fragmentCode = compiler.fragmentCode;\n\t\t\tmaterialPassData.postAnimationFragmentCode = compiler.postAnimationFragmentCode;\n\t\t\tmaterialPassData.key = \"\";\n\t\t}\n\n\t\treturn materialPassData;\n\t}\n\n\tpublic getMaterialPasses(profile:string):Array<MaterialPassData>\n\t{\n\t\tif (this._passes == null) {\n\t\t\tvar passes:Array<MaterialPassBase> = <Array<MaterialPassBase>> this.material._iScreenPasses;\n\t\t\tvar numPasses:number = passes.length;\n\n\t\t\t//reset the material passes in MaterialData\n\t\t\tthis._passes = new Array<MaterialPassData>(numPasses);\n\n\t\t\t//get the shader object for each screen pass and store\n\t\t\tfor (var i:number = 0; i < numPasses; i++)\n\t\t\t\tthis._passes[i] = this.getMaterialPass(passes[i], profile);\n\t\t}\n\n\t\treturn this._passes;\n\t}\n\n\t/**\n\t *\n\t */\n\tpublic dispose()\n\t{\n\t\tthis._materialPassDataPool.disposePool();\n\n\t\tthis._materialPassDataPool = null;\n\n\t\tthis._pool.disposeItem(this.material);\n\n\t\tthis._passes = null;\n\t}\n\n\t/**\n\t *\n\t */\n\tpublic invalidateMaterial()\n\t{\n\t\tthis._passes = null;\n\n\t\tthis.invalidateAnimation();\n\t}\n\n\t/**\n\t *\n\t */\n\tpublic invalidateAnimation()\n\t{\n\t\tthis.invalidAnimation = true;\n\t}\n}\n\nexport = MaterialData;","import MaterialPassData\t\t\t\t= require(\"awayjs-stagegl/lib/pool/MaterialPassData\");\nimport StageGLMaterialBase\t\t\t= require(\"awayjs-stagegl/lib/materials/StageGLMaterialBase\");\nimport MaterialPassBase\t\t\t\t= require(\"awayjs-stagegl/lib/materials/passes/MaterialPassBase\");\n\n/**\n * @class away.pool.MaterialPassDataPool\n */\nclass MaterialPassDataPool\n{\n\tprivate _pool:Object = new Object();\n\tprivate _material:StageGLMaterialBase;\n\n\t/**\n\t * //TODO\n\t *\n\t * @param textureDataClass\n\t */\n\tconstructor(material:StageGLMaterialBase)\n\t{\n\t\tthis._material = material;\n\t}\n\n\t/**\n\t * //TODO\n\t *\n\t * @param materialOwner\n\t * @returns ITexture\n\t */\n\tpublic getItem(materialPass:MaterialPassBase):MaterialPassData\n\t{\n\t\treturn (this._pool[materialPass.id] || (this._pool[materialPass.id] = this._material._iAddMaterialPassData(materialPass._iAddMaterialPassData(new MaterialPassData(this, this._material, materialPass)))));\n\t}\n\n\t/**\n\t * //TODO\n\t *\n\t * @param materialOwner\n\t */\n\tpublic disposeItem(materialPass:MaterialPassBase)\n\t{\n\t\tmaterialPass._iRemoveMaterialPassData(this._pool[materialPass.id]);\n\n\t\tdelete this._pool[materialPass.id];\n\t}\n\n\tpublic disposePool()\n\t{\n\t\tfor (var id in this._pool)\n\t\t\t(<MaterialPassData> this._pool[id]).materialPass._iRemoveMaterialPassData(this._pool[id]);\n\n\t\tdelete this._pool;\n\t}\n}\n\nexport = MaterialPassDataPool;","import IMaterialPassData\t\t\t= require(\"awayjs-display/lib/pool/IMaterialPassData\");\n\nimport MaterialPassDataPool\t\t\t= require(\"awayjs-stagegl/lib/pool/MaterialPassDataPool\");\nimport ProgramData\t\t\t\t\t= require(\"awayjs-stagegl/lib/pool/ProgramData\");\nimport ContextGLBase\t\t\t\t= require(\"awayjs-stagegl/lib/base/ContextGLBase\");\nimport StageGLMaterialBase\t\t\t= require(\"awayjs-stagegl/lib/materials/StageGLMaterialBase\");\nimport MaterialPassBase\t\t\t\t= require(\"awayjs-stagegl/lib/materials/passes/MaterialPassBase\");\nimport ShaderObjectBase\t\t\t\t= require(\"awayjs-stagegl/lib/materials/compilation/ShaderObjectBase\");\n\n/**\n *\n * @class away.pool.MaterialPassData\n */\nclass MaterialPassData implements IMaterialPassData\n{\n\tprivate _pool:MaterialPassDataPool;\n\n\tpublic material:StageGLMaterialBase;\n\n\tpublic shaderObject:ShaderObjectBase;\n\n\tpublic materialPass:MaterialPassBase;\n\n\tpublic programData:ProgramData;\n\n\tpublic shadedTarget:string;\n\n\tpublic vertexCode:string;\n\n\tpublic postAnimationFragmentCode:string;\n\n\tpublic fragmentCode:string;\n\n\tpublic animationVertexCode:string = \"\";\n\n\tpublic animationFragmentCode:string = \"\";\n\n\tpublic key:string;\n\n\tpublic invalid:boolean;\n\n\tpublic usesAnimation:boolean;\n\n\tconstructor(pool:MaterialPassDataPool, material:StageGLMaterialBase, materialPass:MaterialPassBase)\n\t{\n\t\tthis._pool = pool;\n\t\tthis.material = material;\n\t\tthis.materialPass = materialPass;\n\t}\n\n\t/**\n\t *\n\t */\n\tpublic dispose()\n\t{\n\t\tthis._pool.disposeItem(this.materialPass);\n\n\t\tthis.shaderObject.dispose();\n\t\tthis.shaderObject = null;\n\n\t\tthis.programData.dispose();\n\t\tthis.programData = null;\n\t}\n\n\t/**\n\t *\n\t */\n\tpublic invalidate()\n\t{\n\t\tthis.invalid = true;\n\t}\n}\n\nexport = MaterialPassData;","import TextureProxyBase\t\t\t\t= require(\"awayjs-core/lib/textures/TextureProxyBase\");\n\nimport ProgramData\t\t\t\t\t= require(\"awayjs-stagegl/lib/pool/ProgramData\");\nimport ContextGLBase\t\t\t\t= require(\"awayjs-stagegl/lib/base/ContextGLBase\");\nimport ShaderObjectBase\t\t\t\t= require(\"materials/compilation/ShaderObjectBase\");\n\n/**\n * @class away.pool.ProgramDataPool\n */\nclass ProgramDataPool\n{\n\tprivate _pool:Object = new Object();\n\tprivate _context:ContextGLBase;\n\n\t/**\n\t * //TODO\n\t *\n\t * @param textureDataClass\n\t */\n\tconstructor(context:ContextGLBase)\n\t{\n\t\tthis._context = context;\n\t}\n\n\t/**\n\t * //TODO\n\t *\n\t * @param materialOwner\n\t * @returns ITexture\n\t */\n\tpublic getItem(key:string):ProgramData\n\t{\n\t\treturn this._pool[key] || (this._pool[key] = new ProgramData(this, this._context, key));\n\t}\n\n\t/**\n\t * //TODO\n\t *\n\t * @param materialOwner\n\t */\n\tpublic disposeItem(key:string)\n\t{\n\t\tthis._pool[key] = null;\n\t}\n}\n\nexport = ProgramDataPool;","import ProgramDataPool\t\t\t\t= require(\"awayjs-stagegl/lib/pool/ProgramDataPool\");\nimport ContextGLBase\t\t\t\t= require(\"awayjs-stagegl/lib/base/ContextGLBase\");\nimport IProgram\t\t\t\t\t\t= require(\"awayjs-stagegl/lib/base/IProgram\");\n\n/**\n *\n * @class away.pool.ProgramDataBase\n */\nclass ProgramData\n{\n\tpublic static PROGRAMDATA_ID_COUNT:number = 0;\n\n\tprivate _pool:ProgramDataPool;\n\tprivate _key:string;\n\n\tpublic context:ContextGLBase;\n\n\tpublic usages:number = 0;\n\n\tpublic program:IProgram;\n\n\tpublic id:number;\n\n\tconstructor(pool:ProgramDataPool, context:ContextGLBase, key:string)\n\t{\n\t\tthis._pool = pool;\n\t\tthis.context = context;\n\t\tthis._key = key;\n\t\tthis.context.registerProgram(this);\n\t}\n\n\t/**\n\t *\n\t */\n\tpublic dispose()\n\t{\n\t\tthis.usages--;\n\n\t\tif (!this.usages) {\n\t\t\tthis._pool.disposeItem(this._key);\n\n\t\t\tthis.context.unRegisterProgram(this);\n\n\t\t\tif (this.program)\n\t\t\t\tthis.program.dispose();\n\t\t}\n\n\t\tthis.program = null;\n\t}\n}\n\nexport = ProgramData;","import Matrix3D\t\t\t\t\t\t= require(\"awayjs-core/lib/geom/Matrix3D\");\nimport AbstractMethodError\t\t\t= require(\"awayjs-core/lib/errors/AbstractMethodError\");\n\nimport IMaterialOwner\t\t\t\t= require(\"awayjs-display/lib/base/IMaterialOwner\");\nimport SubGeometryBase\t\t\t\t= require(\"awayjs-display/lib/base/SubGeometryBase\");\nimport TriangleSubGeometry\t\t\t= require(\"awayjs-display/lib/base/TriangleSubGeometry\");\nimport IRenderable\t\t\t\t\t= require(\"awayjs-display/lib/pool/IRenderable\");\nimport RenderablePool\t\t\t\t= require(\"awayjs-display/lib/pool/RenderablePool\");\nimport IEntity\t\t\t\t\t\t= require(\"awayjs-display/lib/entities/IEntity\");\nimport SubGeometryEvent\t\t\t\t= require(\"awayjs-display/lib/events/SubGeometryEvent\");\nimport MaterialBase\t\t\t\t\t= require(\"awayjs-display/lib/materials/MaterialBase\");\n\nimport IndexData\t\t\t\t\t= require(\"awayjs-stagegl/lib/pool/IndexData\");\nimport IndexDataPool\t\t\t\t= require(\"awayjs-stagegl/lib/pool/IndexDataPool\");\nimport VertexData\t\t\t\t\t= require(\"awayjs-stagegl/lib/pool/VertexData\");\nimport VertexDataPool\t\t\t\t= require(\"awayjs-stagegl/lib/pool/VertexDataPool\");\n\n/**\n * @class RenderableListItem\n */\nclass RenderableBase implements IRenderable\n{\n\tprivate _onIndicesUpdatedDelegate:(event:SubGeometryEvent) => void;\n\tprivate _onVerticesUpdatedDelegate:(event:SubGeometryEvent) => void;\n\n\tprivate _subGeometry:SubGeometryBase;\n\tprivate _geometryDirty:boolean = true;\n\tprivate _indexData:IndexData;\n\tprivate _indexDataDirty:boolean = true;\n\tprivate _vertexData:Object = new Object();\n\tpublic _pVertexDataDirty:Object = new Object();\n\tprivate _vertexOffset:Object = new Object();\n\n\tprivate _level:number;\n\tprivate _indexOffset:number;\n\tprivate _overflow:RenderableBase;\n\tprivate _numTriangles:number;\n\tprivate _concatenateArrays:boolean;\n\n\n\tpublic JOINT_INDEX_FORMAT:string;\n\tpublic JOINT_WEIGHT_FORMAT:string;\n\n\t/**\n\t *\n\t */\n\tpublic _pool:RenderablePool;\n\n\t/**\n\t *\n\t */\n\tpublic get overflow():RenderableBase\n\t{\n\t\tif (this._indexDataDirty)\n\t\t\tthis._updateIndexData();\n\n\t\treturn this._overflow;\n\t}\n\n\t/**\n\t *\n\t */\n\tpublic get numTriangles():number\n\t{\n\t\treturn this._numTriangles;\n\t}\n\n\t/**\n\t *\n\t */\n\tpublic next:RenderableBase;\n\n\t/**\n\t *\n\t */\n\tpublic materialId:number;\n\n\t/**\n\t *\n\t */\n\tpublic renderOrderId:number;\n\n\t/**\n\t *\n\t */\n\tpublic zIndex:number;\n\n\t/**\n\t *\n\t */\n\tpublic cascaded:boolean;\n\n\t/**\n\t *\n\t */\n\tpublic renderSceneTransform:Matrix3D;\n\n\t/**\n\t *\n\t */\n\tpublic sourceEntity:IEntity;\n\n\t/**\n\t *\n\t */\n\tpublic materialOwner:IMaterialOwner;\n\n\t/**\n\t *\n\t */\n\tpublic material:MaterialBase;\n\n\t/**\n\t *\n\t */\n\tpublic getIndexData():IndexData\n\t{\n\t\tif (this._indexDataDirty)\n\t\t\tthis._updateIndexData();\n\n\t\treturn this._indexData;\n\t}\n\n\t/**\n\t *\n\t */\n\tpublic getVertexData(dataType:string):VertexData\n\t{\n\t\tif (this._indexDataDirty)\n\t\t\tthis._updateIndexData();\n\n\t\tif (this._pVertexDataDirty[dataType])\n\t\t\tthis._updateVertexData(dataType);\n\n\t\treturn this._vertexData[this._concatenateArrays? TriangleSubGeometry.VERTEX_DATA : dataType]\n\t}\n\n\t/**\n\t *\n\t */\n\tpublic getVertexOffset(dataType:string):number\n\t{\n\t\tif (this._indexDataDirty)\n\t\t\tthis._updateIndexData();\n\n\t\tif (this._pVertexDataDirty[dataType])\n\t\t\tthis._updateVertexData(dataType);\n\n\t\treturn this._vertexOffset[dataType];\n\t}\n\n\t/**\n\t *\n\t * @param sourceEntity\n\t * @param materialOwner\n\t * @param subGeometry\n\t * @param animationSubGeometry\n\t */\n\tconstructor(pool:RenderablePool, sourceEntity:IEntity, materialOwner:IMaterialOwner, level:number = 0, indexOffset:number = 0)\n\t{\n\t\tthis._onIndicesUpdatedDelegate = (event:SubGeometryEvent) => this._onIndicesUpdated(event);\n\t\tthis._onVerticesUpdatedDelegate = (event:SubGeometryEvent) => this._onVerticesUpdated(event);\n\n\t\t//store a reference to the pool for later disposal\n\t\tthis._pool = pool;\n\n\t\t//reference to level of overflow\n\t\tthis._level = level;\n\n\t\t//reference to the offset on indices (if this is an overflow renderable)\n\t\tthis._indexOffset = indexOffset;\n\n\t\tthis.sourceEntity = sourceEntity;\n\t\tthis.materialOwner = materialOwner;\n\t}\n\n\tpublic dispose()\n\t{\n\t\tthis._pool.disposeItem(this.materialOwner);\n\n\t\tthis._indexData.dispose();\n\t\tthis._indexData = null;\n\n\t\tfor (var dataType in this._vertexData) {\n\t\t\t(<VertexData> this._vertexData[dataType]).dispose();\n\t\t\tthis._vertexData[dataType] = null;\n\t\t}\n\n\t\tif (this._overflow) {\n\t\t\tthis._overflow.dispose();\n\t\t\tthis._overflow = null;\n\t\t}\n\t}\n\n\tpublic invalidateGeometry()\n\t{\n\t\tthis._geometryDirty = true;\n\n\t\t//invalidate indices\n\t\tif (this._level == 0)\n\t\t\tthis._indexDataDirty = true;\n\n\t\tif (this._overflow)\n\t\t\tthis._overflow.invalidateGeometry();\n\t}\n\n\t/**\n\t *\n\t */\n\tpublic invalidateIndexData()\n\t{\n\t\tthis._indexDataDirty = true;\n\t}\n\n\t/**\n\t * //TODO\n\t *\n\t * @param dataType\n\t */\n\tpublic invalidateVertexData(dataType:string)\n\t{\n\t\tthis._pVertexDataDirty[dataType] = true;\n\t}\n\n\tpublic _pGetSubGeometry():SubGeometryBase\n\t{\n\t\tthrow new AbstractMethodError();\n\t}\n\n\t/**\n\t * //TODO\n\t *\n\t * @param subGeometry\n\t * @param offset\n\t * @internal\n\t */\n\tpublic _iFillIndexData(indexOffset:number)\n\t{\n\t\tif (this._geometryDirty)\n\t\t\tthis._updateGeometry();\n\n\t\tthis._indexData = IndexDataPool.getItem(this._subGeometry, this._level, indexOffset);\n\n\t\tthis._numTriangles = this._indexData.data.length/3;\n\n\t\tindexOffset = this._indexData.offset;\n\n\t\t//check if there is more to split\n\t\tif (indexOffset < this._subGeometry.indices.length) {\n\t\t\tif (!this._overflow)\n\t\t\t\tthis._overflow = this._pGetOverflowRenderable(this._pool, this.materialOwner, indexOffset, this._level + 1);\n\n\t\t\tthis._overflow._iFillIndexData(indexOffset);\n\t\t} else if (this._overflow) {\n\t\t\tthis._overflow.dispose();\n\t\t\tthis._overflow = null;\n\t\t}\n\t}\n\n\tpublic _pGetOverflowRenderable(pool:RenderablePool, materialOwner:IMaterialOwner, level:number, indexOffset:number):RenderableBase\n\t{\n\t\tthrow new AbstractMethodError();\n\t}\n\n\t/**\n\t * //TODO\n\t *\n\t * @private\n\t */\n\tprivate _updateGeometry()\n\t{\n\t\tif (this._subGeometry) {\n\t\t\tif (this._level == 0)\n\t\t\t\tthis._subGeometry.removeEventListener(SubGeometryEvent.INDICES_UPDATED, this._onIndicesUpdatedDelegate);\n\t\t\tthis._subGeometry.removeEventListener(SubGeometryEvent.VERTICES_UPDATED, this._onVerticesUpdatedDelegate);\n\t\t}\n\n\t\tthis._subGeometry = this._pGetSubGeometry();\n\n\t\tthis._concatenateArrays = this._subGeometry.concatenateArrays;\n\n\t\tif (this._subGeometry) {\n\t\t\tif (this._level == 0)\n\t\t\t\tthis._subGeometry.addEventListener(SubGeometryEvent.INDICES_UPDATED, this._onIndicesUpdatedDelegate);\n\t\t\tthis._subGeometry.addEventListener(SubGeometryEvent.VERTICES_UPDATED, this._onVerticesUpdatedDelegate);\n\t\t}\n\n\t\t//dispose\n//\t\t\tif (this._indexData) {\n//\t\t\t\tthis._indexData.dispose(); //TODO where is a good place to dispose?\n//\t\t\t\tthis._indexData = null;\n//\t\t\t}\n\n//\t\t\tfor (var dataType in this._vertexData) {\n//\t\t\t\t(<VertexData> this._vertexData[dataType]).dispose(); //TODO where is a good place to dispose?\n//\t\t\t\tthis._vertexData[dataType] = null;\n//\t\t\t}\n\n\t\tthis._geometryDirty = false;\n\n\t\t//specific vertex data types have to be invalidated in the specific renderable\n\t}\n\n\t/**\n\t * //TODO\n\t *\n\t * @private\n\t */\n\tprivate _updateIndexData()\n\t{\n\t\tthis._iFillIndexData(this._indexOffset);\n\n\t\tthis._indexDataDirty = false;\n\t}\n\n\t/**\n\t * //TODO\n\t *\n\t * @param dataType\n\t * @private\n\t */\n\tprivate _updateVertexData(dataType:string)\n\t{\n\t\tthis._vertexOffset[dataType] = this._subGeometry.getOffset(dataType);\n\n\t\tif (this._subGeometry.concatenateArrays)\n\t\t\tdataType = SubGeometryBase.VERTEX_DATA;\n\n\t\tthis._vertexData[dataType] = VertexDataPool.getItem(this._subGeometry, this.getIndexData(), dataType);\n\n\t\tthis._pVertexDataDirty[dataType] = false;\n\t}\n\n\t/**\n\t * //TODO\n\t *\n\t * @param event\n\t * @private\n\t */\n\tprivate _onIndicesUpdated(event:SubGeometryEvent)\n\t{\n\t\tthis.invalidateIndexData();\n\t}\n\n\t/**\n\t * //TODO\n\t *\n\t * @param event\n\t * @private\n\t */\n\tprivate _onVerticesUpdated(event:SubGeometryEvent)\n\t{\n\t\tthis._concatenateArrays = (<SubGeometryBase> event.target).concatenateArrays;\n\n\t\tthis.invalidateVertexData(event.dataType);\n\t}\n}\n\nexport = RenderableBase;","import TriangleSubGeometry\t\t\t= require(\"awayjs-display/lib/base/TriangleSubGeometry\");\nimport RenderablePool\t\t\t\t= require(\"awayjs-display/lib/pool/RenderablePool\");\nimport Skybox\t\t\t\t\t\t= require(\"awayjs-display/lib/entities/Skybox\");\n\nimport RenderableBase\t\t\t\t= require(\"awayjs-stagegl/lib/pool/RenderableBase\");\n\n/**\n * @class away.pool.SkyboxRenderable\n */\nclass SkyboxRenderable extends RenderableBase\n{\n\t/**\n\t *\n\t */\n\tpublic static id:string = \"skybox\";\n\n\t/**\n\t *\n\t */\n\tprivate static _geometry:TriangleSubGeometry;\n\n\t/**\n\t * //TODO\n\t *\n\t * @param pool\n\t * @param skybox\n\t */\n\tconstructor(pool:RenderablePool, skybox:Skybox)\n\t{\n\t\tsuper(pool, skybox, skybox);\n\t}\n\n\t/**\n\t * //TODO\n\t *\n\t * @returns {away.base.TriangleSubGeometry}\n\t * @private\n\t */\n\tpublic _pGetSubGeometry():TriangleSubGeometry\n\t{\n\t\tvar geometry:TriangleSubGeometry = SkyboxRenderable._geometry;\n\n\t\tif (!geometry) {\n\t\t\tgeometry = SkyboxRenderable._geometry = new TriangleSubGeometry(true);\n\t\t\tgeometry.autoDeriveNormals = false;\n\t\t\tgeometry.autoDeriveTangents = false;\n\t\t\tgeometry.updateIndices(Array<number>(0, 1, 2, 2, 3, 0, 6, 5, 4, 4, 7, 6, 2, 6, 7, 7, 3, 2, 4, 5, 1, 1, 0, 4, 4, 0, 3, 3, 7, 4, 2, 1, 5, 5, 6, 2));\n\t\t\tgeometry.updatePositions(Array<number>(-1, 1, -1, 1, 1, -1, 1, 1, 1, -1, 1, 1, -1, -1, -1, 1, -1, -1, 1, -1, 1, -1, -1, 1));\n\t\t}\n\n\t\tthis._pVertexDataDirty[TriangleSubGeometry.POSITION_DATA] = true;\n\n\t\treturn geometry;\n\t}\n}\n\nexport = SkyboxRenderable;","import TextureProxyBase\t\t\t\t= require(\"awayjs-core/lib/textures/TextureProxyBase\");\n\nimport TextureData\t\t\t\t\t= require(\"awayjs-stagegl/lib/pool/TextureData\");\nimport ContextGLBase\t\t\t\t= require(\"awayjs-stagegl/lib/base/ContextGLBase\");\n\n/**\n * @class away.pool.TextureDataPool\n */\nclass TextureDataPool\n{\n\tprivate _pool:Object = new Object();\n\tprivate _context:ContextGLBase;\n\n\t/**\n\t * //TODO\n\t *\n\t * @param textureDataClass\n\t */\n\tconstructor(context:ContextGLBase)\n\t{\n\t\tthis._context = context;\n\t}\n\n\t/**\n\t * //TODO\n\t *\n\t * @param materialOwner\n\t * @returns ITexture\n\t */\n\tpublic getItem(textureProxy:TextureProxyBase):TextureData\n\t{\n\t\treturn (this._pool[textureProxy.id] || (this._pool[textureProxy.id] = textureProxy._iAddTextureData(new TextureData(this, this._context, textureProxy))))\n\t}\n\n\t/**\n\t * //TODO\n\t *\n\t * @param materialOwner\n\t */\n\tpublic disposeItem(textureProxy:TextureProxyBase)\n\t{\n\t\ttextureProxy._iRemoveTextureData(this._pool[textureProxy.id]);\n\n\t\tthis._pool[textureProxy.id] = null;\n\t}\n}\n\nexport = TextureDataPool;","import ITextureData\t\t\t\t\t= require(\"awayjs-core/lib/pool/ITextureData\");\nimport TextureProxyBase\t\t\t\t= require(\"awayjs-core/lib/textures/TextureProxyBase\");\n\nimport TextureDataPool\t\t\t\t= require(\"awayjs-stagegl/lib/pool/TextureDataPool\");\nimport ContextGLBase\t\t\t\t= require(\"awayjs-stagegl/lib/base/ContextGLBase\");\nimport ITextureBase\t\t\t\t\t= require(\"awayjs-stagegl/lib/base/ITextureBase\");\n\n/**\n *\n * @class away.pool.TextureDataBase\n */\nclass TextureData implements ITextureData\n{\n\tprivate _pool:TextureDataPool;\n\n\tpublic context:ContextGLBase;\n\n\tpublic texture:ITextureBase;\n\n\tpublic textureProxy:TextureProxyBase;\n\n\tpublic invalid:boolean;\n\n\tconstructor(pool:TextureDataPool, context:ContextGLBase, textureProxy:TextureProxyBase)\n\t{\n\t\tthis._pool = pool;\n\t\tthis.context = context;\n\t\tthis.textureProxy = textureProxy;\n\t}\n\n\t/**\n\t *\n\t */\n\tpublic dispose()\n\t{\n\t\tthis._pool.disposeItem(this.textureProxy);\n\n\t\tthis.texture.dispose();\n\t\tthis.texture = null;\n\t}\n\n\t/**\n\t *\n\t */\n\tpublic invalidate()\n\t{\n\t\tthis.invalid = true;\n\t}\n}\n\nexport = TextureData;","import IMaterialOwner\t\t\t\t= require(\"awayjs-display/lib/base/IMaterialOwner\");\nimport TriangleSubMesh\t\t\t\t= require(\"awayjs-display/lib/base/TriangleSubMesh\");\nimport TriangleSubGeometry\t\t\t= require(\"awayjs-display/lib/base/TriangleSubGeometry\");\nimport RenderablePool\t\t\t\t= require(\"awayjs-display/lib/pool/RenderablePool\");\n\nimport RenderableBase\t\t\t\t= require(\"awayjs-stagegl/lib/pool/RenderableBase\");\nimport ContextGLVertexBufferFormat\t= require(\"awayjs-stagegl/lib/base/ContextGLVertexBufferFormat\");\n\n/**\n * @class away.pool.TriangleSubMeshRenderable\n */\nclass TriangleSubMeshRenderable extends RenderableBase\n{\n\t/**\n\t *\n\t */\n\tpublic static id:string = \"trianglesubmesh\";\n\n\t/**\n\t *\n\t */\n\tpublic subMesh:TriangleSubMesh;\n\n\n\t/**\n\t * //TODO\n\t *\n\t * @param pool\n\t * @param subMesh\n\t * @param level\n\t * @param indexOffset\n\t */\n\tconstructor(pool:RenderablePool, subMesh:TriangleSubMesh, level:number = 0, indexOffset:number = 0)\n\t{\n\t\tsuper(pool, subMesh.parentMesh, subMesh, level, indexOffset);\n\n\t\tthis.subMesh = subMesh;\n\t}\n\n\t/**\n\t *\n\t * @returns {SubGeometryBase}\n\t * @protected\n\t */\n\tpublic _pGetSubGeometry():TriangleSubGeometry\n\t{\n\t\tvar subGeometry:TriangleSubGeometry;\n\n\t\tif (this.subMesh.animator)\n\t\t\tsubGeometry = <TriangleSubGeometry> this.subMesh.animator.getRenderableSubGeometry(this, this.subMesh.subGeometry);\n\t\telse\n\t\t\tsubGeometry = this.subMesh.subGeometry;\n\n\t\tthis._pVertexDataDirty[TriangleSubGeometry.POSITION_DATA] = true;\n\n\t\tif (subGeometry.vertexNormals)\n\t\t\tthis._pVertexDataDirty[TriangleSubGeometry.NORMAL_DATA] = true;\n\n\t\tif (subGeometry.vertexTangents)\n\t\t\tthis._pVertexDataDirty[TriangleSubGeometry.TANGENT_DATA] = true;\n\n\t\tif (subGeometry.uvs)\n\t\t\tthis._pVertexDataDirty[TriangleSubGeometry.UV_DATA] = true;\n\n\t\tif (subGeometry.secondaryUVs)\n\t\t\tthis._pVertexDataDirty[TriangleSubGeometry.SECONDARY_UV_DATA] = true;\n\n\t\tif (subGeometry.jointIndices)\n\t\t\tthis._pVertexDataDirty[TriangleSubGeometry.JOINT_INDEX_DATA] = true;\n\n\t\tif (subGeometry.jointWeights)\n\t\t\tthis._pVertexDataDirty[TriangleSubGeometry.JOINT_WEIGHT_DATA] = true;\n\n\t\tswitch(subGeometry.jointsPerVertex) {\n\t\t\tcase 1:\n\t\t\t\tthis.JOINT_INDEX_FORMAT = this.JOINT_WEIGHT_FORMAT = ContextGLVertexBufferFormat.FLOAT_1;\n\t\t\t\tbreak;\n\t\t\tcase 2:\n\t\t\t\tthis.JOINT_INDEX_FORMAT = this.JOINT_WEIGHT_FORMAT = ContextGLVertexBufferFormat.FLOAT_2;\n\t\t\t\tbreak;\n\t\t\tcase 3:\n\t\t\t\tthis.JOINT_INDEX_FORMAT = this.JOINT_WEIGHT_FORMAT = ContextGLVertexBufferFormat.FLOAT_3;\n\t\t\t\tbreak;\n\t\t\tcase 4:\n\t\t\t\tthis.JOINT_INDEX_FORMAT = this.JOINT_WEIGHT_FORMAT = ContextGLVertexBufferFormat.FLOAT_4;\n\t\t\t\tbreak;\n\t\t\tdefault:\n\t\t}\n\n\t\treturn subGeometry;\n\t}\n\n\t/**\n\t * //TODO\n\t *\n\t * @param pool\n\t * @param materialOwner\n\t * @param level\n\t * @param indexOffset\n\t * @returns {away.pool.TriangleSubMeshRenderable}\n\t * @protected\n\t */\n\tpublic _pGetOverflowRenderable(pool:RenderablePool, materialOwner:IMaterialOwner, level:number, indexOffset:number):RenderableBase\n\t{\n\t\treturn new TriangleSubMeshRenderable(pool, <TriangleSubMesh> materialOwner, level, indexOffset);\n\t}\n}\n\nexport = TriangleSubMeshRenderable;","import SubGeometryBase\t\t\t\t= require(\"awayjs-display/lib/base/SubGeometryBase\");\n\nimport IndexData\t\t\t\t\t= require(\"awayjs-stagegl/lib/pool/IndexData\");\nimport VertexData\t\t\t\t\t= require(\"awayjs-stagegl/lib/pool/VertexData\");\n\n/**\n *\n */\nclass VertexDataPool\n{\n\tprivate static _pool:Object = new Object();\n\n\tconstructor()\n\t{\n\t}\n\n\tpublic static getItem(subGeometry:SubGeometryBase, indexData:IndexData, dataType:string):VertexData\n\t{\n\t\tif (subGeometry.concatenateArrays)\n\t\t\tdataType = SubGeometryBase.VERTEX_DATA;\n\n\t\tvar subGeometryDictionary:Object = <Object> (VertexDataPool._pool[subGeometry.id] || (VertexDataPool._pool[subGeometry.id] = new Object()));\n\t\tvar subGeometryData:Array<VertexData> = <Array<VertexData>> (subGeometryDictionary[dataType] || (subGeometryDictionary[dataType] = new Array<VertexData>()));\n\n\t\tvar vertexData:VertexData = subGeometryData[indexData.level] || (subGeometryData[indexData.level] = new VertexData(subGeometry, dataType));\n\t\tvertexData.updateData(indexData.originalIndices, indexData.indexMappings);\n\n\t\treturn vertexData;\n\t}\n\n\tpublic static disposeItem(subGeometry:SubGeometryBase, level:number, dataType:string)\n\t{\n\t\tvar subGeometryDictionary:Object = <Object> VertexDataPool._pool[subGeometry.id];\n\t\tvar subGeometryData:Array<VertexData> = <Array<VertexData>> subGeometryDictionary[dataType];\n\n\t\tsubGeometryData[level].dispose();\n\t\tsubGeometryData[level] = null;\n\t}\n\n\tpublic disposeData(subGeometry:SubGeometryBase)\n\t{\n\t\tvar subGeometryDictionary:Object = <Object> VertexDataPool._pool[subGeometry.id];\n\n\t\tfor (var key in subGeometryDictionary) {\n\t\t\tvar subGeometryData:Array<VertexData> = <Array<VertexData>> subGeometryDictionary[key];\n\n\t\t\tvar len:number = subGeometryData.length;\n\t\t\tfor (var i:number = 0; i < len; i++) {\n\t\t\t\tsubGeometryData[i].dispose();\n\t\t\t\tsubGeometryData[i] = null;\n\t\t\t}\n\t\t}\n\n\t\tVertexDataPool._pool[subGeometry.id] = null;\n\t}\n}\n\nexport = VertexDataPool;","import SubGeometryBase\t\t\t\t= require(\"awayjs-display/lib/base/SubGeometryBase\");\nimport SubGeometryEvent\t\t\t\t= require(\"awayjs-display/lib/events/SubGeometryEvent\");\n\nimport ContextGLBase\t\t\t\t= require(\"awayjs-stagegl/lib/base/ContextGLBase\");\nimport IVertexBuffer\t\t\t\t= require(\"awayjs-stagegl/lib/base/IVertexBuffer\");\n\n/**\n *\n */\nclass VertexData\n{\n\tprivate _onVerticesUpdatedDelegate:(event:SubGeometryEvent) => void;\n\tprivate _subGeometry:SubGeometryBase;\n\tprivate _dataType:string;\n\tprivate _dataDirty = true;\n\n\tpublic invalid:Array<boolean> = new Array<boolean>(8);\n\n\tpublic buffers:Array<IVertexBuffer> = new Array<IVertexBuffer>(8);\n\n\tpublic contexts:Array<ContextGLBase> = new Array<ContextGLBase>(8);\n\n\tpublic data:Array<number>;\n\n\tpublic dataPerVertex:number;\n\n\tconstructor(subGeometry:SubGeometryBase, dataType:string)\n\t{\n\t\tthis._subGeometry = subGeometry;\n\t\tthis._dataType = dataType;\n\n\t\tthis._onVerticesUpdatedDelegate = (event:SubGeometryEvent) => this._onVerticesUpdated(event);\n\t\tthis._subGeometry.addEventListener(SubGeometryEvent.VERTICES_UPDATED, this._onVerticesUpdatedDelegate);\n\t}\n\n\tpublic updateData(originalIndices:Array<number> = null, indexMappings:Array<number> = null)\n\t{\n\t\tif (this._dataDirty) {\n\t\t\tthis._dataDirty = false;\n\n\t\t\tthis.dataPerVertex = this._subGeometry.getStride(this._dataType);\n\n\t\t\tvar vertices:Array<number> = this._subGeometry[this._dataType];\n\n\t\t\tif (indexMappings == null) {\n\t\t\t\tthis.setData(vertices);\n\t\t\t} else {\n\t\t\t\tvar splitVerts:Array<number> = new Array<number>(originalIndices.length*this.dataPerVertex);\n\t\t\t\tvar originalIndex:number;\n\t\t\t\tvar splitIndex:number;\n\t\t\t\tvar i:number = 0;\n\t\t\t\tvar j:number = 0;\n\t\t\t\twhile(i < originalIndices.length) {\n\t\t\t\t\toriginalIndex = originalIndices[i];\n\n\t\t\t\t\tsplitIndex = indexMappings[originalIndex]*this.dataPerVertex;\n\t\t\t\t\toriginalIndex *= this.dataPerVertex;\n\n\t\t\t\t\tfor (j = 0; j < this.dataPerVertex; j++)\n\t\t\t\t\t\tsplitVerts[splitIndex + j] = vertices[originalIndex + j];\n\n\t\t\t\t\ti++;\n\t\t\t\t}\n\n\t\t\t\tthis.setData(splitVerts);\n\t\t\t}\n\t\t}\n\t}\n\n\tpublic dispose()\n\t{\n\t\tfor (var i:number = 0; i < 8; ++i) {\n\t\t\tif (this.contexts[i]) {\n\t\t\t\tthis.contexts[i].disposeVertexData(this);\n\t\t\t\tthis.contexts[i] = null;\n\t\t\t}\n\t\t}\n\t}\n\n\t/**\n\t * @private\n\t */\n\tprivate disposeBuffers()\n\t{\n\t\tfor (var i:number = 0; i < 8; ++i) {\n\t\t\tif (this.buffers[i]) {\n\t\t\t\tthis.buffers[i].dispose();\n\t\t\t\tthis.buffers[i] = null;\n\t\t\t}\n\t\t}\n\t}\n\n\t/**\n\t * @private\n\t */\n\tprivate invalidateBuffers()\n\t{\n\t\tfor (var i:number = 0; i < 8; ++i)\n\t\t\tthis.invalid[i] = true;\n\t}\n\n\t/**\n\t *\n\t * @param data\n\t * @param dataPerVertex\n\t * @private\n\t */\n\tprivate setData(data:Array<number>)\n\t{\n\t\tif (this.data && this.data.length != data.length)\n\t\t\tthis.disposeBuffers();\n\t\telse\n\t\t\tthis.invalidateBuffers();\n\n\t\tthis.data = data;\n\t}\n\n\t/**\n\t * //TODO\n\t *\n\t * @param event\n\t * @private\n\t */\n\tprivate _onVerticesUpdated(event:SubGeometryEvent)\n\t{\n\t\tvar dataType:string = this._subGeometry.concatenateArrays? SubGeometryBase.VERTEX_DATA : event.dataType;\n\n\t\tif (dataType == this._dataType)\n\t\t\tthis._dataDirty = true;\n\t}\n}\n\nexport = VertexData;","import Matrix3D\t\t\t\t\t\t= require(\"awayjs-core/lib/geom/Matrix3D\");\nimport Rectangle\t\t\t\t\t= require(\"awayjs-core/lib/geom/Rectangle\");\nimport Vector3D\t\t\t\t\t\t= require(\"awayjs-core/lib/geom/Vector3D\");\nimport RenderTexture\t\t\t\t= require(\"awayjs-core/lib/textures/RenderTexture\");\nimport TextureProxyBase\t\t\t\t= require(\"awayjs-core/lib/textures/TextureProxyBase\");\n\nimport LightBase\t\t\t\t\t= require(\"awayjs-display/lib/base/LightBase\");\nimport RenderablePool\t\t\t\t= require(\"awayjs-display/lib/pool/RenderablePool\");\nimport IRenderer\t\t\t\t\t= require(\"awayjs-display/lib/render/IRenderer\");\nimport EntityCollector\t\t\t\t= require(\"awayjs-display/lib/traverse/EntityCollector\");\nimport ICollector\t\t\t\t\t= require(\"awayjs-display/lib/traverse/ICollector\");\nimport Camera\t\t\t\t\t\t= require(\"awayjs-display/lib/entities/Camera\");\nimport DirectionalLight\t\t\t\t= require(\"awayjs-display/lib/entities/DirectionalLight\");\nimport PointLight\t\t\t\t\t= require(\"awayjs-display/lib/entities/PointLight\");\nimport MaterialBase\t\t\t\t\t= require(\"awayjs-display/lib/materials/MaterialBase\");\nimport IMaterialPass\t\t\t\t= require(\"awayjs-display/lib/materials/passes/IMaterialPass\");\nimport ShadowMapperBase\t\t\t\t= require(\"awayjs-display/lib/materials/shadowmappers/ShadowMapperBase\");\n\nimport Stage\t\t\t\t\t\t= require(\"awayjs-stagegl/lib/base/Stage\");\nimport MaterialData\t\t\t\t\t= require(\"awayjs-stagegl/lib/pool/MaterialData\");\nimport MaterialPassData\t\t\t\t= require(\"awayjs-stagegl/lib/pool/MaterialPassData\");\nimport RenderableBase\t\t\t\t= require(\"awayjs-stagegl/lib/pool/RenderableBase\");\nimport SkyboxRenderable\t\t\t\t= require(\"awayjs-stagegl/lib/pool/SkyboxRenderable\");\nimport DepthRenderer\t\t\t\t= require(\"awayjs-stagegl/lib/render/DepthRenderer\");\nimport Filter3DRenderer\t\t\t\t= require(\"awayjs-stagegl/lib/render/Filter3DRenderer\");\nimport RendererBase\t\t\t\t\t= require(\"awayjs-stagegl/lib/render/RendererBase\");\nimport ContextGLBlendFactor\t\t\t= require(\"awayjs-stagegl/lib/base/ContextGLBlendFactor\");\nimport ContextGLCompareMode\t\t\t= require(\"awayjs-stagegl/lib/base/ContextGLCompareMode\");\nimport ContextGLClearMask\t\t\t= require(\"awayjs-stagegl/lib/base/ContextGLClearMask\");\nimport IContextStageGL\t\t\t\t= require(\"awayjs-stagegl/lib/base/IContextStageGL\");\nimport Filter3DBase\t\t\t\t\t= require(\"awayjs-stagegl/lib/filters/Filter3DBase\");\nimport RTTBufferManager\t\t\t\t= require(\"awayjs-stagegl/lib/managers/RTTBufferManager\");\nimport StageManager\t\t\t\t\t= require(\"awayjs-stagegl/lib/managers/StageManager\");\nimport DepthMapPass\t\t\t\t\t= require(\"awayjs-stagegl/lib/materials/passes/DepthMapPass\");\nimport DistanceMapPass\t\t\t\t= require(\"awayjs-stagegl/lib/materials/passes/DistanceMapPass\");\nimport MaterialPassBase\t\t\t\t= require(\"awayjs-stagegl/lib/materials/passes/MaterialPassBase\");\n\n/**\n * The DefaultRenderer class provides the default rendering method. It renders the scene graph objects using the\n * materials assigned to them.\n *\n * @class away.render.DefaultRenderer\n */\nclass DefaultRenderer extends RendererBase implements IRenderer\n{\n\tpublic _pRequireDepthRender:boolean;\n\tprivate _skyboxRenderablePool:RenderablePool;\n\n//\t\tprivate _activeMaterial:MaterialBase;\n\tprivate _pDistanceRenderer:DepthRenderer;\n\tprivate _pDepthRenderer:DepthRenderer;\n\tprivate _skyboxProjection:Matrix3D = new Matrix3D();\n\tpublic _pFilter3DRenderer:Filter3DRenderer;\n\n\tpublic _pDepthRender:TextureProxyBase;\n\n\tprivate _antiAlias:number;\n\n\tpublic get antiAlias():number\n\t{\n\t\treturn this._antiAlias;\n\t}\n\n\tpublic set antiAlias(value:number)\n\t{\n\t\tif (this._antiAlias == value)\n\t\t\treturn;\n\n\t\tthis._antiAlias = value;\n\n\t\tthis._pBackBufferInvalid = true;\n\t}\n\n\t/**\n\t *\n\t */\n\tpublic get depthPrepass():boolean\n\t{\n\t\treturn this._depthPrepass;\n\t}\n\n\tpublic set depthPrepass(value:boolean)\n\t{\n\t\tthis._depthPrepass = value;\n\t}\n\n\t/**\n\t *\n\t * @returns {*}\n\t */\n\tpublic get filters3d():Array<Filter3DBase>\n\t{\n\t\treturn this._pFilter3DRenderer? this._pFilter3DRenderer.filters : null;\n\t}\n\tpublic set filters3d(value:Array<Filter3DBase>)\n\t{\n\t\tif (value && value.length == 0)\n\t\t\tvalue = null;\n\n\t\tif (this._pFilter3DRenderer && !value) {\n\t\t\tthis._pFilter3DRenderer.dispose();\n\t\t\tthis._pFilter3DRenderer = null;\n\t\t} else if (!this._pFilter3DRenderer && value) {\n\t\t\tthis._pFilter3DRenderer = new Filter3DRenderer(this._pStage);\n\t\t\tthis._pFilter3DRenderer.filters = value;\n\t\t}\n\n\t\tif (this._pFilter3DRenderer) {\n\t\t\tthis._pFilter3DRenderer.filters = value;\n\t\t\tthis._pRequireDepthRender = this._pFilter3DRenderer.requireDepthRender;\n\t\t} else {\n\t\t\tthis._pRequireDepthRender = false;\n\n\t\t\tif (this._pDepthRender) {\n\t\t\t\tthis._pDepthRender.dispose();\n\t\t\t\tthis._pDepthRender = null;\n\t\t\t}\n\t\t}\n\t}\n\n\t/**\n\t * Creates a new DefaultRenderer object.\n\t *\n\t * @param antiAlias The amount of anti-aliasing to use.\n\t * @param renderMode The render mode to use.\n\t */\n\tconstructor(forceSoftware:boolean = false, profile:string = \"baseline\", mode = \"auto\")\n\t{\n\t\tsuper();\n\n\t\tthis._skyboxRenderablePool = RenderablePool.getPool(SkyboxRenderable);\n\n\t\tthis._pDepthRenderer = new DepthRenderer(new DepthMapPass());\n\t\tthis._pDistanceRenderer = new DepthRenderer(new DistanceMapPass());\n\n\t\tif (this._pStage == null)\n\t\t\tthis.stage = StageManager.getInstance().getFreeStage(forceSoftware, profile, mode);\n\n\t\tthis._pRttBufferManager = RTTBufferManager.getInstance(this._pStage);\n\n\t\tif (this._width == 0)\n\t\t\tthis.width = window.innerWidth;\n\t\telse\n\t\t\tthis._pRttBufferManager.viewWidth = this._width;\n\n\t\tif (this._height == 0)\n\t\t\tthis.height = window.innerHeight;\n\t\telse\n\t\t\tthis._pRttBufferManager.viewHeight = this._height;\n\t}\n\n\tpublic render(entityCollector:ICollector)\n\t{\n\t\tsuper.render(entityCollector);\n\n\t\tif (!this._pStage.recoverFromDisposal()) {//if context has Disposed by the OS,don't render at this frame\n\t\t\tthis._pBackBufferInvalid = true;\n\t\t\treturn;\n\t\t}\n\n\t\tif (this._pBackBufferInvalid)// reset or update render settings\n\t\t\tthis.pUpdateBackBuffer();\n\n\t\tif (this._shareContext && this._pContext)\n\t\t\tthis._pContext.clear(0, 0, 0, 1, 1, 0, ContextGLClearMask.DEPTH);\n\n\t\tif (this._pFilter3DRenderer) {\n\t\t\tthis.textureRatioX = this._pRttBufferManager.textureRatioX;\n\t\t\tthis.textureRatioY = this._pRttBufferManager.textureRatioY;\n\t\t} else {\n\t\t\tthis.textureRatioX = 1;\n\t\t\tthis.textureRatioY = 1;\n\t\t}\n\n\t\tif (this._pRequireDepthRender)\n\t\t\tthis.pRenderSceneDepthToTexture(<EntityCollector> entityCollector);\n\n\t\tif (this._depthPrepass)\n\t\t\tthis.pRenderDepthPrepass(<EntityCollector> entityCollector);\n\n\t\tif (this._pFilter3DRenderer && this._pContext) { //TODO\n\t\t\t//this._iRender(entityCollector, this._pFilter3DRenderer.getMainInputTexture(this._pStage), this._pRttBufferManager.renderToTextureRect);\n\t\t\t//this._pFilter3DRenderer.render(this._pStage, entityCollector.camera, this._pDepthRender);\n\n\t\t} else {\n\n\t\t\tif (this._shareContext)\n\t\t\t\tthis._iRender(entityCollector, null, this._pScissorRect);\n\t\t\telse\n\t\t\t\tthis._iRender(entityCollector);\n\t\t}\n\n\t\tsuper.render(entityCollector);\n\n\t\tif (!this._shareContext && this._pContext)\n\t\t\tthis._pContext.present();\n\n\t\t// register that a view has been rendered\n\t\tthis._pStage.bufferClear = false;\n\t}\n\n\tpublic pExecuteRender(entityCollector:EntityCollector, target:TextureProxyBase = null, scissorRect:Rectangle = null, surfaceSelector:number = 0)\n\t{\n\t\tthis.updateLights(entityCollector);\n\n\t\t// otherwise RTT will interfere with other RTTs\n\t\tif (target) {\n\t\t\tthis.pCollectRenderables(entityCollector);\n\n\t\t\tthis.drawRenderables(this._pOpaqueRenderableHead, entityCollector);\n\t\t\tthis.drawRenderables(this._pBlendedRenderableHead, entityCollector);\n\t\t}\n\n\t\tsuper.pExecuteRender(entityCollector, target, scissorRect, surfaceSelector);\n\t}\n\n\tprivate updateLights(entityCollector:EntityCollector)\n\t{\n\t\tvar dirLights:Array<DirectionalLight> = entityCollector.directionalLights;\n\t\tvar pointLights:Array<PointLight> = entityCollector.pointLights;\n\t\tvar len:number, i:number;\n\t\tvar light:LightBase;\n\t\tvar shadowMapper:ShadowMapperBase;\n\n\t\tlen = dirLights.length;\n\t\tfor (i = 0; i < len; ++i) {\n\t\t\tlight = dirLights[i];\n\n\t\t\tshadowMapper = light.shadowMapper;\n\n\t\t\tif (light.castsShadows && (shadowMapper.autoUpdateShadows || shadowMapper._iShadowsInvalid ))\n\t\t\t\tshadowMapper.iRenderDepthMap(entityCollector, this._pDepthRenderer);\n\t\t}\n\n\t\tlen = pointLights.length;\n\t\tfor (i = 0; i < len; ++i) {\n\t\t\tlight = pointLights[i];\n\n\t\t\tshadowMapper = light.shadowMapper;\n\n\t\t\tif (light.castsShadows && (shadowMapper.autoUpdateShadows || shadowMapper._iShadowsInvalid))\n\t\t\t\tshadowMapper.iRenderDepthMap(entityCollector, this._pDistanceRenderer);\n\t\t}\n\t}\n\n\t/**\n\t * @inheritDoc\n\t */\n\tpublic pDraw(entityCollector:EntityCollector, target:TextureProxyBase)\n\t{\n\t\tif (!target)\n\t\t\tthis.pCollectRenderables(entityCollector);\n\n\t\tthis._pContext.setBlendFactors(ContextGLBlendFactor.ONE, ContextGLBlendFactor.ZERO);\n\n\t\tif (entityCollector.skyBox) {\n\t\t\tthis._pContext.setDepthTest(false, ContextGLCompareMode.ALWAYS);\n\n\t\t\tthis.drawSkybox(entityCollector);\n\t\t}\n\n\t\tthis._pContext.setDepthTest(true, ContextGLCompareMode.LESS_EQUAL);\n\n\t\tthis.drawRenderables(this._pOpaqueRenderableHead, entityCollector);\n\t\tthis.drawRenderables(this._pBlendedRenderableHead, entityCollector);\n\t}\n\n\t/**\n\t * Draw the skybox if present.\n\t *\n\t * @param entityCollector The EntityCollector containing all potentially visible information.\n\t */\n\tprivate drawSkybox(entityCollector:EntityCollector)\n\t{\n\t\tvar skyBox:SkyboxRenderable = <SkyboxRenderable> this._skyboxRenderablePool.getItem(entityCollector.skyBox);\n\n\t\tvar material:MaterialBase = entityCollector.skyBox.material;\n\n\t\tvar camera:Camera = entityCollector.camera;\n\n\t\tthis.updateSkyboxProjection(camera);\n\n\t\tvar activePass:MaterialPassData = (<IContextStageGL> this._pStage.context).getMaterial(material, this._pStage.profile).getMaterialPass(<MaterialPassBase> material._iScreenPasses[0], this._pStage.profile);\n\n\t\tmaterial._iActivatePass(activePass, this._pStage, camera);\n\t\tmaterial._iRenderPass(activePass, skyBox, this._pStage, camera, this._skyboxProjection);\n\t\tmaterial._iDeactivatePass(activePass, this._pStage);\n\t}\n\n\tprivate updateSkyboxProjection(camera:Camera)\n\t{\n\t\tvar near:Vector3D = new Vector3D();\n\n\t\tthis._skyboxProjection.copyFrom(this._pRttViewProjectionMatrix);\n\t\tthis._skyboxProjection.copyRowTo(2, near);\n\n\t\tvar camPos:Vector3D = camera.scenePosition;\n\n\t\tvar cx:number = near.x;\n\t\tvar cy:number = near.y;\n\t\tvar cz:number = near.z;\n\t\tvar cw:number = -(near.x*camPos.x + near.y*camPos.y + near.z*camPos.z + Math.sqrt(cx*cx + cy*cy + cz*cz));\n\n\t\tvar signX:number = cx >= 0? 1 : -1;\n\t\tvar signY:number = cy >= 0? 1 : -1;\n\n\t\tvar p:Vector3D = new Vector3D(signX, signY, 1, 1);\n\n\t\tvar inverse:Matrix3D = this._skyboxProjection.clone();\n\t\tinverse.invert();\n\n\t\tvar q:Vector3D = inverse.transformVector(p);\n\n\t\tthis._skyboxProjection.copyRowTo(3, p);\n\n\t\tvar a:number = (q.x*p.x + q.y*p.y + q.z*p.z + q.w*p.w)/(cx*q.x + cy*q.y + cz*q.z + cw*q.w);\n\n\t\tthis._skyboxProjection.copyRowFrom(2, new Vector3D(cx*a, cy*a, cz*a, cw*a));\n\t}\n\n\t/**\n\t * Draw a list of renderables.\n\t *\n\t * @param renderables The renderables to draw.\n\t * @param entityCollector The EntityCollector containing all potentially visible information.\n\t */\n\tprivate drawRenderables(renderable:RenderableBase, entityCollector:ICollector)\n\t{\n\t\tvar i:number;\n\t\tvar len:number;\n\t\tvar passes:Array<IMaterialPass>;\n\t\tvar activePass:MaterialPassData;\n\t\tvar activeMaterial:MaterialData;\n\t\tvar context:IContextStageGL = <IContextStageGL> this._pStage.context;\n\t\tvar camera:Camera = entityCollector.camera;\n\t\tvar renderable2:RenderableBase;\n\n\t\twhile (renderable) {\n\t\t\tactiveMaterial = context.getMaterial(renderable.material, this._pStage.profile);\n\n\t\t\t//iterate through each screen pass\n\t\t\tpasses = renderable.material._iScreenPasses;\n\t\t\tlen = renderable.material._iNumScreenPasses();\n\t\t\tfor (i = 0; i < len; i++) {\n\t\t\t\trenderable2 = renderable;\n\n\t\t\t\tactivePass = activeMaterial.getMaterialPass(<MaterialPassBase> passes[i], this._pStage.profile);\n\n\t\t\t\trenderable.material._iActivatePass(activePass, this._pStage, camera);\n\n\t\t\t\tdo {\n\t\t\t\t\trenderable.material._iRenderPass(activePass, renderable2, this._pStage, camera, this._pRttViewProjectionMatrix);\n\n\t\t\t\t\trenderable2 = renderable2.next;\n\n\t\t\t\t} while (renderable2 && renderable2.material == renderable.material);\n\n\t\t\t\tactiveMaterial.material._iDeactivatePass(activePass, this._pStage);\n\t\t\t}\n\n\t\t\trenderable = renderable2;\n\t\t}\n\t}\n\n\tpublic dispose()\n\t{\n\t\tif (!this._shareContext)\n\t\t\tthis._pStage.dispose();\n\n\t\tthis._pDepthRenderer.dispose();\n\t\tthis._pDistanceRenderer.dispose();\n\t\tthis._pDepthRenderer = null;\n\t\tthis._pDistanceRenderer = null;\n\n\t\tthis._pDepthRender = null;\n\n\t\tsuper.dispose();\n\t}\n\n\n\t/**\n\t *\n\t */\n\tpublic pRenderDepthPrepass(entityCollector:EntityCollector)\n\t{\n\t\tthis._pDepthRenderer.disableColor = true;\n\n\t\tif (this._pFilter3DRenderer) { //TODO\n//\t\t\t\tthis._pDepthRenderer.textureRatioX = this._pRttBufferManager.textureRatioX;\n//\t\t\t\tthis._pDepthRenderer.textureRatioY = this._pRttBufferManager.textureRatioY;\n//\t\t\t\tthis._pDepthRenderer._iRender(entityCollector, this._pFilter3DRenderer.getMainInputTexture(this._pStage), this._pRttBufferManager.renderToTextureRect);\n\t\t} else {\n\t\t\tthis._pDepthRenderer.textureRatioX = 1;\n\t\t\tthis._pDepthRenderer.textureRatioY = 1;\n\t\t\tthis._pDepthRenderer._iRender(entityCollector);\n\t\t}\n\n\t\tthis._pDepthRenderer.disableColor = false;\n\t}\n\n\n\t/**\n\t *\n\t */\n\tpublic pRenderSceneDepthToTexture(entityCollector:EntityCollector)\n\t{\n\t\tif (this._pDepthTextureInvalid || !this._pDepthRender)\n\t\t\tthis.initDepthTexture(<IContextStageGL> this._pStage.context);\n\n\t\tthis._pDepthRenderer.textureRatioX = this._pRttBufferManager.textureRatioX;\n\t\tthis._pDepthRenderer.textureRatioY = this._pRttBufferManager.textureRatioY;\n\t\tthis._pDepthRenderer._iRender(entityCollector, this._pDepthRender);\n\t}\n\n\n\t/**\n\t * Updates the backbuffer dimensions.\n\t */\n\tpublic pUpdateBackBuffer()\n\t{\n\t\t// No reason trying to configure back buffer if there is no context available.\n\t\t// Doing this anyway (and relying on _stage to cache width/height for\n\t\t// context does get available) means usesSoftwareRendering won't be reliable.\n\t\tif (this._pStage.context && !this._shareContext) {\n\t\t\tif (this._width && this._height) {\n\t\t\t\tthis._pStage.configureBackBuffer(this._width, this._height, this._antiAlias, true);\n\t\t\t\tthis._pBackBufferInvalid = false;\n\t\t\t}\n\t\t}\n\t}\n\n\tpublic iSetStage(value:Stage)\n\t{\n\t\tsuper.iSetStage(value);\n\n\t\tthis._pDistanceRenderer.iSetStage(value);\n\t\tthis._pDepthRenderer.iSetStage(value);\n\t}\n\n\t/**\n\t *\n\t */\n\tprivate initDepthTexture(context:IContextStageGL):void\n\t{\n\t\tthis._pDepthTextureInvalid = false;\n\n\t\tif (this._pDepthRender)\n\t\t\tthis._pDepthRender.dispose();\n\n\t\tthis._pDepthRender = new RenderTexture(this._pRttBufferManager.textureWidth, this._pRttBufferManager.textureHeight);\n\t}\n}\n\nexport = DefaultRenderer;","import Plane3D\t\t\t\t\t\t= require(\"awayjs-core/lib/geom/Plane3D\");\nimport Rectangle\t\t\t\t\t= require(\"awayjs-core/lib/geom/Rectangle\");\nimport TextureProxyBase\t\t\t\t= require(\"awayjs-core/lib/textures/TextureProxyBase\");\n\nimport Camera\t\t\t\t\t\t= require(\"awayjs-display/lib/entities/Camera\");\nimport IEntity\t\t\t\t\t\t= require(\"awayjs-display/lib/entities/IEntity\");\nimport EntityCollector\t\t\t\t= require(\"awayjs-display/lib/traverse/EntityCollector\");\nimport ShadowCasterCollector\t\t= require(\"awayjs-display/lib/traverse/ShadowCasterCollector\");\n\nimport MaterialData\t\t\t\t\t= require(\"awayjs-stagegl/lib/pool/MaterialData\");\nimport MaterialPassData\t\t\t\t= require(\"awayjs-stagegl/lib/pool/MaterialPassData\");\nimport RenderableBase\t\t\t\t= require(\"awayjs-stagegl/lib/pool/RenderableBase\");\nimport RendererBase\t\t\t\t\t= require(\"awayjs-stagegl/lib/render/RendererBase\");\nimport ContextGLBlendFactor\t\t\t= require(\"awayjs-stagegl/lib/base/ContextGLBlendFactor\");\nimport ContextGLCompareMode\t\t\t= require(\"awayjs-stagegl/lib/base/ContextGLCompareMode\");\nimport IContextStageGL\t\t\t\t= require(\"awayjs-stagegl/lib/base/IContextStageGL\");\nimport MaterialPassBase\t\t\t\t= require(\"awayjs-stagegl/lib/materials/passes/MaterialPassBase\");\n\n\n/**\n * The DepthRenderer class renders 32-bit depth information encoded as RGBA\n *\n * @class away.render.DepthRenderer\n */\nclass DepthRenderer extends RendererBase\n{\n\tprivate _pass:MaterialPassBase;\n\tprivate _renderBlended:boolean;\n\tprivate _disableColor:boolean;\n\n\t/**\n\t * Creates a new DepthRenderer object.\n\t * @param renderBlended Indicates whether semi-transparent objects should be rendered.\n\t * @param distanceBased Indicates whether the written depth value is distance-based or projected depth-based\n\t */\n\tconstructor(pass:MaterialPassBase, renderBlended:boolean = false)\n\t{\n\t\tsuper();\n\n\t\tthis._pass = pass;\n\n\t\tthis._renderBlended = renderBlended;\n\t\tthis._iBackgroundR = 1;\n\t\tthis._iBackgroundG = 1;\n\t\tthis._iBackgroundB = 1;\n\n\t}\n\n\tpublic get disableColor():boolean\n\t{\n\t\treturn this._disableColor;\n\t}\n\n\tpublic set disableColor(value:boolean)\n\t{\n\t\tthis._disableColor = value;\n\t}\n\n\tpublic _iRenderCascades(entityCollector:ShadowCasterCollector, target:TextureProxyBase, numCascades:number, scissorRects:Array<Rectangle>, cameras:Array<Camera>)\n\t{\n\t\tthis.pCollectRenderables(entityCollector);\n\n\t\tthis._pContext.setRenderTarget(target, true, 0);\n\t\tthis._pContext.clear(1, 1, 1, 1, 1, 0);\n\n\t\tthis._pContext.setBlendFactors(ContextGLBlendFactor.ONE, ContextGLBlendFactor.ZERO);\n\t\tthis._pContext.setDepthTest(true, ContextGLCompareMode.LESS);\n\n\t\tvar head:RenderableBase = this._pOpaqueRenderableHead;\n\n\t\tvar first:boolean = true;\n\n\t\tfor (var i:number = numCascades - 1; i >= 0; --i) {\n\t\t\tthis._pStage.scissorRect = scissorRects[i];\n\t\t\tthis.drawCascadeRenderables(head, cameras[i], first? null : cameras[i].frustumPlanes);\n\t\t\tfirst = false;\n\t\t}\n\n\t\t//line required for correct rendering when using away3d with starling. DO NOT REMOVE UNLESS STARLING INTEGRATION IS RETESTED!\n\t\tthis._pContext.setDepthTest(false, ContextGLCompareMode.LESS_EQUAL);\n\n\t\tthis._pStage.scissorRect = null;\n\n\t}\n\n\tprivate drawCascadeRenderables(renderable:RenderableBase, camera:Camera, cullPlanes:Array<Plane3D>)\n\t{\n\t\tvar activePass:MaterialPassData;\n\t\tvar activeMaterial:MaterialData;\n\t\tvar context:IContextStageGL = <IContextStageGL> this._pStage.context;\n\t\tvar renderable2:RenderableBase;\n\n\t\twhile (renderable) {\n\t\t\tactiveMaterial = context.getMaterial(renderable.material, this._pStage.profile);\n\n\t\t\trenderable2 = renderable;\n\n\t\t\tactivePass = activeMaterial.getMaterialPass(this._pass, this._pStage.profile);\n\n\t\t\t//TODO: generalise this test\n\t\t\tif (activePass.key == \"\")\n\t\t\t\tthis._pContext.calcAnimationCode(renderable.material, activePass);\n\n\t\t\trenderable.material._iActivatePass(activePass, this._pStage, camera);\n\n\t\t\tdo {\n\t\t\t\t// if completely in front, it will fall in a different cascade\n\t\t\t\t// do not use near and far planes\n\t\t\t\tif (!cullPlanes || renderable2.sourceEntity.worldBounds.isInFrustum(cullPlanes, 4)) {\n\t\t\t\t\trenderable2.material._iRenderPass(activePass, renderable2, this._pStage, camera, this._pRttViewProjectionMatrix);\n\t\t\t\t} else {\n\t\t\t\t\trenderable2.cascaded = true;\n\t\t\t\t}\n\n\t\t\t\trenderable2 = renderable2.next;\n\n\t\t\t} while (renderable2 && renderable2.material == renderable.material && !renderable2.cascaded);\n\n\t\t\trenderable.material._iDeactivatePass(activePass, this._pStage);\n\n\t\t\trenderable = renderable2;\n\t\t}\n\t}\n\n\t/**\n\t * @inheritDoc\n\t */\n\tpublic pDraw(entityCollector:EntityCollector, target:TextureProxyBase)\n\t{\n\t\tthis.pCollectRenderables(entityCollector);\n\n\t\tthis._pContext.setBlendFactors(ContextGLBlendFactor.ONE, ContextGLBlendFactor.ZERO);\n\n\t\tthis._pContext.setDepthTest(true, ContextGLCompareMode.LESS);\n\n\t\tthis.drawRenderables(this._pOpaqueRenderableHead, entityCollector);\n\n\t\tif (this._disableColor)\n\t\t\tthis._pContext.setColorMask(false, false, false, false);\n\n\t\tif (this._renderBlended)\n\t\t\tthis.drawRenderables(this._pBlendedRenderableHead, entityCollector);\n\n\t\tif (this._disableColor)\n\t\t\tthis._pContext.setColorMask(true, true, true, true);\n\t}\n\n\t/**\n\t * Draw a list of renderables.\n\t * @param renderables The renderables to draw.\n\t * @param entityCollector The EntityCollector containing all potentially visible information.\n\t */\n\tprivate drawRenderables(renderable:RenderableBase, entityCollector:EntityCollector)\n\t{\n\t\tvar activePass:MaterialPassData;\n\t\tvar activeMaterial:MaterialData;\n\t\tvar context:IContextStageGL = <IContextStageGL> this._pStage.context;\n\t\tvar camera:Camera = entityCollector.camera;\n\t\tvar renderable2:RenderableBase;\n\n\t\twhile (renderable) {\n\t\t\tactiveMaterial = context.getMaterial(renderable.material, this._pStage.profile);\n\n\t\t\t// otherwise this would result in depth rendered anyway because fragment shader kil is ignored\n\t\t\tif (this._disableColor && renderable.material.alphaThreshold != 0) {\n\t\t\t\trenderable2 = renderable;\n\t\t\t\t// fast forward\n\t\t\t\tdo {\n\t\t\t\t\trenderable2 = renderable2.next;\n\n\t\t\t\t} while (renderable2 && renderable2.material == renderable.material);\n\t\t\t} else {\n\t\t\t\trenderable2 = renderable;\n\n\t\t\t\tactivePass = activeMaterial.getMaterialPass(this._pass, this._pStage.profile);\n\n\t\t\t\t//TODO: generalise this test\n\t\t\t\tif (activePass.key == \"\")\n\t\t\t\t\tthis._pContext.calcAnimationCode(renderable.material, activePass);\n\n\t\t\t\trenderable.material._iActivatePass(activePass, this._pStage, camera);\n\n\t\t\t\tdo {\n\t\t\t\t\trenderable2.material._iRenderPass(activePass, renderable2, this._pStage, camera, this._pRttViewProjectionMatrix);\n\n\t\t\t\t\trenderable2 = renderable2.next;\n\n\t\t\t\t} while (renderable2 && renderable2.material == renderable.material);\n\n\t\t\t\trenderable.material._iDeactivatePass(activePass, this._pStage);\n\t\t\t}\n\n\t\t\trenderable = renderable2;\n\t\t}\n\t}\n}\n\nexport = DepthRenderer;","import Event\t\t\t\t\t\t= require(\"awayjs-core/lib/events/Event\");\n\nimport Camera\t\t\t\t\t\t= require(\"awayjs-display/lib/entities/Camera\");\n\nimport Stage\t\t\t\t\t\t= require(\"awayjs-stagegl/lib/base/Stage\");\nimport ContextGLBlendFactor\t\t\t= require(\"awayjs-stagegl/lib/base/ContextGLBlendFactor\");\nimport ContextGLVertexBufferFormat\t= require(\"awayjs-stagegl/lib/base/ContextGLVertexBufferFormat\");\nimport IContextStageGL\t\t\t\t= require(\"awayjs-stagegl/lib/base/IContextStageGL\");\nimport IIndexBuffer\t\t\t\t\t= require(\"awayjs-stagegl/lib/base/IIndexBuffer\");\nimport ITexture\t\t\t\t\t\t= require(\"awayjs-stagegl/lib/base/ITexture\");\nimport IVertexBuffer\t\t\t\t= require(\"awayjs-stagegl/lib/base/IVertexBuffer\");\nimport Filter3DBase\t\t\t\t\t= require(\"awayjs-stagegl/lib/filters/Filter3DBase\");\nimport Filter3DTaskBase\t\t\t\t= require(\"awayjs-stagegl/lib/filters/tasks/Filter3DTaskBase\");\nimport RTTBufferManager\t\t\t\t= require(\"awayjs-stagegl/lib/managers/RTTBufferManager\");\n\n/**\n * @class away.render.Filter3DRenderer\n */\nclass Filter3DRenderer\n{\n\tprivate _filters:Array<Filter3DBase>;\n\tprivate _tasks:Array<Filter3DTaskBase>;\n\tprivate _filterTasksInvalid:boolean;\n\tprivate _mainInputTexture:ITexture;\n\tprivate _requireDepthRender:boolean;\n\tprivate _rttManager:RTTBufferManager;\n\tprivate _stage:Stage;\n\tprivate _filterSizesInvalid:boolean = true;\n\tprivate _onRTTResizeDelegate:(event:Event) => void;\n\n\tconstructor(stage:Stage)\n\t{\n\t\tthis._onRTTResizeDelegate = (event:Event) => this.onRTTResize(event);\n\n\t\tthis._stage = stage;\n\t\tthis._rttManager = RTTBufferManager.getInstance(stage);\n\t\tthis._rttManager.addEventListener(Event.RESIZE, this._onRTTResizeDelegate);\n\n\t}\n\n\tprivate onRTTResize(event:Event)\n\t{\n\t\tthis._filterSizesInvalid = true;\n\t}\n\n\tpublic get requireDepthRender():boolean\n\t{\n\t\treturn this._requireDepthRender;\n\t}\n\n\tpublic getMainInputTexture(stage:Stage):ITexture\n\t{\n\t\tif (this._filterTasksInvalid) {\n\n\t\t\tthis.updateFilterTasks(stage);\n\n\t\t}\n\n\t\treturn this._mainInputTexture;\n\t}\n\n\tpublic get filters():Filter3DBase[]\n\t{\n\t\treturn this._filters;\n\t}\n\n\tpublic set filters(value:Filter3DBase[])\n\t{\n\t\tthis._filters = value;\n\n\t\tthis._filterTasksInvalid = true;\n\n\t\tthis._requireDepthRender = false;\n\n\t\tif (!this._filters) {\n\n\t\t\treturn;\n\n\t\t}\n\n\t\tfor (var i:number = 0; i < this._filters.length; ++i) {\n\n\t\t\t// TODO: check logic:\n\t\t\t// this._requireDepthRender ||=  Boolean ( this._filters[i].requireDepthRender )\n\n\t\t\tvar s:any = this._filters[i];\n\t\t\tvar b:boolean = <boolean> ( s.requireDepthRender == null )? false : s.requireDepthRender;\n\n\t\t\tthis._requireDepthRender = this._requireDepthRender || b;\n\n\t\t}\n\n\t\tthis._filterSizesInvalid = true;\n\n\t}\n\n\tprivate updateFilterTasks(stage:Stage)\n\t{\n\t\tvar len:number;\n\n\t\tif (this._filterSizesInvalid) {\n\n\t\t\tthis.updateFilterSizes();\n\n\t\t}\n\n\t\tif (!this._filters) {\n\t\t\tthis._tasks = null;\n\t\t\treturn;\n\t\t}\n\n\t\tthis._tasks = new Array<Filter3DTaskBase>();\n\n\t\tlen = this._filters.length - 1;\n\n\t\tvar filter:Filter3DBase;\n\n\t\tfor (var i:number = 0; i <= len; ++i) {\n\n\t\t\t// make sure all internal tasks are linked together\n\t\t\tfilter = this._filters[i];\n\n\t\t\t// TODO: check logic\n\t\t\t// filter.setRenderTargets(i == len? null : Filter3DBase(_filters[i + 1]).getMainInputTexture(stage), stage);\n\n\t\t\tfilter.setRenderTargets(i == len? null : this._filters[i + 1].getMainInputTexture(stage), stage);\n\n\t\t\tthis._tasks = this._tasks.concat(filter.tasks);\n\n\t\t}\n\n\t\tthis._mainInputTexture = this._filters[0].getMainInputTexture(stage);\n\n\t}\n\n\tpublic render(stage:Stage, camera:Camera, depthTexture:ITexture)\n\t{\n\t\tvar len:number;\n\t\tvar i:number;\n\t\tvar task:Filter3DTaskBase;\n\t\tvar context:IContextStageGL = <IContextStageGL> stage.context;\n\n\t\tvar indexBuffer:IIndexBuffer = this._rttManager.indexBuffer;\n\n\t\tvar vertexBuffer:IVertexBuffer = this._rttManager.renderToTextureVertexBuffer;\n\n\t\tif (!this._filters) {\n\t\t\treturn;\n\t\t}\n\n\t\tif (this._filterSizesInvalid) {\n\t\t\tthis.updateFilterSizes();\n\t\t}\n\n\t\tif (this._filterTasksInvalid) {\n\t\t\tthis.updateFilterTasks(stage);\n\t\t}\n\n\t\tlen = this._filters.length;\n\n\t\tfor (i = 0; i < len; ++i) {\n\t\t\tthis._filters[i].update(stage, camera);\n\t\t}\n\n\t\tlen = this._tasks.length;\n\n\t\tif (len > 1) {\n\t\t\tcontext.setVertexBufferAt(0, vertexBuffer, 0, ContextGLVertexBufferFormat.FLOAT_2);\n\t\t\tcontext.setVertexBufferAt(1, vertexBuffer, 2, ContextGLVertexBufferFormat.FLOAT_2);\n\t\t}\n\n\t\tfor (i = 0; i < len; ++i) {\n\n\t\t\ttask = this._tasks[i];\n\n\t\t\t//stage.setRenderTarget(task.target); //TODO\n\n\t\t\tif (!task.target) {\n\n\t\t\t\tstage.scissorRect = null;\n\t\t\t\tvertexBuffer = this._rttManager.renderToScreenVertexBuffer;\n\t\t\t\tcontext.setVertexBufferAt(0, vertexBuffer, 0, ContextGLVertexBufferFormat.FLOAT_2);\n\t\t\t\tcontext.setVertexBufferAt(1, vertexBuffer, 2, ContextGLVertexBufferFormat.FLOAT_2);\n\n\t\t\t}\n\n\t\t\tcontext.setTextureAt(0, task.getMainInputTexture(stage));\n\t\t\tcontext.setProgram(task.getProgram(stage));\n\t\t\tcontext.clear(0.0, 0.0, 0.0, 0.0);\n\n\t\t\ttask.activate(stage, camera, depthTexture);\n\n\t\t\tcontext.setBlendFactors(ContextGLBlendFactor.ONE, ContextGLBlendFactor.ZERO);\n\t\t\tcontext.drawTriangles(indexBuffer, 0, 2);\n\n\t\t\ttask.deactivate(stage);\n\t\t}\n\n\t\tcontext.setTextureAt(0, null);\n\t\tcontext.setVertexBufferAt(0, null);\n\t\tcontext.setVertexBufferAt(1, null);\n\t}\n\n\tprivate updateFilterSizes()\n\t{\n\t\tfor (var i:number = 0; i < this._filters.length; ++i) {\n\t\t\tthis._filters[i].textureWidth = this._rttManager.textureWidth;\n\t\t\tthis._filters[i].textureHeight = this._rttManager.textureHeight;\n\t\t}\n\n\t\tthis._filterSizesInvalid = true;\n\n\t}\n\n\tpublic dispose()\n\t{\n\t\tthis._rttManager.removeEventListener(Event.RESIZE, this._onRTTResizeDelegate);\n\t\tthis._rttManager = null;\n\t\tthis._stage = null;\n\t}\n}\n\nexport = Filter3DRenderer;","import BitmapData\t\t\t\t\t= require(\"awayjs-core/lib/base/BitmapData\");\nimport Matrix3D\t\t\t\t\t\t= require(\"awayjs-core/lib/geom/Matrix3D\");\nimport Point\t\t\t\t\t\t= require(\"awayjs-core/lib/geom/Point\");\nimport Rectangle\t\t\t\t\t= require(\"awayjs-core/lib/geom/Rectangle\");\nimport Vector3D\t\t\t\t\t\t= require(\"awayjs-core/lib/geom/Vector3D\");\nimport AbstractMethodError\t\t\t= require(\"awayjs-core/lib/errors/AbstractMethodError\");\nimport EventDispatcher\t\t\t\t= require(\"awayjs-core/lib/events/EventDispatcher\");\nimport TextureProxyBase\t\t\t\t= require(\"awayjs-core/lib/textures/TextureProxyBase\");\n\nimport LineSubMesh\t\t\t\t\t= require(\"awayjs-display/lib/base/LineSubMesh\");\nimport TriangleSubMesh\t\t\t\t= require(\"awayjs-display/lib/base/TriangleSubMesh\");\nimport Stage\t\t\t\t\t\t= require(\"awayjs-stagegl/lib/base/Stage\");\nimport EntityListItem\t\t\t\t= require(\"awayjs-display/lib/pool/EntityListItem\");\nimport RenderablePool\t\t\t\t= require(\"awayjs-display/lib/pool/RenderablePool\");\nimport IEntitySorter\t\t\t\t= require(\"awayjs-display/lib/sort/IEntitySorter\");\nimport RenderableMergeSort\t\t\t= require(\"awayjs-display/lib/sort/RenderableMergeSort\");\nimport IRenderer\t\t\t\t\t= require(\"awayjs-display/lib/render/IRenderer\");\nimport Billboard\t\t\t\t\t= require(\"awayjs-display/lib/entities/Billboard\");\nimport Camera\t\t\t\t\t\t= require(\"awayjs-display/lib/entities/Camera\");\nimport IEntity\t\t\t\t\t\t= require(\"awayjs-display/lib/entities/IEntity\");\nimport Skybox\t\t\t\t\t\t= require(\"awayjs-display/lib/entities/Skybox\");\n\nimport RendererEvent\t\t\t\t= require(\"awayjs-display/lib/events/RendererEvent\");\nimport StageEvent\t\t\t\t\t= require(\"awayjs-display/lib/events/StageEvent\");\nimport MaterialBase\t\t\t\t\t= require(\"awayjs-display/lib/materials/MaterialBase\");\n\nimport EntityCollector\t\t\t\t= require(\"awayjs-display/lib/traverse/EntityCollector\");\nimport ICollector\t\t\t\t\t= require(\"awayjs-display/lib/traverse/ICollector\");\nimport ShadowCasterCollector\t\t= require(\"awayjs-display/lib/traverse/ShadowCasterCollector\");\n\nimport BillboardRenderable\t\t\t= require(\"awayjs-stagegl/lib/pool/BillboardRenderable\");\nimport LineSubMeshRenderable\t\t= require(\"awayjs-stagegl/lib/pool/LineSubMeshRenderable\");\nimport RenderableBase\t\t\t\t= require(\"awayjs-stagegl/lib/pool/RenderableBase\");\nimport TriangleSubMeshRenderable\t= require(\"awayjs-stagegl/lib/pool/TriangleSubMeshRenderable\");\nimport ContextGLCompareMode\t\t\t= require(\"awayjs-stagegl/lib/base/ContextGLCompareMode\");\nimport IContextStageGL\t\t\t\t= require(\"awayjs-stagegl/lib/base/IContextStageGL\");\nimport RTTBufferManager\t\t\t\t= require(\"awayjs-stagegl/lib/managers/RTTBufferManager\");\nimport DefaultMaterialManager\t\t= require(\"awayjs-stagegl/lib/materials/utils/DefaultMaterialManager\");\n\n/**\n * RendererBase forms an abstract base class for classes that are used in the rendering pipeline to render the\n * contents of a partition\n *\n * @class away.render.RendererBase\n */\nclass RendererBase extends EventDispatcher\n{\n\tprivate _billboardRenderablePool:RenderablePool;\n\tprivate _triangleSubMeshRenderablePool:RenderablePool;\n\tprivate _lineSubMeshRenderablePool:RenderablePool;\n\n\tpublic _pContext:IContextStageGL;\n\tpublic _pStage:Stage;\n\n\tpublic _pCamera:Camera;\n\tpublic _iEntryPoint:Vector3D;\n\tpublic _pCameraForward:Vector3D;\n\n\tpublic _pRttBufferManager:RTTBufferManager;\n\tprivate _viewPort:Rectangle = new Rectangle();\n\tprivate _viewportDirty:boolean;\n\tprivate _scissorDirty:boolean;\n\n\tpublic _pBackBufferInvalid:boolean = true;\n\tpublic _pDepthTextureInvalid:boolean = true;\n\tpublic _depthPrepass:boolean = false;\n\tprivate _backgroundR:number = 0;\n\tprivate _backgroundG:number = 0;\n\tprivate _backgroundB:number = 0;\n\tprivate _backgroundAlpha:number = 1;\n\tpublic _shareContext:boolean = false;\n\n\t// only used by renderers that need to render geometry to textures\n\tpublic _width:number;\n\tpublic _height:number;\n\n\tpublic textureRatioX:number = 1;\n\tpublic textureRatioY:number = 1;\n\n\tprivate _snapshotBitmapData:BitmapData;\n\tprivate _snapshotRequired:boolean;\n\n\tpublic _pRttViewProjectionMatrix:Matrix3D = new Matrix3D();\n\n\tprivate _localPos:Point = new Point();\n\tprivate _globalPos:Point = new Point();\n\tpublic _pScissorRect:Rectangle = new Rectangle();\n\n\tprivate _scissorUpdated:RendererEvent;\n\tprivate _viewPortUpdated:RendererEvent;\n\n\tprivate _onContextUpdateDelegate:Function;\n\tprivate _onViewportUpdatedDelegate;\n\n\tpublic _pNumTriangles:number = 0;\n\n\tpublic _pOpaqueRenderableHead:RenderableBase;\n\tpublic _pBlendedRenderableHead:RenderableBase;\n\n\t/**\n\t *\n\t */\n\tpublic get numTriangles():number\n\t{\n\t\treturn this._pNumTriangles;\n\t}\n\n\t/**\n\t *\n\t */\n\tpublic renderableSorter:IEntitySorter;\n\n\n\t/**\n\t * A viewPort rectangle equivalent of the Stage size and position.\n\t */\n\tpublic get viewPort():Rectangle\n\t{\n\t\treturn this._viewPort;\n\t}\n\n\t/**\n\t * A scissor rectangle equivalent of the view size and position.\n\t */\n\tpublic get scissorRect():Rectangle\n\t{\n\t\treturn this._pScissorRect;\n\t}\n\n\t/**\n\t *\n\t */\n\tpublic get x():number\n\t{\n\t\treturn this._localPos.x;\n\t}\n\n\tpublic set x(value:number)\n\t{\n\t\tif (this.x == value)\n\t\t\treturn;\n\n\t\tthis._globalPos.x = this._localPos.x = value;\n\n\t\tthis.updateGlobalPos();\n\t}\n\n\t/**\n\t *\n\t */\n\tpublic get y():number\n\t{\n\t\treturn this._localPos.y;\n\t}\n\n\tpublic set y(value:number)\n\t{\n\t\tif (this.y == value)\n\t\t\treturn;\n\n\t\tthis._globalPos.y = this._localPos.y = value;\n\n\t\tthis.updateGlobalPos();\n\t}\n\n\t/**\n\t *\n\t */\n\tpublic get width():number\n\t{\n\t\treturn this._width;\n\t}\n\n\tpublic set width(value:number)\n\t{\n\t\tif (this._width == value)\n\t\t\treturn;\n\n\t\tthis._width = value;\n\t\tthis._pScissorRect.width = value;\n\n\t\tif (this._pRttBufferManager)\n\t\t\tthis._pRttBufferManager.viewWidth = value;\n\n\t\tthis._pBackBufferInvalid = true;\n\t\tthis._pDepthTextureInvalid = true;\n\n\t\tthis.notifyScissorUpdate();\n\t}\n\n\t/**\n\t *\n\t */\n\tpublic get height():number\n\t{\n\t\treturn this._height;\n\t}\n\n\tpublic set height(value:number)\n\t{\n\t\tif (this._height == value)\n\t\t\treturn;\n\n\t\tthis._height = value;\n\t\tthis._pScissorRect.height = value;\n\n\t\tif (this._pRttBufferManager)\n\t\t\tthis._pRttBufferManager.viewHeight = value;\n\n\t\tthis._pBackBufferInvalid = true;\n\t\tthis._pDepthTextureInvalid = true;\n\n\t\tthis.notifyScissorUpdate();\n\t}\n\n\t/**\n\t * Creates a new RendererBase object.\n\t */\n\tconstructor()\n\t{\n\t\tsuper();\n\n\t\tthis._onViewportUpdatedDelegate = (event:StageEvent) => this.onViewportUpdated(event);\n\n\t\tthis._billboardRenderablePool = RenderablePool.getPool(BillboardRenderable);\n\t\tthis._triangleSubMeshRenderablePool = RenderablePool.getPool(TriangleSubMeshRenderable);\n\t\tthis._lineSubMeshRenderablePool = RenderablePool.getPool(LineSubMeshRenderable);\n\n\t\tthis._onContextUpdateDelegate = (event:Event) => this.onContextUpdate(event);\n\n\t\t//default sorting algorithm\n\t\tthis.renderableSorter = new RenderableMergeSort();\n\t}\n\n\tpublic _iCreateEntityCollector():ICollector\n\t{\n\t\treturn new EntityCollector();\n\t}\n\n\t/**\n\t * The background color's red component, used when clearing.\n\t *\n\t * @private\n\t */\n\tpublic get _iBackgroundR():number\n\t{\n\t\treturn this._backgroundR;\n\t}\n\n\tpublic set _iBackgroundR(value:number)\n\t{\n\t\tif (this._backgroundR == value)\n\t\t\treturn;\n\n\t\tthis._backgroundR = value;\n\n\t\tthis._pBackBufferInvalid = true;\n\t}\n\n\t/**\n\t * The background color's green component, used when clearing.\n\t *\n\t * @private\n\t */\n\tpublic get _iBackgroundG():number\n\t{\n\t\treturn this._backgroundG;\n\t}\n\n\tpublic set _iBackgroundG(value:number)\n\t{\n\t\tif (this._backgroundG == value)\n\t\t\treturn;\n\n\t\tthis._backgroundG = value;\n\n\t\tthis._pBackBufferInvalid = true;\n\t}\n\n\t/**\n\t * The background color's blue component, used when clearing.\n\t *\n\t * @private\n\t */\n\tpublic get _iBackgroundB():number\n\t{\n\t\treturn this._backgroundB;\n\t}\n\n\tpublic set _iBackgroundB(value:number)\n\t{\n\t\tif (this._backgroundB == value)\n\t\t\treturn;\n\n\t\tthis._backgroundB = value;\n\n\t\tthis._pBackBufferInvalid = true;\n\t}\n\n\t/**\n\t * The Stage that will provide the ContextGL used for rendering.\n\t */\n\tpublic get stage():Stage\n\t{\n\t\treturn this._pStage;\n\t}\n\n\tpublic set stage(value:Stage)\n\t{\n\t\tif (value == this._pStage)\n\t\t\treturn;\n\n\t\tthis.iSetStage(value);\n\t}\n\n\tpublic iSetStage(value:Stage)\n\t{\n\t\tif (this._pStage) {\n\t\t\tthis._pStage.removeEventListener(StageEvent.CONTEXT_CREATED, this._onContextUpdateDelegate);\n\t\t\tthis._pStage.removeEventListener(StageEvent.CONTEXT_RECREATED, this._onContextUpdateDelegate);\n\t\t\tthis._pStage.removeEventListener(StageEvent.VIEWPORT_UPDATED, this._onViewportUpdatedDelegate);\n\t\t}\n\n\t\tif (!value) {\n\t\t\tthis._pStage = null;\n\t\t\tthis._pContext = null;\n\t\t} else {\n\t\t\tthis._pStage = value;\n\t\t\tthis._pStage.addEventListener(StageEvent.CONTEXT_CREATED, this._onContextUpdateDelegate);\n\t\t\tthis._pStage.addEventListener(StageEvent.CONTEXT_RECREATED, this._onContextUpdateDelegate);\n\t\t\tthis._pStage.addEventListener(StageEvent.VIEWPORT_UPDATED, this._onViewportUpdatedDelegate);\n\n\t\t\t/*\n\t\t\t if (_backgroundImageRenderer)\n\t\t\t _backgroundImageRenderer.stage = value;\n\t\t\t */\n\t\t\tif (this._pStage.context)\n\t\t\t\tthis._pContext = <IContextStageGL> this._pStage.context;\n\t\t}\n\n\t\tthis._pBackBufferInvalid = true;\n\n\t\tthis.updateGlobalPos();\n\t}\n\n\t/**\n\t * Defers control of ContextGL clear() and present() calls to Stage, enabling multiple Stage frameworks\n\t * to share the same ContextGL object.\n\t */\n\tpublic get shareContext():boolean\n\t{\n\t\treturn this._shareContext;\n\t}\n\n\tpublic set shareContext(value:boolean)\n\t{\n\t\tif (this._shareContext == value)\n\t\t\treturn;\n\n\t\tthis._shareContext = value;\n\n\t\tthis.updateGlobalPos();\n\t}\n\n\t/**\n\t * Disposes the resources used by the RendererBase.\n\t */\n\tpublic dispose()\n\t{\n\t\tif (this._pRttBufferManager)\n\t\t\tthis._pRttBufferManager.dispose();\n\n\t\tthis._pRttBufferManager = null;\n\n\t\tthis._pStage.removeEventListener(StageEvent.CONTEXT_CREATED, this._onContextUpdateDelegate);\n\t\tthis._pStage.removeEventListener(StageEvent.CONTEXT_RECREATED, this._onContextUpdateDelegate);\n\t\tthis._pStage.removeEventListener(StageEvent.VIEWPORT_UPDATED, this._onViewportUpdatedDelegate);\n\n\t\tthis._pStage = null;\n\n\t\t/*\n\t\t if (_backgroundImageRenderer) {\n\t\t _backgroundImageRenderer.dispose();\n\t\t _backgroundImageRenderer = null;\n\t\t }\n\t\t */\n\t}\n\n\tpublic render(entityCollector:ICollector)\n\t{\n\t\tthis._viewportDirty = false;\n\t\tthis._scissorDirty = false;\n\t}\n\n\t/**\n\t * Renders the potentially visible geometry to the back buffer or texture.\n\t * @param entityCollector The EntityCollector object containing the potentially visible geometry.\n\t * @param target An option target texture to render to.\n\t * @param surfaceSelector The index of a CubeTexture's face to render to.\n\t * @param additionalClearMask Additional clear mask information, in case extra clear channels are to be omitted.\n\t */\n\tpublic _iRender(entityCollector:ICollector, target:TextureProxyBase = null, scissorRect:Rectangle = null, surfaceSelector:number = 0)\n\t{\n\t\t//TODO refactor setTarget so that rendertextures are created before this check\n\t\tif (!this._pStage || !this._pContext)\n\t\t\treturn;\n\n\t\tthis._pRttViewProjectionMatrix.copyFrom(entityCollector.camera.viewProjection);\n\t\tthis._pRttViewProjectionMatrix.appendScale(this.textureRatioX, this.textureRatioY, 1);\n\n\t\tthis.pExecuteRender(entityCollector, target, scissorRect, surfaceSelector);\n\n\t\t// generate mip maps on target (if target exists) //TODO\n\t\t//if (target)\n\t\t//\t(<Texture>target).generateMipmaps();\n\n\t\t// clear buffers\n\t\tfor (var i:number = 0; i < 8; ++i) {\n\t\t\tthis._pContext.setVertexBufferAt(i, null);\n\t\t\tthis._pContext.setTextureAt(i, null);\n\t\t}\n\t}\n\n\tpublic _iRenderCascades(entityCollector:ShadowCasterCollector, target:TextureProxyBase, numCascades:number, scissorRects:Array<Rectangle>, cameras:Array<Camera>)\n\t{\n\n\t}\n\n\tpublic pCollectRenderables(entityCollector:ICollector)\n\t{\n\t\t//reset head values\n\t\tthis._pBlendedRenderableHead = null;\n\t\tthis._pOpaqueRenderableHead = null;\n\t\tthis._pNumTriangles = 0;\n\n\t\t//grab entity head\n\t\tvar item:EntityListItem = entityCollector.entityHead;\n\n\t\t//set temp values for entry point and camera forward vector\n\t\tthis._pCamera = entityCollector.camera;\n\t\tthis._iEntryPoint = this._pCamera.scenePosition;\n\t\tthis._pCameraForward = this._pCamera.transform.forwardVector;\n\n\t\t//iterate through all entities\n\t\twhile (item) {\n\t\t\titem.entity._iCollectRenderables(this);\n\t\t\titem = item.next;\n\t\t}\n\n\t\t//sort the resulting renderables\n\t\tthis._pOpaqueRenderableHead = <RenderableBase> this.renderableSorter.sortOpaqueRenderables(this._pOpaqueRenderableHead);\n\t\tthis._pBlendedRenderableHead = <RenderableBase> this.renderableSorter.sortBlendedRenderables(this._pBlendedRenderableHead);\n\t}\n\n\t/**\n\t * Renders the potentially visible geometry to the back buffer or texture. Only executed if everything is set up.\n\t *\n\t * @param entityCollector The EntityCollector object containing the potentially visible geometry.\n\t * @param target An option target texture to render to.\n\t * @param surfaceSelector The index of a CubeTexture's face to render to.\n\t * @param additionalClearMask Additional clear mask information, in case extra clear channels are to be omitted.\n\t */\n\tpublic pExecuteRender(entityCollector:ICollector, target:TextureProxyBase = null, scissorRect:Rectangle = null, surfaceSelector:number = 0)\n\t{\n\t\tthis._pContext.setRenderTarget(target, true, surfaceSelector);\n\n\t\tif ((target || !this._shareContext) && !this._depthPrepass)\n\t\t\tthis._pContext.clear(this._backgroundR, this._backgroundG, this._backgroundB, this._backgroundAlpha, 1, 0);\n\n\t\tthis._pContext.setDepthTest(false, ContextGLCompareMode.ALWAYS);\n\n\t\tthis._pStage.scissorRect = scissorRect;\n\n\t\t/*\n\t\t if (_backgroundImageRenderer)\n\t\t _backgroundImageRenderer.render();\n\t\t */\n\n\t\tthis.pDraw(entityCollector, target);\n\n\t\t//line required for correct rendering when using away3d with starling. DO NOT REMOVE UNLESS STARLING INTEGRATION IS RETESTED!\n\t\t//this._pContext.setDepthTest(false, ContextGLCompareMode.LESS_EQUAL); //oopsie\n\n\t\tif (!this._shareContext) {\n\t\t\tif (this._snapshotRequired && this._snapshotBitmapData) {\n\t\t\t\tthis._pContext.drawToBitmapData(this._snapshotBitmapData);\n\t\t\t\tthis._snapshotRequired = false;\n\t\t\t}\n\t\t}\n\n\t\tthis._pStage.scissorRect = null;\n\t}\n\n\t/*\n\t * Will draw the renderer's output on next render to the provided bitmap data.\n\t * */\n\tpublic queueSnapshot(bmd:BitmapData)\n\t{\n\t\tthis._snapshotRequired = true;\n\t\tthis._snapshotBitmapData = bmd;\n\t}\n\n\t/**\n\t * Performs the actual drawing of geometry to the target.\n\t * @param entityCollector The EntityCollector object containing the potentially visible geometry.\n\t */\n\tpublic pDraw(entityCollector:ICollector, target:TextureProxyBase)\n\t{\n\t\tthrow new AbstractMethodError();\n\t}\n\n\t/**\n\t * Assign the context once retrieved\n\t */\n\tprivate onContextUpdate(event:Event)\n\t{\n\t\tthis._pContext = <IContextStageGL> this._pStage.context;\n\t}\n\n\tpublic get _iBackgroundAlpha():number\n\t{\n\t\treturn this._backgroundAlpha;\n\t}\n\n\tpublic set _iBackgroundAlpha(value:number)\n\t{\n\t\tif (this._backgroundAlpha == value)\n\t\t\treturn;\n\n\t\tthis._backgroundAlpha = value;\n\n\t\tthis._pBackBufferInvalid = true;\n\t}\n\n\t/*\n\t public get iBackground():Texture2DBase\n\t {\n\t return this._background;\n\t }\n\t */\n\n\t/*\n\t public set iBackground(value:Texture2DBase)\n\t {\n\t if (this._backgroundImageRenderer && !value) {\n\t this._backgroundImageRenderer.dispose();\n\t this._backgroundImageRenderer = null;\n\t }\n\n\t if (!this._backgroundImageRenderer && value)\n\t {\n\n\t this._backgroundImageRenderer = new BackgroundImageRenderer(this._pStage);\n\n\t }\n\n\n\t this._background = value;\n\n\t if (this._backgroundImageRenderer)\n\t this._backgroundImageRenderer.texture = value;\n\t }\n\t */\n\t/*\n\t public get backgroundImageRenderer():BackgroundImageRenderer\n\t {\n\t return _backgroundImageRenderer;\n\t }\n\t */\n\n\n\t/**\n\t * @private\n\t */\n\tprivate notifyScissorUpdate()\n\t{\n\t\tif (this._scissorDirty)\n\t\t\treturn;\n\n\t\tthis._scissorDirty = true;\n\n\t\tif (!this._scissorUpdated)\n\t\t\tthis._scissorUpdated = new RendererEvent(RendererEvent.SCISSOR_UPDATED);\n\n\t\tthis.dispatchEvent(this._scissorUpdated);\n\t}\n\n\n\t/**\n\t * @private\n\t */\n\tprivate notifyViewportUpdate()\n\t{\n\t\tif (this._viewportDirty)\n\t\t\treturn;\n\n\t\tthis._viewportDirty = true;\n\n\t\tif (!this._viewPortUpdated)\n\t\t\tthis._viewPortUpdated = new RendererEvent(RendererEvent.VIEWPORT_UPDATED);\n\n\t\tthis.dispatchEvent(this._viewPortUpdated);\n\t}\n\n\t/**\n\t *\n\t */\n\tpublic onViewportUpdated(event:StageEvent)\n\t{\n\t\tthis._viewPort = this._pStage.viewPort;\n\t\t//TODO stop firing viewport updated for every stagegl viewport change\n\n\t\tif (this._shareContext) {\n\t\t\tthis._pScissorRect.x = this._globalPos.x - this._pStage.x;\n\t\t\tthis._pScissorRect.y = this._globalPos.y - this._pStage.y;\n\t\t\tthis.notifyScissorUpdate();\n\t\t}\n\n\t\tthis.notifyViewportUpdate();\n\t}\n\n\t/**\n\t *\n\t */\n\tpublic updateGlobalPos()\n\t{\n\t\tif (this._shareContext) {\n\t\t\tthis._pScissorRect.x = this._globalPos.x - this._viewPort.x;\n\t\t\tthis._pScissorRect.y = this._globalPos.y - this._viewPort.y;\n\t\t} else {\n\t\t\tthis._pScissorRect.x = 0;\n\t\t\tthis._pScissorRect.y = 0;\n\t\t\tthis._viewPort.x = this._globalPos.x;\n\t\t\tthis._viewPort.y = this._globalPos.y;\n\t\t}\n\n\t\tthis.notifyScissorUpdate();\n\t}\n\n\n\t/**\n\t *\n\t * @param billboard\n\t * @protected\n\t */\n\tpublic applyBillboard(billboard:Billboard)\n\t{\n\t\tthis._applyRenderable(<RenderableBase> this._billboardRenderablePool.getItem(billboard));\n\t}\n\n\t/**\n\t *\n\t * @param triangleSubMesh\n\t */\n\tpublic applyTriangleSubMesh(triangleSubMesh:TriangleSubMesh)\n\t{\n\t\tthis._applyRenderable(<RenderableBase> this._triangleSubMeshRenderablePool.getItem(triangleSubMesh));\n\t}\n\n\t/**\n\t *\n\t * @param lineSubMesh\n\t */\n\tpublic applyLineSubMesh(lineSubMesh:LineSubMesh)\n\t{\n\t\tthis._applyRenderable(<RenderableBase> this._lineSubMeshRenderablePool.getItem(lineSubMesh));\n\t}\n\n\t/**\n\t *\n\t * @param renderable\n\t * @protected\n\t */\n\tprivate _applyRenderable(renderable:RenderableBase)\n\t{\n\t\tvar material:MaterialBase = renderable.materialOwner.material;\n\t\tvar entity:IEntity = renderable.sourceEntity;\n\t\tvar position:Vector3D = entity.scenePosition;\n\n\t\tif (!material)\n\t\t\tmaterial = DefaultMaterialManager.getDefaultMaterial(renderable.materialOwner);\n\n\t\t//update material if invalidated\n\t\tmaterial._iUpdateMaterial();\n\n\t\t//set ids for faster referencing\n\t\trenderable.material = material;\n\t\trenderable.materialId = material._iMaterialId;\n\t\trenderable.renderOrderId = this._pContext.getMaterial(material, this._pStage.profile).renderOrderId;\n\t\trenderable.cascaded = false;\n\n\t\t// project onto camera's z-axis\n\t\tposition = this._iEntryPoint.subtract(position);\n\t\trenderable.zIndex = entity.zOffset + position.dotProduct(this._pCameraForward);\n\n\t\t//store reference to scene transform\n\t\trenderable.renderSceneTransform = renderable.sourceEntity.getRenderSceneTransform(this._pCamera);\n\n\t\tif (material.requiresBlending) {\n\t\t\trenderable.next = this._pBlendedRenderableHead;\n\t\t\tthis._pBlendedRenderableHead = renderable;\n\t\t} else {\n\t\t\trenderable.next = this._pOpaqueRenderableHead;\n\t\t\tthis._pOpaqueRenderableHead = renderable;\n\t\t}\n\n\t\tthis._pNumTriangles += renderable.numTriangles;\n\n\t\t//handle any overflow for renderables with data that exceeds GPU limitations\n\t\tif (renderable.overflow)\n\t\t\tthis._applyRenderable(renderable.overflow);\n\t}\n}\n\nexport = RendererBase;","/*!\tSWFObject v2.2 <http://code.google.com/p/swfobject/> \n\tis released under the MIT License <http://www.opensource.org/licenses/mit-license.php> \n*/\n\nvar swfobject = function() {\n\t\n\tvar UNDEF = \"undefined\",\n\t\tOBJECT = \"object\",\n\t\tSHOCKWAVE_FLASH = \"Shockwave Flash\",\n\t\tSHOCKWAVE_FLASH_AX = \"ShockwaveFlash.ShockwaveFlash\",\n\t\tFLASH_MIME_TYPE = \"application/x-shockwave-flash\",\n\t\tEXPRESS_INSTALL_ID = \"SWFObjectExprInst\",\n\t\tON_READY_STATE_CHANGE = \"onreadystatechange\",\n\t\t\n\t\twin = window,\n\t\tdoc = document,\n\t\tnav = navigator,\n\t\t\n\t\tplugin = false,\n\t\tdomLoadFnArr = [main],\n\t\tregObjArr = [],\n\t\tobjIdArr = [],\n\t\tlistenersArr = [],\n\t\tstoredAltContent,\n\t\tstoredAltContentId,\n\t\tstoredCallbackFn,\n\t\tstoredCallbackObj,\n\t\tisDomLoaded = false,\n\t\tisExpressInstallActive = false,\n\t\tdynamicStylesheet,\n\t\tdynamicStylesheetMedia,\n\t\tautoHideShow = true,\n\t\n\t/* Centralized function for browser feature detection\n\t\t- User agent string detection is only used when no good alternative is possible\n\t\t- Is executed directly for optimal performance\n\t*/\t\n\tua = function() {\n\t\tvar w3cdom = typeof doc.getElementById != UNDEF && typeof doc.getElementsByTagName != UNDEF && typeof doc.createElement != UNDEF,\n\t\t\tu = nav.userAgent.toLowerCase(),\n\t\t\tp = nav.platform.toLowerCase(),\n\t\t\twindows = p ? /win/.test(p) : /win/.test(u),\n\t\t\tmac = p ? /mac/.test(p) : /mac/.test(u),\n\t\t\twebkit = /webkit/.test(u) ? parseFloat(u.replace(/^.*webkit\\/(\\d+(\\.\\d+)?).*$/, \"$1\")) : false, // returns either the webkit version or false if not webkit\n\t\t\tie = !+\"\\v1\", // feature detection based on Andrea Giammarchi's solution: http://webreflection.blogspot.com/2009/01/32-bytes-to-know-if-your-browser-is-ie.html\n\t\t\tplayerVersion = [0,0,0],\n\t\t\td = null;\n\t\tif (typeof nav.plugins != UNDEF && typeof nav.plugins[SHOCKWAVE_FLASH] == OBJECT) {\n\t\t\td = nav.plugins[SHOCKWAVE_FLASH].description;\n\t\t\tif (d && !(typeof nav.mimeTypes != UNDEF && nav.mimeTypes[FLASH_MIME_TYPE] && !nav.mimeTypes[FLASH_MIME_TYPE].enabledPlugin)) { // navigator.mimeTypes[\"application/x-shockwave-flash\"].enabledPlugin indicates whether plug-ins are enabled or disabled in Safari 3+\n\t\t\t\tplugin = true;\n\t\t\t\tie = false; // cascaded feature detection for Internet Explorer\n\t\t\t\td = d.replace(/^.*\\s+(\\S+\\s+\\S+$)/, \"$1\");\n\t\t\t\tplayerVersion[0] = parseInt(d.replace(/^(.*)\\..*$/, \"$1\"), 10);\n\t\t\t\tplayerVersion[1] = parseInt(d.replace(/^.*\\.(.*)\\s.*$/, \"$1\"), 10);\n\t\t\t\tplayerVersion[2] = /[a-zA-Z]/.test(d) ? parseInt(d.replace(/^.*[a-zA-Z]+(.*)$/, \"$1\"), 10) : 0;\n\t\t\t}\n\t\t}\n\t\telse if (typeof win.ActiveXObject != UNDEF) {\n\t\t\ttry {\n\t\t\t\tvar a = new ActiveXObject(SHOCKWAVE_FLASH_AX);\n\t\t\t\tif (a) { // a will return null when ActiveX is disabled\n\t\t\t\t\td = a.GetVariable(\"$version\");\n\t\t\t\t\tif (d) {\n\t\t\t\t\t\tie = true; // cascaded feature detection for Internet Explorer\n\t\t\t\t\t\td = d.split(\" \")[1].split(\",\");\n\t\t\t\t\t\tplayerVersion = [parseInt(d[0], 10), parseInt(d[1], 10), parseInt(d[2], 10)];\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t\tcatch(e) {}\n\t\t}\n\t\treturn { w3:w3cdom, pv:playerVersion, wk:webkit, ie:ie, win:windows, mac:mac };\n\t}(),\n\t\n\t/* Cross-browser onDomLoad\n\t\t- Will fire an event as soon as the DOM of a web page is loaded\n\t\t- Internet Explorer workaround based on Diego Perini's solution: http://javascript.nwbox.com/IEContentLoaded/\n\t\t- Regular onload serves as fallback\n\t*/ \n\tonDomLoad = function() {\n\t\tif (!ua.w3) { return; }\n\t\tif ((typeof doc.readyState != UNDEF && doc.readyState == \"complete\") || (typeof doc.readyState == UNDEF && (doc.getElementsByTagName(\"body\")[0] || doc.body))) { // function is fired after onload, e.g. when script is inserted dynamically \n\t\t\tcallDomLoadFunctions();\n\t\t}\n\t\tif (!isDomLoaded) {\n\t\t\tif (typeof doc.addEventListener != UNDEF) {\n\t\t\t\tdoc.addEventListener(\"DOMContentLoaded\", callDomLoadFunctions, false);\n\t\t\t}\t\t\n\t\t\tif (ua.ie && ua.win) {\n\t\t\t\tdoc.attachEvent(ON_READY_STATE_CHANGE, function() {\n\t\t\t\t\tif (doc.readyState == \"complete\") {\n\t\t\t\t\t\tdoc.detachEvent(ON_READY_STATE_CHANGE, arguments.callee);\n\t\t\t\t\t\tcallDomLoadFunctions();\n\t\t\t\t\t}\n\t\t\t\t});\n\t\t\t\tif (win == top) { // if not inside an iframe\n\t\t\t\t\t(function(){\n\t\t\t\t\t\tif (isDomLoaded) { return; }\n\t\t\t\t\t\ttry {\n\t\t\t\t\t\t\tdoc.documentElement.doScroll(\"left\");\n\t\t\t\t\t\t}\n\t\t\t\t\t\tcatch(e) {\n\t\t\t\t\t\t\tsetTimeout(arguments.callee, 0);\n\t\t\t\t\t\t\treturn;\n\t\t\t\t\t\t}\n\t\t\t\t\t\tcallDomLoadFunctions();\n\t\t\t\t\t})();\n\t\t\t\t}\n\t\t\t}\n\t\t\tif (ua.wk) {\n\t\t\t\t(function(){\n\t\t\t\t\tif (isDomLoaded) { return; }\n\t\t\t\t\tif (!/loaded|complete/.test(doc.readyState)) {\n\t\t\t\t\t\tsetTimeout(arguments.callee, 0);\n\t\t\t\t\t\treturn;\n\t\t\t\t\t}\n\t\t\t\t\tcallDomLoadFunctions();\n\t\t\t\t})();\n\t\t\t}\n\t\t\taddLoadEvent(callDomLoadFunctions);\n\t\t}\n\t}();\n\t\n\tfunction callDomLoadFunctions() {\n\t\tif (isDomLoaded) { return; }\n\t\ttry { // test if we can really add/remove elements to/from the DOM; we don't want to fire it too early\n\t\t\tvar t = doc.getElementsByTagName(\"body\")[0].appendChild(createElement(\"span\"));\n\t\t\tt.parentNode.removeChild(t);\n\t\t}\n\t\tcatch (e) { return; }\n\t\tisDomLoaded = true;\n\t\tvar dl = domLoadFnArr.length;\n\t\tfor (var i = 0; i < dl; i++) {\n\t\t\tdomLoadFnArr[i]();\n\t\t}\n\t}\n\t\n\tfunction addDomLoadEvent(fn) {\n\t\tif (isDomLoaded) {\n\t\t\tfn();\n\t\t}\n\t\telse { \n\t\t\tdomLoadFnArr[domLoadFnArr.length] = fn; // Array.push() is only available in IE5.5+\n\t\t}\n\t}\n\t\n\t/* Cross-browser onload\n\t\t- Based on James Edwards' solution: http://brothercake.com/site/resources/scripts/onload/\n\t\t- Will fire an event as soon as a web page including all of its assets are loaded \n\t */\n\tfunction addLoadEvent(fn) {\n\t\tif (typeof win.addEventListener != UNDEF) {\n\t\t\twin.addEventListener(\"load\", fn, false);\n\t\t}\n\t\telse if (typeof doc.addEventListener != UNDEF) {\n\t\t\tdoc.addEventListener(\"load\", fn, false);\n\t\t}\n\t\telse if (typeof win.attachEvent != UNDEF) {\n\t\t\taddListener(win, \"onload\", fn);\n\t\t}\n\t\telse if (typeof win.onload == \"function\") {\n\t\t\tvar fnOld = win.onload;\n\t\t\twin.onload = function() {\n\t\t\t\tfnOld();\n\t\t\t\tfn();\n\t\t\t};\n\t\t}\n\t\telse {\n\t\t\twin.onload = fn;\n\t\t}\n\t}\n\t\n\t/* Main function\n\t\t- Will preferably execute onDomLoad, otherwise onload (as a fallback)\n\t*/\n\tfunction main() { \n\t\tif (plugin) {\n\t\t\ttestPlayerVersion();\n\t\t}\n\t\telse {\n\t\t\tmatchVersions();\n\t\t}\n\t}\n\t\n\t/* Detect the Flash Player version for non-Internet Explorer browsers\n\t\t- Detecting the plug-in version via the object element is more precise than using the plugins collection item's description:\n\t\t  a. Both release and build numbers can be detected\n\t\t  b. Avoid wrong descriptions by corrupt installers provided by Adobe\n\t\t  c. Avoid wrong descriptions by multiple Flash Player entries in the plugin Array, caused by incorrect browser imports\n\t\t- Disadvantage of this method is that it depends on the availability of the DOM, while the plugins collection is immediately available\n\t*/\n\tfunction testPlayerVersion() {\n\t\tvar b = doc.getElementsByTagName(\"body\")[0];\n\t\tvar o = createElement(OBJECT);\n\t\to.setAttribute(\"type\", FLASH_MIME_TYPE);\n\t\tvar t = b.appendChild(o);\n\t\tif (t) {\n\t\t\tvar counter = 0;\n\t\t\t(function(){\n\t\t\t\tif (typeof t.GetVariable != UNDEF) {\n\t\t\t\t\tvar d = t.GetVariable(\"$version\");\n\t\t\t\t\tif (d) {\n\t\t\t\t\t\td = d.split(\" \")[1].split(\",\");\n\t\t\t\t\t\tua.pv = [parseInt(d[0], 10), parseInt(d[1], 10), parseInt(d[2], 10)];\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\telse if (counter < 10) {\n\t\t\t\t\tcounter++;\n\t\t\t\t\tsetTimeout(arguments.callee, 10);\n\t\t\t\t\treturn;\n\t\t\t\t}\n\t\t\t\tb.removeChild(o);\n\t\t\t\tt = null;\n\t\t\t\tmatchVersions();\n\t\t\t})();\n\t\t}\n\t\telse {\n\t\t\tmatchVersions();\n\t\t}\n\t}\n\t\n\t/* Perform Flash Player and SWF version matching; static publishing only\n\t*/\n\tfunction matchVersions() {\n\t\tvar rl = regObjArr.length;\n\t\tif (rl > 0) {\n\t\t\tfor (var i = 0; i < rl; i++) { // for each registered object element\n\t\t\t\tvar id = regObjArr[i].id;\n\t\t\t\tvar cb = regObjArr[i].callbackFn;\n\t\t\t\tvar cbObj = {success:false, id:id};\n\t\t\t\tif (ua.pv[0] > 0) {\n\t\t\t\t\tvar obj = getElementById(id);\n\t\t\t\t\tif (obj) {\n\t\t\t\t\t\tif (hasPlayerVersion(regObjArr[i].swfVersion) && !(ua.wk && ua.wk < 312)) { // Flash Player version >= published SWF version: Houston, we have a match!\n\t\t\t\t\t\t\tsetVisibility(id, true);\n\t\t\t\t\t\t\tif (cb) {\n\t\t\t\t\t\t\t\tcbObj.success = true;\n\t\t\t\t\t\t\t\tcbObj.ref = getObjectById(id);\n\t\t\t\t\t\t\t\tcb(cbObj);\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\t\t\t\t\t\telse if (regObjArr[i].expressInstall && canExpressInstall()) { // show the Adobe Express Install dialog if set by the web page author and if supported\n\t\t\t\t\t\t\tvar att = {};\n\t\t\t\t\t\t\tatt.data = regObjArr[i].expressInstall;\n\t\t\t\t\t\t\tatt.width = obj.getAttribute(\"width\") || \"0\";\n\t\t\t\t\t\t\tatt.height = obj.getAttribute(\"height\") || \"0\";\n\t\t\t\t\t\t\tif (obj.getAttribute(\"class\")) { att.styleclass = obj.getAttribute(\"class\"); }\n\t\t\t\t\t\t\tif (obj.getAttribute(\"align\")) { att.align = obj.getAttribute(\"align\"); }\n\t\t\t\t\t\t\t// parse HTML object param element's name-value pairs\n\t\t\t\t\t\t\tvar par = {};\n\t\t\t\t\t\t\tvar p = obj.getElementsByTagName(\"param\");\n\t\t\t\t\t\t\tvar pl = p.length;\n\t\t\t\t\t\t\tfor (var j = 0; j < pl; j++) {\n\t\t\t\t\t\t\t\tif (p[j].getAttribute(\"name\").toLowerCase() != \"movie\") {\n\t\t\t\t\t\t\t\t\tpar[p[j].getAttribute(\"name\")] = p[j].getAttribute(\"value\");\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\tshowExpressInstall(att, par, id, cb);\n\t\t\t\t\t\t}\n\t\t\t\t\t\telse { // Flash Player and SWF version mismatch or an older Webkit engine that ignores the HTML object element's nested param elements: display alternative content instead of SWF\n\t\t\t\t\t\t\tdisplayAltContent(obj);\n\t\t\t\t\t\t\tif (cb) { cb(cbObj); }\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\telse {\t// if no Flash Player is installed or the fp version cannot be detected we let the HTML object element do its job (either show a SWF or alternative content)\n\t\t\t\t\tsetVisibility(id, true);\n\t\t\t\t\tif (cb) {\n\t\t\t\t\t\tvar o = getObjectById(id); // test whether there is an HTML object element or not\n\t\t\t\t\t\tif (o && typeof o.SetVariable != UNDEF) { \n\t\t\t\t\t\t\tcbObj.success = true;\n\t\t\t\t\t\t\tcbObj.ref = o;\n\t\t\t\t\t\t}\n\t\t\t\t\t\tcb(cbObj);\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t}\n\t\n\tfunction getObjectById(objectIdStr) {\n\t\tvar r = null;\n\t\tvar o = getElementById(objectIdStr);\n\t\tif (o && o.nodeName == \"OBJECT\") {\n\t\t\tif (typeof o.SetVariable != UNDEF) {\n\t\t\t\tr = o;\n\t\t\t}\n\t\t\telse {\n\t\t\t\tvar n = o.getElementsByTagName(OBJECT)[0];\n\t\t\t\tif (n) {\n\t\t\t\t\tr = n;\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t\treturn r;\n\t}\n\t\n\t/* Requirements for Adobe Express Install\n\t\t- only one instance can be active at a time\n\t\t- fp 6.0.65 or higher\n\t\t- Win/Mac OS only\n\t\t- no Webkit engines older than version 312\n\t*/\n\tfunction canExpressInstall() {\n\t\treturn !isExpressInstallActive && hasPlayerVersion(\"6.0.65\") && (ua.win || ua.mac) && !(ua.wk && ua.wk < 312);\n\t}\n\t\n\t/* Show the Adobe Express Install dialog\n\t\t- Reference: http://www.adobe.com/cfusion/knowledgebase/index.cfm?id=6a253b75\n\t*/\n\tfunction showExpressInstall(att, par, replaceElemIdStr, callbackFn) {\n\t\tisExpressInstallActive = true;\n\t\tstoredCallbackFn = callbackFn || null;\n\t\tstoredCallbackObj = {success:false, id:replaceElemIdStr};\n\t\tvar obj = getElementById(replaceElemIdStr);\n\t\tif (obj) {\n\t\t\tif (obj.nodeName == \"OBJECT\") { // static publishing\n\t\t\t\tstoredAltContent = abstractAltContent(obj);\n\t\t\t\tstoredAltContentId = null;\n\t\t\t}\n\t\t\telse { // dynamic publishing\n\t\t\t\tstoredAltContent = obj;\n\t\t\t\tstoredAltContentId = replaceElemIdStr;\n\t\t\t}\n\t\t\tatt.id = EXPRESS_INSTALL_ID;\n\t\t\tif (typeof att.width == UNDEF || (!/%$/.test(att.width) && parseInt(att.width, 10) < 310)) { att.width = \"310\"; }\n\t\t\tif (typeof att.height == UNDEF || (!/%$/.test(att.height) && parseInt(att.height, 10) < 137)) { att.height = \"137\"; }\n\t\t\tdoc.title = doc.title.slice(0, 47) + \" - Flash Player Installation\";\n\t\t\tvar pt = ua.ie && ua.win ? \"ActiveX\" : \"PlugIn\",\n\t\t\t\tfv = \"MMredirectURL=\" + encodeURI(window.location).toString().replace(/&/g,\"%26\") + \"&MMplayerType=\" + pt + \"&MMdoctitle=\" + doc.title;\n\t\t\tif (typeof par.flashvars != UNDEF) {\n\t\t\t\tpar.flashvars += \"&\" + fv;\n\t\t\t}\n\t\t\telse {\n\t\t\t\tpar.flashvars = fv;\n\t\t\t}\n\t\t\t// IE only: when a SWF is loading (AND: not available in cache) wait for the readyState of the object element to become 4 before removing it,\n\t\t\t// because you cannot properly cancel a loading SWF file without breaking browser load references, also obj.onreadystatechange doesn't work\n\t\t\tif (ua.ie && ua.win && obj.readyState != 4) {\n\t\t\t\tvar newObj = createElement(\"div\");\n\t\t\t\treplaceElemIdStr += \"SWFObjectNew\";\n\t\t\t\tnewObj.setAttribute(\"id\", replaceElemIdStr);\n\t\t\t\tobj.parentNode.insertBefore(newObj, obj); // insert placeholder div that will be replaced by the object element that loads expressinstall.swf\n\t\t\t\tobj.style.display = \"none\";\n\t\t\t\t(function(){\n\t\t\t\t\tif (obj.readyState == 4) {\n\t\t\t\t\t\tobj.parentNode.removeChild(obj);\n\t\t\t\t\t}\n\t\t\t\t\telse {\n\t\t\t\t\t\tsetTimeout(arguments.callee, 10);\n\t\t\t\t\t}\n\t\t\t\t})();\n\t\t\t}\n\t\t\tcreateSWF(att, par, replaceElemIdStr);\n\t\t}\n\t}\n\t\n\t/* Functions to abstract and display alternative content\n\t*/\n\tfunction displayAltContent(obj) {\n\t\tif (ua.ie && ua.win && obj.readyState != 4) {\n\t\t\t// IE only: when a SWF is loading (AND: not available in cache) wait for the readyState of the object element to become 4 before removing it,\n\t\t\t// because you cannot properly cancel a loading SWF file without breaking browser load references, also obj.onreadystatechange doesn't work\n\t\t\tvar el = createElement(\"div\");\n\t\t\tobj.parentNode.insertBefore(el, obj); // insert placeholder div that will be replaced by the alternative content\n\t\t\tel.parentNode.replaceChild(abstractAltContent(obj), el);\n\t\t\tobj.style.display = \"none\";\n\t\t\t(function(){\n\t\t\t\tif (obj.readyState == 4) {\n\t\t\t\t\tobj.parentNode.removeChild(obj);\n\t\t\t\t}\n\t\t\t\telse {\n\t\t\t\t\tsetTimeout(arguments.callee, 10);\n\t\t\t\t}\n\t\t\t})();\n\t\t}\n\t\telse {\n\t\t\tobj.parentNode.replaceChild(abstractAltContent(obj), obj);\n\t\t}\n\t} \n\n\tfunction abstractAltContent(obj) {\n\t\tvar ac = createElement(\"div\");\n\t\tif (ua.win && ua.ie) {\n\t\t\tac.innerHTML = obj.innerHTML;\n\t\t}\n\t\telse {\n\t\t\tvar nestedObj = obj.getElementsByTagName(OBJECT)[0];\n\t\t\tif (nestedObj) {\n\t\t\t\tvar c = nestedObj.childNodes;\n\t\t\t\tif (c) {\n\t\t\t\t\tvar cl = c.length;\n\t\t\t\t\tfor (var i = 0; i < cl; i++) {\n\t\t\t\t\t\tif (!(c[i].nodeType == 1 && c[i].nodeName == \"PARAM\") && !(c[i].nodeType == 8)) {\n\t\t\t\t\t\t\tac.appendChild(c[i].cloneNode(true));\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t\treturn ac;\n\t}\n\t\n\t/* Cross-browser dynamic SWF creation\n\t*/\n\tfunction createSWF(attObj, parObj, id) {\n\t\tvar r, el = getElementById(id);\n\t\tif (ua.wk && ua.wk < 312) { return r; }\n\t\tif (el) {\n\t\t\tif (typeof attObj.id == UNDEF) { // if no 'id' is defined for the object element, it will inherit the 'id' from the alternative content\n\t\t\t\tattObj.id = id;\n\t\t\t}\n\t\t\tif (ua.ie && ua.win) { // Internet Explorer + the HTML object element + W3C DOM methods do not combine: fall back to outerHTML\n\t\t\t\tvar att = \"\";\n\t\t\t\tfor (var i in attObj) {\n\t\t\t\t\tif (attObj[i] != Object.prototype[i]) { // filter out prototype additions from other potential libraries\n\t\t\t\t\t\tif (i.toLowerCase() == \"data\") {\n\t\t\t\t\t\t\tparObj.movie = attObj[i];\n\t\t\t\t\t\t}\n\t\t\t\t\t\telse if (i.toLowerCase() == \"styleclass\") { // 'class' is an ECMA4 reserved keyword\n\t\t\t\t\t\t\tatt += ' class=\"' + attObj[i] + '\"';\n\t\t\t\t\t\t}\n\t\t\t\t\t\telse if (i.toLowerCase() != \"classid\") {\n\t\t\t\t\t\t\tatt += ' ' + i + '=\"' + attObj[i] + '\"';\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\tvar par = \"\";\n\t\t\t\tfor (var j in parObj) {\n\t\t\t\t\tif (parObj[j] != Object.prototype[j]) { // filter out prototype additions from other potential libraries\n\t\t\t\t\t\tpar += '<param name=\"' + j + '\" value=\"' + parObj[j] + '\" />';\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\tel.outerHTML = '<object classid=\"clsid:D27CDB6E-AE6D-11cf-96B8-444553540000\"' + att + '>' + par + '</object>';\n\t\t\t\tobjIdArr[objIdArr.length] = attObj.id; // stored to fix object 'leaks' on unload (dynamic publishing only)\n\t\t\t\tr = getElementById(attObj.id);\t\n\t\t\t}\n\t\t\telse { // well-behaving browsers\n\t\t\t\tvar o = createElement(OBJECT);\n\t\t\t\to.setAttribute(\"type\", FLASH_MIME_TYPE);\n\t\t\t\tfor (var m in attObj) {\n\t\t\t\t\tif (attObj[m] != Object.prototype[m]) { // filter out prototype additions from other potential libraries\n\t\t\t\t\t\tif (m.toLowerCase() == \"styleclass\") { // 'class' is an ECMA4 reserved keyword\n\t\t\t\t\t\t\to.setAttribute(\"class\", attObj[m]);\n\t\t\t\t\t\t}\n\t\t\t\t\t\telse if (m.toLowerCase() != \"classid\") { // filter out IE specific attribute\n\t\t\t\t\t\t\to.setAttribute(m, attObj[m]);\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\tfor (var n in parObj) {\n\t\t\t\t\tif (parObj[n] != Object.prototype[n] && n.toLowerCase() != \"movie\") { // filter out prototype additions from other potential libraries and IE specific param element\n\t\t\t\t\t\tcreateObjParam(o, n, parObj[n]);\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\tel.parentNode.replaceChild(o, el);\n\t\t\t\tr = o;\n\t\t\t}\n\t\t}\n\t\treturn r;\n\t}\n\t\n\tfunction createObjParam(el, pName, pValue) {\n\t\tvar p = createElement(\"param\");\n\t\tp.setAttribute(\"name\", pName);\t\n\t\tp.setAttribute(\"value\", pValue);\n\t\tel.appendChild(p);\n\t}\n\t\n\t/* Cross-browser SWF removal\n\t\t- Especially needed to safely and completely remove a SWF in Internet Explorer\n\t*/\n\tfunction removeSWF(id) {\n\t\tvar obj = getElementById(id);\n\t\tif (obj && obj.nodeName == \"OBJECT\") {\n\t\t\tif (ua.ie && ua.win) {\n\t\t\t\tobj.style.display = \"none\";\n\t\t\t\t(function(){\n\t\t\t\t\tif (obj.readyState == 4) {\n\t\t\t\t\t\tremoveObjectInIE(id);\n\t\t\t\t\t}\n\t\t\t\t\telse {\n\t\t\t\t\t\tsetTimeout(arguments.callee, 10);\n\t\t\t\t\t}\n\t\t\t\t})();\n\t\t\t}\n\t\t\telse {\n\t\t\t\tobj.parentNode.removeChild(obj);\n\t\t\t}\n\t\t}\n\t}\n\t\n\tfunction removeObjectInIE(id) {\n\t\tvar obj = getElementById(id);\n\t\tif (obj) {\n\t\t\tfor (var i in obj) {\n\t\t\t\tif (typeof obj[i] == \"function\") {\n\t\t\t\t\tobj[i] = null;\n\t\t\t\t}\n\t\t\t}\n\t\t\tobj.parentNode.removeChild(obj);\n\t\t}\n\t}\n\t\n\t/* Functions to optimize JavaScript compression\n\t*/\n\tfunction getElementById(id) {\n\t\tvar el = null;\n\t\ttry {\n\t\t\tel = doc.getElementById(id);\n\t\t}\n\t\tcatch (e) {}\n\t\treturn el;\n\t}\n\t\n\tfunction createElement(el) {\n\t\treturn doc.createElement(el);\n\t}\n\t\n\t/* Updated attachEvent function for Internet Explorer\n\t\t- Stores attachEvent information in an Array, so on unload the detachEvent functions can be called to avoid memory leaks\n\t*/\t\n\tfunction addListener(target, eventType, fn) {\n\t\ttarget.attachEvent(eventType, fn);\n\t\tlistenersArr[listenersArr.length] = [target, eventType, fn];\n\t}\n\t\n\t/* Flash Player and SWF content version matching\n\t*/\n\tfunction hasPlayerVersion(rv) {\n\t\tvar pv = ua.pv, v = rv.split(\".\");\n\t\tv[0] = parseInt(v[0], 10);\n\t\tv[1] = parseInt(v[1], 10) || 0; // supports short notation, e.g. \"9\" instead of \"9.0.0\"\n\t\tv[2] = parseInt(v[2], 10) || 0;\n\t\treturn (pv[0] > v[0] || (pv[0] == v[0] && pv[1] > v[1]) || (pv[0] == v[0] && pv[1] == v[1] && pv[2] >= v[2])) ? true : false;\n\t}\n\t\n\t/* Cross-browser dynamic CSS creation\n\t\t- Based on Bobby van der Sluis' solution: http://www.bobbyvandersluis.com/articles/dynamicCSS.php\n\t*/\t\n\tfunction createCSS(sel, decl, media, newStyle) {\n\t\tif (ua.ie && ua.mac) { return; }\n\t\tvar h = doc.getElementsByTagName(\"head\")[0];\n\t\tif (!h) { return; } // to also support badly authored HTML pages that lack a head element\n\t\tvar m = (media && typeof media == \"string\") ? media : \"screen\";\n\t\tif (newStyle) {\n\t\t\tdynamicStylesheet = null;\n\t\t\tdynamicStylesheetMedia = null;\n\t\t}\n\t\tif (!dynamicStylesheet || dynamicStylesheetMedia != m) { \n\t\t\t// create dynamic stylesheet + get a global reference to it\n\t\t\tvar s = createElement(\"style\");\n\t\t\ts.setAttribute(\"type\", \"text/css\");\n\t\t\ts.setAttribute(\"media\", m);\n\t\t\tdynamicStylesheet = h.appendChild(s);\n\t\t\tif (ua.ie && ua.win && typeof doc.styleSheets != UNDEF && doc.styleSheets.length > 0) {\n\t\t\t\tdynamicStylesheet = doc.styleSheets[doc.styleSheets.length - 1];\n\t\t\t}\n\t\t\tdynamicStylesheetMedia = m;\n\t\t}\n\t\t// add style rule\n\t\tif (ua.ie && ua.win) {\n\t\t\tif (dynamicStylesheet && typeof dynamicStylesheet.addRule == OBJECT) {\n\t\t\t\tdynamicStylesheet.addRule(sel, decl);\n\t\t\t}\n\t\t}\n\t\telse {\n\t\t\tif (dynamicStylesheet && typeof doc.createTextNode != UNDEF) {\n\t\t\t\tdynamicStylesheet.appendChild(doc.createTextNode(sel + \" {\" + decl + \"}\"));\n\t\t\t}\n\t\t}\n\t}\n\t\n\tfunction setVisibility(id, isVisible) {\n\t\tif (!autoHideShow) { return; }\n\t\tvar v = isVisible ? \"visible\" : \"hidden\";\n\t\tif (isDomLoaded && getElementById(id)) {\n\t\t\tgetElementById(id).style.visibility = v;\n\t\t}\n\t\telse {\n\t\t\tcreateCSS(\"#\" + id, \"visibility:\" + v);\n\t\t}\n\t}\n\n\t/* Filter to avoid XSS attacks\n\t*/\n\tfunction urlEncodeIfNecessary(s) {\n\t\tvar regex = /[\\\\\\\"<>\\.;]/;\n\t\tvar hasBadChars = regex.exec(s) != null;\n\t\treturn hasBadChars && typeof encodeURIComponent != UNDEF ? encodeURIComponent(s) : s;\n\t}\n\t\n\t/* Release memory to avoid memory leaks caused by closures, fix hanging audio/video threads and force open sockets/NetConnections to disconnect (Internet Explorer only)\n\t*/\n\tvar cleanup = function() {\n\t\tif (ua.ie && ua.win) {\n\t\t\twindow.attachEvent(\"onunload\", function() {\n\t\t\t\t// remove listeners to avoid memory leaks\n\t\t\t\tvar ll = listenersArr.length;\n\t\t\t\tfor (var i = 0; i < ll; i++) {\n\t\t\t\t\tlistenersArr[i][0].detachEvent(listenersArr[i][1], listenersArr[i][2]);\n\t\t\t\t}\n\t\t\t\t// cleanup dynamically embedded objects to fix audio/video threads and force open sockets and NetConnections to disconnect\n\t\t\t\tvar il = objIdArr.length;\n\t\t\t\tfor (var j = 0; j < il; j++) {\n\t\t\t\t\tremoveSWF(objIdArr[j]);\n\t\t\t\t}\n\t\t\t\t// cleanup library's main closures to avoid memory leaks\n\t\t\t\tfor (var k in ua) {\n\t\t\t\t\tua[k] = null;\n\t\t\t\t}\n\t\t\t\tua = null;\n\t\t\t\tfor (var l in swfobject) {\n\t\t\t\t\tswfobject[l] = null;\n\t\t\t\t}\n\t\t\t\tswfobject = null;\n\t\t\t});\n\t\t}\n\t}();\n\t\n\treturn {\n\t\t/* Public API\n\t\t\t- Reference: http://code.google.com/p/swfobject/wiki/documentation\n\t\t*/ \n\t\tregisterObject: function(objectIdStr, swfVersionStr, xiSwfUrlStr, callbackFn) {\n\t\t\tif (ua.w3 && objectIdStr && swfVersionStr) {\n\t\t\t\tvar regObj = {};\n\t\t\t\tregObj.id = objectIdStr;\n\t\t\t\tregObj.swfVersion = swfVersionStr;\n\t\t\t\tregObj.expressInstall = xiSwfUrlStr;\n\t\t\t\tregObj.callbackFn = callbackFn;\n\t\t\t\tregObjArr[regObjArr.length] = regObj;\n\t\t\t\tsetVisibility(objectIdStr, false);\n\t\t\t}\n\t\t\telse if (callbackFn) {\n\t\t\t\tcallbackFn({success:false, id:objectIdStr});\n\t\t\t}\n\t\t},\n\t\t\n\t\tgetObjectById: function(objectIdStr) {\n\t\t\tif (ua.w3) {\n\t\t\t\treturn getObjectById(objectIdStr);\n\t\t\t}\n\t\t},\n\t\t\n\t\tembedSWF: function(swfUrlStr, replaceElemIdStr, widthStr, heightStr, swfVersionStr, xiSwfUrlStr, flashvarsObj, parObj, attObj, callbackFn) {\n\t\t\tvar callbackObj = {success:false, id:replaceElemIdStr};\n\t\t\tif (ua.w3 && !(ua.wk && ua.wk < 312) && swfUrlStr && replaceElemIdStr && widthStr && heightStr && swfVersionStr) {\n\t\t\t\tsetVisibility(replaceElemIdStr, false);\n\t\t\t\taddDomLoadEvent(function() {\n\t\t\t\t\twidthStr += \"\"; // auto-convert to string\n\t\t\t\t\theightStr += \"\";\n\t\t\t\t\tvar att = {};\n\t\t\t\t\tif (attObj && typeof attObj === OBJECT) {\n\t\t\t\t\t\tfor (var i in attObj) { // copy object to avoid the use of references, because web authors often reuse attObj for multiple SWFs\n\t\t\t\t\t\t\tatt[i] = attObj[i];\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t\tatt.data = swfUrlStr;\n\t\t\t\t\tatt.width = widthStr;\n\t\t\t\t\tatt.height = heightStr;\n\t\t\t\t\tvar par = {}; \n\t\t\t\t\tif (parObj && typeof parObj === OBJECT) {\n\t\t\t\t\t\tfor (var j in parObj) { // copy object to avoid the use of references, because web authors often reuse parObj for multiple SWFs\n\t\t\t\t\t\t\tpar[j] = parObj[j];\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t\tif (flashvarsObj && typeof flashvarsObj === OBJECT) {\n\t\t\t\t\t\tfor (var k in flashvarsObj) { // copy object to avoid the use of references, because web authors often reuse flashvarsObj for multiple SWFs\n\t\t\t\t\t\t\tif (typeof par.flashvars != UNDEF) {\n\t\t\t\t\t\t\t\tpar.flashvars += \"&\" + k + \"=\" + flashvarsObj[k];\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\telse {\n\t\t\t\t\t\t\t\tpar.flashvars = k + \"=\" + flashvarsObj[k];\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t\tif (hasPlayerVersion(swfVersionStr)) { // create SWF\n\t\t\t\t\t\tvar obj = createSWF(att, par, replaceElemIdStr);\n\t\t\t\t\t\tif (att.id == replaceElemIdStr) {\n\t\t\t\t\t\t\tsetVisibility(replaceElemIdStr, true);\n\t\t\t\t\t\t}\n\t\t\t\t\t\tcallbackObj.success = true;\n\t\t\t\t\t\tcallbackObj.ref = obj;\n\t\t\t\t\t}\n\t\t\t\t\telse if (xiSwfUrlStr && canExpressInstall()) { // show Adobe Express Install\n\t\t\t\t\t\tatt.data = xiSwfUrlStr;\n\t\t\t\t\t\tshowExpressInstall(att, par, replaceElemIdStr, callbackFn);\n\t\t\t\t\t\treturn;\n\t\t\t\t\t}\n\t\t\t\t\telse { // show alternative content\n\t\t\t\t\t\tsetVisibility(replaceElemIdStr, true);\n\t\t\t\t\t}\n\t\t\t\t\tif (callbackFn) { callbackFn(callbackObj); }\n\t\t\t\t});\n\t\t\t}\n\t\t\telse if (callbackFn) { callbackFn(callbackObj);\t}\n\t\t},\n\t\t\n\t\tswitchOffAutoHideShow: function() {\n\t\t\tautoHideShow = false;\n\t\t},\n\t\t\n\t\tua: ua,\n\t\t\n\t\tgetFlashPlayerVersion: function() {\n\t\t\treturn { major:ua.pv[0], minor:ua.pv[1], release:ua.pv[2] };\n\t\t},\n\t\t\n\t\thasFlashPlayerVersion: hasPlayerVersion,\n\t\t\n\t\tcreateSWF: function(attObj, parObj, replaceElemIdStr) {\n\t\t\tif (ua.w3) {\n\t\t\t\treturn createSWF(attObj, parObj, replaceElemIdStr);\n\t\t\t}\n\t\t\telse {\n\t\t\t\treturn undefined;\n\t\t\t}\n\t\t},\n\t\t\n\t\tshowExpressInstall: function(att, par, replaceElemIdStr, callbackFn) {\n\t\t\tif (ua.w3 && canExpressInstall()) {\n\t\t\t\tshowExpressInstall(att, par, replaceElemIdStr, callbackFn);\n\t\t\t}\n\t\t},\n\t\t\n\t\tremoveSWF: function(objElemIdStr) {\n\t\t\tif (ua.w3) {\n\t\t\t\tremoveSWF(objElemIdStr);\n\t\t\t}\n\t\t},\n\t\t\n\t\tcreateCSS: function(selStr, declStr, mediaStr, newStyleBoolean) {\n\t\t\tif (ua.w3) {\n\t\t\t\tcreateCSS(selStr, declStr, mediaStr, newStyleBoolean);\n\t\t\t}\n\t\t},\n\t\t\n\t\taddDomLoadEvent: addDomLoadEvent,\n\t\t\n\t\taddLoadEvent: addLoadEvent,\n\t\t\n\t\tgetQueryParamValue: function(param) {\n\t\t\tvar q = doc.location.search || doc.location.hash;\n\t\t\tif (q) {\n\t\t\t\tif (/\\?/.test(q)) { q = q.split(\"?\")[1]; } // strip question mark\n\t\t\t\tif (param == null) {\n\t\t\t\t\treturn urlEncodeIfNecessary(q);\n\t\t\t\t}\n\t\t\t\tvar pairs = q.split(\"&\");\n\t\t\t\tfor (var i = 0; i < pairs.length; i++) {\n\t\t\t\t\tif (pairs[i].substring(0, pairs[i].indexOf(\"=\")) == param) {\n\t\t\t\t\t\treturn urlEncodeIfNecessary(pairs[i].substring((pairs[i].indexOf(\"=\") + 1)));\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t\treturn \"\";\n\t\t},\n\t\t\n\t\t// For internal usage only\n\t\texpressInstallCallback: function() {\n\t\t\tif (isExpressInstallActive) {\n\t\t\t\tvar obj = getElementById(EXPRESS_INSTALL_ID);\n\t\t\t\tif (obj && storedAltContent) {\n\t\t\t\t\tobj.parentNode.replaceChild(storedAltContent, obj);\n\t\t\t\t\tif (storedAltContentId) {\n\t\t\t\t\t\tsetVisibility(storedAltContentId, true);\n\t\t\t\t\t\tif (ua.ie && ua.win) { storedAltContent.style.display = \"block\"; }\n\t\t\t\t\t}\n\t\t\t\t\tif (storedCallbackFn) { storedCallbackFn(storedCallbackObj); }\n\t\t\t\t}\n\t\t\t\tisExpressInstallActive = false;\n\t\t\t} \n\t\t}\n\t};\n}();\n\nmodule.exports = swfobject;"],"sourceRoot":"./"}
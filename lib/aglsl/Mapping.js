var OpLUT = require("awayjs-stagegl/lib/aglsl/OpLUT");
var Mapping = (function () {
    //TODO: get rid of hack that fixes including definition file
    function Mapping(include) {
    }
    Mapping.agal2glsllut = [
        new OpLUT("%dest = %cast(%a);\n", 0, true, true, false, null, null, null, null, null, null),
        new OpLUT("%dest = %cast(%a + %b);\n", 0, true, true, true, null, null, null, null, null, null),
        new OpLUT("%dest = %cast(%a - %b);\n", 0, true, true, true, null, null, null, null, null, null),
        new OpLUT("%dest = %cast(%a * %b);\n", 0, true, true, true, null, null, null, null, null, null),
        new OpLUT("%dest = %cast(%a / %b);\n", 0, true, true, true, null, null, null, null, null, null),
        new OpLUT("%dest = %cast(1.0) / %a;\n", 0, true, true, false, null, null, null, null, null, null),
        new OpLUT("%dest = %cast(min(%a,%b));\n", 0, true, true, true, null, null, null, null, null, null),
        new OpLUT("%dest = %cast(max(%a,%b));\n", 0, true, true, true, null, null, null, null, null, null),
        new OpLUT("%dest = %cast(fract(%a));\n", 0, true, true, false, null, null, null, null, null, null),
        new OpLUT("%dest = %cast(sqrt(abs(%a)));\n", 0, true, true, false, null, null, null, null, null, null),
        new OpLUT("%dest = %cast(inversesqrt(abs(%a)));\n", 0, true, true, false, null, null, null, null, null, null),
        new OpLUT("%dest = %cast(pow(abs(%a),%b));\n", 0, true, true, true, null, null, null, null, null, null),
        new OpLUT("%dest = %cast(log2(abs(%a)));\n", 0, true, true, false, null, null, null, null, null, null),
        new OpLUT("%dest = %cast(exp2(%a));\n", 0, true, true, false, null, null, null, null, null, null),
        new OpLUT("%dest = %cast(normalize(vec3( %a ) ));\n", 0, true, true, false, null, null, true, null, null, null),
        new OpLUT("%dest = %cast(sin(%a));\n", 0, true, true, false, null, null, null, null, null, null),
        new OpLUT("%dest = %cast(cos(%a));\n", 0, true, true, false, null, null, null, null, null, null),
        new OpLUT("%dest = %cast(cross(vec3(%a),vec3(%b)));\n", 0, true, true, true, null, null, true, null, null, null),
        new OpLUT("%dest = %cast(dot(vec3(%a),vec3(%b)));\n", 0, true, true, true, null, null, true, null, null, null),
        new OpLUT("%dest = %cast(dot(vec4(%a),vec4(%b)));\n", 0, true, true, true, null, null, true, null, null, null),
        new OpLUT("%dest = %cast(abs(%a));\n", 0, true, true, false, null, null, null, null, null, null),
        new OpLUT("%dest = %cast(%a * -1.0);\n", 0, true, true, false, null, null, null, null, null, null),
        new OpLUT("%dest = %cast(clamp(%a,0.0,1.0));\n", 0, true, true, false, null, null, null, null, null, null),
        new OpLUT("%dest = %cast(dot(vec3(%a),vec3(%b)));\n", null, true, true, true, 3, 3, true, null, null, null),
        new OpLUT("%dest = %cast(dot(vec4(%a),vec4(%b)));\n", null, true, true, true, 4, 4, true, null, null, null),
        new OpLUT("%dest = %cast(dot(vec4(%a),vec4(%b)));\n", null, true, true, true, 4, 3, true, null, null, null),
        new OpLUT("%dest = %cast(dFdx(%a));\n", 0, true, true, false, null, null, null, null, null, null),
        new OpLUT("%dest = %cast(dFdx(%a));\n", 0, true, true, false, null, null, null, null, null, null),
        new OpLUT("if (float(%a)==float(%b)) {;\n", 0, false, true, true, null, null, null, true, null, null),
        new OpLUT("if (float(%a)!=float(%b)) {;\n", 0, false, true, true, null, null, null, true, null, null),
        new OpLUT("if (float(%a)>=float(%b)) {;\n", 0, false, true, true, null, null, null, true, null, null),
        new OpLUT("if (float(%a)<float(%b)) {;\n", 0, false, true, true, null, null, null, true, null, null),
        new OpLUT("} else {;\n", 0, false, false, false, null, null, null, null, null, null),
        new OpLUT("};\n", 0, false, false, false, null, null, null, null, null, null),
        new OpLUT(null, null, null, null, false, null, null, null, null, null, null),
        new OpLUT(null, null, null, null, false, null, null, null, null, null, null),
        new OpLUT(null, null, null, null, false, null, null, null, null, null, null),
        new OpLUT(null, null, null, null, false, null, null, null, null, null, null),
        new OpLUT("%dest = %cast(texture%texdimLod(%b,%texsize(%a)).%dm);\n", null, true, true, true, null, null, null, null, true, null),
        new OpLUT("if ( float(%a)<0.0 ) discard;\n", null, false, true, false, null, null, null, true, null, null),
        new OpLUT("%dest = %cast(texture%texdim(%b,%texsize(%a)%lod).%dm);\n", null, true, true, true, null, null, true, null, true, true),
        new OpLUT("%dest = %cast(greaterThanEqual(%a,%b).%dm);\n", 0, true, true, true, null, null, true, null, true, null),
        new OpLUT("%dest = %cast(lessThan(%a,%b).%dm);\n", 0, true, true, true, null, null, true, null, true, null),
        new OpLUT("%dest = %cast(sign(%a));\n", 0, true, true, false, null, null, null, null, null, null),
        new OpLUT("%dest = %cast(equal(%a,%b).%dm);\n", 0, true, true, true, null, null, true, null, true, null),
        new OpLUT("%dest = %cast(notEqual(%a,%b).%dm);\n", 0, true, true, true, null, null, true, null, true, null)
    ];
    return Mapping;
})();
module.exports = Mapping;

//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbImF3YXlqcy1zdGFnZWdsL2xpYi9hZ2xzbC9tYXBwaW5nLnRzIl0sIm5hbWVzIjpbIk1hcHBpbmciLCJNYXBwaW5nLmNvbnN0cnVjdG9yIl0sIm1hcHBpbmdzIjoiQUFBQSxJQUFPLEtBQUssV0FBZSxnQ0FBZ0MsQ0FBQyxDQUFDO0FBRTdELElBQU0sT0FBTztJQTBDWkEsNERBQTREQTtJQUM1REEsU0EzQ0tBLE9BQU9BLENBMkNBQSxPQUFjQTtJQUcxQkMsQ0FBQ0E7SUE1Q01ELG9CQUFZQSxHQUFnQkE7UUFHbENBLElBQUlBLEtBQUtBLENBQUNBLHNCQUFzQkEsRUFBRUEsQ0FBQ0EsRUFBRUEsSUFBSUEsRUFBRUEsSUFBSUEsRUFBRUEsS0FBS0EsRUFBRUEsSUFBSUEsRUFBRUEsSUFBSUEsRUFBRUEsSUFBSUEsRUFBRUEsSUFBSUEsRUFBRUEsSUFBSUEsRUFBRUEsSUFBSUEsQ0FBQ0E7UUFDM0ZBLElBQUlBLEtBQUtBLENBQUNBLDJCQUEyQkEsRUFBRUEsQ0FBQ0EsRUFBRUEsSUFBSUEsRUFBRUEsSUFBSUEsRUFBRUEsSUFBSUEsRUFBRUEsSUFBSUEsRUFBRUEsSUFBSUEsRUFBRUEsSUFBSUEsRUFBRUEsSUFBSUEsRUFBRUEsSUFBSUEsRUFBRUEsSUFBSUEsQ0FBQ0E7UUFDL0ZBLElBQUlBLEtBQUtBLENBQUNBLDJCQUEyQkEsRUFBRUEsQ0FBQ0EsRUFBRUEsSUFBSUEsRUFBRUEsSUFBSUEsRUFBRUEsSUFBSUEsRUFBRUEsSUFBSUEsRUFBRUEsSUFBSUEsRUFBRUEsSUFBSUEsRUFBRUEsSUFBSUEsRUFBRUEsSUFBSUEsRUFBRUEsSUFBSUEsQ0FBQ0E7UUFDL0ZBLElBQUlBLEtBQUtBLENBQUNBLDJCQUEyQkEsRUFBRUEsQ0FBQ0EsRUFBRUEsSUFBSUEsRUFBRUEsSUFBSUEsRUFBRUEsSUFBSUEsRUFBRUEsSUFBSUEsRUFBRUEsSUFBSUEsRUFBRUEsSUFBSUEsRUFBRUEsSUFBSUEsRUFBRUEsSUFBSUEsRUFBRUEsSUFBSUEsQ0FBQ0E7UUFDL0ZBLElBQUlBLEtBQUtBLENBQUNBLDJCQUEyQkEsRUFBRUEsQ0FBQ0EsRUFBRUEsSUFBSUEsRUFBRUEsSUFBSUEsRUFBRUEsSUFBSUEsRUFBRUEsSUFBSUEsRUFBRUEsSUFBSUEsRUFBRUEsSUFBSUEsRUFBRUEsSUFBSUEsRUFBRUEsSUFBSUEsRUFBRUEsSUFBSUEsQ0FBQ0E7UUFDL0ZBLElBQUlBLEtBQUtBLENBQUNBLDRCQUE0QkEsRUFBRUEsQ0FBQ0EsRUFBRUEsSUFBSUEsRUFBRUEsSUFBSUEsRUFBRUEsS0FBS0EsRUFBRUEsSUFBSUEsRUFBRUEsSUFBSUEsRUFBRUEsSUFBSUEsRUFBRUEsSUFBSUEsRUFBRUEsSUFBSUEsRUFBRUEsSUFBSUEsQ0FBQ0E7UUFDakdBLElBQUlBLEtBQUtBLENBQUNBLDhCQUE4QkEsRUFBRUEsQ0FBQ0EsRUFBRUEsSUFBSUEsRUFBRUEsSUFBSUEsRUFBRUEsSUFBSUEsRUFBRUEsSUFBSUEsRUFBRUEsSUFBSUEsRUFBRUEsSUFBSUEsRUFBRUEsSUFBSUEsRUFBRUEsSUFBSUEsRUFBRUEsSUFBSUEsQ0FBQ0E7UUFDbEdBLElBQUlBLEtBQUtBLENBQUNBLDhCQUE4QkEsRUFBRUEsQ0FBQ0EsRUFBRUEsSUFBSUEsRUFBRUEsSUFBSUEsRUFBRUEsSUFBSUEsRUFBRUEsSUFBSUEsRUFBRUEsSUFBSUEsRUFBRUEsSUFBSUEsRUFBRUEsSUFBSUEsRUFBRUEsSUFBSUEsRUFBRUEsSUFBSUEsQ0FBQ0E7UUFDbEdBLElBQUlBLEtBQUtBLENBQUNBLDZCQUE2QkEsRUFBRUEsQ0FBQ0EsRUFBRUEsSUFBSUEsRUFBRUEsSUFBSUEsRUFBRUEsS0FBS0EsRUFBRUEsSUFBSUEsRUFBRUEsSUFBSUEsRUFBRUEsSUFBSUEsRUFBRUEsSUFBSUEsRUFBRUEsSUFBSUEsRUFBRUEsSUFBSUEsQ0FBQ0E7UUFDbEdBLElBQUlBLEtBQUtBLENBQUNBLGlDQUFpQ0EsRUFBRUEsQ0FBQ0EsRUFBRUEsSUFBSUEsRUFBRUEsSUFBSUEsRUFBRUEsS0FBS0EsRUFBRUEsSUFBSUEsRUFBRUEsSUFBSUEsRUFBRUEsSUFBSUEsRUFBRUEsSUFBSUEsRUFBRUEsSUFBSUEsRUFBRUEsSUFBSUEsQ0FBQ0E7UUFDdEdBLElBQUlBLEtBQUtBLENBQUNBLHdDQUF3Q0EsRUFBRUEsQ0FBQ0EsRUFBRUEsSUFBSUEsRUFBRUEsSUFBSUEsRUFBRUEsS0FBS0EsRUFBRUEsSUFBSUEsRUFBRUEsSUFBSUEsRUFBRUEsSUFBSUEsRUFBRUEsSUFBSUEsRUFBRUEsSUFBSUEsRUFBRUEsSUFBSUEsQ0FBQ0E7UUFDN0dBLElBQUlBLEtBQUtBLENBQUNBLG1DQUFtQ0EsRUFBRUEsQ0FBQ0EsRUFBRUEsSUFBSUEsRUFBRUEsSUFBSUEsRUFBRUEsSUFBSUEsRUFBRUEsSUFBSUEsRUFBRUEsSUFBSUEsRUFBRUEsSUFBSUEsRUFBRUEsSUFBSUEsRUFBRUEsSUFBSUEsRUFBRUEsSUFBSUEsQ0FBQ0E7UUFDdkdBLElBQUlBLEtBQUtBLENBQUNBLGlDQUFpQ0EsRUFBRUEsQ0FBQ0EsRUFBRUEsSUFBSUEsRUFBRUEsSUFBSUEsRUFBRUEsS0FBS0EsRUFBRUEsSUFBSUEsRUFBRUEsSUFBSUEsRUFBRUEsSUFBSUEsRUFBRUEsSUFBSUEsRUFBRUEsSUFBSUEsRUFBRUEsSUFBSUEsQ0FBQ0E7UUFDdEdBLElBQUlBLEtBQUtBLENBQUNBLDRCQUE0QkEsRUFBRUEsQ0FBQ0EsRUFBRUEsSUFBSUEsRUFBRUEsSUFBSUEsRUFBRUEsS0FBS0EsRUFBRUEsSUFBSUEsRUFBRUEsSUFBSUEsRUFBRUEsSUFBSUEsRUFBRUEsSUFBSUEsRUFBRUEsSUFBSUEsRUFBRUEsSUFBSUEsQ0FBQ0E7UUFHakdBLElBQUlBLEtBQUtBLENBQUNBLDBDQUEwQ0EsRUFBRUEsQ0FBQ0EsRUFBRUEsSUFBSUEsRUFBRUEsSUFBSUEsRUFBRUEsS0FBS0EsRUFBRUEsSUFBSUEsRUFBRUEsSUFBSUEsRUFBRUEsSUFBSUEsRUFBRUEsSUFBSUEsRUFBRUEsSUFBSUEsRUFBRUEsSUFBSUEsQ0FBQ0E7UUFDL0dBLElBQUlBLEtBQUtBLENBQUNBLDJCQUEyQkEsRUFBRUEsQ0FBQ0EsRUFBRUEsSUFBSUEsRUFBRUEsSUFBSUEsRUFBRUEsS0FBS0EsRUFBRUEsSUFBSUEsRUFBRUEsSUFBSUEsRUFBRUEsSUFBSUEsRUFBRUEsSUFBSUEsRUFBRUEsSUFBSUEsRUFBRUEsSUFBSUEsQ0FBQ0E7UUFDaEdBLElBQUlBLEtBQUtBLENBQUNBLDJCQUEyQkEsRUFBRUEsQ0FBQ0EsRUFBRUEsSUFBSUEsRUFBRUEsSUFBSUEsRUFBRUEsS0FBS0EsRUFBRUEsSUFBSUEsRUFBRUEsSUFBSUEsRUFBRUEsSUFBSUEsRUFBRUEsSUFBSUEsRUFBRUEsSUFBSUEsRUFBRUEsSUFBSUEsQ0FBQ0E7UUFDaEdBLElBQUlBLEtBQUtBLENBQUNBLDRDQUE0Q0EsRUFBRUEsQ0FBQ0EsRUFBRUEsSUFBSUEsRUFBRUEsSUFBSUEsRUFBRUEsSUFBSUEsRUFBRUEsSUFBSUEsRUFBRUEsSUFBSUEsRUFBRUEsSUFBSUEsRUFBRUEsSUFBSUEsRUFBRUEsSUFBSUEsRUFBRUEsSUFBSUEsQ0FBQ0E7UUFDaEhBLElBQUlBLEtBQUtBLENBQUNBLDBDQUEwQ0EsRUFBRUEsQ0FBQ0EsRUFBRUEsSUFBSUEsRUFBRUEsSUFBSUEsRUFBRUEsSUFBSUEsRUFBRUEsSUFBSUEsRUFBRUEsSUFBSUEsRUFBRUEsSUFBSUEsRUFBRUEsSUFBSUEsRUFBRUEsSUFBSUEsRUFBRUEsSUFBSUEsQ0FBQ0E7UUFDOUdBLElBQUlBLEtBQUtBLENBQUNBLDBDQUEwQ0EsRUFBRUEsQ0FBQ0EsRUFBRUEsSUFBSUEsRUFBRUEsSUFBSUEsRUFBRUEsSUFBSUEsRUFBRUEsSUFBSUEsRUFBRUEsSUFBSUEsRUFBRUEsSUFBSUEsRUFBRUEsSUFBSUEsRUFBRUEsSUFBSUEsRUFBRUEsSUFBSUEsQ0FBQ0E7UUFDOUdBLElBQUlBLEtBQUtBLENBQUNBLDJCQUEyQkEsRUFBRUEsQ0FBQ0EsRUFBRUEsSUFBSUEsRUFBRUEsSUFBSUEsRUFBRUEsS0FBS0EsRUFBRUEsSUFBSUEsRUFBRUEsSUFBSUEsRUFBRUEsSUFBSUEsRUFBRUEsSUFBSUEsRUFBRUEsSUFBSUEsRUFBRUEsSUFBSUEsQ0FBQ0E7UUFDaEdBLElBQUlBLEtBQUtBLENBQUNBLDZCQUE2QkEsRUFBRUEsQ0FBQ0EsRUFBRUEsSUFBSUEsRUFBRUEsSUFBSUEsRUFBRUEsS0FBS0EsRUFBRUEsSUFBSUEsRUFBRUEsSUFBSUEsRUFBRUEsSUFBSUEsRUFBRUEsSUFBSUEsRUFBRUEsSUFBSUEsRUFBRUEsSUFBSUEsQ0FBQ0E7UUFDbEdBLElBQUlBLEtBQUtBLENBQUNBLHFDQUFxQ0EsRUFBRUEsQ0FBQ0EsRUFBRUEsSUFBSUEsRUFBRUEsSUFBSUEsRUFBRUEsS0FBS0EsRUFBRUEsSUFBSUEsRUFBRUEsSUFBSUEsRUFBRUEsSUFBSUEsRUFBRUEsSUFBSUEsRUFBRUEsSUFBSUEsRUFBRUEsSUFBSUEsQ0FBQ0E7UUFDMUdBLElBQUlBLEtBQUtBLENBQUNBLDBDQUEwQ0EsRUFBRUEsSUFBSUEsRUFBRUEsSUFBSUEsRUFBRUEsSUFBSUEsRUFBRUEsSUFBSUEsRUFBRUEsQ0FBQ0EsRUFBRUEsQ0FBQ0EsRUFBRUEsSUFBSUEsRUFBRUEsSUFBSUEsRUFBRUEsSUFBSUEsRUFBRUEsSUFBSUEsQ0FBQ0E7UUFDM0dBLElBQUlBLEtBQUtBLENBQUNBLDBDQUEwQ0EsRUFBRUEsSUFBSUEsRUFBRUEsSUFBSUEsRUFBRUEsSUFBSUEsRUFBRUEsSUFBSUEsRUFBRUEsQ0FBQ0EsRUFBRUEsQ0FBQ0EsRUFBRUEsSUFBSUEsRUFBRUEsSUFBSUEsRUFBRUEsSUFBSUEsRUFBRUEsSUFBSUEsQ0FBQ0E7UUFDM0dBLElBQUlBLEtBQUtBLENBQUNBLDBDQUEwQ0EsRUFBRUEsSUFBSUEsRUFBRUEsSUFBSUEsRUFBRUEsSUFBSUEsRUFBRUEsSUFBSUEsRUFBRUEsQ0FBQ0EsRUFBRUEsQ0FBQ0EsRUFBRUEsSUFBSUEsRUFBRUEsSUFBSUEsRUFBRUEsSUFBSUEsRUFBRUEsSUFBSUEsQ0FBQ0E7UUFDM0dBLElBQUlBLEtBQUtBLENBQUNBLDRCQUE0QkEsRUFBRUEsQ0FBQ0EsRUFBRUEsSUFBSUEsRUFBRUEsSUFBSUEsRUFBRUEsS0FBS0EsRUFBRUEsSUFBSUEsRUFBRUEsSUFBSUEsRUFBRUEsSUFBSUEsRUFBRUEsSUFBSUEsRUFBRUEsSUFBSUEsRUFBRUEsSUFBSUEsQ0FBQ0E7UUFDakdBLElBQUlBLEtBQUtBLENBQUNBLDRCQUE0QkEsRUFBRUEsQ0FBQ0EsRUFBRUEsSUFBSUEsRUFBRUEsSUFBSUEsRUFBRUEsS0FBS0EsRUFBRUEsSUFBSUEsRUFBRUEsSUFBSUEsRUFBRUEsSUFBSUEsRUFBRUEsSUFBSUEsRUFBRUEsSUFBSUEsRUFBRUEsSUFBSUEsQ0FBQ0E7UUFDakdBLElBQUlBLEtBQUtBLENBQUNBLGdDQUFnQ0EsRUFBRUEsQ0FBQ0EsRUFBRUEsS0FBS0EsRUFBRUEsSUFBSUEsRUFBRUEsSUFBSUEsRUFBRUEsSUFBSUEsRUFBRUEsSUFBSUEsRUFBRUEsSUFBSUEsRUFBRUEsSUFBSUEsRUFBRUEsSUFBSUEsRUFBRUEsSUFBSUEsQ0FBQ0E7UUFBRUEsSUFBSUEsS0FBS0EsQ0FBQ0EsZ0NBQWdDQSxFQUFFQSxDQUFDQSxFQUFFQSxLQUFLQSxFQUFFQSxJQUFJQSxFQUFFQSxJQUFJQSxFQUFFQSxJQUFJQSxFQUFFQSxJQUFJQSxFQUFFQSxJQUFJQSxFQUFFQSxJQUFJQSxFQUFFQSxJQUFJQSxFQUFFQSxJQUFJQSxDQUFDQTtRQUFFQSxJQUFJQSxLQUFLQSxDQUFDQSxnQ0FBZ0NBLEVBQUVBLENBQUNBLEVBQUVBLEtBQUtBLEVBQUVBLElBQUlBLEVBQUVBLElBQUlBLEVBQUVBLElBQUlBLEVBQUVBLElBQUlBLEVBQUVBLElBQUlBLEVBQUVBLElBQUlBLEVBQUVBLElBQUlBLEVBQUVBLElBQUlBLENBQUNBO1FBQUVBLElBQUlBLEtBQUtBLENBQUNBLCtCQUErQkEsRUFBRUEsQ0FBQ0EsRUFBRUEsS0FBS0EsRUFBRUEsSUFBSUEsRUFBRUEsSUFBSUEsRUFBRUEsSUFBSUEsRUFBRUEsSUFBSUEsRUFBRUEsSUFBSUEsRUFBRUEsSUFBSUEsRUFBRUEsSUFBSUEsRUFBRUEsSUFBSUEsQ0FBQ0E7UUFBRUEsSUFBSUEsS0FBS0EsQ0FBQ0EsYUFBYUEsRUFBRUEsQ0FBQ0EsRUFBRUEsS0FBS0EsRUFBRUEsS0FBS0EsRUFBRUEsS0FBS0EsRUFBRUEsSUFBSUEsRUFBRUEsSUFBSUEsRUFBRUEsSUFBSUEsRUFBRUEsSUFBSUEsRUFBRUEsSUFBSUEsRUFBRUEsSUFBSUEsQ0FBQ0E7UUFBRUEsSUFBSUEsS0FBS0EsQ0FBQ0EsTUFBTUEsRUFBRUEsQ0FBQ0EsRUFBRUEsS0FBS0EsRUFBRUEsS0FBS0EsRUFBRUEsS0FBS0EsRUFBRUEsSUFBSUEsRUFBRUEsSUFBSUEsRUFBRUEsSUFBSUEsRUFBRUEsSUFBSUEsRUFBRUEsSUFBSUEsRUFBRUEsSUFBSUEsQ0FBQ0E7UUFBRUEsSUFBSUEsS0FBS0EsQ0FBQ0EsSUFBSUEsRUFBRUEsSUFBSUEsRUFBRUEsSUFBSUEsRUFBRUEsSUFBSUEsRUFBRUEsS0FBS0EsRUFBRUEsSUFBSUEsRUFBRUEsSUFBSUEsRUFBRUEsSUFBSUEsRUFBRUEsSUFBSUEsRUFBRUEsSUFBSUEsRUFBRUEsSUFBSUEsQ0FBQ0E7UUFBRUEsSUFBSUEsS0FBS0EsQ0FBQ0EsSUFBSUEsRUFBRUEsSUFBSUEsRUFBRUEsSUFBSUEsRUFBRUEsSUFBSUEsRUFBRUEsS0FBS0EsRUFBRUEsSUFBSUEsRUFBRUEsSUFBSUEsRUFBRUEsSUFBSUEsRUFBRUEsSUFBSUEsRUFBRUEsSUFBSUEsRUFBRUEsSUFBSUEsQ0FBQ0E7UUFBRUEsSUFBSUEsS0FBS0EsQ0FBQ0EsSUFBSUEsRUFBRUEsSUFBSUEsRUFBRUEsSUFBSUEsRUFBRUEsSUFBSUEsRUFBRUEsS0FBS0EsRUFBRUEsSUFBSUEsRUFBRUEsSUFBSUEsRUFBRUEsSUFBSUEsRUFBRUEsSUFBSUEsRUFBRUEsSUFBSUEsRUFBRUEsSUFBSUEsQ0FBQ0E7UUFBRUEsSUFBSUEsS0FBS0EsQ0FBQ0EsSUFBSUEsRUFBRUEsSUFBSUEsRUFBRUEsSUFBSUEsRUFBRUEsSUFBSUEsRUFBRUEsS0FBS0EsRUFBRUEsSUFBSUEsRUFBRUEsSUFBSUEsRUFBRUEsSUFBSUEsRUFBRUEsSUFBSUEsRUFBRUEsSUFBSUEsRUFBRUEsSUFBSUEsQ0FBQ0E7UUFHdDNCQSxJQUFJQSxLQUFLQSxDQUFDQSwwREFBMERBLEVBQUVBLElBQUlBLEVBQUVBLElBQUlBLEVBQUVBLElBQUlBLEVBQUVBLElBQUlBLEVBQUVBLElBQUlBLEVBQUVBLElBQUlBLEVBQUVBLElBQUlBLEVBQUVBLElBQUlBLEVBQUVBLElBQUlBLEVBQUVBLElBQUlBLENBQUNBO1FBQUVBLElBQUlBLEtBQUtBLENBQUNBLGlDQUFpQ0EsRUFBRUEsSUFBSUEsRUFBRUEsS0FBS0EsRUFBRUEsSUFBSUEsRUFBRUEsS0FBS0EsRUFBRUEsSUFBSUEsRUFBRUEsSUFBSUEsRUFBRUEsSUFBSUEsRUFBRUEsSUFBSUEsRUFBRUEsSUFBSUEsRUFBRUEsSUFBSUEsQ0FBQ0E7UUFBRUEsSUFBSUEsS0FBS0EsQ0FBQ0EsMkRBQTJEQSxFQUFFQSxJQUFJQSxFQUFFQSxJQUFJQSxFQUFFQSxJQUFJQSxFQUFFQSxJQUFJQSxFQUFFQSxJQUFJQSxFQUFFQSxJQUFJQSxFQUFFQSxJQUFJQSxFQUFFQSxJQUFJQSxFQUFFQSxJQUFJQSxFQUFFQSxJQUFJQSxDQUFDQTtRQUFFQSxJQUFJQSxLQUFLQSxDQUFDQSwrQ0FBK0NBLEVBQUVBLENBQUNBLEVBQUVBLElBQUlBLEVBQUVBLElBQUlBLEVBQUVBLElBQUlBLEVBQUVBLElBQUlBLEVBQUVBLElBQUlBLEVBQUVBLElBQUlBLEVBQUVBLElBQUlBLEVBQUVBLElBQUlBLEVBQUVBLElBQUlBLENBQUNBO1FBQUVBLElBQUlBLEtBQUtBLENBQUNBLHVDQUF1Q0EsRUFBRUEsQ0FBQ0EsRUFBRUEsSUFBSUEsRUFBRUEsSUFBSUEsRUFBRUEsSUFBSUEsRUFBRUEsSUFBSUEsRUFBRUEsSUFBSUEsRUFBRUEsSUFBSUEsRUFBRUEsSUFBSUEsRUFBRUEsSUFBSUEsRUFBRUEsSUFBSUEsQ0FBQ0E7UUFBRUEsSUFBSUEsS0FBS0EsQ0FBQ0EsNEJBQTRCQSxFQUFFQSxDQUFDQSxFQUFFQSxJQUFJQSxFQUFFQSxJQUFJQSxFQUFFQSxLQUFLQSxFQUFFQSxJQUFJQSxFQUFFQSxJQUFJQSxFQUFFQSxJQUFJQSxFQUFFQSxJQUFJQSxFQUFFQSxJQUFJQSxFQUFFQSxJQUFJQSxDQUFDQTtRQUFFQSxJQUFJQSxLQUFLQSxDQUFDQSxvQ0FBb0NBLEVBQUVBLENBQUNBLEVBQUVBLElBQUlBLEVBQUVBLElBQUlBLEVBQUVBLElBQUlBLEVBQUVBLElBQUlBLEVBQUVBLElBQUlBLEVBQUVBLElBQUlBLEVBQUVBLElBQUlBLEVBQUVBLElBQUlBLEVBQUVBLElBQUlBLENBQUNBO1FBQUVBLElBQUlBLEtBQUtBLENBQUNBLHVDQUF1Q0EsRUFBRUEsQ0FBQ0EsRUFBRUEsSUFBSUEsRUFBRUEsSUFBSUEsRUFBRUEsSUFBSUEsRUFBRUEsSUFBSUEsRUFBRUEsSUFBSUEsRUFBRUEsSUFBSUEsRUFBRUEsSUFBSUEsRUFBRUEsSUFBSUEsRUFBRUEsSUFBSUEsQ0FBQ0E7S0FFNzRCQSxDQUFDQTtJQU9IQSxjQUFDQTtBQUFEQSxDQS9DQSxBQStDQ0EsSUFBQTtBQUVELEFBQWlCLGlCQUFSLE9BQU8sQ0FBQyIsImZpbGUiOiJhZ2xzbC9NYXBwaW5nLmpzIiwic291cmNlUm9vdCI6Ii4uLyIsInNvdXJjZXNDb250ZW50IjpbImltcG9ydCBPcExVVFx0XHRcdFx0XHQ9IHJlcXVpcmUoXCJhd2F5anMtc3RhZ2VnbC9saWIvYWdsc2wvT3BMVVRcIik7XG5cbmNsYXNzIE1hcHBpbmdcbntcblx0c3RhdGljIGFnYWwyZ2xzbGx1dDpBcnJheTxPcExVVD4gPSBbXG5cblx0XHQvLyAgICAgICAgIHMgXHRcdFx0XHRcdFx0XHRcdFx0XHRcdFx0ZmxhZ3MgICBkZXN0ICAgIGEgICAgIGIgXHQgICAgbXcgXHQgIG1oICAgIG5kd20gIHNjYWxlIGRtXHQgIGxvZFxuXHRcdG5ldyBPcExVVChcIiVkZXN0ID0gJWNhc3QoJWEpO1xcblwiLCAwLCB0cnVlLCB0cnVlLCBmYWxzZSwgbnVsbCwgbnVsbCwgbnVsbCwgbnVsbCwgbnVsbCwgbnVsbCksIC8vbW92XG5cdFx0bmV3IE9wTFVUKFwiJWRlc3QgPSAlY2FzdCglYSArICViKTtcXG5cIiwgMCwgdHJ1ZSwgdHJ1ZSwgdHJ1ZSwgbnVsbCwgbnVsbCwgbnVsbCwgbnVsbCwgbnVsbCwgbnVsbCksIC8vYWRkXG5cdFx0bmV3IE9wTFVUKFwiJWRlc3QgPSAlY2FzdCglYSAtICViKTtcXG5cIiwgMCwgdHJ1ZSwgdHJ1ZSwgdHJ1ZSwgbnVsbCwgbnVsbCwgbnVsbCwgbnVsbCwgbnVsbCwgbnVsbCksIC8vc3ViXG5cdFx0bmV3IE9wTFVUKFwiJWRlc3QgPSAlY2FzdCglYSAqICViKTtcXG5cIiwgMCwgdHJ1ZSwgdHJ1ZSwgdHJ1ZSwgbnVsbCwgbnVsbCwgbnVsbCwgbnVsbCwgbnVsbCwgbnVsbCksIC8vbXVsXG5cdFx0bmV3IE9wTFVUKFwiJWRlc3QgPSAlY2FzdCglYSAvICViKTtcXG5cIiwgMCwgdHJ1ZSwgdHJ1ZSwgdHJ1ZSwgbnVsbCwgbnVsbCwgbnVsbCwgbnVsbCwgbnVsbCwgbnVsbCksIC8vZGl2XG5cdFx0bmV3IE9wTFVUKFwiJWRlc3QgPSAlY2FzdCgxLjApIC8gJWE7XFxuXCIsIDAsIHRydWUsIHRydWUsIGZhbHNlLCBudWxsLCBudWxsLCBudWxsLCBudWxsLCBudWxsLCBudWxsKSwgLy9yY3Bcblx0XHRuZXcgT3BMVVQoXCIlZGVzdCA9ICVjYXN0KG1pbiglYSwlYikpO1xcblwiLCAwLCB0cnVlLCB0cnVlLCB0cnVlLCBudWxsLCBudWxsLCBudWxsLCBudWxsLCBudWxsLCBudWxsKSwgLy9taW5cblx0XHRuZXcgT3BMVVQoXCIlZGVzdCA9ICVjYXN0KG1heCglYSwlYikpO1xcblwiLCAwLCB0cnVlLCB0cnVlLCB0cnVlLCBudWxsLCBudWxsLCBudWxsLCBudWxsLCBudWxsLCBudWxsKSwgLy9tYXhcblx0XHRuZXcgT3BMVVQoXCIlZGVzdCA9ICVjYXN0KGZyYWN0KCVhKSk7XFxuXCIsIDAsIHRydWUsIHRydWUsIGZhbHNlLCBudWxsLCBudWxsLCBudWxsLCBudWxsLCBudWxsLCBudWxsKSwgLy9mcmNcblx0XHRuZXcgT3BMVVQoXCIlZGVzdCA9ICVjYXN0KHNxcnQoYWJzKCVhKSkpO1xcblwiLCAwLCB0cnVlLCB0cnVlLCBmYWxzZSwgbnVsbCwgbnVsbCwgbnVsbCwgbnVsbCwgbnVsbCwgbnVsbCksIC8vc3F0XG5cdFx0bmV3IE9wTFVUKFwiJWRlc3QgPSAlY2FzdChpbnZlcnNlc3FydChhYnMoJWEpKSk7XFxuXCIsIDAsIHRydWUsIHRydWUsIGZhbHNlLCBudWxsLCBudWxsLCBudWxsLCBudWxsLCBudWxsLCBudWxsKSwgLy9yc3Fcblx0XHRuZXcgT3BMVVQoXCIlZGVzdCA9ICVjYXN0KHBvdyhhYnMoJWEpLCViKSk7XFxuXCIsIDAsIHRydWUsIHRydWUsIHRydWUsIG51bGwsIG51bGwsIG51bGwsIG51bGwsIG51bGwsIG51bGwpLCAvL3Bvd1xuXHRcdG5ldyBPcExVVChcIiVkZXN0ID0gJWNhc3QobG9nMihhYnMoJWEpKSk7XFxuXCIsIDAsIHRydWUsIHRydWUsIGZhbHNlLCBudWxsLCBudWxsLCBudWxsLCBudWxsLCBudWxsLCBudWxsKSwgLy9sb2dcblx0XHRuZXcgT3BMVVQoXCIlZGVzdCA9ICVjYXN0KGV4cDIoJWEpKTtcXG5cIiwgMCwgdHJ1ZSwgdHJ1ZSwgZmFsc2UsIG51bGwsIG51bGwsIG51bGwsIG51bGwsIG51bGwsIG51bGwpLCAvL2V4cFxuXG5cdFx0Ly8gICAgICAgICBzIFx0XHRcdFx0XHRcdFx0XHRcdFx0XHRcdGZsYWdzICBcdGRlc3QgICAgYSAgICAgYiBcdCAgICBtdyBcdCAgbWggICAgbmR3bSAgc2NhbGUgZG1cdCAgbG9kXG5cdFx0bmV3IE9wTFVUKFwiJWRlc3QgPSAlY2FzdChub3JtYWxpemUodmVjMyggJWEgKSApKTtcXG5cIiwgMCwgdHJ1ZSwgdHJ1ZSwgZmFsc2UsIG51bGwsIG51bGwsIHRydWUsIG51bGwsIG51bGwsIG51bGwpLCAvL25ybVxuXHRcdG5ldyBPcExVVChcIiVkZXN0ID0gJWNhc3Qoc2luKCVhKSk7XFxuXCIsIDAsIHRydWUsIHRydWUsIGZhbHNlLCBudWxsLCBudWxsLCBudWxsLCBudWxsLCBudWxsLCBudWxsKSwgLy9zaW5cblx0XHRuZXcgT3BMVVQoXCIlZGVzdCA9ICVjYXN0KGNvcyglYSkpO1xcblwiLCAwLCB0cnVlLCB0cnVlLCBmYWxzZSwgbnVsbCwgbnVsbCwgbnVsbCwgbnVsbCwgbnVsbCwgbnVsbCksIC8vY29zXG5cdFx0bmV3IE9wTFVUKFwiJWRlc3QgPSAlY2FzdChjcm9zcyh2ZWMzKCVhKSx2ZWMzKCViKSkpO1xcblwiLCAwLCB0cnVlLCB0cnVlLCB0cnVlLCBudWxsLCBudWxsLCB0cnVlLCBudWxsLCBudWxsLCBudWxsKSwgLy9jcnNcblx0XHRuZXcgT3BMVVQoXCIlZGVzdCA9ICVjYXN0KGRvdCh2ZWMzKCVhKSx2ZWMzKCViKSkpO1xcblwiLCAwLCB0cnVlLCB0cnVlLCB0cnVlLCBudWxsLCBudWxsLCB0cnVlLCBudWxsLCBudWxsLCBudWxsKSwgLy9kcDNcblx0XHRuZXcgT3BMVVQoXCIlZGVzdCA9ICVjYXN0KGRvdCh2ZWM0KCVhKSx2ZWM0KCViKSkpO1xcblwiLCAwLCB0cnVlLCB0cnVlLCB0cnVlLCBudWxsLCBudWxsLCB0cnVlLCBudWxsLCBudWxsLCBudWxsKSwgLy9kcDRcblx0XHRuZXcgT3BMVVQoXCIlZGVzdCA9ICVjYXN0KGFicyglYSkpO1xcblwiLCAwLCB0cnVlLCB0cnVlLCBmYWxzZSwgbnVsbCwgbnVsbCwgbnVsbCwgbnVsbCwgbnVsbCwgbnVsbCksIC8vYWJzXG5cdFx0bmV3IE9wTFVUKFwiJWRlc3QgPSAlY2FzdCglYSAqIC0xLjApO1xcblwiLCAwLCB0cnVlLCB0cnVlLCBmYWxzZSwgbnVsbCwgbnVsbCwgbnVsbCwgbnVsbCwgbnVsbCwgbnVsbCksIC8vbmVnXG5cdFx0bmV3IE9wTFVUKFwiJWRlc3QgPSAlY2FzdChjbGFtcCglYSwwLjAsMS4wKSk7XFxuXCIsIDAsIHRydWUsIHRydWUsIGZhbHNlLCBudWxsLCBudWxsLCBudWxsLCBudWxsLCBudWxsLCBudWxsKSwgLy9zYXRcblx0XHRuZXcgT3BMVVQoXCIlZGVzdCA9ICVjYXN0KGRvdCh2ZWMzKCVhKSx2ZWMzKCViKSkpO1xcblwiLCBudWxsLCB0cnVlLCB0cnVlLCB0cnVlLCAzLCAzLCB0cnVlLCBudWxsLCBudWxsLCBudWxsKSwgLy9tMzNcblx0XHRuZXcgT3BMVVQoXCIlZGVzdCA9ICVjYXN0KGRvdCh2ZWM0KCVhKSx2ZWM0KCViKSkpO1xcblwiLCBudWxsLCB0cnVlLCB0cnVlLCB0cnVlLCA0LCA0LCB0cnVlLCBudWxsLCBudWxsLCBudWxsKSwgLy9tNDRcblx0XHRuZXcgT3BMVVQoXCIlZGVzdCA9ICVjYXN0KGRvdCh2ZWM0KCVhKSx2ZWM0KCViKSkpO1xcblwiLCBudWxsLCB0cnVlLCB0cnVlLCB0cnVlLCA0LCAzLCB0cnVlLCBudWxsLCBudWxsLCBudWxsKSwgLy9tNDNcblx0XHRuZXcgT3BMVVQoXCIlZGVzdCA9ICVjYXN0KGRGZHgoJWEpKTtcXG5cIiwgMCwgdHJ1ZSwgdHJ1ZSwgZmFsc2UsIG51bGwsIG51bGwsIG51bGwsIG51bGwsIG51bGwsIG51bGwpLCAvL2RGZHhcblx0XHRuZXcgT3BMVVQoXCIlZGVzdCA9ICVjYXN0KGRGZHgoJWEpKTtcXG5cIiwgMCwgdHJ1ZSwgdHJ1ZSwgZmFsc2UsIG51bGwsIG51bGwsIG51bGwsIG51bGwsIG51bGwsIG51bGwpLCAvL2RGZHhcblx0XHRuZXcgT3BMVVQoXCJpZiAoZmxvYXQoJWEpPT1mbG9hdCglYikpIHs7XFxuXCIsIDAsIGZhbHNlLCB0cnVlLCB0cnVlLCBudWxsLCBudWxsLCBudWxsLCB0cnVlLCBudWxsLCBudWxsKSwgbmV3IE9wTFVUKFwiaWYgKGZsb2F0KCVhKSE9ZmxvYXQoJWIpKSB7O1xcblwiLCAwLCBmYWxzZSwgdHJ1ZSwgdHJ1ZSwgbnVsbCwgbnVsbCwgbnVsbCwgdHJ1ZSwgbnVsbCwgbnVsbCksIG5ldyBPcExVVChcImlmIChmbG9hdCglYSk+PWZsb2F0KCViKSkgeztcXG5cIiwgMCwgZmFsc2UsIHRydWUsIHRydWUsIG51bGwsIG51bGwsIG51bGwsIHRydWUsIG51bGwsIG51bGwpLCBuZXcgT3BMVVQoXCJpZiAoZmxvYXQoJWEpPGZsb2F0KCViKSkgeztcXG5cIiwgMCwgZmFsc2UsIHRydWUsIHRydWUsIG51bGwsIG51bGwsIG51bGwsIHRydWUsIG51bGwsIG51bGwpLCBuZXcgT3BMVVQoXCJ9IGVsc2UgeztcXG5cIiwgMCwgZmFsc2UsIGZhbHNlLCBmYWxzZSwgbnVsbCwgbnVsbCwgbnVsbCwgbnVsbCwgbnVsbCwgbnVsbCksIG5ldyBPcExVVChcIn07XFxuXCIsIDAsIGZhbHNlLCBmYWxzZSwgZmFsc2UsIG51bGwsIG51bGwsIG51bGwsIG51bGwsIG51bGwsIG51bGwpLCBuZXcgT3BMVVQobnVsbCwgbnVsbCwgbnVsbCwgbnVsbCwgZmFsc2UsIG51bGwsIG51bGwsIG51bGwsIG51bGwsIG51bGwsIG51bGwpLCBuZXcgT3BMVVQobnVsbCwgbnVsbCwgbnVsbCwgbnVsbCwgZmFsc2UsIG51bGwsIG51bGwsIG51bGwsIG51bGwsIG51bGwsIG51bGwpLCBuZXcgT3BMVVQobnVsbCwgbnVsbCwgbnVsbCwgbnVsbCwgZmFsc2UsIG51bGwsIG51bGwsIG51bGwsIG51bGwsIG51bGwsIG51bGwpLCBuZXcgT3BMVVQobnVsbCwgbnVsbCwgbnVsbCwgbnVsbCwgZmFsc2UsIG51bGwsIG51bGwsIG51bGwsIG51bGwsIG51bGwsIG51bGwpLFxuXG5cdFx0Ly8gICAgICAgICBzIFx0XHRcdFx0XHRcdFx0XHRcdFx0XHRcdFx0XHRcdGZsYWdzICBcdGRlc3QgICAgYSAgICAgYiBcdCAgICBtdyBcdCAgbWggICAgbmR3bSAgc2NhbGUgZG1cdCAgbG9kXG5cdFx0bmV3IE9wTFVUKFwiJWRlc3QgPSAlY2FzdCh0ZXh0dXJlJXRleGRpbUxvZCglYiwldGV4c2l6ZSglYSkpLiVkbSk7XFxuXCIsIG51bGwsIHRydWUsIHRydWUsIHRydWUsIG51bGwsIG51bGwsIG51bGwsIG51bGwsIHRydWUsIG51bGwpLCBuZXcgT3BMVVQoXCJpZiAoIGZsb2F0KCVhKTwwLjAgKSBkaXNjYXJkO1xcblwiLCBudWxsLCBmYWxzZSwgdHJ1ZSwgZmFsc2UsIG51bGwsIG51bGwsIG51bGwsIHRydWUsIG51bGwsIG51bGwpLCBuZXcgT3BMVVQoXCIlZGVzdCA9ICVjYXN0KHRleHR1cmUldGV4ZGltKCViLCV0ZXhzaXplKCVhKSVsb2QpLiVkbSk7XFxuXCIsIG51bGwsIHRydWUsIHRydWUsIHRydWUsIG51bGwsIG51bGwsIHRydWUsIG51bGwsIHRydWUsIHRydWUpLCBuZXcgT3BMVVQoXCIlZGVzdCA9ICVjYXN0KGdyZWF0ZXJUaGFuRXF1YWwoJWEsJWIpLiVkbSk7XFxuXCIsIDAsIHRydWUsIHRydWUsIHRydWUsIG51bGwsIG51bGwsIHRydWUsIG51bGwsIHRydWUsIG51bGwpLCBuZXcgT3BMVVQoXCIlZGVzdCA9ICVjYXN0KGxlc3NUaGFuKCVhLCViKS4lZG0pO1xcblwiLCAwLCB0cnVlLCB0cnVlLCB0cnVlLCBudWxsLCBudWxsLCB0cnVlLCBudWxsLCB0cnVlLCBudWxsKSwgbmV3IE9wTFVUKFwiJWRlc3QgPSAlY2FzdChzaWduKCVhKSk7XFxuXCIsIDAsIHRydWUsIHRydWUsIGZhbHNlLCBudWxsLCBudWxsLCBudWxsLCBudWxsLCBudWxsLCBudWxsKSwgbmV3IE9wTFVUKFwiJWRlc3QgPSAlY2FzdChlcXVhbCglYSwlYikuJWRtKTtcXG5cIiwgMCwgdHJ1ZSwgdHJ1ZSwgdHJ1ZSwgbnVsbCwgbnVsbCwgdHJ1ZSwgbnVsbCwgdHJ1ZSwgbnVsbCksIG5ldyBPcExVVChcIiVkZXN0ID0gJWNhc3Qobm90RXF1YWwoJWEsJWIpLiVkbSk7XFxuXCIsIDAsIHRydWUsIHRydWUsIHRydWUsIG51bGwsIG51bGwsIHRydWUsIG51bGwsIHRydWUsIG51bGwpXG5cblx0XTtcblxuXHQvL1RPRE86IGdldCByaWQgb2YgaGFjayB0aGF0IGZpeGVzIGluY2x1ZGluZyBkZWZpbml0aW9uIGZpbGVcblx0Y29uc3RydWN0b3IoaW5jbHVkZT86T3BMVVQpXG5cdHtcblxuXHR9XG59XG5cbmV4cG9ydCA9IE1hcHBpbmc7Il19
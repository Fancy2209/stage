var Flags = require("awayjs-stagegl/lib/aglsl/assembler/Flags");
var FS = require("awayjs-stagegl/lib/aglsl/assembler/FS");
/**
 *
 */
var Opcode = (function () {
    function Opcode(dest, aformat, asize, bformat, bsize, opcode, simple, horizontal, fragonly, matrix) {
        this.a = new FS();
        this.b = new FS();
        this.flags = new Flags();
        this.dest = dest;
        this.a.format = aformat;
        this.a.size = asize;
        this.b.format = bformat;
        this.b.size = bsize;
        this.opcode = opcode;
        this.flags.simple = simple;
        this.flags.horizontal = horizontal;
        this.flags.fragonly = fragonly;
        this.flags.matrix = matrix;
    }
    return Opcode;
})();
module.exports = Opcode;

//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbImF3YXlqcy1zdGFnZWdsL2xpYi9hZ2xzbC9hc3NlbWJsZXIvT3Bjb2RlLnRzIl0sIm5hbWVzIjpbIk9wY29kZSIsIk9wY29kZS5jb25zdHJ1Y3RvciJdLCJtYXBwaW5ncyI6IkFBQUEsSUFBTyxLQUFLLFdBQWMsMENBQTBDLENBQUMsQ0FBQztBQUN0RSxJQUFPLEVBQUUsV0FBZSx1Q0FBdUMsQ0FBQyxDQUFDO0FBRWpFLEFBR0E7O0dBREc7SUFDRyxNQUFNO0lBUVhBLFNBUktBLE1BQU1BLENBUUNBLElBQVdBLEVBQUVBLE9BQWNBLEVBQUVBLEtBQVlBLEVBQUVBLE9BQWNBLEVBQUVBLEtBQVlBLEVBQUVBLE1BQWFBLEVBQUVBLE1BQWNBLEVBQUVBLFVBQWtCQSxFQUFFQSxRQUFnQkEsRUFBRUEsTUFBY0E7UUFFdktDLElBQUlBLENBQUNBLENBQUNBLEdBQUdBLElBQUlBLEVBQUVBLEVBQUVBLENBQUNBO1FBQ2xCQSxJQUFJQSxDQUFDQSxDQUFDQSxHQUFHQSxJQUFJQSxFQUFFQSxFQUFFQSxDQUFDQTtRQUNsQkEsSUFBSUEsQ0FBQ0EsS0FBS0EsR0FBR0EsSUFBSUEsS0FBS0EsRUFBRUEsQ0FBQ0E7UUFFekJBLElBQUlBLENBQUNBLElBQUlBLEdBQUdBLElBQUlBLENBQUNBO1FBQ2pCQSxJQUFJQSxDQUFDQSxDQUFDQSxDQUFDQSxNQUFNQSxHQUFHQSxPQUFPQSxDQUFDQTtRQUN4QkEsSUFBSUEsQ0FBQ0EsQ0FBQ0EsQ0FBQ0EsSUFBSUEsR0FBR0EsS0FBS0EsQ0FBQ0E7UUFDcEJBLElBQUlBLENBQUNBLENBQUNBLENBQUNBLE1BQU1BLEdBQUdBLE9BQU9BLENBQUNBO1FBQ3hCQSxJQUFJQSxDQUFDQSxDQUFDQSxDQUFDQSxJQUFJQSxHQUFHQSxLQUFLQSxDQUFDQTtRQUNwQkEsSUFBSUEsQ0FBQ0EsTUFBTUEsR0FBR0EsTUFBTUEsQ0FBQ0E7UUFDckJBLElBQUlBLENBQUNBLEtBQUtBLENBQUNBLE1BQU1BLEdBQUdBLE1BQU1BLENBQUNBO1FBQzNCQSxJQUFJQSxDQUFDQSxLQUFLQSxDQUFDQSxVQUFVQSxHQUFHQSxVQUFVQSxDQUFDQTtRQUNuQ0EsSUFBSUEsQ0FBQ0EsS0FBS0EsQ0FBQ0EsUUFBUUEsR0FBR0EsUUFBUUEsQ0FBQ0E7UUFDL0JBLElBQUlBLENBQUNBLEtBQUtBLENBQUNBLE1BQU1BLEdBQUdBLE1BQU1BLENBQUNBO0lBQzVCQSxDQUFDQTtJQUNGRCxhQUFDQTtBQUFEQSxDQXpCQSxBQXlCQ0EsSUFBQTtBQUVELEFBQWdCLGlCQUFQLE1BQU0sQ0FBQyIsImZpbGUiOiJhZ2xzbC9hc3NlbWJsZXIvT3Bjb2RlLmpzIiwic291cmNlUm9vdCI6Ii4uLyIsInNvdXJjZXNDb250ZW50IjpbImltcG9ydCBGbGFnc1x0XHRcdFx0PSByZXF1aXJlKFwiYXdheWpzLXN0YWdlZ2wvbGliL2FnbHNsL2Fzc2VtYmxlci9GbGFnc1wiKTtcclxuaW1wb3J0IEZTXHRcdFx0XHRcdD0gcmVxdWlyZShcImF3YXlqcy1zdGFnZWdsL2xpYi9hZ2xzbC9hc3NlbWJsZXIvRlNcIik7XHJcblxyXG4vKipcclxuICpcclxuICovXHJcbmNsYXNzIE9wY29kZVxyXG57XHJcblx0cHVibGljIGRlc3Q6c3RyaW5nO1xyXG5cdHB1YmxpYyBhOkZTO1xyXG5cdHB1YmxpYyBiOkZTO1xyXG5cdHB1YmxpYyBvcGNvZGU6bnVtYmVyO1xyXG5cdHB1YmxpYyBmbGFnczpGbGFncztcclxuXHJcblx0Y29uc3RydWN0b3IoZGVzdDpzdHJpbmcsIGFmb3JtYXQ6c3RyaW5nLCBhc2l6ZTpudW1iZXIsIGJmb3JtYXQ6c3RyaW5nLCBic2l6ZTpudW1iZXIsIG9wY29kZTpudW1iZXIsIHNpbXBsZTpib29sZWFuLCBob3Jpem9udGFsOmJvb2xlYW4sIGZyYWdvbmx5OmJvb2xlYW4sIG1hdHJpeDpib29sZWFuKVxyXG5cdHtcclxuXHRcdHRoaXMuYSA9IG5ldyBGUygpO1xyXG5cdFx0dGhpcy5iID0gbmV3IEZTKCk7XHJcblx0XHR0aGlzLmZsYWdzID0gbmV3IEZsYWdzKCk7XHJcblxyXG5cdFx0dGhpcy5kZXN0ID0gZGVzdDtcclxuXHRcdHRoaXMuYS5mb3JtYXQgPSBhZm9ybWF0O1xyXG5cdFx0dGhpcy5hLnNpemUgPSBhc2l6ZTtcclxuXHRcdHRoaXMuYi5mb3JtYXQgPSBiZm9ybWF0O1xyXG5cdFx0dGhpcy5iLnNpemUgPSBic2l6ZTtcclxuXHRcdHRoaXMub3Bjb2RlID0gb3Bjb2RlO1xyXG5cdFx0dGhpcy5mbGFncy5zaW1wbGUgPSBzaW1wbGU7XHJcblx0XHR0aGlzLmZsYWdzLmhvcml6b250YWwgPSBob3Jpem9udGFsO1xyXG5cdFx0dGhpcy5mbGFncy5mcmFnb25seSA9IGZyYWdvbmx5O1xyXG5cdFx0dGhpcy5mbGFncy5tYXRyaXggPSBtYXRyaXg7XHJcblx0fVxyXG59XHJcblxyXG5leHBvcnQgPSBPcGNvZGU7XHJcbiJdfQ==
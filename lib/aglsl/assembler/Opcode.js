var Flags = require("awayjs-stagegl/lib/aglsl/assembler/Flags");
var FS = require("awayjs-stagegl/lib/aglsl/assembler/FS");
/**
 *
 */
var Opcode = (function () {
    function Opcode(dest, aformat, asize, bformat, bsize, opcode, simple, horizontal, fragonly, matrix) {
        this.a = new FS();
        this.b = new FS();
        this.flags = new Flags();
        this.dest = dest;
        this.a.format = aformat;
        this.a.size = asize;
        this.b.format = bformat;
        this.b.size = bsize;
        this.opcode = opcode;
        this.flags.simple = simple;
        this.flags.horizontal = horizontal;
        this.flags.fragonly = fragonly;
        this.flags.matrix = matrix;
    }
    return Opcode;
})();
module.exports = Opcode;

//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbImFnbHNsL2Fzc2VtYmxlci9vcGNvZGUudHMiXSwibmFtZXMiOlsiT3Bjb2RlIiwiT3Bjb2RlLmNvbnN0cnVjdG9yIl0sIm1hcHBpbmdzIjoiQUFBQSxJQUFPLEtBQUssV0FBYywwQ0FBMEMsQ0FBQyxDQUFDO0FBQ3RFLElBQU8sRUFBRSxXQUFlLHVDQUF1QyxDQUFDLENBQUM7QUFFakUsQUFHQTs7R0FERztJQUNHLE1BQU07SUFRWEEsU0FSS0EsTUFBTUEsQ0FRQ0EsSUFBV0EsRUFBRUEsT0FBY0EsRUFBRUEsS0FBWUEsRUFBRUEsT0FBY0EsRUFBRUEsS0FBWUEsRUFBRUEsTUFBYUEsRUFBRUEsTUFBY0EsRUFBRUEsVUFBa0JBLEVBQUVBLFFBQWdCQSxFQUFFQSxNQUFjQTtRQUV2S0MsSUFBSUEsQ0FBQ0EsQ0FBQ0EsR0FBR0EsSUFBSUEsRUFBRUEsRUFBRUEsQ0FBQ0E7UUFDbEJBLElBQUlBLENBQUNBLENBQUNBLEdBQUdBLElBQUlBLEVBQUVBLEVBQUVBLENBQUNBO1FBQ2xCQSxJQUFJQSxDQUFDQSxLQUFLQSxHQUFHQSxJQUFJQSxLQUFLQSxFQUFFQSxDQUFDQTtRQUV6QkEsSUFBSUEsQ0FBQ0EsSUFBSUEsR0FBR0EsSUFBSUEsQ0FBQ0E7UUFDakJBLElBQUlBLENBQUNBLENBQUNBLENBQUNBLE1BQU1BLEdBQUdBLE9BQU9BLENBQUNBO1FBQ3hCQSxJQUFJQSxDQUFDQSxDQUFDQSxDQUFDQSxJQUFJQSxHQUFHQSxLQUFLQSxDQUFDQTtRQUNwQkEsSUFBSUEsQ0FBQ0EsQ0FBQ0EsQ0FBQ0EsTUFBTUEsR0FBR0EsT0FBT0EsQ0FBQ0E7UUFDeEJBLElBQUlBLENBQUNBLENBQUNBLENBQUNBLElBQUlBLEdBQUdBLEtBQUtBLENBQUNBO1FBQ3BCQSxJQUFJQSxDQUFDQSxNQUFNQSxHQUFHQSxNQUFNQSxDQUFDQTtRQUNyQkEsSUFBSUEsQ0FBQ0EsS0FBS0EsQ0FBQ0EsTUFBTUEsR0FBR0EsTUFBTUEsQ0FBQ0E7UUFDM0JBLElBQUlBLENBQUNBLEtBQUtBLENBQUNBLFVBQVVBLEdBQUdBLFVBQVVBLENBQUNBO1FBQ25DQSxJQUFJQSxDQUFDQSxLQUFLQSxDQUFDQSxRQUFRQSxHQUFHQSxRQUFRQSxDQUFDQTtRQUMvQkEsSUFBSUEsQ0FBQ0EsS0FBS0EsQ0FBQ0EsTUFBTUEsR0FBR0EsTUFBTUEsQ0FBQ0E7SUFDNUJBLENBQUNBO0lBQ0ZELGFBQUNBO0FBQURBLENBekJBLEFBeUJDQSxJQUFBO0FBRUQsQUFBZ0IsaUJBQVAsTUFBTSxDQUFDIiwiZmlsZSI6ImFnbHNsL2Fzc2VtYmxlci9PcGNvZGUuanMiLCJzb3VyY2VSb290IjoiL1VzZXJzL3JvYmJhdGVtYW4vV2Vic3Rvcm1Qcm9qZWN0cy9hd2F5anMtc3RhZ2VnbC8iLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQgRmxhZ3NcdFx0XHRcdD0gcmVxdWlyZShcImF3YXlqcy1zdGFnZWdsL2xpYi9hZ2xzbC9hc3NlbWJsZXIvRmxhZ3NcIik7XG5pbXBvcnQgRlNcdFx0XHRcdFx0PSByZXF1aXJlKFwiYXdheWpzLXN0YWdlZ2wvbGliL2FnbHNsL2Fzc2VtYmxlci9GU1wiKTtcblxuLyoqXG4gKlxuICovXG5jbGFzcyBPcGNvZGVcbntcblx0cHVibGljIGRlc3Q6c3RyaW5nO1xuXHRwdWJsaWMgYTpGUztcblx0cHVibGljIGI6RlM7XG5cdHB1YmxpYyBvcGNvZGU6bnVtYmVyO1xuXHRwdWJsaWMgZmxhZ3M6RmxhZ3M7XG5cblx0Y29uc3RydWN0b3IoZGVzdDpzdHJpbmcsIGFmb3JtYXQ6c3RyaW5nLCBhc2l6ZTpudW1iZXIsIGJmb3JtYXQ6c3RyaW5nLCBic2l6ZTpudW1iZXIsIG9wY29kZTpudW1iZXIsIHNpbXBsZTpib29sZWFuLCBob3Jpem9udGFsOmJvb2xlYW4sIGZyYWdvbmx5OmJvb2xlYW4sIG1hdHJpeDpib29sZWFuKVxuXHR7XG5cdFx0dGhpcy5hID0gbmV3IEZTKCk7XG5cdFx0dGhpcy5iID0gbmV3IEZTKCk7XG5cdFx0dGhpcy5mbGFncyA9IG5ldyBGbGFncygpO1xuXG5cdFx0dGhpcy5kZXN0ID0gZGVzdDtcblx0XHR0aGlzLmEuZm9ybWF0ID0gYWZvcm1hdDtcblx0XHR0aGlzLmEuc2l6ZSA9IGFzaXplO1xuXHRcdHRoaXMuYi5mb3JtYXQgPSBiZm9ybWF0O1xuXHRcdHRoaXMuYi5zaXplID0gYnNpemU7XG5cdFx0dGhpcy5vcGNvZGUgPSBvcGNvZGU7XG5cdFx0dGhpcy5mbGFncy5zaW1wbGUgPSBzaW1wbGU7XG5cdFx0dGhpcy5mbGFncy5ob3Jpem9udGFsID0gaG9yaXpvbnRhbDtcblx0XHR0aGlzLmZsYWdzLmZyYWdvbmx5ID0gZnJhZ29ubHk7XG5cdFx0dGhpcy5mbGFncy5tYXRyaXggPSBtYXRyaXg7XG5cdH1cbn1cblxuZXhwb3J0ID0gT3Bjb2RlO1xuIl19
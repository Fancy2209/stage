var Flags = require("awayjs-stagegl/lib/aglsl/assembler/Flags");
var FS = require("awayjs-stagegl/lib/aglsl/assembler/FS");
/**
 *
 */
var Opcode = (function () {
    function Opcode(dest, aformat, asize, bformat, bsize, opcode, simple, horizontal, fragonly, matrix) {
        this.a = new FS();
        this.b = new FS();
        this.flags = new Flags();
        this.dest = dest;
        this.a.format = aformat;
        this.a.size = asize;
        this.b.format = bformat;
        this.b.size = bsize;
        this.opcode = opcode;
        this.flags.simple = simple;
        this.flags.horizontal = horizontal;
        this.flags.fragonly = fragonly;
        this.flags.matrix = matrix;
    }
    return Opcode;
})();
module.exports = Opcode;

//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbImF3YXlqcy1zdGFnZWdsL2xpYi9hZ2xzbC9hc3NlbWJsZXIvb3Bjb2RlLnRzIl0sIm5hbWVzIjpbIk9wY29kZSIsIk9wY29kZS5jb25zdHJ1Y3RvciJdLCJtYXBwaW5ncyI6IkFBQUEsSUFBTyxLQUFLLFdBQWMsMENBQTBDLENBQUMsQ0FBQztBQUN0RSxJQUFPLEVBQUUsV0FBZSx1Q0FBdUMsQ0FBQyxDQUFDO0FBRWpFLEFBR0E7O0dBREc7SUFDRyxNQUFNO0lBUVhBLFNBUktBLE1BQU1BLENBUUNBLElBQVdBLEVBQUVBLE9BQWNBLEVBQUVBLEtBQVlBLEVBQUVBLE9BQWNBLEVBQUVBLEtBQVlBLEVBQUVBLE1BQWFBLEVBQUVBLE1BQWNBLEVBQUVBLFVBQWtCQSxFQUFFQSxRQUFnQkEsRUFBRUEsTUFBY0E7UUFFdktDLElBQUlBLENBQUNBLENBQUNBLEdBQUdBLElBQUlBLEVBQUVBLEVBQUVBLENBQUNBO1FBQ2xCQSxJQUFJQSxDQUFDQSxDQUFDQSxHQUFHQSxJQUFJQSxFQUFFQSxFQUFFQSxDQUFDQTtRQUNsQkEsSUFBSUEsQ0FBQ0EsS0FBS0EsR0FBR0EsSUFBSUEsS0FBS0EsRUFBRUEsQ0FBQ0E7UUFFekJBLElBQUlBLENBQUNBLElBQUlBLEdBQUdBLElBQUlBLENBQUNBO1FBQ2pCQSxJQUFJQSxDQUFDQSxDQUFDQSxDQUFDQSxNQUFNQSxHQUFHQSxPQUFPQSxDQUFDQTtRQUN4QkEsSUFBSUEsQ0FBQ0EsQ0FBQ0EsQ0FBQ0EsSUFBSUEsR0FBR0EsS0FBS0EsQ0FBQ0E7UUFDcEJBLElBQUlBLENBQUNBLENBQUNBLENBQUNBLE1BQU1BLEdBQUdBLE9BQU9BLENBQUNBO1FBQ3hCQSxJQUFJQSxDQUFDQSxDQUFDQSxDQUFDQSxJQUFJQSxHQUFHQSxLQUFLQSxDQUFDQTtRQUNwQkEsSUFBSUEsQ0FBQ0EsTUFBTUEsR0FBR0EsTUFBTUEsQ0FBQ0E7UUFDckJBLElBQUlBLENBQUNBLEtBQUtBLENBQUNBLE1BQU1BLEdBQUdBLE1BQU1BLENBQUNBO1FBQzNCQSxJQUFJQSxDQUFDQSxLQUFLQSxDQUFDQSxVQUFVQSxHQUFHQSxVQUFVQSxDQUFDQTtRQUNuQ0EsSUFBSUEsQ0FBQ0EsS0FBS0EsQ0FBQ0EsUUFBUUEsR0FBR0EsUUFBUUEsQ0FBQ0E7UUFDL0JBLElBQUlBLENBQUNBLEtBQUtBLENBQUNBLE1BQU1BLEdBQUdBLE1BQU1BLENBQUNBO0lBQzVCQSxDQUFDQTtJQUNGRCxhQUFDQTtBQUFEQSxDQXpCQSxBQXlCQ0EsSUFBQTtBQUVELEFBQWdCLGlCQUFQLE1BQU0sQ0FBQyIsImZpbGUiOiJhZ2xzbC9hc3NlbWJsZXIvT3Bjb2RlLmpzIiwic291cmNlUm9vdCI6Ii4uLyIsInNvdXJjZXNDb250ZW50IjpbImltcG9ydCBGbGFnc1x0XHRcdFx0PSByZXF1aXJlKFwiYXdheWpzLXN0YWdlZ2wvbGliL2FnbHNsL2Fzc2VtYmxlci9GbGFnc1wiKTtcbmltcG9ydCBGU1x0XHRcdFx0XHQ9IHJlcXVpcmUoXCJhd2F5anMtc3RhZ2VnbC9saWIvYWdsc2wvYXNzZW1ibGVyL0ZTXCIpO1xuXG4vKipcbiAqXG4gKi9cbmNsYXNzIE9wY29kZVxue1xuXHRwdWJsaWMgZGVzdDpzdHJpbmc7XG5cdHB1YmxpYyBhOkZTO1xuXHRwdWJsaWMgYjpGUztcblx0cHVibGljIG9wY29kZTpudW1iZXI7XG5cdHB1YmxpYyBmbGFnczpGbGFncztcblxuXHRjb25zdHJ1Y3RvcihkZXN0OnN0cmluZywgYWZvcm1hdDpzdHJpbmcsIGFzaXplOm51bWJlciwgYmZvcm1hdDpzdHJpbmcsIGJzaXplOm51bWJlciwgb3Bjb2RlOm51bWJlciwgc2ltcGxlOmJvb2xlYW4sIGhvcml6b250YWw6Ym9vbGVhbiwgZnJhZ29ubHk6Ym9vbGVhbiwgbWF0cml4OmJvb2xlYW4pXG5cdHtcblx0XHR0aGlzLmEgPSBuZXcgRlMoKTtcblx0XHR0aGlzLmIgPSBuZXcgRlMoKTtcblx0XHR0aGlzLmZsYWdzID0gbmV3IEZsYWdzKCk7XG5cblx0XHR0aGlzLmRlc3QgPSBkZXN0O1xuXHRcdHRoaXMuYS5mb3JtYXQgPSBhZm9ybWF0O1xuXHRcdHRoaXMuYS5zaXplID0gYXNpemU7XG5cdFx0dGhpcy5iLmZvcm1hdCA9IGJmb3JtYXQ7XG5cdFx0dGhpcy5iLnNpemUgPSBic2l6ZTtcblx0XHR0aGlzLm9wY29kZSA9IG9wY29kZTtcblx0XHR0aGlzLmZsYWdzLnNpbXBsZSA9IHNpbXBsZTtcblx0XHR0aGlzLmZsYWdzLmhvcml6b250YWwgPSBob3Jpem9udGFsO1xuXHRcdHRoaXMuZmxhZ3MuZnJhZ29ubHkgPSBmcmFnb25seTtcblx0XHR0aGlzLmZsYWdzLm1hdHJpeCA9IG1hdHJpeDtcblx0fVxufVxuXG5leHBvcnQgPSBPcGNvZGU7XG4iXX0=
var __extends = this.__extends || function (d, b) {
    for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p];
    function __() { this.constructor = d; }
    __.prototype = b.prototype;
    d.prototype = new __();
};
var TriangleSubGeometry = require("awayjs-display/lib/base/TriangleSubGeometry");
var RenderableBase = require("awayjs-stagegl/lib/pool/RenderableBase");
/**
 * @class away.pool.RenderableListItem
 */
var BillboardRenderable = (function (_super) {
    __extends(BillboardRenderable, _super);
    /**
     * //TODO
     *
     * @param pool
     * @param billboard
     */
    function BillboardRenderable(pool, billboard) {
        _super.call(this, pool, billboard, billboard);
        this._billboard = billboard;
    }
    /**
     * //TODO
     *
     * @returns {away.base.TriangleSubGeometry}
     */
    BillboardRenderable.prototype._pGetSubGeometry = function () {
        var material = this._billboard.material;
        var geometry = BillboardRenderable._materialGeometry[material.id];
        if (!geometry) {
            geometry = BillboardRenderable._materialGeometry[material.id] = new TriangleSubGeometry(true);
            geometry.autoDeriveNormals = false;
            geometry.autoDeriveTangents = false;
            geometry.updateIndices(Array(0, 1, 2, 0, 2, 3));
            geometry.updatePositions(Array(0, material.height, 0, material.width, material.height, 0, material.width, 0, 0, 0, 0, 0));
            geometry.updateVertexNormals(Array(1, 0, 0, 1, 0, 0, 1, 0, 0, 1, 0, 0));
            geometry.updateVertexTangents(Array(0, 0, -1, 0, 0, -1, 0, 0, -1, 0, 0, -1));
            geometry.updateUVs(Array(0, 0, 1, 0, 1, 1, 0, 1));
        }
        else {
            geometry.updatePositions(Array(0, material.height, 0, material.width, material.height, 0, material.width, 0, 0, 0, 0, 0));
        }
        this._pVertexDataDirty[TriangleSubGeometry.POSITION_DATA] = true;
        this._pVertexDataDirty[TriangleSubGeometry.NORMAL_DATA] = true;
        this._pVertexDataDirty[TriangleSubGeometry.TANGENT_DATA] = true;
        this._pVertexDataDirty[TriangleSubGeometry.UV_DATA] = true;
        return geometry;
    };
    BillboardRenderable._materialGeometry = new Object();
    /**
     *
     */
    BillboardRenderable.id = "billboard";
    return BillboardRenderable;
})(RenderableBase);
module.exports = BillboardRenderable;

//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbImF3YXlqcy1zdGFnZWdsL2xpYi9wb29sL2JpbGxib2FyZHJlbmRlcmFibGUudHMiXSwibmFtZXMiOlsiQmlsbGJvYXJkUmVuZGVyYWJsZSIsIkJpbGxib2FyZFJlbmRlcmFibGUuY29uc3RydWN0b3IiLCJCaWxsYm9hcmRSZW5kZXJhYmxlLl9wR2V0U3ViR2VvbWV0cnkiXSwibWFwcGluZ3MiOiI7Ozs7OztBQUNBLElBQU8sbUJBQW1CLFdBQWEsNkNBQTZDLENBQUMsQ0FBQztBQUt0RixJQUFPLGNBQWMsV0FBYyx3Q0FBd0MsQ0FBQyxDQUFDO0FBRTdFLEFBR0E7O0dBREc7SUFDRyxtQkFBbUI7SUFBU0EsVUFBNUJBLG1CQUFtQkEsVUFBdUJBO0lBYy9DQTs7Ozs7T0FLR0E7SUFDSEEsU0FwQktBLG1CQUFtQkEsQ0FvQlpBLElBQW1CQSxFQUFFQSxTQUFtQkE7UUFFbkRDLGtCQUFNQSxJQUFJQSxFQUFFQSxTQUFTQSxFQUFFQSxTQUFTQSxDQUFDQSxDQUFDQTtRQUVsQ0EsSUFBSUEsQ0FBQ0EsVUFBVUEsR0FBR0EsU0FBU0EsQ0FBQ0E7SUFDN0JBLENBQUNBO0lBRUREOzs7O09BSUdBO0lBQ0lBLDhDQUFnQkEsR0FBdkJBO1FBRUNFLElBQUlBLFFBQVFBLEdBQWdCQSxJQUFJQSxDQUFDQSxVQUFVQSxDQUFDQSxRQUFRQSxDQUFDQTtRQUVyREEsSUFBSUEsUUFBUUEsR0FBdUJBLG1CQUFtQkEsQ0FBQ0EsaUJBQWlCQSxDQUFDQSxRQUFRQSxDQUFDQSxFQUFFQSxDQUFDQSxDQUFDQTtRQUV0RkEsRUFBRUEsQ0FBQ0EsQ0FBQ0EsQ0FBQ0EsUUFBUUEsQ0FBQ0EsQ0FBQ0EsQ0FBQ0E7WUFDZkEsUUFBUUEsR0FBR0EsbUJBQW1CQSxDQUFDQSxpQkFBaUJBLENBQUNBLFFBQVFBLENBQUNBLEVBQUVBLENBQUNBLEdBQUdBLElBQUlBLG1CQUFtQkEsQ0FBQ0EsSUFBSUEsQ0FBQ0EsQ0FBQ0E7WUFDOUZBLFFBQVFBLENBQUNBLGlCQUFpQkEsR0FBR0EsS0FBS0EsQ0FBQ0E7WUFDbkNBLFFBQVFBLENBQUNBLGtCQUFrQkEsR0FBR0EsS0FBS0EsQ0FBQ0E7WUFDcENBLFFBQVFBLENBQUNBLGFBQWFBLENBQUNBLEtBQUtBLENBQVNBLENBQUNBLEVBQUVBLENBQUNBLEVBQUVBLENBQUNBLEVBQUVBLENBQUNBLEVBQUVBLENBQUNBLEVBQUVBLENBQUNBLENBQUNBLENBQUNBLENBQUNBO1lBQ3hEQSxRQUFRQSxDQUFDQSxlQUFlQSxDQUFDQSxLQUFLQSxDQUFTQSxDQUFDQSxFQUFFQSxRQUFRQSxDQUFDQSxNQUFNQSxFQUFFQSxDQUFDQSxFQUFFQSxRQUFRQSxDQUFDQSxLQUFLQSxFQUFFQSxRQUFRQSxDQUFDQSxNQUFNQSxFQUFFQSxDQUFDQSxFQUFFQSxRQUFRQSxDQUFDQSxLQUFLQSxFQUFFQSxDQUFDQSxFQUFFQSxDQUFDQSxFQUFFQSxDQUFDQSxFQUFFQSxDQUFDQSxFQUFFQSxDQUFDQSxDQUFDQSxDQUFDQSxDQUFDQTtZQUNsSUEsUUFBUUEsQ0FBQ0EsbUJBQW1CQSxDQUFDQSxLQUFLQSxDQUFTQSxDQUFDQSxFQUFFQSxDQUFDQSxFQUFFQSxDQUFDQSxFQUFFQSxDQUFDQSxFQUFFQSxDQUFDQSxFQUFFQSxDQUFDQSxFQUFFQSxDQUFDQSxFQUFFQSxDQUFDQSxFQUFFQSxDQUFDQSxFQUFFQSxDQUFDQSxFQUFFQSxDQUFDQSxFQUFFQSxDQUFDQSxDQUFDQSxDQUFDQSxDQUFDQTtZQUNoRkEsUUFBUUEsQ0FBQ0Esb0JBQW9CQSxDQUFDQSxLQUFLQSxDQUFTQSxDQUFDQSxFQUFFQSxDQUFDQSxFQUFFQSxDQUFDQSxDQUFDQSxFQUFFQSxDQUFDQSxFQUFFQSxDQUFDQSxFQUFFQSxDQUFDQSxDQUFDQSxFQUFFQSxDQUFDQSxFQUFFQSxDQUFDQSxFQUFFQSxDQUFDQSxDQUFDQSxFQUFFQSxDQUFDQSxFQUFFQSxDQUFDQSxFQUFFQSxDQUFDQSxDQUFDQSxDQUFDQSxDQUFDQSxDQUFDQTtZQUNyRkEsUUFBUUEsQ0FBQ0EsU0FBU0EsQ0FBQ0EsS0FBS0EsQ0FBU0EsQ0FBQ0EsRUFBRUEsQ0FBQ0EsRUFBRUEsQ0FBQ0EsRUFBRUEsQ0FBQ0EsRUFBRUEsQ0FBQ0EsRUFBRUEsQ0FBQ0EsRUFBRUEsQ0FBQ0EsRUFBRUEsQ0FBQ0EsQ0FBQ0EsQ0FBQ0EsQ0FBQ0E7UUFDM0RBLENBQUNBO1FBQUNBLElBQUlBLENBQUNBLENBQUNBO1lBQ1BBLFFBQVFBLENBQUNBLGVBQWVBLENBQUNBLEtBQUtBLENBQVNBLENBQUNBLEVBQUVBLFFBQVFBLENBQUNBLE1BQU1BLEVBQUVBLENBQUNBLEVBQUVBLFFBQVFBLENBQUNBLEtBQUtBLEVBQUVBLFFBQVFBLENBQUNBLE1BQU1BLEVBQUVBLENBQUNBLEVBQUVBLFFBQVFBLENBQUNBLEtBQUtBLEVBQUVBLENBQUNBLEVBQUVBLENBQUNBLEVBQUVBLENBQUNBLEVBQUVBLENBQUNBLEVBQUVBLENBQUNBLENBQUNBLENBQUNBLENBQUNBO1FBQ25JQSxDQUFDQTtRQUVEQSxJQUFJQSxDQUFDQSxpQkFBaUJBLENBQUNBLG1CQUFtQkEsQ0FBQ0EsYUFBYUEsQ0FBQ0EsR0FBR0EsSUFBSUEsQ0FBQ0E7UUFDakVBLElBQUlBLENBQUNBLGlCQUFpQkEsQ0FBQ0EsbUJBQW1CQSxDQUFDQSxXQUFXQSxDQUFDQSxHQUFHQSxJQUFJQSxDQUFDQTtRQUMvREEsSUFBSUEsQ0FBQ0EsaUJBQWlCQSxDQUFDQSxtQkFBbUJBLENBQUNBLFlBQVlBLENBQUNBLEdBQUdBLElBQUlBLENBQUNBO1FBQ2hFQSxJQUFJQSxDQUFDQSxpQkFBaUJBLENBQUNBLG1CQUFtQkEsQ0FBQ0EsT0FBT0EsQ0FBQ0EsR0FBR0EsSUFBSUEsQ0FBQ0E7UUFFM0RBLE1BQU1BLENBQUNBLFFBQVFBLENBQUNBO0lBQ2pCQSxDQUFDQTtJQXZEY0YscUNBQWlCQSxHQUFVQSxJQUFJQSxNQUFNQSxFQUFFQSxDQUFDQTtJQUV2REE7O09BRUdBO0lBQ1dBLHNCQUFFQSxHQUFVQSxXQUFXQSxDQUFDQTtJQW1EdkNBLDBCQUFDQTtBQUFEQSxDQTFEQSxBQTBEQ0EsRUExRGlDLGNBQWMsRUEwRC9DO0FBRUQsQUFBNkIsaUJBQXBCLG1CQUFtQixDQUFDIiwiZmlsZSI6InBvb2wvQmlsbGJvYXJkUmVuZGVyYWJsZS5qcyIsInNvdXJjZVJvb3QiOiIuLi8iLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQgU3ViR2VvbWV0cnlCYXNlXHRcdFx0XHQ9IHJlcXVpcmUoXCJhd2F5anMtZGlzcGxheS9saWIvYmFzZS9TdWJHZW9tZXRyeUJhc2VcIik7XG5pbXBvcnQgVHJpYW5nbGVTdWJHZW9tZXRyeVx0XHRcdD0gcmVxdWlyZShcImF3YXlqcy1kaXNwbGF5L2xpYi9iYXNlL1RyaWFuZ2xlU3ViR2VvbWV0cnlcIik7XG5pbXBvcnQgUmVuZGVyYWJsZVBvb2xcdFx0XHRcdD0gcmVxdWlyZShcImF3YXlqcy1kaXNwbGF5L2xpYi9wb29sL1JlbmRlcmFibGVQb29sXCIpO1xuaW1wb3J0IEJpbGxib2FyZFx0XHRcdFx0XHQ9IHJlcXVpcmUoXCJhd2F5anMtZGlzcGxheS9saWIvZW50aXRpZXMvQmlsbGJvYXJkXCIpO1xuaW1wb3J0IE1hdGVyaWFsQmFzZVx0XHRcdFx0XHQ9IHJlcXVpcmUoXCJhd2F5anMtZGlzcGxheS9saWIvbWF0ZXJpYWxzL01hdGVyaWFsQmFzZVwiKTtcblxuaW1wb3J0IFJlbmRlcmFibGVCYXNlXHRcdFx0XHQ9IHJlcXVpcmUoXCJhd2F5anMtc3RhZ2VnbC9saWIvcG9vbC9SZW5kZXJhYmxlQmFzZVwiKTtcblxuLyoqXG4gKiBAY2xhc3MgYXdheS5wb29sLlJlbmRlcmFibGVMaXN0SXRlbVxuICovXG5jbGFzcyBCaWxsYm9hcmRSZW5kZXJhYmxlIGV4dGVuZHMgUmVuZGVyYWJsZUJhc2Vcbntcblx0cHJpdmF0ZSBzdGF0aWMgX21hdGVyaWFsR2VvbWV0cnk6T2JqZWN0ID0gbmV3IE9iamVjdCgpO1xuXG5cdC8qKlxuXHQgKlxuXHQgKi9cblx0cHVibGljIHN0YXRpYyBpZDpzdHJpbmcgPSBcImJpbGxib2FyZFwiO1xuXG5cdC8qKlxuXHQgKlxuXHQgKi9cblx0cHJpdmF0ZSBfYmlsbGJvYXJkOkJpbGxib2FyZDtcblxuXHQvKipcblx0ICogLy9UT0RPXG5cdCAqXG5cdCAqIEBwYXJhbSBwb29sXG5cdCAqIEBwYXJhbSBiaWxsYm9hcmRcblx0ICovXG5cdGNvbnN0cnVjdG9yKHBvb2w6UmVuZGVyYWJsZVBvb2wsIGJpbGxib2FyZDpCaWxsYm9hcmQpXG5cdHtcblx0XHRzdXBlcihwb29sLCBiaWxsYm9hcmQsIGJpbGxib2FyZCk7XG5cblx0XHR0aGlzLl9iaWxsYm9hcmQgPSBiaWxsYm9hcmQ7XG5cdH1cblxuXHQvKipcblx0ICogLy9UT0RPXG5cdCAqXG5cdCAqIEByZXR1cm5zIHthd2F5LmJhc2UuVHJpYW5nbGVTdWJHZW9tZXRyeX1cblx0ICovXG5cdHB1YmxpYyBfcEdldFN1Ykdlb21ldHJ5KCk6U3ViR2VvbWV0cnlCYXNlXG5cdHtcblx0XHR2YXIgbWF0ZXJpYWw6TWF0ZXJpYWxCYXNlID0gdGhpcy5fYmlsbGJvYXJkLm1hdGVyaWFsO1xuXG5cdFx0dmFyIGdlb21ldHJ5OlRyaWFuZ2xlU3ViR2VvbWV0cnkgPSBCaWxsYm9hcmRSZW5kZXJhYmxlLl9tYXRlcmlhbEdlb21ldHJ5W21hdGVyaWFsLmlkXTtcblxuXHRcdGlmICghZ2VvbWV0cnkpIHtcblx0XHRcdGdlb21ldHJ5ID0gQmlsbGJvYXJkUmVuZGVyYWJsZS5fbWF0ZXJpYWxHZW9tZXRyeVttYXRlcmlhbC5pZF0gPSBuZXcgVHJpYW5nbGVTdWJHZW9tZXRyeSh0cnVlKTtcblx0XHRcdGdlb21ldHJ5LmF1dG9EZXJpdmVOb3JtYWxzID0gZmFsc2U7XG5cdFx0XHRnZW9tZXRyeS5hdXRvRGVyaXZlVGFuZ2VudHMgPSBmYWxzZTtcblx0XHRcdGdlb21ldHJ5LnVwZGF0ZUluZGljZXMoQXJyYXk8bnVtYmVyPigwLCAxLCAyLCAwLCAyLCAzKSk7XG5cdFx0XHRnZW9tZXRyeS51cGRhdGVQb3NpdGlvbnMoQXJyYXk8bnVtYmVyPigwLCBtYXRlcmlhbC5oZWlnaHQsIDAsIG1hdGVyaWFsLndpZHRoLCBtYXRlcmlhbC5oZWlnaHQsIDAsIG1hdGVyaWFsLndpZHRoLCAwLCAwLCAwLCAwLCAwKSk7XG5cdFx0XHRnZW9tZXRyeS51cGRhdGVWZXJ0ZXhOb3JtYWxzKEFycmF5PG51bWJlcj4oMSwgMCwgMCwgMSwgMCwgMCwgMSwgMCwgMCwgMSwgMCwgMCkpO1xuXHRcdFx0Z2VvbWV0cnkudXBkYXRlVmVydGV4VGFuZ2VudHMoQXJyYXk8bnVtYmVyPigwLCAwLCAtMSwgMCwgMCwgLTEsIDAsIDAsIC0xLCAwLCAwLCAtMSkpO1xuXHRcdFx0Z2VvbWV0cnkudXBkYXRlVVZzKEFycmF5PG51bWJlcj4oMCwgMCwgMSwgMCwgMSwgMSwgMCwgMSkpO1xuXHRcdH0gZWxzZSB7XG5cdFx0XHRnZW9tZXRyeS51cGRhdGVQb3NpdGlvbnMoQXJyYXk8bnVtYmVyPigwLCBtYXRlcmlhbC5oZWlnaHQsIDAsIG1hdGVyaWFsLndpZHRoLCBtYXRlcmlhbC5oZWlnaHQsIDAsIG1hdGVyaWFsLndpZHRoLCAwLCAwLCAwLCAwLCAwKSk7XG5cdFx0fVxuXG5cdFx0dGhpcy5fcFZlcnRleERhdGFEaXJ0eVtUcmlhbmdsZVN1Ykdlb21ldHJ5LlBPU0lUSU9OX0RBVEFdID0gdHJ1ZTtcblx0XHR0aGlzLl9wVmVydGV4RGF0YURpcnR5W1RyaWFuZ2xlU3ViR2VvbWV0cnkuTk9STUFMX0RBVEFdID0gdHJ1ZTtcblx0XHR0aGlzLl9wVmVydGV4RGF0YURpcnR5W1RyaWFuZ2xlU3ViR2VvbWV0cnkuVEFOR0VOVF9EQVRBXSA9IHRydWU7XG5cdFx0dGhpcy5fcFZlcnRleERhdGFEaXJ0eVtUcmlhbmdsZVN1Ykdlb21ldHJ5LlVWX0RBVEFdID0gdHJ1ZTtcblxuXHRcdHJldHVybiBnZW9tZXRyeTtcblx0fVxufVxuXG5leHBvcnQgPSBCaWxsYm9hcmRSZW5kZXJhYmxlOyJdfQ==
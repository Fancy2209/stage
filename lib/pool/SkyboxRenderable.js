var __extends = this.__extends || function (d, b) {
    for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p];
    function __() { this.constructor = d; }
    __.prototype = b.prototype;
    d.prototype = new __();
};
var TriangleSubGeometry = require("awayjs-display/lib/base/TriangleSubGeometry");
var RenderableBase = require("awayjs-stagegl/lib/pool/RenderableBase");
/**
 * @class away.pool.SkyboxRenderable
 */
var SkyboxRenderable = (function (_super) {
    __extends(SkyboxRenderable, _super);
    /**
     * //TODO
     *
     * @param pool
     * @param skybox
     */
    function SkyboxRenderable(pool, skybox) {
        _super.call(this, pool, skybox, skybox);
    }
    /**
     * //TODO
     *
     * @returns {away.base.TriangleSubGeometry}
     * @private
     */
    SkyboxRenderable.prototype._pGetSubGeometry = function () {
        var geometry = SkyboxRenderable._geometry;
        if (!geometry) {
            geometry = SkyboxRenderable._geometry = new TriangleSubGeometry(true);
            geometry.autoDeriveNormals = false;
            geometry.autoDeriveTangents = false;
            geometry.updateIndices(Array(0, 1, 2, 2, 3, 0, 6, 5, 4, 4, 7, 6, 2, 6, 7, 7, 3, 2, 4, 5, 1, 1, 0, 4, 4, 0, 3, 3, 7, 4, 2, 1, 5, 5, 6, 2));
            geometry.updatePositions(Array(-1, 1, -1, 1, 1, -1, 1, 1, 1, -1, 1, 1, -1, -1, -1, 1, -1, -1, 1, -1, 1, -1, -1, 1));
        }
        this._pVertexDataDirty[TriangleSubGeometry.POSITION_DATA] = true;
        return geometry;
    };
    /**
     *
     */
    SkyboxRenderable.id = "skybox";
    return SkyboxRenderable;
})(RenderableBase);
module.exports = SkyboxRenderable;

//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbImF3YXlqcy1zdGFnZWdsL2xpYi9wb29sL3NreWJveHJlbmRlcmFibGUudHMiXSwibmFtZXMiOlsiU2t5Ym94UmVuZGVyYWJsZSIsIlNreWJveFJlbmRlcmFibGUuY29uc3RydWN0b3IiLCJTa3lib3hSZW5kZXJhYmxlLl9wR2V0U3ViR2VvbWV0cnkiXSwibWFwcGluZ3MiOiI7Ozs7OztBQUFBLElBQU8sbUJBQW1CLFdBQWEsNkNBQTZDLENBQUMsQ0FBQztBQUl0RixJQUFPLGNBQWMsV0FBYyx3Q0FBd0MsQ0FBQyxDQUFDO0FBRTdFLEFBR0E7O0dBREc7SUFDRyxnQkFBZ0I7SUFBU0EsVUFBekJBLGdCQUFnQkEsVUFBdUJBO0lBWTVDQTs7Ozs7T0FLR0E7SUFDSEEsU0FsQktBLGdCQUFnQkEsQ0FrQlRBLElBQW1CQSxFQUFFQSxNQUFhQTtRQUU3Q0Msa0JBQU1BLElBQUlBLEVBQUVBLE1BQU1BLEVBQUVBLE1BQU1BLENBQUNBLENBQUNBO0lBQzdCQSxDQUFDQTtJQUVERDs7Ozs7T0FLR0E7SUFDSUEsMkNBQWdCQSxHQUF2QkE7UUFFQ0UsSUFBSUEsUUFBUUEsR0FBdUJBLGdCQUFnQkEsQ0FBQ0EsU0FBU0EsQ0FBQ0E7UUFFOURBLEVBQUVBLENBQUNBLENBQUNBLENBQUNBLFFBQVFBLENBQUNBLENBQUNBLENBQUNBO1lBQ2ZBLFFBQVFBLEdBQUdBLGdCQUFnQkEsQ0FBQ0EsU0FBU0EsR0FBR0EsSUFBSUEsbUJBQW1CQSxDQUFDQSxJQUFJQSxDQUFDQSxDQUFDQTtZQUN0RUEsUUFBUUEsQ0FBQ0EsaUJBQWlCQSxHQUFHQSxLQUFLQSxDQUFDQTtZQUNuQ0EsUUFBUUEsQ0FBQ0Esa0JBQWtCQSxHQUFHQSxLQUFLQSxDQUFDQTtZQUNwQ0EsUUFBUUEsQ0FBQ0EsYUFBYUEsQ0FBQ0EsS0FBS0EsQ0FBU0EsQ0FBQ0EsRUFBRUEsQ0FBQ0EsRUFBRUEsQ0FBQ0EsRUFBRUEsQ0FBQ0EsRUFBRUEsQ0FBQ0EsRUFBRUEsQ0FBQ0EsRUFBRUEsQ0FBQ0EsRUFBRUEsQ0FBQ0EsRUFBRUEsQ0FBQ0EsRUFBRUEsQ0FBQ0EsRUFBRUEsQ0FBQ0EsRUFBRUEsQ0FBQ0EsRUFBRUEsQ0FBQ0EsRUFBRUEsQ0FBQ0EsRUFBRUEsQ0FBQ0EsRUFBRUEsQ0FBQ0EsRUFBRUEsQ0FBQ0EsRUFBRUEsQ0FBQ0EsRUFBRUEsQ0FBQ0EsRUFBRUEsQ0FBQ0EsRUFBRUEsQ0FBQ0EsRUFBRUEsQ0FBQ0EsRUFBRUEsQ0FBQ0EsRUFBRUEsQ0FBQ0EsRUFBRUEsQ0FBQ0EsRUFBRUEsQ0FBQ0EsRUFBRUEsQ0FBQ0EsRUFBRUEsQ0FBQ0EsRUFBRUEsQ0FBQ0EsRUFBRUEsQ0FBQ0EsRUFBRUEsQ0FBQ0EsRUFBRUEsQ0FBQ0EsRUFBRUEsQ0FBQ0EsRUFBRUEsQ0FBQ0EsRUFBRUEsQ0FBQ0EsRUFBRUEsQ0FBQ0EsQ0FBQ0EsQ0FBQ0EsQ0FBQ0E7WUFDbEpBLFFBQVFBLENBQUNBLGVBQWVBLENBQUNBLEtBQUtBLENBQVNBLENBQUNBLENBQUNBLEVBQUVBLENBQUNBLEVBQUVBLENBQUNBLENBQUNBLEVBQUVBLENBQUNBLEVBQUVBLENBQUNBLEVBQUVBLENBQUNBLENBQUNBLEVBQUVBLENBQUNBLEVBQUVBLENBQUNBLEVBQUVBLENBQUNBLEVBQUVBLENBQUNBLENBQUNBLEVBQUVBLENBQUNBLEVBQUVBLENBQUNBLEVBQUVBLENBQUNBLENBQUNBLEVBQUVBLENBQUNBLENBQUNBLEVBQUVBLENBQUNBLENBQUNBLEVBQUVBLENBQUNBLEVBQUVBLENBQUNBLENBQUNBLEVBQUVBLENBQUNBLENBQUNBLEVBQUVBLENBQUNBLEVBQUVBLENBQUNBLENBQUNBLEVBQUVBLENBQUNBLEVBQUVBLENBQUNBLENBQUNBLEVBQUVBLENBQUNBLENBQUNBLEVBQUVBLENBQUNBLENBQUNBLENBQUNBLENBQUNBO1FBQzdIQSxDQUFDQTtRQUVEQSxJQUFJQSxDQUFDQSxpQkFBaUJBLENBQUNBLG1CQUFtQkEsQ0FBQ0EsYUFBYUEsQ0FBQ0EsR0FBR0EsSUFBSUEsQ0FBQ0E7UUFFakVBLE1BQU1BLENBQUNBLFFBQVFBLENBQUNBO0lBQ2pCQSxDQUFDQTtJQTFDREY7O09BRUdBO0lBQ1dBLG1CQUFFQSxHQUFVQSxRQUFRQSxDQUFDQTtJQXdDcENBLHVCQUFDQTtBQUFEQSxDQTdDQSxBQTZDQ0EsRUE3QzhCLGNBQWMsRUE2QzVDO0FBRUQsQUFBMEIsaUJBQWpCLGdCQUFnQixDQUFDIiwiZmlsZSI6InBvb2wvU2t5Ym94UmVuZGVyYWJsZS5qcyIsInNvdXJjZVJvb3QiOiIuLi8iLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQgVHJpYW5nbGVTdWJHZW9tZXRyeVx0XHRcdD0gcmVxdWlyZShcImF3YXlqcy1kaXNwbGF5L2xpYi9iYXNlL1RyaWFuZ2xlU3ViR2VvbWV0cnlcIik7XG5pbXBvcnQgUmVuZGVyYWJsZVBvb2xcdFx0XHRcdD0gcmVxdWlyZShcImF3YXlqcy1kaXNwbGF5L2xpYi9wb29sL1JlbmRlcmFibGVQb29sXCIpO1xuaW1wb3J0IFNreWJveFx0XHRcdFx0XHRcdD0gcmVxdWlyZShcImF3YXlqcy1kaXNwbGF5L2xpYi9lbnRpdGllcy9Ta3lib3hcIik7XG5cbmltcG9ydCBSZW5kZXJhYmxlQmFzZVx0XHRcdFx0PSByZXF1aXJlKFwiYXdheWpzLXN0YWdlZ2wvbGliL3Bvb2wvUmVuZGVyYWJsZUJhc2VcIik7XG5cbi8qKlxuICogQGNsYXNzIGF3YXkucG9vbC5Ta3lib3hSZW5kZXJhYmxlXG4gKi9cbmNsYXNzIFNreWJveFJlbmRlcmFibGUgZXh0ZW5kcyBSZW5kZXJhYmxlQmFzZVxue1xuXHQvKipcblx0ICpcblx0ICovXG5cdHB1YmxpYyBzdGF0aWMgaWQ6c3RyaW5nID0gXCJza3lib3hcIjtcblxuXHQvKipcblx0ICpcblx0ICovXG5cdHByaXZhdGUgc3RhdGljIF9nZW9tZXRyeTpUcmlhbmdsZVN1Ykdlb21ldHJ5O1xuXG5cdC8qKlxuXHQgKiAvL1RPRE9cblx0ICpcblx0ICogQHBhcmFtIHBvb2xcblx0ICogQHBhcmFtIHNreWJveFxuXHQgKi9cblx0Y29uc3RydWN0b3IocG9vbDpSZW5kZXJhYmxlUG9vbCwgc2t5Ym94OlNreWJveClcblx0e1xuXHRcdHN1cGVyKHBvb2wsIHNreWJveCwgc2t5Ym94KTtcblx0fVxuXG5cdC8qKlxuXHQgKiAvL1RPRE9cblx0ICpcblx0ICogQHJldHVybnMge2F3YXkuYmFzZS5UcmlhbmdsZVN1Ykdlb21ldHJ5fVxuXHQgKiBAcHJpdmF0ZVxuXHQgKi9cblx0cHVibGljIF9wR2V0U3ViR2VvbWV0cnkoKTpUcmlhbmdsZVN1Ykdlb21ldHJ5XG5cdHtcblx0XHR2YXIgZ2VvbWV0cnk6VHJpYW5nbGVTdWJHZW9tZXRyeSA9IFNreWJveFJlbmRlcmFibGUuX2dlb21ldHJ5O1xuXG5cdFx0aWYgKCFnZW9tZXRyeSkge1xuXHRcdFx0Z2VvbWV0cnkgPSBTa3lib3hSZW5kZXJhYmxlLl9nZW9tZXRyeSA9IG5ldyBUcmlhbmdsZVN1Ykdlb21ldHJ5KHRydWUpO1xuXHRcdFx0Z2VvbWV0cnkuYXV0b0Rlcml2ZU5vcm1hbHMgPSBmYWxzZTtcblx0XHRcdGdlb21ldHJ5LmF1dG9EZXJpdmVUYW5nZW50cyA9IGZhbHNlO1xuXHRcdFx0Z2VvbWV0cnkudXBkYXRlSW5kaWNlcyhBcnJheTxudW1iZXI+KDAsIDEsIDIsIDIsIDMsIDAsIDYsIDUsIDQsIDQsIDcsIDYsIDIsIDYsIDcsIDcsIDMsIDIsIDQsIDUsIDEsIDEsIDAsIDQsIDQsIDAsIDMsIDMsIDcsIDQsIDIsIDEsIDUsIDUsIDYsIDIpKTtcblx0XHRcdGdlb21ldHJ5LnVwZGF0ZVBvc2l0aW9ucyhBcnJheTxudW1iZXI+KC0xLCAxLCAtMSwgMSwgMSwgLTEsIDEsIDEsIDEsIC0xLCAxLCAxLCAtMSwgLTEsIC0xLCAxLCAtMSwgLTEsIDEsIC0xLCAxLCAtMSwgLTEsIDEpKTtcblx0XHR9XG5cblx0XHR0aGlzLl9wVmVydGV4RGF0YURpcnR5W1RyaWFuZ2xlU3ViR2VvbWV0cnkuUE9TSVRJT05fREFUQV0gPSB0cnVlO1xuXG5cdFx0cmV0dXJuIGdlb21ldHJ5O1xuXHR9XG59XG5cbmV4cG9ydCA9IFNreWJveFJlbmRlcmFibGU7Il19
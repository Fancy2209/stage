var __extends = this.__extends || function (d, b) {
    for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p];
    function __() { this.constructor = d; }
    __.prototype = b.prototype;
    d.prototype = new __();
};
var TriangleSubGeometry = require("awayjs-display/lib/base/TriangleSubGeometry");
var RenderableBase = require("awayjs-stagegl/lib/core/pool/RenderableBase");
/**
 * @class away.pool.RenderableListItem
 */
var BillboardRenderable = (function (_super) {
    __extends(BillboardRenderable, _super);
    /**
     * //TODO
     *
     * @param pool
     * @param billboard
     */
    function BillboardRenderable(pool, billboard) {
        _super.call(this, pool, billboard, billboard);
        this._billboard = billboard;
    }
    /**
     * //TODO
     *
     * @returns {away.base.TriangleSubGeometry}
     */
    BillboardRenderable.prototype._pGetSubGeometry = function () {
        var material = this._billboard.material;
        var geometry = BillboardRenderable._materialGeometry[material.id];
        if (!geometry) {
            geometry = BillboardRenderable._materialGeometry[material.id] = new TriangleSubGeometry(true);
            geometry.autoDeriveNormals = false;
            geometry.autoDeriveTangents = false;
            geometry.updateIndices(Array(0, 1, 2, 0, 2, 3));
            geometry.updatePositions(Array(0, material.height, 0, material.width, material.height, 0, material.width, 0, 0, 0, 0, 0));
            geometry.updateVertexNormals(Array(1, 0, 0, 1, 0, 0, 1, 0, 0, 1, 0, 0));
            geometry.updateVertexTangents(Array(0, 0, -1, 0, 0, -1, 0, 0, -1, 0, 0, -1));
            geometry.updateUVs(Array(0, 0, 1, 0, 1, 1, 0, 1));
        }
        else {
            geometry.updatePositions(Array(0, material.height, 0, material.width, material.height, 0, material.width, 0, 0, 0, 0, 0));
        }
        this._pVertexDataDirty[TriangleSubGeometry.POSITION_DATA] = true;
        this._pVertexDataDirty[TriangleSubGeometry.NORMAL_DATA] = true;
        this._pVertexDataDirty[TriangleSubGeometry.TANGENT_DATA] = true;
        this._pVertexDataDirty[TriangleSubGeometry.UV_DATA] = true;
        return geometry;
    };
    BillboardRenderable._materialGeometry = new Object();
    /**
     *
     */
    BillboardRenderable.id = "billboard";
    return BillboardRenderable;
})(RenderableBase);
module.exports = BillboardRenderable;

//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbImF3YXlqcy1zdGFnZWdsL2xpYi9jb3JlL3Bvb2wvYmlsbGJvYXJkcmVuZGVyYWJsZS50cyJdLCJuYW1lcyI6WyJCaWxsYm9hcmRSZW5kZXJhYmxlIiwiQmlsbGJvYXJkUmVuZGVyYWJsZS5jb25zdHJ1Y3RvciIsIkJpbGxib2FyZFJlbmRlcmFibGUuX3BHZXRTdWJHZW9tZXRyeSJdLCJtYXBwaW5ncyI6Ijs7Ozs7O0FBQ0EsSUFBTyxtQkFBbUIsV0FBYSw2Q0FBNkMsQ0FBQyxDQUFDO0FBS3RGLElBQU8sY0FBYyxXQUFjLDZDQUE2QyxDQUFDLENBQUM7QUFFbEYsQUFHQTs7R0FERztJQUNHLG1CQUFtQjtJQUFTQSxVQUE1QkEsbUJBQW1CQSxVQUF1QkE7SUFjL0NBOzs7OztPQUtHQTtJQUNIQSxTQXBCS0EsbUJBQW1CQSxDQW9CWkEsSUFBbUJBLEVBQUVBLFNBQW1CQTtRQUVuREMsa0JBQU1BLElBQUlBLEVBQUVBLFNBQVNBLEVBQUVBLFNBQVNBLENBQUNBLENBQUNBO1FBRWxDQSxJQUFJQSxDQUFDQSxVQUFVQSxHQUFHQSxTQUFTQSxDQUFDQTtJQUM3QkEsQ0FBQ0E7SUFFREQ7Ozs7T0FJR0E7SUFDSUEsOENBQWdCQSxHQUF2QkE7UUFFQ0UsSUFBSUEsUUFBUUEsR0FBZ0JBLElBQUlBLENBQUNBLFVBQVVBLENBQUNBLFFBQVFBLENBQUNBO1FBRXJEQSxJQUFJQSxRQUFRQSxHQUF1QkEsbUJBQW1CQSxDQUFDQSxpQkFBaUJBLENBQUNBLFFBQVFBLENBQUNBLEVBQUVBLENBQUNBLENBQUNBO1FBRXRGQSxFQUFFQSxDQUFDQSxDQUFDQSxDQUFDQSxRQUFRQSxDQUFDQSxDQUFDQSxDQUFDQTtZQUNmQSxRQUFRQSxHQUFHQSxtQkFBbUJBLENBQUNBLGlCQUFpQkEsQ0FBQ0EsUUFBUUEsQ0FBQ0EsRUFBRUEsQ0FBQ0EsR0FBR0EsSUFBSUEsbUJBQW1CQSxDQUFDQSxJQUFJQSxDQUFDQSxDQUFDQTtZQUM5RkEsUUFBUUEsQ0FBQ0EsaUJBQWlCQSxHQUFHQSxLQUFLQSxDQUFDQTtZQUNuQ0EsUUFBUUEsQ0FBQ0Esa0JBQWtCQSxHQUFHQSxLQUFLQSxDQUFDQTtZQUNwQ0EsUUFBUUEsQ0FBQ0EsYUFBYUEsQ0FBQ0EsS0FBS0EsQ0FBU0EsQ0FBQ0EsRUFBRUEsQ0FBQ0EsRUFBRUEsQ0FBQ0EsRUFBRUEsQ0FBQ0EsRUFBRUEsQ0FBQ0EsRUFBRUEsQ0FBQ0EsQ0FBQ0EsQ0FBQ0EsQ0FBQ0E7WUFDeERBLFFBQVFBLENBQUNBLGVBQWVBLENBQUNBLEtBQUtBLENBQVNBLENBQUNBLEVBQUVBLFFBQVFBLENBQUNBLE1BQU1BLEVBQUVBLENBQUNBLEVBQUVBLFFBQVFBLENBQUNBLEtBQUtBLEVBQUVBLFFBQVFBLENBQUNBLE1BQU1BLEVBQUVBLENBQUNBLEVBQUVBLFFBQVFBLENBQUNBLEtBQUtBLEVBQUVBLENBQUNBLEVBQUVBLENBQUNBLEVBQUVBLENBQUNBLEVBQUVBLENBQUNBLEVBQUVBLENBQUNBLENBQUNBLENBQUNBLENBQUNBO1lBQ2xJQSxRQUFRQSxDQUFDQSxtQkFBbUJBLENBQUNBLEtBQUtBLENBQVNBLENBQUNBLEVBQUVBLENBQUNBLEVBQUVBLENBQUNBLEVBQUVBLENBQUNBLEVBQUVBLENBQUNBLEVBQUVBLENBQUNBLEVBQUVBLENBQUNBLEVBQUVBLENBQUNBLEVBQUVBLENBQUNBLEVBQUVBLENBQUNBLEVBQUVBLENBQUNBLEVBQUVBLENBQUNBLENBQUNBLENBQUNBLENBQUNBO1lBQ2hGQSxRQUFRQSxDQUFDQSxvQkFBb0JBLENBQUNBLEtBQUtBLENBQVNBLENBQUNBLEVBQUVBLENBQUNBLEVBQUVBLENBQUNBLENBQUNBLEVBQUVBLENBQUNBLEVBQUVBLENBQUNBLEVBQUVBLENBQUNBLENBQUNBLEVBQUVBLENBQUNBLEVBQUVBLENBQUNBLEVBQUVBLENBQUNBLENBQUNBLEVBQUVBLENBQUNBLEVBQUVBLENBQUNBLEVBQUVBLENBQUNBLENBQUNBLENBQUNBLENBQUNBLENBQUNBO1lBQ3JGQSxRQUFRQSxDQUFDQSxTQUFTQSxDQUFDQSxLQUFLQSxDQUFTQSxDQUFDQSxFQUFFQSxDQUFDQSxFQUFFQSxDQUFDQSxFQUFFQSxDQUFDQSxFQUFFQSxDQUFDQSxFQUFFQSxDQUFDQSxFQUFFQSxDQUFDQSxFQUFFQSxDQUFDQSxDQUFDQSxDQUFDQSxDQUFDQTtRQUMzREEsQ0FBQ0E7UUFBQ0EsSUFBSUEsQ0FBQ0EsQ0FBQ0E7WUFDUEEsUUFBUUEsQ0FBQ0EsZUFBZUEsQ0FBQ0EsS0FBS0EsQ0FBU0EsQ0FBQ0EsRUFBRUEsUUFBUUEsQ0FBQ0EsTUFBTUEsRUFBRUEsQ0FBQ0EsRUFBRUEsUUFBUUEsQ0FBQ0EsS0FBS0EsRUFBRUEsUUFBUUEsQ0FBQ0EsTUFBTUEsRUFBRUEsQ0FBQ0EsRUFBRUEsUUFBUUEsQ0FBQ0EsS0FBS0EsRUFBRUEsQ0FBQ0EsRUFBRUEsQ0FBQ0EsRUFBRUEsQ0FBQ0EsRUFBRUEsQ0FBQ0EsRUFBRUEsQ0FBQ0EsQ0FBQ0EsQ0FBQ0EsQ0FBQ0E7UUFDbklBLENBQUNBO1FBRURBLElBQUlBLENBQUNBLGlCQUFpQkEsQ0FBQ0EsbUJBQW1CQSxDQUFDQSxhQUFhQSxDQUFDQSxHQUFHQSxJQUFJQSxDQUFDQTtRQUNqRUEsSUFBSUEsQ0FBQ0EsaUJBQWlCQSxDQUFDQSxtQkFBbUJBLENBQUNBLFdBQVdBLENBQUNBLEdBQUdBLElBQUlBLENBQUNBO1FBQy9EQSxJQUFJQSxDQUFDQSxpQkFBaUJBLENBQUNBLG1CQUFtQkEsQ0FBQ0EsWUFBWUEsQ0FBQ0EsR0FBR0EsSUFBSUEsQ0FBQ0E7UUFDaEVBLElBQUlBLENBQUNBLGlCQUFpQkEsQ0FBQ0EsbUJBQW1CQSxDQUFDQSxPQUFPQSxDQUFDQSxHQUFHQSxJQUFJQSxDQUFDQTtRQUUzREEsTUFBTUEsQ0FBQ0EsUUFBUUEsQ0FBQ0E7SUFDakJBLENBQUNBO0lBdkRjRixxQ0FBaUJBLEdBQVVBLElBQUlBLE1BQU1BLEVBQUVBLENBQUNBO0lBRXZEQTs7T0FFR0E7SUFDV0Esc0JBQUVBLEdBQVVBLFdBQVdBLENBQUNBO0lBbUR2Q0EsMEJBQUNBO0FBQURBLENBMURBLEFBMERDQSxFQTFEaUMsY0FBYyxFQTBEL0M7QUFFRCxBQUE2QixpQkFBcEIsbUJBQW1CLENBQUMiLCJmaWxlIjoiY29yZS9wb29sL0JpbGxib2FyZFJlbmRlcmFibGUuanMiLCJzb3VyY2VSb290IjoiLi4vIiwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IFN1Ykdlb21ldHJ5QmFzZVx0XHRcdFx0PSByZXF1aXJlKFwiYXdheWpzLWRpc3BsYXkvbGliL2Jhc2UvU3ViR2VvbWV0cnlCYXNlXCIpO1xuaW1wb3J0IFRyaWFuZ2xlU3ViR2VvbWV0cnlcdFx0XHQ9IHJlcXVpcmUoXCJhd2F5anMtZGlzcGxheS9saWIvYmFzZS9UcmlhbmdsZVN1Ykdlb21ldHJ5XCIpO1xuaW1wb3J0IFJlbmRlcmFibGVQb29sXHRcdFx0XHQ9IHJlcXVpcmUoXCJhd2F5anMtZGlzcGxheS9saWIvcG9vbC9SZW5kZXJhYmxlUG9vbFwiKTtcbmltcG9ydCBCaWxsYm9hcmRcdFx0XHRcdFx0PSByZXF1aXJlKFwiYXdheWpzLWRpc3BsYXkvbGliL2VudGl0aWVzL0JpbGxib2FyZFwiKTtcbmltcG9ydCBNYXRlcmlhbEJhc2VcdFx0XHRcdFx0PSByZXF1aXJlKFwiYXdheWpzLWRpc3BsYXkvbGliL21hdGVyaWFscy9NYXRlcmlhbEJhc2VcIik7XG5cbmltcG9ydCBSZW5kZXJhYmxlQmFzZVx0XHRcdFx0PSByZXF1aXJlKFwiYXdheWpzLXN0YWdlZ2wvbGliL2NvcmUvcG9vbC9SZW5kZXJhYmxlQmFzZVwiKTtcblxuLyoqXG4gKiBAY2xhc3MgYXdheS5wb29sLlJlbmRlcmFibGVMaXN0SXRlbVxuICovXG5jbGFzcyBCaWxsYm9hcmRSZW5kZXJhYmxlIGV4dGVuZHMgUmVuZGVyYWJsZUJhc2Vcbntcblx0cHJpdmF0ZSBzdGF0aWMgX21hdGVyaWFsR2VvbWV0cnk6T2JqZWN0ID0gbmV3IE9iamVjdCgpO1xuXG5cdC8qKlxuXHQgKlxuXHQgKi9cblx0cHVibGljIHN0YXRpYyBpZDpzdHJpbmcgPSBcImJpbGxib2FyZFwiO1xuXG5cdC8qKlxuXHQgKlxuXHQgKi9cblx0cHJpdmF0ZSBfYmlsbGJvYXJkOkJpbGxib2FyZDtcblxuXHQvKipcblx0ICogLy9UT0RPXG5cdCAqXG5cdCAqIEBwYXJhbSBwb29sXG5cdCAqIEBwYXJhbSBiaWxsYm9hcmRcblx0ICovXG5cdGNvbnN0cnVjdG9yKHBvb2w6UmVuZGVyYWJsZVBvb2wsIGJpbGxib2FyZDpCaWxsYm9hcmQpXG5cdHtcblx0XHRzdXBlcihwb29sLCBiaWxsYm9hcmQsIGJpbGxib2FyZCk7XG5cblx0XHR0aGlzLl9iaWxsYm9hcmQgPSBiaWxsYm9hcmQ7XG5cdH1cblxuXHQvKipcblx0ICogLy9UT0RPXG5cdCAqXG5cdCAqIEByZXR1cm5zIHthd2F5LmJhc2UuVHJpYW5nbGVTdWJHZW9tZXRyeX1cblx0ICovXG5cdHB1YmxpYyBfcEdldFN1Ykdlb21ldHJ5KCk6U3ViR2VvbWV0cnlCYXNlXG5cdHtcblx0XHR2YXIgbWF0ZXJpYWw6TWF0ZXJpYWxCYXNlID0gdGhpcy5fYmlsbGJvYXJkLm1hdGVyaWFsO1xuXG5cdFx0dmFyIGdlb21ldHJ5OlRyaWFuZ2xlU3ViR2VvbWV0cnkgPSBCaWxsYm9hcmRSZW5kZXJhYmxlLl9tYXRlcmlhbEdlb21ldHJ5W21hdGVyaWFsLmlkXTtcblxuXHRcdGlmICghZ2VvbWV0cnkpIHtcblx0XHRcdGdlb21ldHJ5ID0gQmlsbGJvYXJkUmVuZGVyYWJsZS5fbWF0ZXJpYWxHZW9tZXRyeVttYXRlcmlhbC5pZF0gPSBuZXcgVHJpYW5nbGVTdWJHZW9tZXRyeSh0cnVlKTtcblx0XHRcdGdlb21ldHJ5LmF1dG9EZXJpdmVOb3JtYWxzID0gZmFsc2U7XG5cdFx0XHRnZW9tZXRyeS5hdXRvRGVyaXZlVGFuZ2VudHMgPSBmYWxzZTtcblx0XHRcdGdlb21ldHJ5LnVwZGF0ZUluZGljZXMoQXJyYXk8bnVtYmVyPigwLCAxLCAyLCAwLCAyLCAzKSk7XG5cdFx0XHRnZW9tZXRyeS51cGRhdGVQb3NpdGlvbnMoQXJyYXk8bnVtYmVyPigwLCBtYXRlcmlhbC5oZWlnaHQsIDAsIG1hdGVyaWFsLndpZHRoLCBtYXRlcmlhbC5oZWlnaHQsIDAsIG1hdGVyaWFsLndpZHRoLCAwLCAwLCAwLCAwLCAwKSk7XG5cdFx0XHRnZW9tZXRyeS51cGRhdGVWZXJ0ZXhOb3JtYWxzKEFycmF5PG51bWJlcj4oMSwgMCwgMCwgMSwgMCwgMCwgMSwgMCwgMCwgMSwgMCwgMCkpO1xuXHRcdFx0Z2VvbWV0cnkudXBkYXRlVmVydGV4VGFuZ2VudHMoQXJyYXk8bnVtYmVyPigwLCAwLCAtMSwgMCwgMCwgLTEsIDAsIDAsIC0xLCAwLCAwLCAtMSkpO1xuXHRcdFx0Z2VvbWV0cnkudXBkYXRlVVZzKEFycmF5PG51bWJlcj4oMCwgMCwgMSwgMCwgMSwgMSwgMCwgMSkpO1xuXHRcdH0gZWxzZSB7XG5cdFx0XHRnZW9tZXRyeS51cGRhdGVQb3NpdGlvbnMoQXJyYXk8bnVtYmVyPigwLCBtYXRlcmlhbC5oZWlnaHQsIDAsIG1hdGVyaWFsLndpZHRoLCBtYXRlcmlhbC5oZWlnaHQsIDAsIG1hdGVyaWFsLndpZHRoLCAwLCAwLCAwLCAwLCAwKSk7XG5cdFx0fVxuXG5cdFx0dGhpcy5fcFZlcnRleERhdGFEaXJ0eVtUcmlhbmdsZVN1Ykdlb21ldHJ5LlBPU0lUSU9OX0RBVEFdID0gdHJ1ZTtcblx0XHR0aGlzLl9wVmVydGV4RGF0YURpcnR5W1RyaWFuZ2xlU3ViR2VvbWV0cnkuTk9STUFMX0RBVEFdID0gdHJ1ZTtcblx0XHR0aGlzLl9wVmVydGV4RGF0YURpcnR5W1RyaWFuZ2xlU3ViR2VvbWV0cnkuVEFOR0VOVF9EQVRBXSA9IHRydWU7XG5cdFx0dGhpcy5fcFZlcnRleERhdGFEaXJ0eVtUcmlhbmdsZVN1Ykdlb21ldHJ5LlVWX0RBVEFdID0gdHJ1ZTtcblxuXHRcdHJldHVybiBnZW9tZXRyeTtcblx0fVxufVxuXG5leHBvcnQgPSBCaWxsYm9hcmRSZW5kZXJhYmxlOyJdfQ==
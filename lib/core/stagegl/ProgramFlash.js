var __extends = this.__extends || function (d, b) {
    for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p];
    function __() { this.constructor = d; }
    __.prototype = b.prototype;
    d.prototype = new __();
};
var ContextStage3D = require("awayjs-stagegl/lib/core/stagegl/ContextStage3D");
var OpCodes = require("awayjs-stagegl/lib/core/stagegl/OpCodes");
var ResourceBaseFlash = require("awayjs-stagegl/lib/core/stagegl/ResourceBaseFlash");
var ProgramFlash = (function (_super) {
    __extends(ProgramFlash, _super);
    function ProgramFlash(context) {
        _super.call(this);
        this._context = context;
        this._context.addStream(String.fromCharCode(OpCodes.initProgram));
        this._pId = this._context.execute();
        this._context._iAddResource(this);
    }
    ProgramFlash.prototype.upload = function (vertexProgram, fragmentProgram) {
        this._context.addStream(String.fromCharCode(OpCodes.uploadAGALBytesProgram, this._pId + OpCodes.intMask) + vertexProgram.readBase64String(vertexProgram.length) + "%" + fragmentProgram.readBase64String(fragmentProgram.length) + "%");
        if (ContextStage3D.debug)
            this._context.execute();
    };
    ProgramFlash.prototype.dispose = function () {
        this._context.addStream(String.fromCharCode(OpCodes.disposeProgram, this._pId + OpCodes.intMask));
        this._context.execute();
        this._context._iRemoveResource(this);
        this._context = null;
    };
    return ProgramFlash;
})(ResourceBaseFlash);
module.exports = ProgramFlash;

//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbImNvcmUvc3RhZ2VnbC9wcm9ncmFtZmxhc2gudHMiXSwibmFtZXMiOlsiUHJvZ3JhbUZsYXNoIiwiUHJvZ3JhbUZsYXNoLmNvbnN0cnVjdG9yIiwiUHJvZ3JhbUZsYXNoLnVwbG9hZCIsIlByb2dyYW1GbGFzaC5kaXNwb3NlIl0sIm1hcHBpbmdzIjoiOzs7Ozs7QUFFQSxJQUFPLGNBQWMsV0FBYyxnREFBZ0QsQ0FBQyxDQUFDO0FBRXJGLElBQU8sT0FBTyxXQUFnQix5Q0FBeUMsQ0FBQyxDQUFDO0FBQ3pFLElBQU8saUJBQWlCLFdBQWEsbURBQW1ELENBQUMsQ0FBQztBQUUxRixJQUFNLFlBQVk7SUFBU0EsVUFBckJBLFlBQVlBLFVBQTBCQTtJQUkzQ0EsU0FKS0EsWUFBWUEsQ0FJTEEsT0FBc0JBO1FBRWpDQyxpQkFBT0EsQ0FBQ0E7UUFFUkEsSUFBSUEsQ0FBQ0EsUUFBUUEsR0FBR0EsT0FBT0EsQ0FBQ0E7UUFDeEJBLElBQUlBLENBQUNBLFFBQVFBLENBQUNBLFNBQVNBLENBQUNBLE1BQU1BLENBQUNBLFlBQVlBLENBQUNBLE9BQU9BLENBQUNBLFdBQVdBLENBQUNBLENBQUNBLENBQUNBO1FBQ2xFQSxJQUFJQSxDQUFDQSxJQUFJQSxHQUFHQSxJQUFJQSxDQUFDQSxRQUFRQSxDQUFDQSxPQUFPQSxFQUFFQSxDQUFDQTtRQUNwQ0EsSUFBSUEsQ0FBQ0EsUUFBUUEsQ0FBQ0EsYUFBYUEsQ0FBQ0EsSUFBSUEsQ0FBQ0EsQ0FBQ0E7SUFDbkNBLENBQUNBO0lBRU1ELDZCQUFNQSxHQUFiQSxVQUFjQSxhQUF1QkEsRUFBRUEsZUFBeUJBO1FBRS9ERSxJQUFJQSxDQUFDQSxRQUFRQSxDQUFDQSxTQUFTQSxDQUFDQSxNQUFNQSxDQUFDQSxZQUFZQSxDQUFDQSxPQUFPQSxDQUFDQSxzQkFBc0JBLEVBQUVBLElBQUlBLENBQUNBLElBQUlBLEdBQUdBLE9BQU9BLENBQUNBLE9BQU9BLENBQUNBLEdBQUdBLGFBQWFBLENBQUNBLGdCQUFnQkEsQ0FBQ0EsYUFBYUEsQ0FBQ0EsTUFBTUEsQ0FBQ0EsR0FBR0EsR0FBR0EsR0FBR0EsZUFBZUEsQ0FBQ0EsZ0JBQWdCQSxDQUFDQSxlQUFlQSxDQUFDQSxNQUFNQSxDQUFDQSxHQUFHQSxHQUFHQSxDQUFDQSxDQUFDQTtRQUV4T0EsRUFBRUEsQ0FBQ0EsQ0FBQ0EsY0FBY0EsQ0FBQ0EsS0FBS0EsQ0FBQ0E7WUFDeEJBLElBQUlBLENBQUNBLFFBQVFBLENBQUNBLE9BQU9BLEVBQUVBLENBQUNBO0lBQzFCQSxDQUFDQTtJQUVNRiw4QkFBT0EsR0FBZEE7UUFFQ0csSUFBSUEsQ0FBQ0EsUUFBUUEsQ0FBQ0EsU0FBU0EsQ0FBQ0EsTUFBTUEsQ0FBQ0EsWUFBWUEsQ0FBQ0EsT0FBT0EsQ0FBQ0EsY0FBY0EsRUFBRUEsSUFBSUEsQ0FBQ0EsSUFBSUEsR0FBR0EsT0FBT0EsQ0FBQ0EsT0FBT0EsQ0FBQ0EsQ0FBQ0EsQ0FBQ0E7UUFDbEdBLElBQUlBLENBQUNBLFFBQVFBLENBQUNBLE9BQU9BLEVBQUVBLENBQUNBO1FBQ3hCQSxJQUFJQSxDQUFDQSxRQUFRQSxDQUFDQSxnQkFBZ0JBLENBQUNBLElBQUlBLENBQUNBLENBQUNBO1FBRXJDQSxJQUFJQSxDQUFDQSxRQUFRQSxHQUFHQSxJQUFJQSxDQUFDQTtJQUN0QkEsQ0FBQ0E7SUFDRkgsbUJBQUNBO0FBQURBLENBOUJBLEFBOEJDQSxFQTlCMEIsaUJBQWlCLEVBOEIzQztBQUVELEFBQXNCLGlCQUFiLFlBQVksQ0FBQyIsImZpbGUiOiJjb3JlL3N0YWdlZ2wvUHJvZ3JhbUZsYXNoLmpzIiwic291cmNlUm9vdCI6Ii9Vc2Vycy9yb2JiYXRlbWFuL1dlYnN0b3JtUHJvamVjdHMvYXdheWpzLXN0YWdlZ2wvIiwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IEJ5dGVBcnJheVx0XHRcdFx0XHQ9IHJlcXVpcmUoXCJhd2F5anMtY29yZS9saWIvdXRpbHMvQnl0ZUFycmF5XCIpO1xuXG5pbXBvcnQgQ29udGV4dFN0YWdlM0RcdFx0XHRcdD0gcmVxdWlyZShcImF3YXlqcy1zdGFnZWdsL2xpYi9jb3JlL3N0YWdlZ2wvQ29udGV4dFN0YWdlM0RcIik7XG5pbXBvcnQgSVByb2dyYW1cdFx0XHRcdFx0XHQ9IHJlcXVpcmUoXCJhd2F5anMtc3RhZ2VnbC9saWIvY29yZS9zdGFnZWdsL0lQcm9ncmFtXCIpO1xuaW1wb3J0IE9wQ29kZXNcdFx0XHRcdFx0XHQ9IHJlcXVpcmUoXCJhd2F5anMtc3RhZ2VnbC9saWIvY29yZS9zdGFnZWdsL09wQ29kZXNcIik7XG5pbXBvcnQgUmVzb3VyY2VCYXNlRmxhc2hcdFx0XHQ9IHJlcXVpcmUoXCJhd2F5anMtc3RhZ2VnbC9saWIvY29yZS9zdGFnZWdsL1Jlc291cmNlQmFzZUZsYXNoXCIpO1xuXG5jbGFzcyBQcm9ncmFtRmxhc2ggZXh0ZW5kcyBSZXNvdXJjZUJhc2VGbGFzaCBpbXBsZW1lbnRzIElQcm9ncmFtXG57XG5cdHByaXZhdGUgX2NvbnRleHQ6Q29udGV4dFN0YWdlM0Q7XG5cblx0Y29uc3RydWN0b3IoY29udGV4dDpDb250ZXh0U3RhZ2UzRClcblx0e1xuXHRcdHN1cGVyKCk7XG5cblx0XHR0aGlzLl9jb250ZXh0ID0gY29udGV4dDtcblx0XHR0aGlzLl9jb250ZXh0LmFkZFN0cmVhbShTdHJpbmcuZnJvbUNoYXJDb2RlKE9wQ29kZXMuaW5pdFByb2dyYW0pKTtcblx0XHR0aGlzLl9wSWQgPSB0aGlzLl9jb250ZXh0LmV4ZWN1dGUoKTtcblx0XHR0aGlzLl9jb250ZXh0Ll9pQWRkUmVzb3VyY2UodGhpcyk7XG5cdH1cblxuXHRwdWJsaWMgdXBsb2FkKHZlcnRleFByb2dyYW06Qnl0ZUFycmF5LCBmcmFnbWVudFByb2dyYW06Qnl0ZUFycmF5KVxuXHR7XG5cdFx0dGhpcy5fY29udGV4dC5hZGRTdHJlYW0oU3RyaW5nLmZyb21DaGFyQ29kZShPcENvZGVzLnVwbG9hZEFHQUxCeXRlc1Byb2dyYW0sIHRoaXMuX3BJZCArIE9wQ29kZXMuaW50TWFzaykgKyB2ZXJ0ZXhQcm9ncmFtLnJlYWRCYXNlNjRTdHJpbmcodmVydGV4UHJvZ3JhbS5sZW5ndGgpICsgXCIlXCIgKyBmcmFnbWVudFByb2dyYW0ucmVhZEJhc2U2NFN0cmluZyhmcmFnbWVudFByb2dyYW0ubGVuZ3RoKSArIFwiJVwiKTtcblxuXHRcdGlmIChDb250ZXh0U3RhZ2UzRC5kZWJ1Zylcblx0XHRcdHRoaXMuX2NvbnRleHQuZXhlY3V0ZSgpO1xuXHR9XG5cblx0cHVibGljIGRpc3Bvc2UoKVxuXHR7XG5cdFx0dGhpcy5fY29udGV4dC5hZGRTdHJlYW0oU3RyaW5nLmZyb21DaGFyQ29kZShPcENvZGVzLmRpc3Bvc2VQcm9ncmFtLCB0aGlzLl9wSWQgKyBPcENvZGVzLmludE1hc2spKTtcblx0XHR0aGlzLl9jb250ZXh0LmV4ZWN1dGUoKTtcblx0XHR0aGlzLl9jb250ZXh0Ll9pUmVtb3ZlUmVzb3VyY2UodGhpcyk7XG5cblx0XHR0aGlzLl9jb250ZXh0ID0gbnVsbDtcblx0fVxufVxuXG5leHBvcnQgPSBQcm9ncmFtRmxhc2g7Il19
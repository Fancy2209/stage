var __extends = this.__extends || function (d, b) {
    for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p];
    function __() { this.constructor = d; }
    __.prototype = b.prototype;
    d.prototype = new __();
};
var BitmapData = require("awayjs-core/lib/base/BitmapData");
var TextureBaseWebGL = require("awayjs-stagegl/lib/core/stagegl/TextureBaseWebGL");
var CubeTextureWebGL = (function (_super) {
    __extends(CubeTextureWebGL, _super);
    function CubeTextureWebGL(gl, size) {
        _super.call(this, gl);
        this._textureSelectorDictionary = new Array(6);
        this.textureType = "textureCube";
        this._size = size;
        this._texture = this._gl.createTexture();
        this._textureSelectorDictionary[0] = gl.TEXTURE_CUBE_MAP_POSITIVE_X;
        this._textureSelectorDictionary[1] = gl.TEXTURE_CUBE_MAP_NEGATIVE_X;
        this._textureSelectorDictionary[2] = gl.TEXTURE_CUBE_MAP_POSITIVE_Y;
        this._textureSelectorDictionary[3] = gl.TEXTURE_CUBE_MAP_NEGATIVE_Y;
        this._textureSelectorDictionary[4] = gl.TEXTURE_CUBE_MAP_POSITIVE_Z;
        this._textureSelectorDictionary[5] = gl.TEXTURE_CUBE_MAP_NEGATIVE_Z;
    }
    CubeTextureWebGL.prototype.dispose = function () {
        this._gl.deleteTexture(this._texture);
    };
    CubeTextureWebGL.prototype.uploadFromData = function (data, side, miplevel) {
        if (miplevel === void 0) { miplevel = 0; }
        if (data instanceof BitmapData)
            data = data.imageData;
        this._gl.bindTexture(this._gl.TEXTURE_CUBE_MAP, this._texture);
        this._gl.texImage2D(this._textureSelectorDictionary[side], miplevel, this._gl.RGBA, this._gl.RGBA, this._gl.UNSIGNED_BYTE, data);
        this._gl.bindTexture(this._gl.TEXTURE_CUBE_MAP, null);
    };
    CubeTextureWebGL.prototype.uploadCompressedTextureFromByteArray = function (data, byteArrayOffset /*uint*/, async) {
        if (async === void 0) { async = false; }
    };
    Object.defineProperty(CubeTextureWebGL.prototype, "size", {
        get: function () {
            return this._size;
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(CubeTextureWebGL.prototype, "glTexture", {
        get: function () {
            return this._texture;
        },
        enumerable: true,
        configurable: true
    });
    return CubeTextureWebGL;
})(TextureBaseWebGL);
module.exports = CubeTextureWebGL;

//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbImF3YXlqcy1zdGFnZWdsL2xpYi9jb3JlL3N0YWdlZ2wvY3ViZXRleHR1cmV3ZWJnbC50cyJdLCJuYW1lcyI6WyJDdWJlVGV4dHVyZVdlYkdMIiwiQ3ViZVRleHR1cmVXZWJHTC5jb25zdHJ1Y3RvciIsIkN1YmVUZXh0dXJlV2ViR0wuZGlzcG9zZSIsIkN1YmVUZXh0dXJlV2ViR0wudXBsb2FkRnJvbURhdGEiLCJDdWJlVGV4dHVyZVdlYkdMLnVwbG9hZENvbXByZXNzZWRUZXh0dXJlRnJvbUJ5dGVBcnJheSIsIkN1YmVUZXh0dXJlV2ViR0wuc2l6ZSIsIkN1YmVUZXh0dXJlV2ViR0wuZ2xUZXh0dXJlIl0sIm1hcHBpbmdzIjoiOzs7Ozs7QUFBQSxJQUFPLFVBQVUsV0FBZSxpQ0FBaUMsQ0FBQyxDQUFDO0FBSW5FLElBQU8sZ0JBQWdCLFdBQWMsa0RBQWtELENBQUMsQ0FBQztBQUV6RixJQUFNLGdCQUFnQjtJQUFTQSxVQUF6QkEsZ0JBQWdCQSxVQUF5QkE7SUFTOUNBLFNBVEtBLGdCQUFnQkEsQ0FTVEEsRUFBd0JBLEVBQUVBLElBQVdBO1FBRWhEQyxrQkFBTUEsRUFBRUEsQ0FBQ0EsQ0FBQ0E7UUFSSEEsK0JBQTBCQSxHQUFpQkEsSUFBSUEsS0FBS0EsQ0FBU0EsQ0FBQ0EsQ0FBQ0EsQ0FBQ0E7UUFFakVBLGdCQUFXQSxHQUFVQSxhQUFhQSxDQUFDQTtRQU96Q0EsSUFBSUEsQ0FBQ0EsS0FBS0EsR0FBR0EsSUFBSUEsQ0FBQ0E7UUFDbEJBLElBQUlBLENBQUNBLFFBQVFBLEdBQUdBLElBQUlBLENBQUNBLEdBQUdBLENBQUNBLGFBQWFBLEVBQUVBLENBQUNBO1FBRXpDQSxJQUFJQSxDQUFDQSwwQkFBMEJBLENBQUNBLENBQUNBLENBQUNBLEdBQUdBLEVBQUVBLENBQUNBLDJCQUEyQkEsQ0FBQ0E7UUFDcEVBLElBQUlBLENBQUNBLDBCQUEwQkEsQ0FBQ0EsQ0FBQ0EsQ0FBQ0EsR0FBR0EsRUFBRUEsQ0FBQ0EsMkJBQTJCQSxDQUFDQTtRQUNwRUEsSUFBSUEsQ0FBQ0EsMEJBQTBCQSxDQUFDQSxDQUFDQSxDQUFDQSxHQUFHQSxFQUFFQSxDQUFDQSwyQkFBMkJBLENBQUNBO1FBQ3BFQSxJQUFJQSxDQUFDQSwwQkFBMEJBLENBQUNBLENBQUNBLENBQUNBLEdBQUdBLEVBQUVBLENBQUNBLDJCQUEyQkEsQ0FBQ0E7UUFDcEVBLElBQUlBLENBQUNBLDBCQUEwQkEsQ0FBQ0EsQ0FBQ0EsQ0FBQ0EsR0FBR0EsRUFBRUEsQ0FBQ0EsMkJBQTJCQSxDQUFDQTtRQUNwRUEsSUFBSUEsQ0FBQ0EsMEJBQTBCQSxDQUFDQSxDQUFDQSxDQUFDQSxHQUFHQSxFQUFFQSxDQUFDQSwyQkFBMkJBLENBQUNBO0lBQ3JFQSxDQUFDQTtJQUVNRCxrQ0FBT0EsR0FBZEE7UUFFQ0UsSUFBSUEsQ0FBQ0EsR0FBR0EsQ0FBQ0EsYUFBYUEsQ0FBQ0EsSUFBSUEsQ0FBQ0EsUUFBUUEsQ0FBQ0EsQ0FBQ0E7SUFDdkNBLENBQUNBO0lBSU1GLHlDQUFjQSxHQUFyQkEsVUFBc0JBLElBQVFBLEVBQUVBLElBQVdBLEVBQUVBLFFBQW1CQTtRQUFuQkcsd0JBQW1CQSxHQUFuQkEsWUFBbUJBO1FBRS9EQSxFQUFFQSxDQUFDQSxDQUFDQSxJQUFJQSxZQUFZQSxVQUFVQSxDQUFDQTtZQUM5QkEsSUFBSUEsR0FBaUJBLElBQUtBLENBQUNBLFNBQVNBLENBQUNBO1FBRXRDQSxJQUFJQSxDQUFDQSxHQUFHQSxDQUFDQSxXQUFXQSxDQUFDQSxJQUFJQSxDQUFDQSxHQUFHQSxDQUFDQSxnQkFBZ0JBLEVBQUVBLElBQUlBLENBQUNBLFFBQVFBLENBQUNBLENBQUNBO1FBQy9EQSxJQUFJQSxDQUFDQSxHQUFHQSxDQUFDQSxVQUFVQSxDQUFDQSxJQUFJQSxDQUFDQSwwQkFBMEJBLENBQUNBLElBQUlBLENBQUNBLEVBQUVBLFFBQVFBLEVBQUVBLElBQUlBLENBQUNBLEdBQUdBLENBQUNBLElBQUlBLEVBQUVBLElBQUlBLENBQUNBLEdBQUdBLENBQUNBLElBQUlBLEVBQUVBLElBQUlBLENBQUNBLEdBQUdBLENBQUNBLGFBQWFBLEVBQUVBLElBQUlBLENBQUNBLENBQUNBO1FBQ2pJQSxJQUFJQSxDQUFDQSxHQUFHQSxDQUFDQSxXQUFXQSxDQUFDQSxJQUFJQSxDQUFDQSxHQUFHQSxDQUFDQSxnQkFBZ0JBLEVBQUVBLElBQUlBLENBQUNBLENBQUNBO0lBQ3ZEQSxDQUFDQTtJQUVNSCwrREFBb0NBLEdBQTNDQSxVQUE0Q0EsSUFBY0EsRUFBRUEsZUFBZUEsQ0FBUUEsUUFBREEsQUFBU0EsRUFBRUEsS0FBcUJBO1FBQXJCSSxxQkFBcUJBLEdBQXJCQSxhQUFxQkE7SUFHbEhBLENBQUNBO0lBRURKLHNCQUFXQSxrQ0FBSUE7YUFBZkE7WUFFQ0ssTUFBTUEsQ0FBQ0EsSUFBSUEsQ0FBQ0EsS0FBS0EsQ0FBQ0E7UUFDbkJBLENBQUNBOzs7T0FBQUw7SUFFREEsc0JBQVdBLHVDQUFTQTthQUFwQkE7WUFFQ00sTUFBTUEsQ0FBQ0EsSUFBSUEsQ0FBQ0EsUUFBUUEsQ0FBQ0E7UUFDdEJBLENBQUNBOzs7T0FBQU47SUFDRkEsdUJBQUNBO0FBQURBLENBdERBLEFBc0RDQSxFQXREOEIsZ0JBQWdCLEVBc0Q5QztBQUVELEFBQTBCLGlCQUFqQixnQkFBZ0IsQ0FBQyIsImZpbGUiOiJjb3JlL3N0YWdlZ2wvQ3ViZVRleHR1cmVXZWJHTC5qcyIsInNvdXJjZVJvb3QiOiIuLi8iLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQgQml0bWFwRGF0YVx0XHRcdFx0XHQ9IHJlcXVpcmUoXCJhd2F5anMtY29yZS9saWIvYmFzZS9CaXRtYXBEYXRhXCIpO1xuaW1wb3J0IEJ5dGVBcnJheVx0XHRcdFx0XHQ9IHJlcXVpcmUoXCJhd2F5anMtY29yZS9saWIvdXRpbHMvQnl0ZUFycmF5XCIpO1xuXG5pbXBvcnQgSUN1YmVUZXh0dXJlXHRcdFx0XHRcdD0gcmVxdWlyZShcImF3YXlqcy1zdGFnZWdsL2xpYi9jb3JlL3N0YWdlZ2wvSUN1YmVUZXh0dXJlXCIpO1xuaW1wb3J0IFRleHR1cmVCYXNlV2ViR0xcdFx0XHRcdD0gcmVxdWlyZShcImF3YXlqcy1zdGFnZWdsL2xpYi9jb3JlL3N0YWdlZ2wvVGV4dHVyZUJhc2VXZWJHTFwiKTtcblxuY2xhc3MgQ3ViZVRleHR1cmVXZWJHTCBleHRlbmRzIFRleHR1cmVCYXNlV2ViR0wgaW1wbGVtZW50cyBJQ3ViZVRleHR1cmVcbntcblxuXHRwcml2YXRlIF90ZXh0dXJlU2VsZWN0b3JEaWN0aW9uYXJ5OkFycmF5PG51bWJlcj4gPSBuZXcgQXJyYXk8bnVtYmVyPig2KTtcblxuXHRwdWJsaWMgdGV4dHVyZVR5cGU6c3RyaW5nID0gXCJ0ZXh0dXJlQ3ViZVwiO1xuXHRwcml2YXRlIF90ZXh0dXJlOldlYkdMVGV4dHVyZTtcblx0cHJpdmF0ZSBfc2l6ZTpudW1iZXI7XG5cblx0Y29uc3RydWN0b3IoZ2w6V2ViR0xSZW5kZXJpbmdDb250ZXh0LCBzaXplOm51bWJlcilcblx0e1xuXHRcdHN1cGVyKGdsKTtcblx0XHR0aGlzLl9zaXplID0gc2l6ZTtcblx0XHR0aGlzLl90ZXh0dXJlID0gdGhpcy5fZ2wuY3JlYXRlVGV4dHVyZSgpO1xuXG5cdFx0dGhpcy5fdGV4dHVyZVNlbGVjdG9yRGljdGlvbmFyeVswXSA9IGdsLlRFWFRVUkVfQ1VCRV9NQVBfUE9TSVRJVkVfWDtcblx0XHR0aGlzLl90ZXh0dXJlU2VsZWN0b3JEaWN0aW9uYXJ5WzFdID0gZ2wuVEVYVFVSRV9DVUJFX01BUF9ORUdBVElWRV9YO1xuXHRcdHRoaXMuX3RleHR1cmVTZWxlY3RvckRpY3Rpb25hcnlbMl0gPSBnbC5URVhUVVJFX0NVQkVfTUFQX1BPU0lUSVZFX1k7XG5cdFx0dGhpcy5fdGV4dHVyZVNlbGVjdG9yRGljdGlvbmFyeVszXSA9IGdsLlRFWFRVUkVfQ1VCRV9NQVBfTkVHQVRJVkVfWTtcblx0XHR0aGlzLl90ZXh0dXJlU2VsZWN0b3JEaWN0aW9uYXJ5WzRdID0gZ2wuVEVYVFVSRV9DVUJFX01BUF9QT1NJVElWRV9aO1xuXHRcdHRoaXMuX3RleHR1cmVTZWxlY3RvckRpY3Rpb25hcnlbNV0gPSBnbC5URVhUVVJFX0NVQkVfTUFQX05FR0FUSVZFX1o7XG5cdH1cblxuXHRwdWJsaWMgZGlzcG9zZSgpXG5cdHtcblx0XHR0aGlzLl9nbC5kZWxldGVUZXh0dXJlKHRoaXMuX3RleHR1cmUpO1xuXHR9XG5cblx0cHVibGljIHVwbG9hZEZyb21EYXRhKGJpdG1hcERhdGE6Qml0bWFwRGF0YSwgc2lkZTpudW1iZXIsIG1pcGxldmVsPzpudW1iZXIpO1xuXHRwdWJsaWMgdXBsb2FkRnJvbURhdGEoaW1hZ2U6SFRNTEltYWdlRWxlbWVudCwgc2lkZTpudW1iZXIsIG1pcGxldmVsPzpudW1iZXIpO1xuXHRwdWJsaWMgdXBsb2FkRnJvbURhdGEoZGF0YTphbnksIHNpZGU6bnVtYmVyLCBtaXBsZXZlbDpudW1iZXIgPSAwKVxuXHR7XG5cdFx0aWYgKGRhdGEgaW5zdGFuY2VvZiBCaXRtYXBEYXRhKVxuXHRcdFx0ZGF0YSA9ICg8Qml0bWFwRGF0YT4gZGF0YSkuaW1hZ2VEYXRhO1xuXG5cdFx0dGhpcy5fZ2wuYmluZFRleHR1cmUodGhpcy5fZ2wuVEVYVFVSRV9DVUJFX01BUCwgdGhpcy5fdGV4dHVyZSk7XG5cdFx0dGhpcy5fZ2wudGV4SW1hZ2UyRCh0aGlzLl90ZXh0dXJlU2VsZWN0b3JEaWN0aW9uYXJ5W3NpZGVdLCBtaXBsZXZlbCwgdGhpcy5fZ2wuUkdCQSwgdGhpcy5fZ2wuUkdCQSwgdGhpcy5fZ2wuVU5TSUdORURfQllURSwgZGF0YSk7XG5cdFx0dGhpcy5fZ2wuYmluZFRleHR1cmUodGhpcy5fZ2wuVEVYVFVSRV9DVUJFX01BUCwgbnVsbCk7XG5cdH1cblxuXHRwdWJsaWMgdXBsb2FkQ29tcHJlc3NlZFRleHR1cmVGcm9tQnl0ZUFycmF5KGRhdGE6Qnl0ZUFycmF5LCBieXRlQXJyYXlPZmZzZXQ6bnVtYmVyIC8qdWludCovLCBhc3luYzpib29sZWFuID0gZmFsc2UpXG5cdHtcblxuXHR9XG5cblx0cHVibGljIGdldCBzaXplKCk6bnVtYmVyXG5cdHtcblx0XHRyZXR1cm4gdGhpcy5fc2l6ZTtcblx0fVxuXG5cdHB1YmxpYyBnZXQgZ2xUZXh0dXJlKCk6V2ViR0xUZXh0dXJlXG5cdHtcblx0XHRyZXR1cm4gdGhpcy5fdGV4dHVyZTtcblx0fVxufVxuXG5leHBvcnQgPSBDdWJlVGV4dHVyZVdlYkdMOyJdfQ==
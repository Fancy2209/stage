var OpCodes = (function () {
    function OpCodes() {
    }
    OpCodes.trueValue = 32;
    OpCodes.falseValue = 33;
    OpCodes.intMask = 63;
    OpCodes.drawTriangles = 41;
    OpCodes.setProgramConstant = 42;
    OpCodes.setProgram = 43;
    OpCodes.present = 44;
    OpCodes.clear = 45;
    OpCodes.initProgram = 46;
    OpCodes.initVertexBuffer = 47;
    OpCodes.initIndexBuffer = 48;
    OpCodes.configureBackBuffer = 49;
    OpCodes.uploadArrayIndexBuffer = 50;
    OpCodes.uploadArrayVertexBuffer = 51;
    OpCodes.uploadAGALBytesProgram = 52;
    OpCodes.setVertexBufferAt = 53;
    OpCodes.uploadBytesIndexBuffer = 54;
    OpCodes.uploadBytesVertexBuffer = 55;
    OpCodes.setColorMask = 56;
    OpCodes.setDepthTest = 57;
    OpCodes.disposeProgram = 58;
    OpCodes.disposeContext = 59;
    // must skip 60 '<' as it will invalidate xml being passed over the bridge
    OpCodes.disposeVertexBuffer = 61;
    // must skip 62 '>' as it will invalidate xml being passed over the bridge
    OpCodes.disposeIndexBuffer = 63;
    OpCodes.initTexture = 64;
    OpCodes.setTextureAt = 65;
    OpCodes.uploadBytesTexture = 66;
    OpCodes.disposeTexture = 67;
    OpCodes.setCulling = 68;
    OpCodes.setScissorRect = 69;
    OpCodes.clearScissorRect = 70;
    OpCodes.setBlendFactors = 71;
    OpCodes.setRenderToTexture = 72;
    OpCodes.clearTextureAt = 73;
    OpCodes.clearVertexBufferAt = 74;
    OpCodes.setStencilActions = 75;
    OpCodes.setStencilReferenceValue = 76;
    OpCodes.initCubeTexture = 77;
    OpCodes.disposeCubeTexture = 78;
    OpCodes.uploadBytesCubeTexture = 79;
    OpCodes.clearRenderToTexture = 80;
    OpCodes.enableErrorChecking = 81;
    return OpCodes;
})();
module.exports = OpCodes;

//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbImF3YXlqcy1zdGFnZWdsL2xpYi9iYXNlL29wY29kZXMudHMiXSwibmFtZXMiOlsiT3BDb2RlcyIsIk9wQ29kZXMuY29uc3RydWN0b3IiXSwibWFwcGluZ3MiOiJBQUFBLElBQU0sT0FBTztJQUFiQSxTQUFNQSxPQUFPQTtJQThDYkMsQ0FBQ0E7SUE1Q2NELGlCQUFTQSxHQUFVQSxFQUFFQSxDQUFDQTtJQUN0QkEsa0JBQVVBLEdBQVVBLEVBQUVBLENBQUNBO0lBQ3ZCQSxlQUFPQSxHQUFVQSxFQUFFQSxDQUFDQTtJQUNwQkEscUJBQWFBLEdBQVVBLEVBQUVBLENBQUNBO0lBQzFCQSwwQkFBa0JBLEdBQVVBLEVBQUVBLENBQUNBO0lBQy9CQSxrQkFBVUEsR0FBVUEsRUFBRUEsQ0FBQ0E7SUFDdkJBLGVBQU9BLEdBQVVBLEVBQUVBLENBQUNBO0lBQ3BCQSxhQUFLQSxHQUFVQSxFQUFFQSxDQUFDQTtJQUNsQkEsbUJBQVdBLEdBQVVBLEVBQUVBLENBQUNBO0lBQ3hCQSx3QkFBZ0JBLEdBQVVBLEVBQUVBLENBQUNBO0lBQzdCQSx1QkFBZUEsR0FBVUEsRUFBRUEsQ0FBQ0E7SUFDNUJBLDJCQUFtQkEsR0FBVUEsRUFBRUEsQ0FBQ0E7SUFDaENBLDhCQUFzQkEsR0FBVUEsRUFBRUEsQ0FBQ0E7SUFDbkNBLCtCQUF1QkEsR0FBVUEsRUFBRUEsQ0FBQ0E7SUFDcENBLDhCQUFzQkEsR0FBVUEsRUFBRUEsQ0FBQ0E7SUFDbkNBLHlCQUFpQkEsR0FBVUEsRUFBRUEsQ0FBQ0E7SUFDOUJBLDhCQUFzQkEsR0FBVUEsRUFBRUEsQ0FBQ0E7SUFDbkNBLCtCQUF1QkEsR0FBVUEsRUFBRUEsQ0FBQ0E7SUFDcENBLG9CQUFZQSxHQUFVQSxFQUFFQSxDQUFDQTtJQUN6QkEsb0JBQVlBLEdBQVVBLEVBQUVBLENBQUNBO0lBQ3pCQSxzQkFBY0EsR0FBVUEsRUFBRUEsQ0FBQ0E7SUFDM0JBLHNCQUFjQSxHQUFVQSxFQUFFQSxDQUFDQTtJQUN6Q0EsMEVBQTBFQTtJQUM1REEsMkJBQW1CQSxHQUFVQSxFQUFFQSxDQUFDQTtJQUM5Q0EsMEVBQTBFQTtJQUM1REEsMEJBQWtCQSxHQUFVQSxFQUFFQSxDQUFDQTtJQUMvQkEsbUJBQVdBLEdBQVVBLEVBQUVBLENBQUNBO0lBQ3hCQSxvQkFBWUEsR0FBVUEsRUFBRUEsQ0FBQ0E7SUFDekJBLDBCQUFrQkEsR0FBVUEsRUFBRUEsQ0FBQ0E7SUFDL0JBLHNCQUFjQSxHQUFVQSxFQUFFQSxDQUFDQTtJQUMzQkEsa0JBQVVBLEdBQVVBLEVBQUVBLENBQUNBO0lBQ3ZCQSxzQkFBY0EsR0FBVUEsRUFBRUEsQ0FBQ0E7SUFDM0JBLHdCQUFnQkEsR0FBVUEsRUFBRUEsQ0FBQ0E7SUFDN0JBLHVCQUFlQSxHQUFVQSxFQUFFQSxDQUFDQTtJQUM1QkEsMEJBQWtCQSxHQUFVQSxFQUFFQSxDQUFDQTtJQUMvQkEsc0JBQWNBLEdBQVVBLEVBQUVBLENBQUNBO0lBQzNCQSwyQkFBbUJBLEdBQVVBLEVBQUVBLENBQUNBO0lBQ2hDQSx5QkFBaUJBLEdBQVVBLEVBQUVBLENBQUNBO0lBQzlCQSxnQ0FBd0JBLEdBQVVBLEVBQUVBLENBQUNBO0lBQ3JDQSx1QkFBZUEsR0FBVUEsRUFBRUEsQ0FBQ0E7SUFDNUJBLDBCQUFrQkEsR0FBVUEsRUFBRUEsQ0FBQ0E7SUFDL0JBLDhCQUFzQkEsR0FBVUEsRUFBRUEsQ0FBQ0E7SUFDbkNBLDRCQUFvQkEsR0FBVUEsRUFBRUEsQ0FBQ0E7SUFDakNBLDJCQUFtQkEsR0FBVUEsRUFBRUEsQ0FBQ0E7SUFDL0NBLGNBQUNBO0FBQURBLENBOUNBLEFBOENDQSxJQUFBO0FBRUQsQUFBaUIsaUJBQVIsT0FBTyxDQUFDIiwiZmlsZSI6ImJhc2UvT3BDb2Rlcy5qcyIsInNvdXJjZVJvb3QiOiIuLi8iLCJzb3VyY2VzQ29udGVudCI6WyJjbGFzcyBPcENvZGVzXG57XG5cdHB1YmxpYyBzdGF0aWMgdHJ1ZVZhbHVlOm51bWJlciA9IDMyO1xuXHRwdWJsaWMgc3RhdGljIGZhbHNlVmFsdWU6bnVtYmVyID0gMzM7XG5cdHB1YmxpYyBzdGF0aWMgaW50TWFzazpudW1iZXIgPSA2Mztcblx0cHVibGljIHN0YXRpYyBkcmF3VHJpYW5nbGVzOm51bWJlciA9IDQxO1xuXHRwdWJsaWMgc3RhdGljIHNldFByb2dyYW1Db25zdGFudDpudW1iZXIgPSA0Mjtcblx0cHVibGljIHN0YXRpYyBzZXRQcm9ncmFtOm51bWJlciA9IDQzO1xuXHRwdWJsaWMgc3RhdGljIHByZXNlbnQ6bnVtYmVyID0gNDQ7XG5cdHB1YmxpYyBzdGF0aWMgY2xlYXI6bnVtYmVyID0gNDU7XG5cdHB1YmxpYyBzdGF0aWMgaW5pdFByb2dyYW06bnVtYmVyID0gNDY7XG5cdHB1YmxpYyBzdGF0aWMgaW5pdFZlcnRleEJ1ZmZlcjpudW1iZXIgPSA0Nztcblx0cHVibGljIHN0YXRpYyBpbml0SW5kZXhCdWZmZXI6bnVtYmVyID0gNDg7XG5cdHB1YmxpYyBzdGF0aWMgY29uZmlndXJlQmFja0J1ZmZlcjpudW1iZXIgPSA0OTtcblx0cHVibGljIHN0YXRpYyB1cGxvYWRBcnJheUluZGV4QnVmZmVyOm51bWJlciA9IDUwO1xuXHRwdWJsaWMgc3RhdGljIHVwbG9hZEFycmF5VmVydGV4QnVmZmVyOm51bWJlciA9IDUxO1xuXHRwdWJsaWMgc3RhdGljIHVwbG9hZEFHQUxCeXRlc1Byb2dyYW06bnVtYmVyID0gNTI7XG5cdHB1YmxpYyBzdGF0aWMgc2V0VmVydGV4QnVmZmVyQXQ6bnVtYmVyID0gNTM7XG5cdHB1YmxpYyBzdGF0aWMgdXBsb2FkQnl0ZXNJbmRleEJ1ZmZlcjpudW1iZXIgPSA1NDtcblx0cHVibGljIHN0YXRpYyB1cGxvYWRCeXRlc1ZlcnRleEJ1ZmZlcjpudW1iZXIgPSA1NTtcblx0cHVibGljIHN0YXRpYyBzZXRDb2xvck1hc2s6bnVtYmVyID0gNTY7XG5cdHB1YmxpYyBzdGF0aWMgc2V0RGVwdGhUZXN0Om51bWJlciA9IDU3O1xuXHRwdWJsaWMgc3RhdGljIGRpc3Bvc2VQcm9ncmFtOm51bWJlciA9IDU4O1xuXHRwdWJsaWMgc3RhdGljIGRpc3Bvc2VDb250ZXh0Om51bWJlciA9IDU5O1xuXHQvLyBtdXN0IHNraXAgNjAgJzwnIGFzIGl0IHdpbGwgaW52YWxpZGF0ZSB4bWwgYmVpbmcgcGFzc2VkIG92ZXIgdGhlIGJyaWRnZVxuXHRwdWJsaWMgc3RhdGljIGRpc3Bvc2VWZXJ0ZXhCdWZmZXI6bnVtYmVyID0gNjE7XG5cdC8vIG11c3Qgc2tpcCA2MiAnPicgYXMgaXQgd2lsbCBpbnZhbGlkYXRlIHhtbCBiZWluZyBwYXNzZWQgb3ZlciB0aGUgYnJpZGdlXG5cdHB1YmxpYyBzdGF0aWMgZGlzcG9zZUluZGV4QnVmZmVyOm51bWJlciA9IDYzO1xuXHRwdWJsaWMgc3RhdGljIGluaXRUZXh0dXJlOm51bWJlciA9IDY0O1xuXHRwdWJsaWMgc3RhdGljIHNldFRleHR1cmVBdDpudW1iZXIgPSA2NTtcblx0cHVibGljIHN0YXRpYyB1cGxvYWRCeXRlc1RleHR1cmU6bnVtYmVyID0gNjY7XG5cdHB1YmxpYyBzdGF0aWMgZGlzcG9zZVRleHR1cmU6bnVtYmVyID0gNjc7XG5cdHB1YmxpYyBzdGF0aWMgc2V0Q3VsbGluZzpudW1iZXIgPSA2ODtcblx0cHVibGljIHN0YXRpYyBzZXRTY2lzc29yUmVjdDpudW1iZXIgPSA2OTtcblx0cHVibGljIHN0YXRpYyBjbGVhclNjaXNzb3JSZWN0Om51bWJlciA9IDcwO1xuXHRwdWJsaWMgc3RhdGljIHNldEJsZW5kRmFjdG9yczpudW1iZXIgPSA3MTtcblx0cHVibGljIHN0YXRpYyBzZXRSZW5kZXJUb1RleHR1cmU6bnVtYmVyID0gNzI7XG5cdHB1YmxpYyBzdGF0aWMgY2xlYXJUZXh0dXJlQXQ6bnVtYmVyID0gNzM7XG5cdHB1YmxpYyBzdGF0aWMgY2xlYXJWZXJ0ZXhCdWZmZXJBdDpudW1iZXIgPSA3NDtcblx0cHVibGljIHN0YXRpYyBzZXRTdGVuY2lsQWN0aW9uczpudW1iZXIgPSA3NTtcblx0cHVibGljIHN0YXRpYyBzZXRTdGVuY2lsUmVmZXJlbmNlVmFsdWU6bnVtYmVyID0gNzY7XG5cdHB1YmxpYyBzdGF0aWMgaW5pdEN1YmVUZXh0dXJlOm51bWJlciA9IDc3O1xuXHRwdWJsaWMgc3RhdGljIGRpc3Bvc2VDdWJlVGV4dHVyZTpudW1iZXIgPSA3ODtcblx0cHVibGljIHN0YXRpYyB1cGxvYWRCeXRlc0N1YmVUZXh0dXJlOm51bWJlciA9IDc5O1xuXHRwdWJsaWMgc3RhdGljIGNsZWFyUmVuZGVyVG9UZXh0dXJlOm51bWJlciA9IDgwO1xuXHRwdWJsaWMgc3RhdGljIGVuYWJsZUVycm9yQ2hlY2tpbmc6bnVtYmVyID0gODE7XG59XG5cbmV4cG9ydCA9IE9wQ29kZXM7Il19
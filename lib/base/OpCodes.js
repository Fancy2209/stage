var OpCodes = (function () {
    function OpCodes() {
    }
    OpCodes.trueValue = 32;
    OpCodes.falseValue = 33;
    OpCodes.intMask = 63;
    OpCodes.drawTriangles = 41;
    OpCodes.setProgramConstant = 42;
    OpCodes.setProgram = 43;
    OpCodes.present = 44;
    OpCodes.clear = 45;
    OpCodes.initProgram = 46;
    OpCodes.initVertexBuffer = 47;
    OpCodes.initIndexBuffer = 48;
    OpCodes.configureBackBuffer = 49;
    OpCodes.uploadArrayIndexBuffer = 50;
    OpCodes.uploadArrayVertexBuffer = 51;
    OpCodes.uploadAGALBytesProgram = 52;
    OpCodes.setVertexBufferAt = 53;
    OpCodes.uploadBytesIndexBuffer = 54;
    OpCodes.uploadBytesVertexBuffer = 55;
    OpCodes.setColorMask = 56;
    OpCodes.setDepthTest = 57;
    OpCodes.disposeProgram = 58;
    OpCodes.disposeContext = 59;
    // must skip 60 '<' as it will invalidate xml being passed over the bridge
    OpCodes.disposeVertexBuffer = 61;
    // must skip 62 '>' as it will invalidate xml being passed over the bridge
    OpCodes.disposeIndexBuffer = 63;
    OpCodes.initTexture = 64;
    OpCodes.setTextureAt = 65;
    OpCodes.uploadBytesTexture = 66;
    OpCodes.disposeTexture = 67;
    OpCodes.setCulling = 68;
    OpCodes.setScissorRect = 69;
    OpCodes.clearScissorRect = 70;
    OpCodes.setBlendFactors = 71;
    OpCodes.setRenderToTexture = 72;
    OpCodes.clearTextureAt = 73;
    OpCodes.clearVertexBufferAt = 74;
    OpCodes.setStencilActions = 75;
    OpCodes.setStencilReferenceValue = 76;
    OpCodes.initCubeTexture = 77;
    OpCodes.disposeCubeTexture = 78;
    OpCodes.uploadBytesCubeTexture = 79;
    OpCodes.clearRenderToTexture = 80;
    OpCodes.enableErrorChecking = 81;
    return OpCodes;
})();
module.exports = OpCodes;

//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbImF3YXlqcy1zdGFnZWdsL2xpYi9iYXNlL09wQ29kZXMudHMiXSwibmFtZXMiOlsiT3BDb2RlcyIsIk9wQ29kZXMuY29uc3RydWN0b3IiXSwibWFwcGluZ3MiOiJBQUFBLElBQU0sT0FBTztJQUFiQSxTQUFNQSxPQUFPQTtJQThDYkMsQ0FBQ0E7SUE1Q2NELGlCQUFTQSxHQUFVQSxFQUFFQSxDQUFDQTtJQUN0QkEsa0JBQVVBLEdBQVVBLEVBQUVBLENBQUNBO0lBQ3ZCQSxlQUFPQSxHQUFVQSxFQUFFQSxDQUFDQTtJQUNwQkEscUJBQWFBLEdBQVVBLEVBQUVBLENBQUNBO0lBQzFCQSwwQkFBa0JBLEdBQVVBLEVBQUVBLENBQUNBO0lBQy9CQSxrQkFBVUEsR0FBVUEsRUFBRUEsQ0FBQ0E7SUFDdkJBLGVBQU9BLEdBQVVBLEVBQUVBLENBQUNBO0lBQ3BCQSxhQUFLQSxHQUFVQSxFQUFFQSxDQUFDQTtJQUNsQkEsbUJBQVdBLEdBQVVBLEVBQUVBLENBQUNBO0lBQ3hCQSx3QkFBZ0JBLEdBQVVBLEVBQUVBLENBQUNBO0lBQzdCQSx1QkFBZUEsR0FBVUEsRUFBRUEsQ0FBQ0E7SUFDNUJBLDJCQUFtQkEsR0FBVUEsRUFBRUEsQ0FBQ0E7SUFDaENBLDhCQUFzQkEsR0FBVUEsRUFBRUEsQ0FBQ0E7SUFDbkNBLCtCQUF1QkEsR0FBVUEsRUFBRUEsQ0FBQ0E7SUFDcENBLDhCQUFzQkEsR0FBVUEsRUFBRUEsQ0FBQ0E7SUFDbkNBLHlCQUFpQkEsR0FBVUEsRUFBRUEsQ0FBQ0E7SUFDOUJBLDhCQUFzQkEsR0FBVUEsRUFBRUEsQ0FBQ0E7SUFDbkNBLCtCQUF1QkEsR0FBVUEsRUFBRUEsQ0FBQ0E7SUFDcENBLG9CQUFZQSxHQUFVQSxFQUFFQSxDQUFDQTtJQUN6QkEsb0JBQVlBLEdBQVVBLEVBQUVBLENBQUNBO0lBQ3pCQSxzQkFBY0EsR0FBVUEsRUFBRUEsQ0FBQ0E7SUFDM0JBLHNCQUFjQSxHQUFVQSxFQUFFQSxDQUFDQTtJQUN6Q0EsMEVBQTBFQTtJQUM1REEsMkJBQW1CQSxHQUFVQSxFQUFFQSxDQUFDQTtJQUM5Q0EsMEVBQTBFQTtJQUM1REEsMEJBQWtCQSxHQUFVQSxFQUFFQSxDQUFDQTtJQUMvQkEsbUJBQVdBLEdBQVVBLEVBQUVBLENBQUNBO0lBQ3hCQSxvQkFBWUEsR0FBVUEsRUFBRUEsQ0FBQ0E7SUFDekJBLDBCQUFrQkEsR0FBVUEsRUFBRUEsQ0FBQ0E7SUFDL0JBLHNCQUFjQSxHQUFVQSxFQUFFQSxDQUFDQTtJQUMzQkEsa0JBQVVBLEdBQVVBLEVBQUVBLENBQUNBO0lBQ3ZCQSxzQkFBY0EsR0FBVUEsRUFBRUEsQ0FBQ0E7SUFDM0JBLHdCQUFnQkEsR0FBVUEsRUFBRUEsQ0FBQ0E7SUFDN0JBLHVCQUFlQSxHQUFVQSxFQUFFQSxDQUFDQTtJQUM1QkEsMEJBQWtCQSxHQUFVQSxFQUFFQSxDQUFDQTtJQUMvQkEsc0JBQWNBLEdBQVVBLEVBQUVBLENBQUNBO0lBQzNCQSwyQkFBbUJBLEdBQVVBLEVBQUVBLENBQUNBO0lBQ2hDQSx5QkFBaUJBLEdBQVVBLEVBQUVBLENBQUNBO0lBQzlCQSxnQ0FBd0JBLEdBQVVBLEVBQUVBLENBQUNBO0lBQ3JDQSx1QkFBZUEsR0FBVUEsRUFBRUEsQ0FBQ0E7SUFDNUJBLDBCQUFrQkEsR0FBVUEsRUFBRUEsQ0FBQ0E7SUFDL0JBLDhCQUFzQkEsR0FBVUEsRUFBRUEsQ0FBQ0E7SUFDbkNBLDRCQUFvQkEsR0FBVUEsRUFBRUEsQ0FBQ0E7SUFDakNBLDJCQUFtQkEsR0FBVUEsRUFBRUEsQ0FBQ0E7SUFDL0NBLGNBQUNBO0FBQURBLENBOUNBLEFBOENDQSxJQUFBO0FBRUQsQUFBaUIsaUJBQVIsT0FBTyxDQUFDIiwiZmlsZSI6ImJhc2UvT3BDb2Rlcy5qcyIsInNvdXJjZVJvb3QiOiIuLi8iLCJzb3VyY2VzQ29udGVudCI6WyJjbGFzcyBPcENvZGVzXHJcbntcclxuXHRwdWJsaWMgc3RhdGljIHRydWVWYWx1ZTpudW1iZXIgPSAzMjtcclxuXHRwdWJsaWMgc3RhdGljIGZhbHNlVmFsdWU6bnVtYmVyID0gMzM7XHJcblx0cHVibGljIHN0YXRpYyBpbnRNYXNrOm51bWJlciA9IDYzO1xyXG5cdHB1YmxpYyBzdGF0aWMgZHJhd1RyaWFuZ2xlczpudW1iZXIgPSA0MTtcclxuXHRwdWJsaWMgc3RhdGljIHNldFByb2dyYW1Db25zdGFudDpudW1iZXIgPSA0MjtcclxuXHRwdWJsaWMgc3RhdGljIHNldFByb2dyYW06bnVtYmVyID0gNDM7XHJcblx0cHVibGljIHN0YXRpYyBwcmVzZW50Om51bWJlciA9IDQ0O1xyXG5cdHB1YmxpYyBzdGF0aWMgY2xlYXI6bnVtYmVyID0gNDU7XHJcblx0cHVibGljIHN0YXRpYyBpbml0UHJvZ3JhbTpudW1iZXIgPSA0NjtcclxuXHRwdWJsaWMgc3RhdGljIGluaXRWZXJ0ZXhCdWZmZXI6bnVtYmVyID0gNDc7XHJcblx0cHVibGljIHN0YXRpYyBpbml0SW5kZXhCdWZmZXI6bnVtYmVyID0gNDg7XHJcblx0cHVibGljIHN0YXRpYyBjb25maWd1cmVCYWNrQnVmZmVyOm51bWJlciA9IDQ5O1xyXG5cdHB1YmxpYyBzdGF0aWMgdXBsb2FkQXJyYXlJbmRleEJ1ZmZlcjpudW1iZXIgPSA1MDtcclxuXHRwdWJsaWMgc3RhdGljIHVwbG9hZEFycmF5VmVydGV4QnVmZmVyOm51bWJlciA9IDUxO1xyXG5cdHB1YmxpYyBzdGF0aWMgdXBsb2FkQUdBTEJ5dGVzUHJvZ3JhbTpudW1iZXIgPSA1MjtcclxuXHRwdWJsaWMgc3RhdGljIHNldFZlcnRleEJ1ZmZlckF0Om51bWJlciA9IDUzO1xyXG5cdHB1YmxpYyBzdGF0aWMgdXBsb2FkQnl0ZXNJbmRleEJ1ZmZlcjpudW1iZXIgPSA1NDtcclxuXHRwdWJsaWMgc3RhdGljIHVwbG9hZEJ5dGVzVmVydGV4QnVmZmVyOm51bWJlciA9IDU1O1xyXG5cdHB1YmxpYyBzdGF0aWMgc2V0Q29sb3JNYXNrOm51bWJlciA9IDU2O1xyXG5cdHB1YmxpYyBzdGF0aWMgc2V0RGVwdGhUZXN0Om51bWJlciA9IDU3O1xyXG5cdHB1YmxpYyBzdGF0aWMgZGlzcG9zZVByb2dyYW06bnVtYmVyID0gNTg7XHJcblx0cHVibGljIHN0YXRpYyBkaXNwb3NlQ29udGV4dDpudW1iZXIgPSA1OTtcclxuXHQvLyBtdXN0IHNraXAgNjAgJzwnIGFzIGl0IHdpbGwgaW52YWxpZGF0ZSB4bWwgYmVpbmcgcGFzc2VkIG92ZXIgdGhlIGJyaWRnZVxyXG5cdHB1YmxpYyBzdGF0aWMgZGlzcG9zZVZlcnRleEJ1ZmZlcjpudW1iZXIgPSA2MTtcclxuXHQvLyBtdXN0IHNraXAgNjIgJz4nIGFzIGl0IHdpbGwgaW52YWxpZGF0ZSB4bWwgYmVpbmcgcGFzc2VkIG92ZXIgdGhlIGJyaWRnZVxyXG5cdHB1YmxpYyBzdGF0aWMgZGlzcG9zZUluZGV4QnVmZmVyOm51bWJlciA9IDYzO1xyXG5cdHB1YmxpYyBzdGF0aWMgaW5pdFRleHR1cmU6bnVtYmVyID0gNjQ7XHJcblx0cHVibGljIHN0YXRpYyBzZXRUZXh0dXJlQXQ6bnVtYmVyID0gNjU7XHJcblx0cHVibGljIHN0YXRpYyB1cGxvYWRCeXRlc1RleHR1cmU6bnVtYmVyID0gNjY7XHJcblx0cHVibGljIHN0YXRpYyBkaXNwb3NlVGV4dHVyZTpudW1iZXIgPSA2NztcclxuXHRwdWJsaWMgc3RhdGljIHNldEN1bGxpbmc6bnVtYmVyID0gNjg7XHJcblx0cHVibGljIHN0YXRpYyBzZXRTY2lzc29yUmVjdDpudW1iZXIgPSA2OTtcclxuXHRwdWJsaWMgc3RhdGljIGNsZWFyU2Npc3NvclJlY3Q6bnVtYmVyID0gNzA7XHJcblx0cHVibGljIHN0YXRpYyBzZXRCbGVuZEZhY3RvcnM6bnVtYmVyID0gNzE7XHJcblx0cHVibGljIHN0YXRpYyBzZXRSZW5kZXJUb1RleHR1cmU6bnVtYmVyID0gNzI7XHJcblx0cHVibGljIHN0YXRpYyBjbGVhclRleHR1cmVBdDpudW1iZXIgPSA3MztcclxuXHRwdWJsaWMgc3RhdGljIGNsZWFyVmVydGV4QnVmZmVyQXQ6bnVtYmVyID0gNzQ7XHJcblx0cHVibGljIHN0YXRpYyBzZXRTdGVuY2lsQWN0aW9uczpudW1iZXIgPSA3NTtcclxuXHRwdWJsaWMgc3RhdGljIHNldFN0ZW5jaWxSZWZlcmVuY2VWYWx1ZTpudW1iZXIgPSA3NjtcclxuXHRwdWJsaWMgc3RhdGljIGluaXRDdWJlVGV4dHVyZTpudW1iZXIgPSA3NztcclxuXHRwdWJsaWMgc3RhdGljIGRpc3Bvc2VDdWJlVGV4dHVyZTpudW1iZXIgPSA3ODtcclxuXHRwdWJsaWMgc3RhdGljIHVwbG9hZEJ5dGVzQ3ViZVRleHR1cmU6bnVtYmVyID0gNzk7XHJcblx0cHVibGljIHN0YXRpYyBjbGVhclJlbmRlclRvVGV4dHVyZTpudW1iZXIgPSA4MDtcclxuXHRwdWJsaWMgc3RhdGljIGVuYWJsZUVycm9yQ2hlY2tpbmc6bnVtYmVyID0gODE7XHJcbn1cclxuXHJcbmV4cG9ydCA9IE9wQ29kZXM7Il19
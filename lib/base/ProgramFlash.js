var __extends = this.__extends || function (d, b) {
    for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p];
    function __() { this.constructor = d; }
    __.prototype = b.prototype;
    d.prototype = new __();
};
var ContextStage3D = require("awayjs-stagegl/lib/base/ContextStage3D");
var OpCodes = require("awayjs-stagegl/lib/base/OpCodes");
var ResourceBaseFlash = require("awayjs-stagegl/lib/base/ResourceBaseFlash");
var ProgramFlash = (function (_super) {
    __extends(ProgramFlash, _super);
    function ProgramFlash(context) {
        _super.call(this);
        this._context = context;
        this._context.addStream(String.fromCharCode(OpCodes.initProgram));
        this._pId = this._context.execute();
        this._context._iAddResource(this);
    }
    ProgramFlash.prototype.upload = function (vertexProgram, fragmentProgram) {
        this._context.addStream(String.fromCharCode(OpCodes.uploadAGALBytesProgram, this._pId + OpCodes.intMask) + vertexProgram.readBase64String(vertexProgram.length) + "%" + fragmentProgram.readBase64String(fragmentProgram.length) + "%");
        if (ContextStage3D.debug)
            this._context.execute();
    };
    ProgramFlash.prototype.dispose = function () {
        this._context.addStream(String.fromCharCode(OpCodes.disposeProgram, this._pId + OpCodes.intMask));
        this._context.execute();
        this._context._iRemoveResource(this);
        this._context = null;
    };
    return ProgramFlash;
})(ResourceBaseFlash);
module.exports = ProgramFlash;

//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbImF3YXlqcy1zdGFnZWdsL2xpYi9iYXNlL1Byb2dyYW1GbGFzaC50cyJdLCJuYW1lcyI6WyJQcm9ncmFtRmxhc2giLCJQcm9ncmFtRmxhc2guY29uc3RydWN0b3IiLCJQcm9ncmFtRmxhc2gudXBsb2FkIiwiUHJvZ3JhbUZsYXNoLmRpc3Bvc2UiXSwibWFwcGluZ3MiOiI7Ozs7OztBQUVBLElBQU8sY0FBYyxXQUFjLHdDQUF3QyxDQUFDLENBQUM7QUFFN0UsSUFBTyxPQUFPLFdBQWdCLGlDQUFpQyxDQUFDLENBQUM7QUFDakUsSUFBTyxpQkFBaUIsV0FBYSwyQ0FBMkMsQ0FBQyxDQUFDO0FBRWxGLElBQU0sWUFBWTtJQUFTQSxVQUFyQkEsWUFBWUEsVUFBMEJBO0lBSTNDQSxTQUpLQSxZQUFZQSxDQUlMQSxPQUFzQkE7UUFFakNDLGlCQUFPQSxDQUFDQTtRQUVSQSxJQUFJQSxDQUFDQSxRQUFRQSxHQUFHQSxPQUFPQSxDQUFDQTtRQUN4QkEsSUFBSUEsQ0FBQ0EsUUFBUUEsQ0FBQ0EsU0FBU0EsQ0FBQ0EsTUFBTUEsQ0FBQ0EsWUFBWUEsQ0FBQ0EsT0FBT0EsQ0FBQ0EsV0FBV0EsQ0FBQ0EsQ0FBQ0EsQ0FBQ0E7UUFDbEVBLElBQUlBLENBQUNBLElBQUlBLEdBQUdBLElBQUlBLENBQUNBLFFBQVFBLENBQUNBLE9BQU9BLEVBQUVBLENBQUNBO1FBQ3BDQSxJQUFJQSxDQUFDQSxRQUFRQSxDQUFDQSxhQUFhQSxDQUFDQSxJQUFJQSxDQUFDQSxDQUFDQTtJQUNuQ0EsQ0FBQ0E7SUFFTUQsNkJBQU1BLEdBQWJBLFVBQWNBLGFBQXVCQSxFQUFFQSxlQUF5QkE7UUFFL0RFLElBQUlBLENBQUNBLFFBQVFBLENBQUNBLFNBQVNBLENBQUNBLE1BQU1BLENBQUNBLFlBQVlBLENBQUNBLE9BQU9BLENBQUNBLHNCQUFzQkEsRUFBRUEsSUFBSUEsQ0FBQ0EsSUFBSUEsR0FBR0EsT0FBT0EsQ0FBQ0EsT0FBT0EsQ0FBQ0EsR0FBR0EsYUFBYUEsQ0FBQ0EsZ0JBQWdCQSxDQUFDQSxhQUFhQSxDQUFDQSxNQUFNQSxDQUFDQSxHQUFHQSxHQUFHQSxHQUFHQSxlQUFlQSxDQUFDQSxnQkFBZ0JBLENBQUNBLGVBQWVBLENBQUNBLE1BQU1BLENBQUNBLEdBQUdBLEdBQUdBLENBQUNBLENBQUNBO1FBRXhPQSxFQUFFQSxDQUFDQSxDQUFDQSxjQUFjQSxDQUFDQSxLQUFLQSxDQUFDQTtZQUN4QkEsSUFBSUEsQ0FBQ0EsUUFBUUEsQ0FBQ0EsT0FBT0EsRUFBRUEsQ0FBQ0E7SUFDMUJBLENBQUNBO0lBRU1GLDhCQUFPQSxHQUFkQTtRQUVDRyxJQUFJQSxDQUFDQSxRQUFRQSxDQUFDQSxTQUFTQSxDQUFDQSxNQUFNQSxDQUFDQSxZQUFZQSxDQUFDQSxPQUFPQSxDQUFDQSxjQUFjQSxFQUFFQSxJQUFJQSxDQUFDQSxJQUFJQSxHQUFHQSxPQUFPQSxDQUFDQSxPQUFPQSxDQUFDQSxDQUFDQSxDQUFDQTtRQUNsR0EsSUFBSUEsQ0FBQ0EsUUFBUUEsQ0FBQ0EsT0FBT0EsRUFBRUEsQ0FBQ0E7UUFDeEJBLElBQUlBLENBQUNBLFFBQVFBLENBQUNBLGdCQUFnQkEsQ0FBQ0EsSUFBSUEsQ0FBQ0EsQ0FBQ0E7UUFFckNBLElBQUlBLENBQUNBLFFBQVFBLEdBQUdBLElBQUlBLENBQUNBO0lBQ3RCQSxDQUFDQTtJQUNGSCxtQkFBQ0E7QUFBREEsQ0E5QkEsQUE4QkNBLEVBOUIwQixpQkFBaUIsRUE4QjNDO0FBRUQsQUFBc0IsaUJBQWIsWUFBWSxDQUFDIiwiZmlsZSI6ImJhc2UvUHJvZ3JhbUZsYXNoLmpzIiwic291cmNlUm9vdCI6Ii4uLyIsInNvdXJjZXNDb250ZW50IjpbImltcG9ydCBCeXRlQXJyYXlcdFx0XHRcdFx0PSByZXF1aXJlKFwiYXdheWpzLWNvcmUvbGliL3V0aWxzL0J5dGVBcnJheVwiKTtcclxuXHJcbmltcG9ydCBDb250ZXh0U3RhZ2UzRFx0XHRcdFx0PSByZXF1aXJlKFwiYXdheWpzLXN0YWdlZ2wvbGliL2Jhc2UvQ29udGV4dFN0YWdlM0RcIik7XHJcbmltcG9ydCBJUHJvZ3JhbVx0XHRcdFx0XHRcdD0gcmVxdWlyZShcImF3YXlqcy1zdGFnZWdsL2xpYi9iYXNlL0lQcm9ncmFtXCIpO1xyXG5pbXBvcnQgT3BDb2Rlc1x0XHRcdFx0XHRcdD0gcmVxdWlyZShcImF3YXlqcy1zdGFnZWdsL2xpYi9iYXNlL09wQ29kZXNcIik7XHJcbmltcG9ydCBSZXNvdXJjZUJhc2VGbGFzaFx0XHRcdD0gcmVxdWlyZShcImF3YXlqcy1zdGFnZWdsL2xpYi9iYXNlL1Jlc291cmNlQmFzZUZsYXNoXCIpO1xyXG5cclxuY2xhc3MgUHJvZ3JhbUZsYXNoIGV4dGVuZHMgUmVzb3VyY2VCYXNlRmxhc2ggaW1wbGVtZW50cyBJUHJvZ3JhbVxyXG57XHJcblx0cHJpdmF0ZSBfY29udGV4dDpDb250ZXh0U3RhZ2UzRDtcclxuXHJcblx0Y29uc3RydWN0b3IoY29udGV4dDpDb250ZXh0U3RhZ2UzRClcclxuXHR7XHJcblx0XHRzdXBlcigpO1xyXG5cclxuXHRcdHRoaXMuX2NvbnRleHQgPSBjb250ZXh0O1xyXG5cdFx0dGhpcy5fY29udGV4dC5hZGRTdHJlYW0oU3RyaW5nLmZyb21DaGFyQ29kZShPcENvZGVzLmluaXRQcm9ncmFtKSk7XHJcblx0XHR0aGlzLl9wSWQgPSB0aGlzLl9jb250ZXh0LmV4ZWN1dGUoKTtcclxuXHRcdHRoaXMuX2NvbnRleHQuX2lBZGRSZXNvdXJjZSh0aGlzKTtcclxuXHR9XHJcblxyXG5cdHB1YmxpYyB1cGxvYWQodmVydGV4UHJvZ3JhbTpCeXRlQXJyYXksIGZyYWdtZW50UHJvZ3JhbTpCeXRlQXJyYXkpXHJcblx0e1xyXG5cdFx0dGhpcy5fY29udGV4dC5hZGRTdHJlYW0oU3RyaW5nLmZyb21DaGFyQ29kZShPcENvZGVzLnVwbG9hZEFHQUxCeXRlc1Byb2dyYW0sIHRoaXMuX3BJZCArIE9wQ29kZXMuaW50TWFzaykgKyB2ZXJ0ZXhQcm9ncmFtLnJlYWRCYXNlNjRTdHJpbmcodmVydGV4UHJvZ3JhbS5sZW5ndGgpICsgXCIlXCIgKyBmcmFnbWVudFByb2dyYW0ucmVhZEJhc2U2NFN0cmluZyhmcmFnbWVudFByb2dyYW0ubGVuZ3RoKSArIFwiJVwiKTtcclxuXHJcblx0XHRpZiAoQ29udGV4dFN0YWdlM0QuZGVidWcpXHJcblx0XHRcdHRoaXMuX2NvbnRleHQuZXhlY3V0ZSgpO1xyXG5cdH1cclxuXHJcblx0cHVibGljIGRpc3Bvc2UoKVxyXG5cdHtcclxuXHRcdHRoaXMuX2NvbnRleHQuYWRkU3RyZWFtKFN0cmluZy5mcm9tQ2hhckNvZGUoT3BDb2Rlcy5kaXNwb3NlUHJvZ3JhbSwgdGhpcy5fcElkICsgT3BDb2Rlcy5pbnRNYXNrKSk7XHJcblx0XHR0aGlzLl9jb250ZXh0LmV4ZWN1dGUoKTtcclxuXHRcdHRoaXMuX2NvbnRleHQuX2lSZW1vdmVSZXNvdXJjZSh0aGlzKTtcclxuXHJcblx0XHR0aGlzLl9jb250ZXh0ID0gbnVsbDtcclxuXHR9XHJcbn1cclxuXHJcbmV4cG9ydCA9IFByb2dyYW1GbGFzaDsiXX0=